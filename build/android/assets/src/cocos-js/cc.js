System.register([],(function(e,t){"use strict";return{execute:function(){e({BitMask:Oe,CCClass:Et,CacheMode:void 0,DebugMode:void 0,Enum:Ne,Eventify:Ht,ExtrapolationMode:void 0,HorizontalTextAlignment:void 0,InstanceMaterialType:void 0,KeyCode:void 0,Overflow:void 0,PipelineEventType:void 0,QuatInterpolationMode:void 0,RealInterpolationMode:void 0,SystemEventType:void 0,TangentWeightMode:void 0,VerticalTextAlignment:void 0,WorldNode3DToLocalNodeUI:HC,WorldNode3DToWorldNodeUI:kC,absMax:Qn,absMaxComponent:Zn,approx:Ln,assert:f,assertID:P,bezier:yp,bezierByTime:Ap,ccenum:Fe,clamp:zn,clamp01:Fn,color:ni,computeRatioByType:FL,createDefaultPipeline:Dw,debug:m,deserialize:P_,earcut:J0,enumerableProps:Jn,equals:Nn,error:d,errorID:E,find:HP,fragmentText:HX,getBaselineOffset:function(){return 0},getError:I,getPathFromRoot:function(e,t){let n=e,i="";for(;null!==n&&n!==t;)i=`${n.name}/${i}`,n=n.parent;return i.slice(0,-1)},getSerializationMetadata:function(e){return e[nl]},getWorldTransformUntilRoot:qU,instantiate:M_,inverseLerp:$n,isCustomTargetModifier:sG,isDisplayStats:R,isElementModifier:iG,isPropertyModifier:nG,isUnicodeCJK:FX,isUnicodeSpace:BX,isValid:Mt,lerp:Bn,log:u,logID:S,markAsWarning:void 0,mat4:Ti,murmurhash2_32_gc:Ko,nextPow2:Xn,pingPong:Kn,pseudoRandom:jn,pseudoRandomRange:Wn,pseudoRandomRangeInt:qn,quat:vi,randomRange:kn,randomRangeInt:Vn,rect:Ni,removeProperty:void 0,repeat:Yn,replaceProperty:void 0,safeMeasureText:UX,sampleAnimationCurve:zL,setDefaultLogTimes:function(e){e>0&&(wn=e)},setDisplayStats:D,size:Oi,toDegree:Gn,toRadian:Un,tween:TCe,tweenUtil:bCe,v2:Pi,v3:ci,v4:Ii,warn:p,warnID:T});const n="undefined"==typeof window?global:window,i=e("cclegacy",{_global:n});i.internal={},n.CC_BUILD=!0,n.CC_TEST=!1,n.CC_EDITOR=false,n.CC_PREVIEW=!1,n.CC_DEV=!1,n.CC_DEBUG=!1,n.CC_JSB=!0,n.CC_BYTEDANCE=!1,n.CC_WECHAT=!1,n.CC_ALIPAY=!1,n.CC_XIAOMI=!1,n.CC_BAIDU=!1,n.CC_COCOSPLAY=!1,n.CC_HUAWEI=!1,n.CC_OPPO=!1,n.CC_VIVO=!1,n.CC_MINIGAME=!1,n.CC_RUNTIME_BASED=!1,n.CC_SUPPORT_JIT=!0,n.CC_UI_GPU_DRIVEN=!1;const s=e("VERSION","3.4.1");n.CocosEngine=i.ENGINE_VERSION=s,n.cc=i;let r=null,o=console.log.bind(console),a=o,c=o,l=(e,t,...n)=>{e||console.log(`ASSERT: ${_(t,...n)}`)},h=o;function _(e,...t){return i.js.formatStr.apply(null,[e].concat(t))}function u(e,...t){return o(e,...t)}function p(e,...t){return a(e,...t)}function d(e,...t){return c(e,...t)}function f(e,t,...n){return l(e,t,...n)}function m(...e){return h(...e)}function g(e){if(o=a=c=l=h=()=>{},e!==w.NONE){if(e>w.ERROR){const t=e=>{if(i.game.canvas){if(!r){const e=document.createElement("Div");e.setAttribute("id","logInfoDiv"),e.setAttribute("width","200"),e.setAttribute("height",i.game.canvas.height);const t=e.style;t.zIndex="99999",t.position="absolute",t.top=t.left="0",r=document.createElement("textarea"),r.setAttribute("rows","20"),r.setAttribute("cols","30"),r.setAttribute("disabled","true");const n=r.style;n.backgroundColor="transparent",n.borderBottom="1px solid #cccccc",n.borderTopWidth=n.borderLeftWidth=n.borderRightWidth="0px",n.borderTopStyle=n.borderLeftStyle=n.borderRightStyle="none",n.padding="0px",n.margin="0px",e.appendChild(r),i.game.canvas.parentNode.appendChild(e)}r.value=`${r.value+e}\r\n`,r.scrollTop=r.scrollHeight}};c=(e,...n)=>{t(`ERROR :  ${_(e,...n)}`)},l=(e,n,...i)=>{e||t(`ASSERT: ${_(n,...i)}`)},e!==w.ERROR_FOR_WEB_PAGE&&(a=(e,...n)=>{t(`WARN :  ${_(e,...n)}`)}),e===w.INFO_FOR_WEB_PAGE&&(o=(e,...n)=>{t(_(e,...n))})}else console&&(console.error||(console.error=console.log),console.warn||(console.warn=console.log),c=console.error.bind?console.error.bind(console):console.error,l=(e,t,...n)=>{if(!e){const e=_(t,...n);throw new Error(e)}});if(e!==w.ERROR&&(a=console.warn.bind?console.warn.bind(console):console.warn),e<=w.INFO&&(o="JavaScriptCore"===scriptEngineType?(e,...t)=>console.log.apply(console,[e,...t]):console.log),e<=w.VERBOSE&&"function"==typeof console.debug){const e=console.debug.bind(console);h=(...t)=>e(...t)}}}function v(e){{const t=e.stack;return void d(t?`${e}\n${t}`:e)}}function y(e){return(t,...n)=>{const i=`${e} ${t}, please go to https://github.com/cocos-creator/engine/blob/develop/EngineErrorMap.md#${t} to see details.`;return 0===n.length?i:`${i} Arguments: ${n.join(", ")}`}}const x=y("Log");function S(e,...t){u(x(e,...t))}const C=y("Warning");function T(e,...t){p(C(e,...t))}const b=y("Error");function E(e,...t){d(b(e,...t))}const A=y("Assert");function P(e,t,...n){e||f(!1,A(t,...n))}let w;function I(e,...t){return b(e,...t)}function R(){return!!i.profiler&&i.profiler.isShowingStats()}function D(e){i.profiler&&(e?i.profiler.showStats():i.profiler.hideStats(),i.game.config.showFPS=!!e)}!function(e){e[e.NONE=0]="NONE",e[e.VERBOSE=1]="VERBOSE",e[e.INFO=2]="INFO",e[e.WARN=3]="WARN",e[e.ERROR=4]="ERROR",e[e.INFO_FOR_WEB_PAGE=5]="INFO_FOR_WEB_PAGE",e[e.WARN_FOR_WEB_PAGE=6]="WARN_FOR_WEB_PAGE",e[e.ERROR_FOR_WEB_PAGE=7]="ERROR_FOR_WEB_PAGE"}(w||(w=e("DebugMode",{})));var O=Object.freeze({__proto__:null,log:u,warn:p,error:d,assert:f,debug:m,_resetDebugSetting:g,_throw:v,logID:S,warnID:T,errorID:E,assertID:P,get DebugMode(){return w},getError:I,isDisplayStats:R,setDisplayStats:D});class M{constructor(e){this.i=0,this.array=e}get length(){return this.array.length}set length(e){this.array.length=e,this.i>=e&&(this.i=e-1)}remove(e){const t=this.array.indexOf(e);t>=0&&this.removeAt(t)}removeAt(e){this.array.splice(e,1),e<=this.i&&--this.i}fastRemove(e){const t=this.array.indexOf(e);t>=0&&this.fastRemoveAt(t)}fastRemoveAt(e){const t=this.array;t[e]=t[t.length-1],--t.length,e<=this.i&&--this.i}push(e){this.array.push(e)}}function N(e,t){e.splice(t,1)}function L(e,t){const n=e.length;t<0||t>=n||(e[t]=e[n-1],e.length=n-1)}function z(e,t){const n=e.indexOf(t);return n>=0&&(N(e,n),!0)}function F(e,t){const n=e.findIndex(t);if(n>=0){const t=e[n];return N(e,n),t}}function B(e,t){return e.indexOf(t)>=0}var U=Object.freeze({__proto__:null,removeAt:N,fastRemoveAt:L,remove:z,fastRemove:function(e,t){const n=e.indexOf(t);n>=0&&(e[n]=e[e.length-1],--e.length)},removeIf:F,verifyType:function(e,t){if(e&&e.length>0)for(const n of e)if(!(n instanceof t))return S(1300),!1;return!0},removeArray:function(e,t){for(let n=0,i=t.length;n<i;n++)z(e,t[n])},appendObjectsAt:function(e,t,n){return e.splice.apply(e,[n,0,...t]),e},contains:B,copy:function(e){const t=e.length,n=new Array(t);for(let i=0;i<t;i+=1)n[i]=e[i];return n},MutableForwardIterator:M});class G{constructor(e){this.id=void 0,this.prefix=void 0,this.id=0|998*Math.random(),this.prefix=e?e+".":""}getNewId(){return this.prefix+ ++this.id}}G.global=new G("global");const H=new G("TmpCId."),k="undefined"==typeof Symbol?"__aliases__":Symbol("[[Aliases]]"),V="__cid__";function j(e){return"number"==typeof e||e instanceof Number}function W(e){return"string"==typeof e||e instanceof String}function q(e){for(const t in e)return!1;return!0}const X=(()=>{const e={value:void 0,enumerable:!1,writable:!1,configurable:!0};return(t,n,i,s,r)=>{e.value=i,e.writable=s,e.enumerable=r,Object.defineProperty(t,n,e),e.value=void 0}})(),Y=(()=>{const e={get:void 0,set:void 0,enumerable:!1};return(t,n,i,s,r=!1,o=!1)=>{"boolean"==typeof s&&(r=s,s=void 0),e.get=i,e.set=s,e.enumerable=r,e.configurable=o,Object.defineProperty(t,n,e),e.get=void 0,e.set=void 0}})(),K=(()=>{const e={get:void 0,enumerable:!1,configurable:!1};return(t,n,i,s,r)=>{e.get=i,e.enumerable=s,e.configurable=r,Object.defineProperty(t,n,e),e.get=void 0}})(),$=(()=>{const e={set:void 0,enumerable:!1,configurable:!1};return(t,n,i,s,r)=>{e.set=i,e.enumerable=s,e.configurable=r,Object.defineProperty(t,n,e),e.set=void 0}})();function Z(e){const t=Object.create(null);if(e){const e=".",n="/";t[e]=1,t[n]=1,delete t[e],delete t[n]}return t}function Q(e){if("function"==typeof e){const t=e.prototype;if(t&&t.hasOwnProperty("__classname__")&&t.__classname__)return t.__classname__;let n="";if(e.name&&(n=e.name),e.toString){let t;const i=e.toString();t="["===i.charAt(0)?i.match(/\[\w+\s*(\w+)\]/):i.match(/function\s*(\w+)/),t&&2===t.length&&(n=t[1])}return"Object"!==n?n:""}return e&&e.constructor?Q(e.constructor):""}function J(e,t,n,i){const s=/([^.]+)$/,r=s.exec(t)[0],o=s.exec(n)[0];function a(){return this[o]}i?Y(e,r,a,(function(e){this[o]=e})):K(e,r,a)}function ee(e,t,n,i){for(const s in n)J(e,`${t}.${s}`,n[s],i)}const te=/(%d)|(%s)/,ne=/%s/;function ie(e,...t){if(0===arguments.length)return"";if(0===t.length)return`${e}`;const n="string"==typeof e&&te.test(e);if(n)for(const n of t){const t="number"==typeof n?te:ne;if(t.test(e)){const i=`${n}`;e=e.replace(t,i)}else e+=` ${n}`}else for(const n of t)e+=` ${n}`;return e}function se(){const e=arguments.length-1,t=new Array(e);for(let n=0;n<e;++n)t[n]=arguments[n+1];return t}function re(e,t){for(;e;){const n=Object.getOwnPropertyDescriptor(e,t);if(n)return n;e=Object.getPrototypeOf(e)}return null}function oe(e,t,n){const i=re(t,e);i&&Object.defineProperty(n,e,i)}function ae(e,...t){e=e||{};for(const n of t)if(n){if("object"!=typeof n){E(5402,n);continue}for(const t in n)t in e||oe(t,n,e)}return e}function ce(e,...t){e=e||{};for(const n of t)if(n){if("object"!=typeof n){E(5403,n);continue}for(const t in n)oe(t,n,e)}return e}function le(e,t){for(const n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);return e.prototype=Object.create(t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),e}function he(e){const t=e.prototype,n=t&&Object.getPrototypeOf(t);return n&&n.constructor}function _e(e,t){if(e&&t){if("function"!=typeof e)return!1;if("function"!=typeof t)return!1;if(e===t)return!0;for(;;){if(!(e=he(e)))return!1;if(e===t)return!0}}return!1}function ue(e){for(const t of Object.keys(e))delete e[t]}const pe=Z(!0),de=Z(!0);function fe(e,t){return function(n,i){if(i.prototype.hasOwnProperty(e)&&delete t[i.prototype[e]],X(i.prototype,e,n),n){const s=t[n];s&&s!==i?d(`A Class already exists with the same ${e} : "${n}".`):t[n]=i}}}const me=fe("__cid__",pe),ge=fe("__classname__",de);function ve(e,t){if(ge(e,t),!t.prototype.hasOwnProperty(V)){const n=e||H.getNewId();n&&me(n,t)}}function ye(e,t){const n=de[t],i=pe[t];let s=!0;if(n&&n!==e&&(d(`"${t}" has already been set as name or alias of another class.`),s=!1),i&&i!==e&&(d(`"${t}" has already been set as id or alias of another class.`),s=!1),s){let n=e[k];n||(n=[],e[k]=n),n.push(t),de[t]=e,pe[t]=e}}function xe(...e){for(const t of e){const e=t.prototype,n=e.__cid__;n&&delete pe[n];const i=e.__classname__;i&&delete de[i];const s=e[k];if(s)for(let e=0;e<s.length;++e){const t=s[e];delete de[t],delete pe[t]}}}function Se(e){return pe[e]}function Ce(e){return de[e]}function Te(e,t){let n;if(t=void 0===t||t,"function"==typeof e&&e.prototype.hasOwnProperty(V))return n=e.prototype.__cid__,n;if(e&&e.constructor){const t=e.constructor.prototype;if(t&&t.hasOwnProperty(V))return n=e.__cid__,n}return""}class be{get(){return this._get()}constructor(e,t){this.count=void 0,this._pool=void 0,this._cleanup=void 0;const n=void 0===t?e:t,i=void 0===t?null:e;this.count=0,this._pool=new Array(n),this._cleanup=i}_get(){if(this.count>0){--this.count;const e=this._pool[this.count];return this._pool[this.count]=null,e}return null}put(e){const t=this._pool;if(this.count<t.length){if(this._cleanup&&!1===this._cleanup(e))return;t[this.count]=e,++this.count}}resize(e){e>=0&&(this._pool.length=e,this.count>e&&(this.count=e))}}const Ee=U,Ae={IDGenerator:G,Pool:be,array:U,isNumber:j,isString:W,isEmptyObject:q,getPropertyDescriptor:re,addon:ae,mixin:ce,extend:le,getSuper:he,isChildClassOf:_e,clear:ue,value:X,getset:Y,get:K,set:$,unregisterClass:xe,getClassName:Q,setClassName:ve,setClassAlias:ye,getClassByName:Ce,get _registeredClassNames(){return{...de}},set _registeredClassNames(e){ue(de),Object.assign(de,e)},get _registeredClassIds(){return{...pe}},set _registeredClassIds(e){ue(pe),Object.assign(pe,e)},_getClassId:Te,_setClassId:me,_getClassById:Se,obsolete:J,obsoletes:ee,formatStr:ie,shiftArguments:se,createMap:Z};i.js=Ae,e("js",Object.freeze({__proto__:null,array:Ee,js:Ae,IDGenerator:G,Pool:be,isNumber:j,isString:W,isEmptyObject:q,value:X,getset:Y,get:K,set:$,createMap:Z,getClassName:Q,obsolete:J,obsoletes:ee,formatStr:ie,shiftArguments:se,getPropertyDescriptor:re,addon:ae,mixin:ce,extend:le,getSuper:he,isChildClassOf:_e,clear:ue,_idToClass:pe,_nameToClass:de,_setClassId:me,setClassName:ve,setClassAlias:ye,unregisterClass:xe,_getClassById:Se,getClassByName:Ce,_getClassId:Te}));const Pe=new class{constructor(){this._pools=[],this._lastShrinkPassed=0,this.shrinkTimeSpan=5}addContainer(e){-1===e._poolHandle&&(e._poolHandle=this._pools.length,this._pools.push(e))}removeContainer(e){-1!==e._poolHandle&&(this._pools[this._pools.length-1]._poolHandle=e._poolHandle,Ae.array.fastRemoveAt(this._pools,e._poolHandle),e._poolHandle=-1)}tryShrink(){for(let e=0;e<this._pools.length;e++)this._pools[e].tryShrink()}update(e){this._lastShrinkPassed+=e,this._lastShrinkPassed>this.shrinkTimeSpan&&(this.tryShrink(),this._lastShrinkPassed-=this.shrinkTimeSpan)}};class we{constructor(){this._poolHandle=-1,Pe.addContainer(this)}destroy(){Pe.removeContainer(this)}}class Ie extends we{constructor(e,t,n){super(),this._ctor=void 0,this._elementsPerBatch=void 0,this._nextAvail=void 0,this._freepool=[],this._dtor=void 0,this._ctor=e,this._dtor=n||null,this._elementsPerBatch=Math.max(t,1),this._nextAvail=this._elementsPerBatch-1;for(let t=0;t<this._elementsPerBatch;++t)this._freepool.push(e())}alloc(){if(this._nextAvail<0){this._freepool.length=this._elementsPerBatch;for(let e=0;e<this._elementsPerBatch;e++)this._freepool[e]=this._ctor();this._nextAvail=this._elementsPerBatch-1}return this._freepool[this._nextAvail--]}free(e){this._freepool[++this._nextAvail]=e}freeArray(e){this._freepool.length=this._nextAvail+1,Array.prototype.push.apply(this._freepool,e),this._nextAvail+=e.length}tryShrink(){if(this._nextAvail>>1>this._elementsPerBatch){if(this._dtor)for(let e=this._nextAvail>>1;e<=this._nextAvail;e++)this._dtor(this._freepool[e]);this._freepool.length=this._nextAvail>>1,this._nextAvail=this._freepool.length-1}}destroy(){const e=arguments.length>0?arguments[0]:null;e&&T(14100);const t=e||this._dtor;if(t)for(let e=0;e<=this._nextAvail;e++)t(this._freepool[e]);this._freepool.length=0,this._nextAvail=-1,super.destroy()}}e("Pool",Ie);class Re extends we{constructor(e,t,n){super(),this._fn=void 0,this._dtor=null,this._count=0,this._data=void 0,this._initSize=0,this._fn=e,this._dtor=n||null,this._data=new Array(t),this._initSize=t;for(let n=0;n<t;++n)this._data[n]=e()}get length(){return this._count}get data(){return this._data}reset(){this._count=0}resize(e){if(e>this._data.length)for(let t=this._data.length;t<e;++t)this._data[t]=this._fn()}add(){return this._count>=this._data.length&&this.resize(this._data.length<<1),this._data[this._count++]}destroy(){if(this._dtor)for(let e=0;e<this._data.length;e++)this._dtor(this._data[e]);this._data.length=0,this._count=0,super.destroy()}tryShrink(){if(this._data.length>>2>this._count){const e=Math.max(this._initSize,this._data.length>>1);if(this._dtor)for(let t=e;t<this._data.length;t++)this._dtor(this._data[t]);this._data.length=e}}removeAt(e){if(e>=this._count)return;const t=this._count-1,n=this._data[e];this._data[e]=this._data[t],this._data[t]=n,this._count-=1}}e("RecyclePool",Re);class De extends we{constructor(e,t){super(),this.array=void 0,this.length=0,this._compareFn=void 0,this._initSize=0,this.array=new Array(e),this._initSize=e,this.length=0,this._compareFn=void 0!==t?t:(e,t)=>e-t}push(e){this.array[this.length++]=e}pop(){return this.array[--this.length]}get(e){return this.array[e]}clear(){this.length=0}destroy(){this.length=0,this.array.length=0,super.destroy()}tryShrink(){this.array.length>>2>this.length&&(this.array.length=Math.max(this._initSize,this.array.length>>1))}sort(){this.array.length=this.length,this.array.sort(this._compareFn)}concat(e){for(let t=0;t<e.length;++t)this.array[this.length++]=e[t]}fastRemove(e){if(e>=this.length||e<0)return;const t=--this.length;this.array[e]=this.array[t]}indexOf(e){for(let t=0,n=this.length;t<n;++t)if(this.array[t]===e)return t;return-1}}function Oe(e){if("__bitmask__"in e)return e;X(e,"__bitmask__",null,!0);let t=-1;const n=Object.keys(e);for(let i=0;i<n.length;i++){const s=n[i];let r=e[s];if(-1===r)r=++t,e[s]=r;else if("number"==typeof r)t=r;else if("string"==typeof r&&Number.isInteger(parseFloat(s)))continue;const o=`${r}`;s!==o&&X(e,o,s)}return e}function Me(e,t){t>=0&&e.length,e.length}function Ne(e){return"__enums__"in e?e:(X(e,"__enums__",null,!0),Ne.update(e))}function Le(e){e.hasOwnProperty("__enums__")}function ze(e){Le(e);const t=e.__enums__||[];t.length=0;for(const n in e){const i=e[n];Number.isInteger(i)&&t.push({name:n,value:i})}return t.sort(((e,t)=>e.value-t.value)),e.__enums__=t,t}function Fe(e){"__enums__"in e||X(e,"__enums__",null,!0)}e("CachedArray",De),e("memop",Object.freeze({__proto__:null,Pool:Ie,RecyclePool:Re,CachedArray:De})),Oe.isBitMask=e=>e&&e.hasOwnProperty("__bitmask__"),Oe.getList=e=>{if(e.__bitmask__)return e.__bitmask__;const t=e.__bitmask__=[];for(const n in e){const i=e[n];Number.isInteger(i)&&t.push({name:n,value:i})}return t.sort(((e,t)=>e.value-t.value)),t},i.BitMask=Oe,Ne.update=e=>{let t=-1;const n=Object.keys(e);for(let i=0;i<n.length;i++){const s=n[i];let r=e[s];if(-1===r)r=++t,e[s]=r;else if("number"==typeof r)t=r;else if("string"==typeof r&&Number.isInteger(parseFloat(s)))continue;const o=`${r}`;s!==o&&X(e,o,s)}return Array.isArray(e.__enums__)&&ze(e),e},Ne||(Ne=e("Enum",{})),Ne.isEnum=e=>e&&e.hasOwnProperty("__enums__"),Ne.getList=e=>(Le(e),e.__enums__?e.__enums__:ze(e)),i.Enum=Ne;class Be{clone(){return E(100,`${Q(this)}.clone`),this}equals(e){return!1}set(e){E(100,`${Q(this)}.set`)}toString(){return`${{}}`}}e("ValueType",Be),ve("cc.ValueType",Be),i.ValueType=Be;const Ue=e("macro",{SUPPORT_TEXTURE_FORMATS:[".astc",".pkm",".pvr",".webp",".jpg",".jpeg",".bmp",".png"],KEY:{none:0,back:6,menu:18,backspace:8,tab:9,enter:13,shift:16,ctrl:17,alt:18,pause:19,capslock:20,escape:27,space:32,pageup:33,pagedown:34,end:35,home:36,left:37,up:38,right:39,down:40,select:41,insert:45,Delete:46,0:48,1:49,2:50,3:51,4:52,5:53,6:54,7:55,8:56,9:57,a:65,b:66,c:67,d:68,e:69,f:70,g:71,h:72,i:73,j:74,k:75,l:76,m:77,n:78,o:79,p:80,q:81,r:82,s:83,t:84,u:85,v:86,w:87,x:88,y:89,z:90,num0:96,num1:97,num2:98,num3:99,num4:100,num5:101,num6:102,num7:103,num8:104,num9:105,"*":106,"+":107,"-":109,numdel:110,"/":111,f1:112,f2:113,f3:114,f4:115,f5:116,f6:117,f7:118,f8:119,f9:120,f10:121,f11:122,f12:123,numlock:144,scrolllock:145,";":186,semicolon:186,equal:187,"=":187,",":188,comma:188,dash:189,".":190,period:190,forwardslash:191,grave:192,"[":219,openbracket:219,backslash:220,"]":221,closebracket:221,quote:222,dpadLeft:1e3,dpadRight:1001,dpadUp:1003,dpadDown:1004,dpadCenter:1005},RAD:Math.PI/180,DEG:180/Math.PI,REPEAT_FOREVER:Number.MAX_VALUE-1,FLT_EPSILON:1.192092896e-7,ORIENTATION_PORTRAIT:1,ORIENTATION_LANDSCAPE:2,ORIENTATION_AUTO:3,ENABLE_TILEDMAP_CULLING:!0,TOUCH_TIMEOUT:5e3,ENABLE_TRANSPARENT_CANVAS:!1,ENABLE_WEBGL_ANTIALIAS:!0,ENABLE_ANTIALIAS_FXAA:!1,ENABLE_BLOOM:!1,CLEANUP_IMAGE_CACHE:!1,ENABLE_MULTI_TOUCH:!0,MAX_LABEL_CANVAS_POOL_SIZE:20,ENABLE_WEBGL_HIGHP_STRUCT_VALUES:!1,BATCHER2D_MEM_INCREMENT:144});i.macro=Ue;const Ge=/^(?:cc|dragonBones|sp|ccsg)\..+/,He=new Array(123);for(let e=0;e<123;++e)He[e]=64;for(let e=0;e<64;++e)He["ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".charCodeAt(e)]=e;const ke=He;function Ve(e,t,n){function i(e,t,n,i){const s=Object.getOwnPropertyDescriptor(e,t);if(s)s.get&&(e[n]=s.get),s.set&&i&&(e[i]=s.set);else{const s=e[n];Y(e,t,s,e[i])}}let s;const r=e.prototype;for(let e=0;e<t.length;e++){s=t[e];const n=s[0].toUpperCase()+s.slice(1);i(r,s,`get${n}`,`set${n}`)}for(s in n){const e=n[s];i(r,s,e[0],e[1])}}function je(e,t,n,i){const s=e[t];s?Array.isArray(s)?i?(s.push(s[0]),s[0]=n):s.push(n):e[t]=i?[n,s]:[s,n]:e[t]=n}function We(e,t){if("function"==typeof e.contains)return e.contains(t);if("function"==typeof e.compareDocumentPosition)return!!(16&e.compareDocumentPosition(t));{let n=t.parentNode;if(n)do{if(n===e)return!0;n=n.parentNode}while(null!==n);return!1}}function qe(e){return"object"==typeof window&&"function"==typeof Node?e instanceof Node:e&&"object"==typeof e&&"number"==typeof e.nodeType&&"string"==typeof e.nodeName}function Xe(e,t,n){e&&setTimeout((()=>{e(t,n)}),0)}function Ye(e){return!(!e||e.constructor!==Object)&&q(e)}function Ke(e,t,n){if(t>n){const e=t;t=n,n=e}return e<t?t:e<n?e:n}function $e(e){return e*Ue.RAD}function Ze(e){return e*Ue.DEG}i.misc={BUILTIN_CLASSID_RE:Ge,BASE64_VALUES:ke,propertyDefine:Ve,pushToMap:je,contains:We,isDomNode:qe,callInNextTick:Xe,isPlainEmptyObj_DEV:Ye,clampf:Ke,degreesToRadians:$e,radiansToDegrees:Ze},e("misc",Object.freeze({__proto__:null,BUILTIN_CLASSID_RE:Ge,BASE64_VALUES:ke,propertyDefine:Ve,pushToMap:je,contains:We,isDomNode:qe,callInNextTick:Xe,tryCatchFunctor_EDITOR:function(e){return Function("target",`try {\n  target.${e}();\n}\ncatch (e) {\n  cc._throw(e);\n}`)},isPlainEmptyObj_DEV:Ye,clampf:Ke,degreesToRadians:$e,radiansToDegrees:Ze}));const Qe="$_$";function Je(e,t){const n=t?Object.create(t):{};return X(e,"__attrs__",n),n}function et(e){if("function"!=typeof e)return Je(e,nt(e.constructor));let t;const n=i.Class.getInheritanceChain(e);for(let e=n.length-1;e>=0;e--){const i=n[e];i.hasOwnProperty("__attrs__")&&i.__attrs__||(t=n[e+1],Je(i,t&&t.__attrs__))}return t=n[0],Je(e,t&&t.__attrs__),e.__attrs__}function tt(e,t){const n=nt(e),i=t+Qe,s={};for(const e in n)e.startsWith(i)&&(s[e.slice(i.length)]=n[e]);return s}function nt(e){return e.hasOwnProperty("__attrs__")&&e.__attrs__||et(e)}function it(e,t,n,i){nt(e)[t+Qe+n]=i}class st{constructor(e,t){this.name=void 0,this.default=void 0,this.name=e,this.default=t}toString(){return this.name}}const rt=e("CCInteger",new st("Integer",0));i.Integer=rt,i.CCInteger=rt;const ot=e("CCFloat",new st("Float",0));i.Float=ot,i.CCFloat=ot;const at=e("CCBoolean",new st("Boolean",!1));i.Boolean=at,i.CCBoolean=at;const ct=e("CCString",new st("String",""));function lt(e,t){return function(n,i){const s=`"${Q(n)}.${i}"`,r=tt(n,i);let o=r.type;if(o===rt||o===ot?o="Number":o!==ct&&o!==at||(o=`${o}`),o!==e)return void T(3604,s);if(!r.hasOwnProperty("default"))return;const a=r.default;if(void 0===a)return;if(Array.isArray(a)||Ye(a))return;const c=typeof a,l=e.toLowerCase();if(c===l)if("object"===l){if(!a||a instanceof r.ctor)return;T(3605,s,Q(r.ctor))}else"Number"!==e&&T(3606,t,s,e);else{if("function"===c)return;e===ct.default&&null==a?T(3607,s):T(3611,t,s,c)}delete r.type}}i.String=ct,i.CCString=ct;var ht=Object.freeze({__proto__:null,DELIMETER:Qe,createAttrsSingle:Je,createAttrs:et,attr:tt,getClassAttrs:nt,setClassAttr:it,PrimitiveType:st,CCInteger:rt,CCFloat:ot,CCBoolean:at,CCString:ct,getTypeChecker_ET:lt,getObjTypeChecker_ET:function(e){return function(t,n){lt("Object","type")(t,n);const s=nt(t)[`${n+Qe}default`],r=i.Class.getDefault(s);if(!Array.isArray(r)&&_e(e,i.ValueType)){const i=Q(e),r=ie('No need to specify the "type" of "%s.%s" because %s is a child class of ValueType.',Q(t),n,i);s?u(r):T(3612,r,i,Q(t),n,i)}}}});const _t={default:{},serializable:{},editorOnly:{},formerlySerializedAs:{}};function ut(e,t,n,i){if(!e.get&&!e.set&&e.hasOwnProperty("default")){const s=`_N$${t}`;e.get=function(){return this[s]},e.set=function(e){const t=this[s];this[s]=e,n.call(this,t)};const r={};i[s]=r;for(const t in _t){const n=_t[t];e.hasOwnProperty(t)&&(r[t]=e[t],n.canUsedInGet||delete e[t])}}}function pt(e,t,n,s){if(Array.isArray(t)){if(!(t.length>0))return E(5508,n,s);e.type=t=t[0]}"function"==typeof t&&(t===String?e.type=i.String:t===Boolean?e.type=i.Boolean:t===Number&&(e.type=i.Float))}function dt(e,t,n){const i=e?{_short:!0}:{_short:!0,default:t};return n&&(i.type=n),i}function ft(e,t){if(!e||e.constructor!==Object){if(Array.isArray(e)&&e.length>0)return dt(t,[],e);if("function"==typeof e){const n=e;return dt(t,_e(n,i.ValueType)?new n:null,n)}return dt(t,e instanceof st?e.default:e)}return null}let mt=[];function gt(){return mt[mt.length-1]}i._RF={push:function(e,t,n,i){void 0===n&&(n=t,t=""),mt.push({uuid:t,script:n,module:e,exports:e.exports,beh:null,importMeta:i})},pop:function(){const e=mt.pop(),t=e.module;let n=t.exports;if(n===e.exports){for(const e in n)return;t.exports=n=e.cls}},peek:gt};const vt=Qe,yt={datas:null,push(e){if(this.datas)this.datas.push(e);else{this.datas=[e];const t=this;setTimeout((()=>{t.init()}),0)}},init(){const e=this.datas;if(e){for(let t=0;t<e.length;++t){const n=e[t],i=n.cls;let s=n.props;"function"==typeof s&&(s=s());const r=Q(i);s?bt(i,r,s,i.$super,n.mixins):E(3633,r)}this.datas=null}}};function xt(e,t,n,i){!function(e,t){!function(e,t){e.indexOf(t)<0&&e.push(t)}(e.__props__,t)}(e,n),Pt(e,i,t,n)}function St(e,t,n,i){const s=i.get;i.set,s&&(Pt(e,i,t,n),it(e,n,"serializable",!1))}function Ct(e){return"function"==typeof e?e():e}function Tt(e,t,n){for(const i in t)e.hasOwnProperty(i)||n&&!n(i)||Object.defineProperty(e,i,re(t,i))}function bt(e,t,n,i,s){if(e.__props__=[],i&&i.__props__&&(e.__props__=i.__props__.slice()),s)for(let t=0;t<s.length;++t){const n=s[t];n.__props__&&(e.__props__=e.__props__.concat(n.__props__.filter((t=>e.__props__.indexOf(t)<0))))}if(n){!function(e,t){for(const n in e){let i=e[n];const s=ft(i,!1);if(s&&(i=e[n]=s),i){const s=i.notify;s&&ut(i,n,s,e),"type"in i&&pt(i,i.type,t,n)}}}(n,t);for(const i in n){const s=n[i];s.get||s.set?St(e,t,i,s):xt(e,t,i,s)}}const r=nt(e);e.__values__=e.__props__.filter((e=>!1!==r[`${e+vt}serializable`]))}function Et(e){let t=e.name;const n=e.extends,s=e.mixins,r=function(e,t,n,s){const r=i.Component,o=gt();if(o&&_e(t,r)){if(_e(o.cls,r))return E(3615),null;e=e||o.script}const a=function(e,t,n,i){const s=i.ctor,r=[s],o=s;X(o,"__ctors__",r.length>0?r:null,!0);const a=o.prototype;if(t&&(o.$super=t),n){for(let e=n.length-1;e>=0;e--){const t=n[e];Tt(a,t.prototype),Et._isCCClass(t)&&Tt(nt(o),nt(t))}a.constructor=o}return ve(e,o),o}(e,t,n,s);if(o)if(_e(t,r)){const e=o.uuid;e&&me(e,a),o.cls=a}else _e(o.cls,r)||(o.cls=a);return a}(t,n,s,e);t||(t=i.js.getClassName(r)),r._sealed=!0,n&&(n._sealed=!1);const o=e.properties;"function"==typeof o||n&&null===n.__props__||s&&s.some((e=>null===e.__props__))?(yt.push({cls:r,props:o,mixins:s}),r.__props__=r.__values__=null):bt(r,t,o,n,e.mixins);const a=e.editor;return a&&_e(n,i.Component)&&i.Component._registerEditorProps(r,a),r}Et._isCCClass=function(e){var t;return null==e||null===(t=e.hasOwnProperty)||void 0===t?void 0:t.call(e,"__ctors__")},Et.fastDefine=function(e,t,n){ve(e,t);const i=t.__props__=t.__values__=Object.keys(n),s=nt(t);for(let e=0;e<i.length;e++){const t=i[e];s[`${t+vt}visible`]=!1,s[`${t+vt}default`]=n[t]}},Et.Attr=ht,Et.attr=tt,Et.getInheritanceChain=function(e){const t=[];for(;e=he(e);)e!==Object&&t.push(e);return t};const At={Integer:"Number",Float:"Number",Boolean:"Boolean",String:"String"};function Pt(e,t,n,i){let s=null,r="";function o(){return r=i+vt,s=nt(e)}"type"in t&&void 0===t.type&&T(3660,i,n);const a=t.type;a&&(At[a]?(s||o())[`${r}type`]=a:"Object"===a||("object"==typeof a?Ne.isEnum(a)?((s||o())[`${r}type`]="Enum",s[`${r}enumList`]=Ne.getList(a)):Oe.isBitMask(a)&&((s||o())[`${r}type`]="BitMask",s[`${r}bitmaskList`]=Oe.getList(a)):"function"==typeof a&&((s||o())[`${r}type`]="Object",s[`${r}ctor`]=a))),"default"in t&&((s||o())[`${r}default`]=t.default);const c=(e,n)=>{if(e in t){const i=t[e];typeof i===n&&((s||o())[r+e]=i)}};var l;t.editorOnly&&((s||o())[`${r}editorOnly`]=!0),t.__noImplicit?(s||o())[`${r}serializable`]=null!==(l=t.serializable)&&void 0!==l&&l:!1===t.serializable&&((s||o())[`${r}serializable`]=!1),c("formerlySerializedAs","string");const h=t.range;h&&Array.isArray(h)&&h.length>=2&&((s||o())[`${r}min`]=h[0],s[`${r}max`]=h[1],h.length>2&&(s[`${r}step`]=h[2])),c("min","number"),c("max","number"),c("step","number")}Et.isArray=function(e){return e=Ct(e),Array.isArray(e)},Et.getDefault=Ct,Et.escapeForJS=function(e){return JSON.stringify(e).replace(/\u2028/g,"\\u2028").replace(/\u2029/g,"\\u2029")},Et.IDENTIFIER_RE=/^[A-Za-z_$][0-9A-Za-z_$]*$/,Et.getNewValueTypeCode=function(e){const t=Q(e),n=e.constructor;let i=`new ${t}(`;for(let t=0;t<n.__props__.length;t++)i+=e[n.__props__[t]],t<n.__props__.length-1&&(i+=",");return`${i})`},i.Class=Et;const wt=e("editorExtrasTag","__editorExtras__"),It=1<<22,Rt=[];class Dt{static _deferredDestroy(){const e=Rt.length;for(let t=0;t<e;++t){const e=Rt[t];1&e._objFlags||e._destroyImmediate()}e===Rt.length?Rt.length=0:Rt.splice(0,e)}constructor(e=""){this._objFlags=void 0,this._name=void 0,this._name=e,this._objFlags=0}get name(){return this._name}set name(e){this._name=e}set hideFlags(e){const t=e&Dt.Flags.AllHideMasks;this._objFlags=this._objFlags&~Dt.Flags.AllHideMasks|t}get hideFlags(){return this._objFlags&Dt.Flags.AllHideMasks}set replicated(e){e?this._objFlags|=It:this._objFlags&=-4194305}get replicated(){return!!(this._objFlags&It)}get isValid(){return!(1&this._objFlags)}destroy(){return 1&this._objFlags?(T(5e3),!1):!(4&this._objFlags||(this._objFlags|=4,Rt.push(this),0))}_destruct(){const e=this.constructor;let t=e.__destruct__;t||(t=function(e,t){const n=e instanceof i._BaseNode||e instanceof i.Component,s=n?"_id":null;let r;const o={};for(r in e)if(e.hasOwnProperty(r)){if(r===s)continue;switch(typeof e[r]){case"string":o[r]="";break;case"object":case"function":o[r]=null}}if(Et._isCCClass(t)){const e=i.Class.Attr.getClassAttrs(t),s=t.__props__;for(let t=0;t<s.length;t++){r=s[t];const a=`${r+i.Class.Attr.DELIMETER}default`;if(a in e){if(n&&"_id"===r)continue;switch(typeof e[a]){case"string":o[r]="";break;case"object":case"function":o[r]=null;break;case"undefined":o[r]=void 0}}}}{let e="";for(r in o){let t;t=Et.IDENTIFIER_RE.test(r)?`o.${r}=`:`o[${Et.escapeForJS(r)}]=`;let n=o[r];""===n&&(n='""'),e+=`${t+n};\n`}return Function("o",e)}}(this,e),X(e,"__destruct__",t,!0)),t(this)}_destroyImmediate(){1&this._objFlags?E(5e3):(this._onPreDestroy&&this._onPreDestroy(),this._destruct(),this._objFlags|=1)}}e("CCObject",Dt);const Ot=Dt.prototype;function Mt(e,t){return"object"==typeof e?!(!e||e._objFlags&(t?5:1)):void 0!==e}Ot._deserialize=null,Ot._onPreDestroy=null,Et.fastDefine("cc.Object",Dt,{_name:"",_objFlags:0,[wt]:{}}),Et.Attr.setClassAttr(Dt,wt,"editorOnly",!0),Et.Attr.setClassAttr(Dt,"replicated","visible",!1),X(Dt,"Flags",{Destroyed:1,DontSave:8,EditorOnly:16,Dirty:32,DontDestroy:64,PersistentMask:-4192741,Destroying:128,Deactivating:256,LockedInEditor:512,HideInHierarchy:1024,AllHideMasks:1560,IsPreloadStarted:8192,IsOnLoadStarted:32768,IsOnLoadCalled:16384,IsOnEnableCalled:2048,IsStartCalled:65536,IsEditorOnEnableCalled:4096,IsPositionLocked:1<<21,IsRotationLocked:1<<17,IsScaleLocked:1<<18,IsAnchorLocked:1<<19,IsSizeLocked:1<<20}),i.isValid=Mt,i.Object=Dt;const Nt=Ee.fastRemoveAt;function Lt(){}class zt{constructor(){this.callback=Lt,this.target=void 0,this.once=!1}set(e,t,n){this.callback=e||Lt,this.target=t,this.once=!!n}reset(){this.target=void 0,this.callback=Lt,this.once=!1}check(){return!(this.target instanceof Dt&&!Mt(this.target,!0))}}const Ft=new Ie((()=>new zt),32);class Bt{constructor(){this.callbackInfos=[],this.isInvoking=!1,this.containCanceled=!1}removeByCallback(e){for(let t=0;t<this.callbackInfos.length;++t){const n=this.callbackInfos[t];n&&n.callback===e&&(n.reset(),Ft.free(n),Nt(this.callbackInfos,t),--t)}}removeByTarget(e){for(let t=0;t<this.callbackInfos.length;++t){const n=this.callbackInfos[t];n&&n.target===e&&(n.reset(),Ft.free(n),Nt(this.callbackInfos,t),--t)}}cancel(e){const t=this.callbackInfos[e];t&&(t.reset(),this.isInvoking?this.callbackInfos[e]=null:Nt(this.callbackInfos,e),Ft.free(t)),this.containCanceled=!0}cancelAll(){for(let e=0;e<this.callbackInfos.length;e++){const t=this.callbackInfos[e];t&&(t.reset(),Ft.free(t),this.callbackInfos[e]=null)}this.containCanceled=!0}purgeCanceled(){for(let e=this.callbackInfos.length-1;e>=0;--e)this.callbackInfos[e]||Nt(this.callbackInfos,e);this.containCanceled=!1}clear(){this.cancelAll(),this.callbackInfos.length=0,this.isInvoking=!1,this.containCanceled=!1}}const Ut=new Ie((()=>new Bt),16);class Gt{constructor(){this._callbackTable=Z(!0),this._offCallback=void 0}on(e,t,n,i){if(!this.hasEventListener(e,t,n)){let s=this._callbackTable[e];s||(s=this._callbackTable[e]=Ut.alloc());const r=Ft.alloc();r.set(t,n,i),s.callbackInfos.push(r)}return t}hasEventListener(e,t,n){const i=this._callbackTable&&this._callbackTable[e];if(!i)return!1;const s=i.callbackInfos;if(!t){if(i.isInvoking){for(let e=0;e<s.length;++e)if(s[e])return!0;return!1}return s.length>0}for(let e=0;e<s.length;++e){const i=s[e];if(i&&i.check()&&i.callback===t&&i.target===n)return!0}return!1}removeAll(e){const t=typeof e;if("string"===t||"number"===t){const t=this._callbackTable&&this._callbackTable[e];t&&(t.isInvoking?t.cancelAll():(t.clear(),Ut.free(t),delete this._callbackTable[e]))}else if(e)for(const t in this._callbackTable){const n=this._callbackTable[t];if(n.isInvoking){const t=n.callbackInfos;for(let i=0;i<t.length;++i){const s=t[i];s&&s.target===e&&n.cancel(i)}}else n.removeByTarget(e)}}off(e,t,n){var i;const s=this._callbackTable&&this._callbackTable[e];if(s){const i=s.callbackInfos;if(t)for(let e=0;e<i.length;++e){const r=i[e];if(r&&r.callback===t&&r.target===n){s.cancel(e);break}}else this.removeAll(e)}null===(i=this._offCallback)||void 0===i||i.call(this)}emit(e,t,n,i,s,r){const o=this._callbackTable&&this._callbackTable[e];if(o){const a=!o.isInvoking;o.isInvoking=!0;const c=o.callbackInfos;for(let o=0,a=c.length;o<a;++o){const a=c[o];if(a){const o=a.callback,c=a.target;a.once&&this.off(e,o,c),a.check()?c?o.call(c,t,n,i,s,r):o(t,n,i,s,r):this.off(e,o,c)}}a&&(o.isInvoking=!1,o.containCanceled&&o.purgeCanceled())}}clear(){for(const e in this._callbackTable){const t=this._callbackTable[e];t&&(t.clear(),Ut.free(t),delete this._callbackTable[e])}}_registerOffCallback(e){this._offCallback=e}}function Ht(e){class t extends e{constructor(...e){super(...e),this._callbackTable=Z(!0)}once(e,t,n){return this.on(e,t,n,!0)}targetOff(e){this.removeAll(e)}}const n=Gt.prototype,i=Object.getOwnPropertyNames(n).concat(Object.getOwnPropertySymbols(n));for(let e=0;e<i.length;++e){const s=i[e];if(!(s in t.prototype)){const e=Object.getOwnPropertyDescriptor(n,s);e&&Object.defineProperty(t.prototype,s,e)}}return t}const kt=e("EventTarget",Ht(class{}));let Vt,jt,Wt,qt,Xt,Yt;i.EventTarget=kt,function(e){e.UNKNOWN="unknown",e.WECHAT="wechat",e.ANDROID="androidbrowser",e.IE="ie",e.EDGE="edge",e.QQ="qqbrowser",e.MOBILE_QQ="mqqbrowser",e.UC="ucbrowser",e.UCBS="ucbs",e.BROWSER_360="360browser",e.BAIDU_APP="baiduboxapp",e.BAIDU="baidubrowser",e.MAXTHON="maxthon",e.OPERA="opera",e.OUPENG="oupeng",e.MIUI="miuibrowser",e.FIREFOX="firefox",e.SAFARI="safari",e.CHROME="chrome",e.LIEBAO="liebao",e.QZONE="qzone",e.SOUGOU="sogou",e.HUAWEI="huawei"}(Vt||(Vt={})),function(e){e.UNKNOWN="unknown",e.ENGLISH="en",e.CHINESE="zh",e.FRENCH="fr",e.ITALIAN="it",e.GERMAN="de",e.SPANISH="es",e.DUTCH="du",e.RUSSIAN="ru",e.KOREAN="ko",e.JAPANESE="ja",e.HUNGARIAN="hu",e.PORTUGUESE="pt",e.ARABIC="ar",e.NORWEGIAN="no",e.POLISH="pl",e.TURKISH="tr",e.UKRAINIAN="uk",e.ROMANIAN="ro",e.BULGARIAN="bg"}(jt||(jt={})),function(e){e[e.NONE=0]="NONE",e[e.LAN=1]="LAN",e[e.WWAN=2]="WWAN"}(Wt||(Wt={})),function(e){e.UNKNOWN="Unknown",e.IOS="iOS",e.ANDROID="Android",e.WINDOWS="Windows",e.LINUX="Linux",e.OSX="OS X",e.OHOS="OHOS"}(qt||(qt={})),function(e){e.UNKNOWN="UNKNOWN",e.EDITOR_PAGE="EDITOR_PAGE",e.EDITOR_CORE="EDITOR_CORE",e.MOBILE_BROWSER="MOBILE_BROWSER",e.DESKTOP_BROWSER="DESKTOP_BROWSER",e.WIN32="WIN32",e.ANDROID="ANDROID",e.IOS="IOS",e.MACOS="MACOS",e.OHOS="OHOS",e.WECHAT_GAME="WECHAT_GAME",e.BAIDU_MINI_GAME="BAIDU_MINI_GAME",e.XIAOMI_QUICK_GAME="XIAOMI_QUICK_GAME",e.ALIPAY_MINI_GAME="ALIPAY_MINI_GAME",e.BYTEDANCE_MINI_GAME="BYTEDANCE_MINI_GAME",e.OPPO_MINI_GAME="OPPO_MINI_GAME",e.VIVO_MINI_GAME="VIVO_MINI_GAME",e.HUAWEI_QUICK_GAME="HUAWEI_QUICK_GAME",e.COCOSPLAY="COCOSPLAY",e.LINKSURE_MINI_GAME="LINKSURE_MINI_GAME",e.QTT_MINI_GAME="QTT_MINI_GAME"}(Xt||(Xt={})),function(e){e.WEBP="WEBP",e.IMAGE_BITMAP="IMAGE_BITMAP",e.WEB_VIEW="WEB_VIEW",e.VIDEO_PLAYER="VIDEO_PLAYER",e.SAFE_AREA="SAFE_AREA",e.INPUT_TOUCH="INPUT_TOUCH",e.EVENT_KEYBOARD="EVENT_KEYBOARD",e.EVENT_MOUSE="EVENT_MOUSE",e.EVENT_TOUCH="EVENT_TOUCH",e.EVENT_ACCELEROMETER="EVENT_ACCELEROMETER"}(Yt||(Yt={}));const Kt={0:Wt.NONE,1:Wt.LAN,2:Wt.WWAN},$t={0:Xt.WIN32,2:Xt.MACOS,3:Xt.ANDROID,4:Xt.IOS,5:Xt.IOS,6:Xt.OHOS},Zt=new class extends kt{get networkType(){return Kt[jsb.device.getNetworkType()]}constructor(){super(),this.isNative=void 0,this.isBrowser=void 0,this.isMobile=void 0,this.isLittleEndian=void 0,this.platform=void 0,this.language=void 0,this.nativeLanguage=void 0,this.os=void 0,this.osVersion=void 0,this.osMainVersion=void 0,this.browserType=void 0,this.browserVersion=void 0,this._featureMap=void 0,this.isNative=!0,this.isBrowser=!1,this.platform=$t[__getPlatform()],this.isMobile=this.platform===Xt.ANDROID||this.platform===Xt.IOS||this.platform===Xt.OHOS,this.isLittleEndian=(()=>{const e=new ArrayBuffer(2);return new DataView(e).setInt16(0,256,!0),256===new Int16Array(e)[0]})();const e=__getCurrentLanguageCode();this.nativeLanguage=e?e.toLowerCase():jt.UNKNOWN,this.language=__getCurrentLanguage(),this.os=__getOS(),this.osVersion=__getOSVersion(),this.osMainVersion=parseInt(this.osVersion),this.browserType=Vt.UNKNOWN,this.browserVersion="",this._featureMap={[Yt.WEBP]:!0,[Yt.IMAGE_BITMAP]:!1,[Yt.WEB_VIEW]:this.isMobile,[Yt.VIDEO_PLAYER]:this.isMobile,[Yt.SAFE_AREA]:this.isMobile,[Yt.INPUT_TOUCH]:this.isMobile,[Yt.EVENT_KEYBOARD]:!0,[Yt.EVENT_MOUSE]:!this.isMobile,[Yt.EVENT_TOUCH]:!0,[Yt.EVENT_ACCELEROMETER]:this.isMobile},this._registerEvent()}_registerEvent(){jsb.onPause=()=>{this.emit("hide"),i.internal.SplashScreen.instance.pauseRendering()},jsb.onResume=()=>{this.emit("show"),i.internal.SplashScreen.instance.resumeRendering()},jsb.onClose=()=>{this.emit("close")}}hasFeature(e){return this._featureMap[e]}getBatteryLevel(){return jsb.device.getBatteryLevel()}triggerGC(){jsb.garbageCollect()}openURL(e){jsb.openURL(e)}now(){return Date.now?Date.now():+new Date}restartJSVM(){__restartVM()}close(){__close()}},Qt=/(\.[^\.\/\?\\]*)(\?.*)?$/,Jt=/((.*)(\/|\\|\\\\))?(.*?\..*$)?/,en=/[^\.\/]+\/\.\.\//;function tn(...e){let t="";for(const n of e)t=(t+(""===t?"":"/")+n).replace(/(\/|\\\\)$/,"");return t}function nn(e){const t=Qt.exec(e);return t?t[1]:""}function sn(e){if(e){const t=e.lastIndexOf(".");if(-1!==t)return e.substring(0,t)}return e}function rn(e,t){const n=e.indexOf("?");n>0&&(e=e.substring(0,n));const i=/(\/|\\)([^\/\\]+)$/g.exec(e.replace(/(\/|\\)$/,""));if(!i)return e;const s=i[2];return t&&e.substring(e.length-t.length).toLowerCase()===t.toLowerCase()?s.substring(0,s.length-t.length):s}function on(e){const t=Jt.exec(e);return t?t[2]:""}function an(e,t){t=t||"";let n=e.indexOf("?"),i="";return n>0&&(i=e.substring(n),e=e.substring(0,n)),n=e.lastIndexOf("."),n<0?e+t+i:e.substring(0,n)+t+i}function cn(e,t,n){if(0===t.indexOf("."))return an(e,t);let i=e.indexOf("?"),s="";const r=n?nn(e):"";return i>0&&(s=e.substring(i),e=e.substring(0,i)),i=e.lastIndexOf("/"),i=i<=0?0:i+1,e.substring(0,i)+t+r+s}function ln(e){let t=e=String(e);do{t=e,e=e.replace(en,"")}while(t.length!==e.length);return e}function hn(e){return e.replace(/[\/\\]$/,"")}function _n(){return Zt.os===qt.WINDOWS?"\\":"/"}e("path",Object.freeze({__proto__:null,join:tn,extname:nn,mainFileName:sn,basename:rn,dirname:on,changeExtname:an,changeBasename:cn,_normalize:ln,stripSep:hn,getSeperator:_n})),i.log=u,i.warn=p,i.error=d,i.assert=f,i._throw=v,i.logID=S,i.warnID=T,i.errorID=E,i.assertID=P,i.debug=O,i.path={join:tn,extname:nn,mainFileName:sn,basename:rn,dirname:on,changeExtname:an,changeBasename:cn,_normalize:ln,stripSep:hn,get sep(){return _n()}};let un=0;const pn={};var dn={addStage(e){if(void 0!==pn[e])return;const t=1<<un;pn[e]=t,un+=1},stageID(e){const t=pn[e];return void 0===t?-1:t},stageIDs(e){let t=0;for(const n of e){const e=pn[n];void 0!==e&&(t|=e)}return t}};const fn=2147483647;function mn(e){return(e>0)-(e<0)}function gn(e){let t,n;return t=(e>65535)<<4,n=((e>>>=t)>255)<<3,t|=n,n=((e>>>=n)>15)<<2,t|=n,n=((e>>>=n)>3)<<1,t|=n,t|(e>>>=n)>>1}function vn(e){let t=32;return(e&=-e)&&t--,65535&e&&(t-=16),16711935&e&&(t-=8),252645135&e&&(t-=4),858993459&e&&(t-=2),1431655765&e&&(t-=1),t}function yn(e){return--e,e|=e>>>1,e|=e>>>2,e|=e>>>4,e|=e>>>8,1+(e|=e>>>16)}const xn=new Array(256);(e=>{for(let t=0;t<256;++t){let n=t,i=t,s=7;for(n>>>=1;n;n>>>=1)i<<=1,i|=1&n,--s;e[t]=i<<s&255}})(xn);var Sn=Object.freeze({__proto__:null,INT_BITS:32,INT_MAX:fn,INT_MIN:-2147483648,sign:mn,abs:function(e){const t=e>>31;return(e^t)-t},min:function(e,t){return t^(e^t)&-(e<t)},max:function(e,t){return e^(e^t)&-(e<t)},isPow2:function(e){return!(e&e-1||!e)},log2:gn,log10:function(e){return e>=1e9?9:e>=1e8?8:e>=1e7?7:e>=1e6?6:e>=1e5?5:e>=1e4?4:e>=1e3?3:e>=100?2:e>=10?1:0},popCount:function(e){return 16843009*((e=(858993459&(e-=e>>>1&1431655765))+(e>>>2&858993459))+(e>>>4)&252645135)>>>24},countTrailingZeros:vn,nextPow2:yn,prevPow2:function(e){return e|=e>>>1,e|=e>>>2,e|=e>>>4,e|=e>>>8,(e|=e>>>16)-(e>>>1)},parity:function(e){return e^=e>>>16,e^=e>>>8,e^=e>>>4,27030>>>(e&=15)&1},reverse:function(e){return xn[255&e]<<24|xn[e>>>8&255]<<16|xn[e>>>16&255]<<8|xn[e>>>24&255]},interleave2:function(e,t){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e&=65535)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t&=65535)|t<<8))|t<<4))|t<<2))|t<<1))<<1},deinterleave2:function(e,t){return(e=65535&((e=16711935&((e=252645135&((e=858993459&((e=e>>>t&1431655765)|e>>>1))|e>>>2))|e>>>4))|e>>>16))<<16>>16},interleave3:function(e,t,n){return e=1227133513&((e=3272356035&((e=251719695&((e=4278190335&((e&=1023)|e<<16))|e<<8))|e<<4))|e<<2),(e|=(t=1227133513&((t=3272356035&((t=251719695&((t=4278190335&((t&=1023)|t<<16))|t<<8))|t<<4))|t<<2))<<1)|(n=1227133513&((n=3272356035&((n=251719695&((n=4278190335&((n&=1023)|n<<16))|n<<8))|n<<4))|n<<2))<<2},deinterleave3:function(e,t){return(e=1023&((e=4278190335&((e=251719695&((e=3272356035&((e=e>>>t&1227133513)|e>>>2))|e>>>4))|e>>>8))|e>>>16))<<22>>22},nextCombination:function(e){const t=e|e-1;return t+1|(~t&-~t)-1>>>vn(e)+1}});e("bits",Sn);let Cn,Tn,bn,En,An,Pn,wn=10,In=0;const Rn=new Map;En=(e,t,n,i,s,r,o)=>{const a=Rn.get(r);a&&a.logTimes>a.count&&(s(`'%s' is deprecated, please use '%s' instead. ${o}`,`${e}.${t}`,`${n}.${i}`),a.count++)},Cn=e("replaceProperty",((e,t,n)=>{null!=e&&n.forEach((n=>{const i=In++;Rn.set(i,{id:i,count:0,logTimes:void 0!==n.logTimes?n.logTimes:wn});const s=null!=n.target?n.target:e,r=null!=n.newName?n.newName:n.name,o=null!=n.targetName?n.targetName:t,a=s===e,c=n.suggest?`(${n.suggest})`:"";if(null!=n.customFunction)e[n.name]=function(){return En(t,n.name,o,r,p,i,c),n.customFunction.call(this,...arguments)};else if(null!=n.customSetter||null!=n.customGetter){const s=null!=n.customSetter,a=null!=n.customGetter;s&&a?Object.defineProperty(e,n.name,{get(){return En(t,n.name,o,r,p,i,c),n.customGetter.call(this)},set(e){En(t,n.name,o,r,p,i,c),n.customSetter.call(this,e)},enumerable:!1}):s?Object.defineProperty(e,n.name,{set(e){En(t,n.name,o,r,p,i,c),n.customSetter.call(this,e)},enumerable:!1}):a&&Object.defineProperty(e,n.name,{get(){return En(t,n.name,o,r,p,i,c),n.customGetter.call(this)},enumerable:!1})}else Object.defineProperty(e,n.name,{get(){return En(t,n.name,o,r,p,i,c),a?this[r]:s[r]},set(e){En(t,n.name,o,r,p,i,c),a?this[r]=e:s[r]=e},enumerable:!1})}))})),Pn=(e,t,n,i,s)=>{const r=Rn.get(i);r&&r.logTimes>r.count&&(n(`'%s' has been removed. ${s}`,`${e}.${t}`),r.count++)},Tn=e("removeProperty",((e,t,n)=>{null!=e&&n.forEach((n=>{const i=In++;Rn.set(i,{id:i,count:0,logTimes:void 0!==n.logTimes?n.logTimes:wn});const s=n.suggest?`(${n.suggest})`:"";Object.defineProperty(e,n.name,{get:()=>Pn(t,n.name,d,i,s),set(){Pn(t,n.name,d,i,s)},enumerable:!1})}))})),An=(e,t,n,i,s)=>{const r=Rn.get(i);r&&r.logTimes>r.count&&(n(`'%s' is deprecated. ${s}`,`${e}.${t}`),r.count++)},bn=e("markAsWarning",((e,t,n)=>{if(null==e)return;const i=(t,n,i,s,r,o)=>{if(t.get){const e=t.get;t.get=function(){return An(n,i,s,r,o),e.call(this)}}if(t.set){const e=t.set;t.set=function(t){An(n,i,s,r,o),e.call(this,t)}}Object.defineProperty(e,i,t)};n.forEach((n=>{const s=n.name,r=Object.getOwnPropertyDescriptor(e,s);if(!r||!r.configurable)return;const o=In++;Rn.set(o,{id:o,count:0,logTimes:void 0!==n.logTimes?n.logTimes:wn});const a=n.suggest?`(${n.suggest})`:"";if(void 0!==r.value)if("function"==typeof r.value){const n=r.value;e[s]=function(){return An(t,s,p,o,a),n.call(this,...arguments)}}else{let n=r.value;Object.defineProperty(e,s,{configurable:!0,get:()=>(An(t,s,p,o,a),n)}),r.writable&&Object.defineProperty(e,s,{set(e){An(t,s,p,o,a),n=e}})}else i(r,t,s,p,o,a);Object.defineProperty(e,s,{enumerable:!1})}))}));const Dn=Math.PI/180,On=180/Math.PI,Mn=e("EPSILON",1e-6);function Nn(e,t){return Math.abs(e-t)<=Mn*Math.max(1,Math.abs(e),Math.abs(t))}function Ln(e,t,n){return n=n||Mn,Math.abs(e-t)<=n}function zn(e,t,n){if(t>n){const e=t;t=n,n=e}return e<t?t:e>n?n:e}function Fn(e){return e<0?0:e>1?1:e}function Bn(e,t,n){return e+(t-e)*n}function Un(e){return e*Dn}function Gn(e){return e*On}const Hn=e("random",Math.random);function kn(e,t){return Math.random()*(t-e)+e}function Vn(e,t){return Math.floor(kn(e,t))}function jn(e){return(e=(9301*e+49297)%233280)/233280}function Wn(e,t,n){return jn(e)*(n-t)+t}function qn(e,t,n){return Math.floor(Wn(e,t,n))}function Xn(e){return--e,e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,++e}function Yn(e,t){return e-Math.floor(e/t)*t}function Kn(e,t){return e=Yn(e,2*t),t-Math.abs(e-t)}function $n(e,t,n){return(n-e)/(t-e)}function Zn(e){return Math.abs(e.x)>Math.abs(e.y)?Math.abs(e.x)>Math.abs(e.z)?e.x:e.z:Math.abs(e.y)>Math.abs(e.z)?e.y:e.z}function Qn(e,t){return Math.abs(e)>Math.abs(t)?e:t}function Jn(e,t){t.forEach((t=>{Object.defineProperty(e,t,{enumerable:!0})}))}const ei=1/255;class ti extends Be{static clone(e){const t=new ti;return e._val?t._val=e._val:t._val=(e.a<<24>>>0)+(e.b<<16)+(e.g<<8)+e.r,t}static copy(e,t){return e.r=t.r,e.g=t.g,e.b=t.b,e.a=t.a,e}static set(e,t,n,i,s){return e.r=t,e.g=n,e.b=i,e.a=s,e}static fromHEX(e,t){t=0===t.indexOf("#")?t.substring(1):t,e.r=parseInt(t.substr(0,2),16)||0,e.g=parseInt(t.substr(2,2),16)||0,e.b=parseInt(t.substr(4,2),16)||0;const n=parseInt(t.substr(6,2),16);return e.a=Number.isNaN(n)?255:n,e._val=(e.a<<24>>>0)+(e.b<<16)+(e.g<<8)+e.r,e}static add(e,t,n){return e.r=t.r+n.r,e.g=t.g+n.g,e.b=t.b+n.b,e.a=t.a+n.a,e}static subtract(e,t,n){return e.r=t.r-n.r,e.g=t.g-n.g,e.b=t.b-n.b,e.a=t.a-n.a,e}static multiply(e,t,n){return e.r=t.r*n.r,e.g=t.g*n.g,e.b=t.b*n.b,e.a=t.a*n.a,e}static divide(e,t,n){return e.r=t.r/n.r,e.g=t.g/n.g,e.b=t.b/n.b,e.a=t.a/n.a,e}static scale(e,t,n){return e.r=t.r*n,e.g=t.g*n,e.b=t.b*n,e.a=t.a*n,e}static lerp(e,t,n,i){let s=t.r,r=t.g,o=t.b,a=t.a;return s+=(n.r-s)*i,r+=(n.g-r)*i,o+=(n.b-o)*i,a+=(n.a-a)*i,e._val=Math.floor((a<<24>>>0)+(o<<16)+(r<<8)+s),e}static toArray(e,t,n=0){const i=t instanceof ti||t.a>1?1/255:1;return e[n+0]=t.r*i,e[n+1]=t.g*i,e[n+2]=t.b*i,e[n+3]=t.a*i,e}static fromArray(e,t,n=0){return t.r=255*e[n+0],t.g=255*e[n+1],t.b=255*e[n+2],t.a=255*e[n+3],t}static strictEquals(e,t){return e.r===t.r&&e.g===t.g&&e.b===t.b&&e.a===t.a}static equals(e,t,n=Mn){return Math.abs(e.r-t.r)<=n*Math.max(1,Math.abs(e.r),Math.abs(t.r))&&Math.abs(e.g-t.g)<=n*Math.max(1,Math.abs(e.g),Math.abs(t.g))&&Math.abs(e.b-t.b)<=n*Math.max(1,Math.abs(e.b),Math.abs(t.b))&&Math.abs(e.a-t.a)<=n*Math.max(1,Math.abs(e.a),Math.abs(t.a))}static hex(e){return(255*e.r<<24|255*e.g<<16|255*e.b<<8|255*e.a)>>>0}get r(){return 255&this._val}set r(e){e=~~zn(e,0,255),this._val=(4294967040&this._val|e)>>>0}get g(){return(65280&this._val)>>8}set g(e){e=~~zn(e,0,255),this._val=(4294902015&this._val|e<<8)>>>0}get b(){return(16711680&this._val)>>16}set b(e){e=~~zn(e,0,255),this._val=(4278255615&this._val|e<<16)>>>0}get a(){return(4278190080&this._val)>>>24}set a(e){e=~~zn(e,0,255),this._val=(16777215&this._val|e<<24)>>>0}get x(){return this.r*ei}set x(e){this.r=255*e}get y(){return this.g*ei}set y(e){this.g=255*e}get z(){return this.b*ei}set z(e){this.b=255*e}get w(){return this.a*ei}set w(e){this.a=255*e}constructor(e,t,n,i){super(),this._val=0,"string"==typeof e?this.fromHEX(e):void 0!==t?this.set(e,t,n,i):this.set(e)}clone(){const e=new ti;return e._val=this._val,e}equals(e){return e&&this._val===e._val}lerp(e,t){let n=this.r,i=this.g,s=this.b,r=this.a;return n+=(e.r-n)*t,i+=(e.g-i)*t,s+=(e.b-s)*t,r+=(e.a-r)*t,this._val=Math.floor((r<<24>>>0)+(s<<16)+(i<<8)+n),this}toString(){return`rgba(${this.r.toFixed()}, ${this.g.toFixed()}, ${this.b.toFixed()}, ${this.a.toFixed()})`}toCSS(e="rgba"){return"rgba"===e?`rgba(${this.r},${this.g},${this.b},${(this.a*ei).toFixed(2)})`:"rgb"===e?`rgb(${this.r},${this.g},${this.b})`:`#${this.toHEX(e)}`}fromHEX(e){e=0===e.indexOf("#")?e.substring(1):e;const t=parseInt(e.substr(0,2),16)||0,n=parseInt(e.substr(2,2),16)||0,i=parseInt(e.substr(4,2),16)||0;let s=parseInt(e.substr(6,2),16);return s=Number.isNaN(s)?255:s,this._val=(s<<24>>>0)+(i<<16)+(n<<8)+(0|t),this}toHEX(e="#rrggbb"){const t="0",n=[(this.r<16?t:"")+this.r.toString(16),(this.g<16?t:"")+this.g.toString(16),(this.b<16?t:"")+this.b.toString(16)];return"#rgb"===e?(n[0]=n[0][0],n[1]=n[1][0],n[2]=n[2][0]):"#rrggbbaa"===e&&n.push((this.a<16?t:"")+this.a.toString(16)),n.join("")}toRGBValue(){return 16777215&this._val}fromHSV(e,t,n){let i=0,s=0,r=0;if(0===t)i=s=r=n;else if(0===n)i=s=r=0;else{1===e&&(e=0),e*=6;const o=Math.floor(e),a=e-o,c=n*(1-t),l=n*(1-t*a),h=n*(1-t*(1-a));switch(o){case 0:i=n,s=h,r=c;break;case 1:i=l,s=n,r=c;break;case 2:i=c,s=n,r=h;break;case 3:i=c,s=l,r=n;break;case 4:i=h,s=c,r=n;break;case 5:i=n,s=c,r=l}}return i*=255,s*=255,r*=255,this._val=(this.a<<24>>>0)+(r<<16)+(s<<8)+(0|i),this}toHSV(){const e=this.r*ei,t=this.g*ei,n=this.b*ei,i={h:0,s:0,v:0},s=Math.max(e,t,n),r=Math.min(e,t,n);let o=0;return i.v=s,i.s=s?(s-r)/s:0,i.s?(o=s-r,i.h=e===s?(t-n)/o:t===s?2+(n-e)/o:4+(e-t)/o,i.h/=6,i.h<0&&(i.h+=1)):i.h=0,i}set(e,t,n,i){return"object"==typeof e?null!=e._val?this._val=e._val:(t=e.g||0,n=e.b||0,i="number"==typeof e.a?e.a:255,e=e.r||0,this._val=(i<<24>>>0)+(n<<16)+(t<<8)+(0|e)):(e=e||0,t=t||0,n=n||0,i="number"==typeof i?i:255,this._val=(i<<24>>>0)+(n<<16)+(t<<8)+(0|e)),this}multiply(e){const t=(255&this._val)*e.r>>8,n=(65280&this._val)*e.g>>8,i=(16711680&this._val)*e.b>>8,s=((4278190080&this._val)>>>8)*e.a;return this._val=4278190080&s|16711680&i|65280&n|255&t,this}_set_r_unsafe(e){return this._val=(4294967040&this._val|e)>>>0,this}_set_g_unsafe(e){return this._val=(4294902015&this._val|e<<8)>>>0,this}_set_b_unsafe(e){return this._val=(4278255615&this._val|e<<16)>>>0,this}_set_a_unsafe(e){return this._val=(16777215&this._val|e<<24)>>>0,this}}function ni(e,t,n,i){return new ti(e,t,n,i)}e("Color",ti),ti.WHITE=Object.freeze(new ti(255,255,255,255)),ti.GRAY=Object.freeze(new ti(127,127,127,255)),ti.BLACK=Object.freeze(new ti(0,0,0,255)),ti.TRANSPARENT=Object.freeze(new ti(0,0,0,0)),ti.RED=Object.freeze(new ti(255,0,0,255)),ti.GREEN=Object.freeze(new ti(0,255,0,255)),ti.BLUE=Object.freeze(new ti(0,0,255,255)),ti.CYAN=Object.freeze(new ti(0,255,255,255)),ti.MAGENTA=Object.freeze(new ti(255,0,255,255)),ti.YELLOW=Object.freeze(new ti(255,255,0,255)),Et.fastDefine("cc.Color",ti,{r:0,g:0,b:0,a:255}),i.Color=ti,i.color=ni;const ii=e("MATH_FLOAT_ARRAY",Float32Array);class si extends Be{static createFloatArray(e){return new ii(e)}get array(){return this._array}}e("MathBase",si);class ri extends si{static zero(e){return e.x=0,e.y=0,e.z=0,e}static clone(e){return new ri(e.x,e.y,e.z)}static copy(e,t){return e.x=t.x,e.y=t.y,e.z=t.z,e}static set(e,t,n,i){return e.x=t,e.y=n,e.z=i,e}static add(e,t,n){return e.x=t.x+n.x,e.y=t.y+n.y,e.z=t.z+n.z,e}static subtract(e,t,n){return e.x=t.x-n.x,e.y=t.y-n.y,e.z=t.z-n.z,e}static multiply(e,t,n){return e.x=t.x*n.x,e.y=t.y*n.y,e.z=t.z*n.z,e}static divide(e,t,n){return e.x=t.x/n.x,e.y=t.y/n.y,e.z=t.z/n.z,e}static ceil(e,t){return e.x=Math.ceil(t.x),e.y=Math.ceil(t.y),e.z=Math.ceil(t.z),e}static floor(e,t){return e.x=Math.floor(t.x),e.y=Math.floor(t.y),e.z=Math.floor(t.z),e}static min(e,t,n){return e.x=Math.min(t.x,n.x),e.y=Math.min(t.y,n.y),e.z=Math.min(t.z,n.z),e}static max(e,t,n){return e.x=Math.max(t.x,n.x),e.y=Math.max(t.y,n.y),e.z=Math.max(t.z,n.z),e}static round(e,t){return e.x=Math.round(t.x),e.y=Math.round(t.y),e.z=Math.round(t.z),e}static multiplyScalar(e,t,n){return e.x=t.x*n,e.y=t.y*n,e.z=t.z*n,e}static scaleAndAdd(e,t,n,i){return e.x=t.x+n.x*i,e.y=t.y+n.y*i,e.z=t.z+n.z*i,e}static distance(e,t){const n=t.x-e.x,i=t.y-e.y,s=t.z-e.z;return Math.sqrt(n*n+i*i+s*s)}static squaredDistance(e,t){const n=t.x-e.x,i=t.y-e.y,s=t.z-e.z;return n*n+i*i+s*s}static len(e){const t=e.x,n=e.y,i=e.z;return Math.sqrt(t*t+n*n+i*i)}static lengthSqr(e){const t=e.x,n=e.y,i=e.z;return t*t+n*n+i*i}static negate(e,t){return e.x=-t.x,e.y=-t.y,e.z=-t.z,e}static invert(e,t){return e.x=1/t.x,e.y=1/t.y,e.z=1/t.z,e}static invertSafe(e,t){const n=t.x,i=t.y,s=t.z;return Math.abs(n)<Mn?e.x=0:e.x=1/n,Math.abs(i)<Mn?e.y=0:e.y=1/i,Math.abs(s)<Mn?e.z=0:e.z=1/s,e}static normalize(e,t){const n=t.x,i=t.y,s=t.z;let r=n*n+i*i+s*s;return r>0&&(r=1/Math.sqrt(r),e.x=n*r,e.y=i*r,e.z=s*r),e}static dot(e,t){return e.x*t.x+e.y*t.y+e.z*t.z}static cross(e,t,n){const{x:i,y:s,z:r}=t,{x:o,y:a,z:c}=n;return e.x=s*c-r*a,e.y=r*o-i*c,e.z=i*a-s*o,e}static lerp(e,t,n,i){return e.x=t.x+i*(n.x-t.x),e.y=t.y+i*(n.y-t.y),e.z=t.z+i*(n.z-t.z),e}static random(e,t){t=t||1;const n=2*Hn()*Math.PI,i=2*Hn()-1,s=Math.sqrt(1-i*i);return e.x=s*Math.cos(n)*t,e.y=s*Math.sin(n)*t,e.z=i*t,e}static transformMat4(e,t,n){const i=t.x,s=t.y,r=t.z;let o=n.m03*i+n.m07*s+n.m11*r+n.m15;return o=o?Math.abs(1/o):1,e.x=(n.m00*i+n.m04*s+n.m08*r+n.m12)*o,e.y=(n.m01*i+n.m05*s+n.m09*r+n.m13)*o,e.z=(n.m02*i+n.m06*s+n.m10*r+n.m14)*o,e}static transformMat4Normal(e,t,n){const i=t.x,s=t.y,r=t.z;let o=n.m03*i+n.m07*s+n.m11*r;return o=o?Math.abs(1/o):1,e.x=(n.m00*i+n.m04*s+n.m08*r)*o,e.y=(n.m01*i+n.m05*s+n.m09*r)*o,e.z=(n.m02*i+n.m06*s+n.m10*r)*o,e}static transformMat3(e,t,n){const i=t.x,s=t.y,r=t.z;return e.x=i*n.m00+s*n.m03+r*n.m06,e.y=i*n.m01+s*n.m04+r*n.m07,e.z=i*n.m02+s*n.m05+r*n.m08,e}static transformAffine(e,t,n){const i=t.x,s=t.y,r=t.z;return e.x=n.m00*i+n.m04*s+n.m08*r+n.m12,e.y=n.m01*i+n.m05*s+n.m09*r+n.m13,e.x=n.m02*i+n.m06*s+n.m10*r+n.m14,e}static transformQuat(e,t,n){const i=n.w*t.x+n.y*t.z-n.z*t.y,s=n.w*t.y+n.z*t.x-n.x*t.z,r=n.w*t.z+n.x*t.y-n.y*t.x,o=-n.x*t.x-n.y*t.y-n.z*t.z;return e.x=i*n.w+o*-n.x+s*-n.z-r*-n.y,e.y=s*n.w+o*-n.y+r*-n.x-i*-n.z,e.z=r*n.w+o*-n.z+i*-n.y-s*-n.x,e}static transformRTS(e,t,n,i,s){const r=t.x*s.x,o=t.y*s.y,a=t.z*s.z,c=n.w*r+n.y*a-n.z*o,l=n.w*o+n.z*r-n.x*a,h=n.w*a+n.x*o-n.y*r,_=-n.x*r-n.y*o-n.z*a;return e.x=c*n.w+_*-n.x+l*-n.z-h*-n.y+i.x,e.y=l*n.w+_*-n.y+h*-n.x-c*-n.z+i.y,e.z=h*n.w+_*-n.z+c*-n.y-l*-n.x+i.z,e}static transformInverseRTS(e,t,n,i,s){const r=t.x-i.x,o=t.y-i.y,a=t.z-i.z,c=n.w*r-n.y*a+n.z*o,l=n.w*o-n.z*r+n.x*a,h=n.w*a-n.x*o+n.y*r,_=n.x*r+n.y*o+n.z*a;return e.x=(c*n.w+_*n.x+l*n.z-h*n.y)/s.x,e.y=(l*n.w+_*n.y+h*n.x-c*n.z)/s.y,e.z=(h*n.w+_*n.z+c*n.y-l*n.x)/s.z,e}static rotateX(e,t,n,i){const s=t.x-n.x,r=t.y-n.y,o=t.z-n.z,a=Math.cos(i),c=Math.sin(i),l=s,h=r*a-o*c,_=r*c+o*a;return e.x=l+n.x,e.y=h+n.y,e.z=_+n.z,e}static rotateY(e,t,n,i){const s=t.x-n.x,r=t.y-n.y,o=t.z-n.z,a=Math.cos(i),c=Math.sin(i),l=o*c+s*a,h=r,_=o*a-s*c;return e.x=l+n.x,e.y=h+n.y,e.z=_+n.z,e}static rotateZ(e,t,n,i){const s=t.x-n.x,r=t.y-n.y,o=t.z-n.z,a=Math.cos(i),c=Math.sin(i),l=s*a-r*c,h=s*c+r*a,_=o;return e.x=l+n.x,e.y=h+n.y,e.z=_+n.z,e}static toArray(e,t,n=0){return e[n+0]=t.x,e[n+1]=t.y,e[n+2]=t.z,e}static fromArray(e,t,n=0){return e.x=t[n+0],e.y=t[n+1],e.z=t[n+2],e}static strictEquals(e,t){return e.x===t.x&&e.y===t.y&&e.z===t.z}static equals(e,t,n=Mn){const{x:i,y:s,z:r}=e,{x:o,y:a,z:c}=t;return Math.abs(i-o)<=n*Math.max(1,Math.abs(i),Math.abs(o))&&Math.abs(s-a)<=n*Math.max(1,Math.abs(s),Math.abs(a))&&Math.abs(r-c)<=n*Math.max(1,Math.abs(r),Math.abs(c))}static angle(e,t){ri.normalize(oi,e),ri.normalize(ai,t);const n=ri.dot(oi,ai);return n>1?0:n<-1?Math.PI:Math.acos(n)}static projectOnPlane(e,t,n){return ri.subtract(e,t,ri.project(e,t,n))}static project(e,t,n){const i=ri.lengthSqr(n);return i<1e-6?ri.set(e,0,0,0):ri.multiplyScalar(e,n,ri.dot(t,n)/i)}get x(){return this._array[0]}set x(e){this._array[0]=e}get y(){return this._array[1]}set y(e){this._array[1]=e}get z(){return this._array[2]}set z(e){this._array[2]=e}constructor(e,t,n){if(super(),e&&"object"==typeof e)if(ArrayBuffer.isView(e))this._array=e,this._array.fill(0);else{const t=e.array;this._array=si.createFloatArray(3),this._array[0]=t[0],this._array[1]=t[1],this._array[2]=t[2]}else this._array=si.createFloatArray(3),this._array[0]=e||0,this._array[1]=t||0,this._array[2]=n||0}clone(){return new ri(this._array[0],this._array[1],this._array[2])}set(e,t,n){return e&&"object"==typeof e?(this._array[0]=e.x,this._array[1]=e.y,this._array[2]=e.z):(this._array[0]=e||0,this._array[1]=t||0,this._array[2]=n||0),this}equals(e,t=Mn){const n=e.array;return Math.abs(this._array[0]-n[0])<=t*Math.max(1,Math.abs(this._array[0]),Math.abs(n[0]))&&Math.abs(this._array[1]-n[1])<=t*Math.max(1,Math.abs(this._array[1]),Math.abs(n[1]))&&Math.abs(this._array[2]-n[2])<=t*Math.max(1,Math.abs(this._array[2]),Math.abs(n[2]))}equals3f(e,t,n,i=Mn){return Math.abs(this._array[0]-e)<=i*Math.max(1,Math.abs(this._array[0]),Math.abs(e))&&Math.abs(this._array[1]-t)<=i*Math.max(1,Math.abs(this._array[1]),Math.abs(t))&&Math.abs(this._array[2]-n)<=i*Math.max(1,Math.abs(this._array[2]),Math.abs(n))}strictEquals(e){const t=e.array;return this._array[0]===t[0]&&this._array[1]===t[1]&&this._array[2]===t[2]}strictEquals3f(e,t,n){return this._array[0]===e&&this._array[1]===t&&this._array[2]===n}toString(){return`(${this._array[0].toFixed(2)}, ${this._array[1].toFixed(2)}, ${this._array[2].toFixed(2)})`}lerp(e,t){return this._array[0]+=t*(e.x-this._array[0]),this._array[1]+=t*(e.y-this._array[1]),this._array[2]+=t*(e.z-this._array[2]),this}add(e){const t=e.array;return this._array[0]+=t[0],this._array[1]+=t[1],this._array[2]+=t[2],this}add3f(e,t,n){return this._array[0]+=e,this._array[1]+=t,this._array[2]+=n,this}subtract(e){const t=e.array;return this._array[0]-=t[0],this._array[1]-=t[1],this._array[2]-=t[2],this}subtract3f(e,t,n){return this._array[0]-=e,this._array[1]-=t,this._array[2]-=n,this}multiplyScalar(e){return"object"==typeof e&&console.warn("should use Vec3.multiply for vector * vector operation"),this._array[0]*=e,this._array[1]*=e,this._array[2]*=e,this}multiply(e){"object"!=typeof e&&console.warn("should use Vec3.scale for vector * scalar operation");const t=e.array;return this._array[0]*=t[0],this._array[1]*=t[1],this._array[2]*=t[2],this}multiply3f(e,t,n){return this._array[0]*=e,this._array[1]*=t,this._array[2]*=n,this}divide(e){const t=e.array;return this._array[0]/=t[0],this._array[1]/=t[1],this._array[2]/=t[2],this}divide3f(e,t,n){return this._array[0]/=e,this._array[1]/=t,this._array[2]/=n,this}negative(){return this._array[0]=-this._array[0],this._array[1]=-this._array[1],this._array[2]=-this._array[2],this}clampf(e,t){const n=e.array,i=t.array;return this._array[0]=zn(this._array[0],n[0],i[0]),this._array[1]=zn(this._array[1],n[1],i[1]),this._array[2]=zn(this._array[2],n[2],i[2]),this}dot(e){const t=e.array;return this._array[0]*t[0]+this._array[1]*t[1]+this._array[2]*t[2]}cross(e){const t=this._array[0],n=this._array[1],i=this._array[2],s=e.array[0],r=e.array[1],o=e.array[2];return this._array[0]=n*o-i*r,this._array[1]=i*s-t*o,this._array[2]=t*r-n*s,this}length(){return Math.sqrt(this._array[0]*this._array[0]+this._array[1]*this._array[1]+this._array[2]*this._array[2])}lengthSqr(){return this._array[0]*this._array[0]+this._array[1]*this._array[1]+this._array[2]*this._array[2]}normalize(){const e=this._array[0],t=this._array[1],n=this._array[2];let i=e*e+t*t+n*n;return i>0&&(i=1/Math.sqrt(i),this._array[0]=e*i,this._array[1]=t*i,this._array[2]=n*i),this}transformMat4(e){const t=this._array[0],n=this._array[1],i=this._array[2],s=e.array;let r=s[3]*t+s[7]*n+s[11]*i+s[15];return r=r?1/r:1,this._array[0]=(s[0]*t+s[4]*n+s[8]*i+s[12])*r,this._array[1]=(s[1]*t+s[5]*n+s[9]*i+s[13])*r,this._array[2]=(s[2]*t+s[6]*n+s[10]*i+s[14])*r,this}}e("Vec3",ri),ri.UNIT_X=Object.freeze(new ri(1,0,0)),ri.UNIT_Y=Object.freeze(new ri(0,1,0)),ri.UNIT_Z=Object.freeze(new ri(0,0,1)),ri.RIGHT=Object.freeze(new ri(1,0,0)),ri.UP=Object.freeze(new ri(0,1,0)),ri.FORWARD=Object.freeze(new ri(0,0,-1)),ri.ZERO=Object.freeze(new ri(0,0,0)),ri.ONE=Object.freeze(new ri(1,1,1)),ri.NEG_ONE=Object.freeze(new ri(-1,-1,-1));const oi=new ri,ai=new ri;function ci(e,t,n){return new ri(e,t,n)}Jn(ri.prototype,["x","y","z"]),Et.fastDefine("cc.Vec3",ri,{x:0,y:0,z:0}),i.Vec3=ri,i.v3=ci;class li extends si{static clone(e){return new li(e.m00,e.m01,e.m02,e.m03,e.m04,e.m05,e.m06,e.m07,e.m08)}static copy(e,t){return e.m00=t.m00,e.m01=t.m01,e.m02=t.m02,e.m03=t.m03,e.m04=t.m04,e.m05=t.m05,e.m06=t.m06,e.m07=t.m07,e.m08=t.m08,e}static set(e,t,n,i,s,r,o,a,c,l){return e.m00=t,e.m01=n,e.m02=i,e.m03=s,e.m04=r,e.m05=o,e.m06=a,e.m07=c,e.m08=l,e}static identity(e){return e.m00=1,e.m01=0,e.m02=0,e.m03=0,e.m04=1,e.m05=0,e.m06=0,e.m07=0,e.m08=1,e}static transpose(e,t){if(e===t){const n=t.m01,i=t.m02,s=t.m05;e.m01=t.m03,e.m02=t.m06,e.m03=n,e.m05=t.m07,e.m06=i,e.m07=s}else e.m00=t.m00,e.m01=t.m03,e.m02=t.m06,e.m03=t.m01,e.m04=t.m04,e.m05=t.m07,e.m06=t.m02,e.m07=t.m05,e.m08=t.m08;return e}static invert(e,t){const n=t.m00,i=t.m01,s=t.m02,r=t.m03,o=t.m04,a=t.m05,c=t.m06,l=t.m07,h=t.m08,_=h*o-a*l,u=-h*r+a*c,p=l*r-o*c;let d=n*_+i*u+s*p;return 0===d?(e.m00=0,e.m01=0,e.m02=0,e.m03=0,e.m04=0,e.m05=0,e.m06=0,e.m07=0,e.m08=0,e):(d=1/d,e.m00=_*d,e.m01=(-h*i+s*l)*d,e.m02=(a*i-s*o)*d,e.m03=u*d,e.m04=(h*n-s*c)*d,e.m05=(-a*n+s*r)*d,e.m06=p*d,e.m07=(-l*n+i*c)*d,e.m08=(o*n-i*r)*d,e)}static determinant(e){const t=e.m00,n=e.m01,i=e.m02,s=e.m03,r=e.m04,o=e.m05,a=e.m06,c=e.m07,l=e.m08;return t*(l*r-o*c)+n*(-l*s+o*a)+i*(c*s-r*a)}static multiply(e,t,n){const i=t.m00,s=t.m01,r=t.m02,o=t.m03,a=t.m04,c=t.m05,l=t.m06,h=t.m07,_=t.m08,u=n.m00,p=n.m01,d=n.m02,f=n.m03,m=n.m04,g=n.m05,v=n.m06,y=n.m07,x=n.m08;return e.m00=u*i+p*o+d*l,e.m01=u*s+p*a+d*h,e.m02=u*r+p*c+d*_,e.m03=f*i+m*o+g*l,e.m04=f*s+m*a+g*h,e.m05=f*r+m*c+g*_,e.m06=v*i+y*o+x*l,e.m07=v*s+y*a+x*h,e.m08=v*r+y*c+x*_,e}static multiplyMat4(e,t,n){const i=t.m00,s=t.m01,r=t.m02,o=t.m03,a=t.m04,c=t.m05,l=t.m06,h=t.m07,_=t.m08,u=n.m00,p=n.m01,d=n.m02,f=n.m04,m=n.m05,g=n.m06,v=n.m08,y=n.m09,x=n.m10;return e.m00=u*i+p*o+d*l,e.m01=u*s+p*a+d*h,e.m02=u*r+p*c+d*_,e.m03=f*i+m*o+g*l,e.m04=f*s+m*a+g*h,e.m05=f*r+m*c+g*_,e.m06=v*i+y*o+x*l,e.m07=v*s+y*a+x*h,e.m08=v*r+y*c+x*_,e}static transform(e,t,n){const i=t.m00,s=t.m01,r=t.m02,o=t.m03,a=t.m04,c=t.m05,l=t.m06,h=t.m07,_=t.m08,u=n.x,p=n.y;return e.m00=i,e.m01=s,e.m02=r,e.m03=o,e.m04=a,e.m05=c,e.m06=u*i+p*o+l,e.m07=u*s+p*a+h,e.m08=u*r+p*c+_,e}static scale(e,t,n){const i=n.x,s=n.y;return e.m00=i*t.m00,e.m01=i*t.m01,e.m02=i*t.m02,e.m03=s*t.m03,e.m04=s*t.m04,e.m05=s*t.m05,e.m06=t.m06,e.m07=t.m07,e.m08=t.m08,e}static rotate(e,t,n){const i=t.m00,s=t.m01,r=t.m02,o=t.m03,a=t.m04,c=t.m05,l=t.m06,h=t.m07,_=t.m08,u=Math.sin(n),p=Math.cos(n);return e.m00=p*i+u*o,e.m01=p*s+u*a,e.m02=p*r+u*c,e.m03=p*o-u*i,e.m04=p*a-u*s,e.m05=p*c-u*r,e.m06=l,e.m07=h,e.m08=_,e}static fromMat4(e,t){return e.m00=t.m00,e.m01=t.m01,e.m02=t.m02,e.m03=t.m04,e.m04=t.m05,e.m05=t.m06,e.m06=t.m08,e.m07=t.m09,e.m08=t.m10,e}static fromViewUp(e,t,n){return ri.lengthSqr(t)<Mn*Mn?(li.identity(e),e):(ri.normalize(hi,ri.cross(hi,n||ri.UNIT_Y,t)),ri.lengthSqr(hi)<Mn*Mn?(li.identity(e),e):(ri.cross(_i,t,hi),li.set(e,hi.x,hi.y,hi.z,_i.x,_i.y,_i.z,t.x,t.y,t.z),e))}static fromTranslation(e,t){return e.m00=1,e.m01=0,e.m02=0,e.m03=0,e.m04=1,e.m05=0,e.m06=t.x,e.m07=t.y,e.m08=1,e}static fromScaling(e,t){return e.m00=t.x,e.m01=0,e.m02=0,e.m03=0,e.m04=t.y,e.m05=0,e.m06=0,e.m07=0,e.m08=1,e}static fromRotation(e,t){const n=Math.sin(t),i=Math.cos(t);return e.m00=i,e.m01=n,e.m02=0,e.m03=-n,e.m04=i,e.m05=0,e.m06=0,e.m07=0,e.m08=1,e}static fromQuat(e,t){const n=t.x,i=t.y,s=t.z,r=t.w,o=n+n,a=i+i,c=s+s,l=n*o,h=i*o,_=i*a,u=s*o,p=s*a,d=s*c,f=r*o,m=r*a,g=r*c;return e.m00=1-_-d,e.m03=h-g,e.m06=u+m,e.m01=h+g,e.m04=1-l-d,e.m07=p-f,e.m02=u-m,e.m05=p+f,e.m08=1-l-_,e}static inverseTransposeMat4(e,t){const n=t.m00,i=t.m01,s=t.m02,r=t.m03,o=t.m04,a=t.m05,c=t.m06,l=t.m07,h=t.m08,_=t.m09,u=t.m10,p=t.m11,d=t.m12,f=t.m13,m=t.m14,g=t.m15,v=n*a-i*o,y=n*c-s*o,x=n*l-r*o,S=i*c-s*a,C=i*l-r*a,T=s*l-r*c,b=h*f-_*d,E=h*m-u*d,A=h*g-p*d,P=_*m-u*f,w=_*g-p*f,I=u*g-p*m;let R=v*I-y*w+x*P+S*A-C*E+T*b;return R?(R=1/R,e.m00=(a*I-c*w+l*P)*R,e.m01=(c*A-o*I-l*E)*R,e.m02=(o*w-a*A+l*b)*R,e.m03=(s*w-i*I-r*P)*R,e.m04=(n*I-s*A+r*E)*R,e.m05=(i*A-n*w-r*b)*R,e.m06=(f*T-m*C+g*S)*R,e.m07=(m*x-d*T-g*y)*R,e.m08=(d*C-f*x+g*v)*R,e):null}static toArray(e,t,n=0){return e[n+0]=t.m00,e[n+1]=t.m01,e[n+2]=t.m02,e[n+3]=t.m03,e[n+4]=t.m04,e[n+5]=t.m05,e[n+6]=t.m06,e[n+7]=t.m07,e[n+8]=t.m08,e}static fromArray(e,t,n=0){return e.m00=t[n+0],e.m01=t[n+1],e.m02=t[n+2],e.m03=t[n+3],e.m04=t[n+4],e.m05=t[n+5],e.m06=t[n+6],e.m07=t[n+7],e.m08=t[n+8],e}static add(e,t,n){return e.m00=t.m00+n.m00,e.m01=t.m01+n.m01,e.m02=t.m02+n.m02,e.m03=t.m03+n.m03,e.m04=t.m04+n.m04,e.m05=t.m05+n.m05,e.m06=t.m06+n.m06,e.m07=t.m07+n.m07,e.m08=t.m08+n.m08,e}static subtract(e,t,n){return e.m00=t.m00-n.m00,e.m01=t.m01-n.m01,e.m02=t.m02-n.m02,e.m03=t.m03-n.m03,e.m04=t.m04-n.m04,e.m05=t.m05-n.m05,e.m06=t.m06-n.m06,e.m07=t.m07-n.m07,e.m08=t.m08-n.m08,e}static multiplyScalar(e,t,n){return e.m00=t.m00*n,e.m01=t.m01*n,e.m02=t.m02*n,e.m03=t.m03*n,e.m04=t.m04*n,e.m05=t.m05*n,e.m06=t.m06*n,e.m07=t.m07*n,e.m08=t.m08*n,e}static multiplyScalarAndAdd(e,t,n,i){return e.m00=n.m00*i+t.m00,e.m01=n.m01*i+t.m01,e.m02=n.m02*i+t.m02,e.m03=n.m03*i+t.m03,e.m04=n.m04*i+t.m04,e.m05=n.m05*i+t.m05,e.m06=n.m06*i+t.m06,e.m07=n.m07*i+t.m07,e.m08=n.m08*i+t.m08,e}static strictEquals(e,t){return e.m00===t.m00&&e.m01===t.m01&&e.m02===t.m02&&e.m03===t.m03&&e.m04===t.m04&&e.m05===t.m05&&e.m06===t.m06&&e.m07===t.m07&&e.m08===t.m08}static equals(e,t,n=Mn){return Math.abs(e.m00-t.m00)<=n*Math.max(1,Math.abs(e.m00),Math.abs(t.m00))&&Math.abs(e.m01-t.m01)<=n*Math.max(1,Math.abs(e.m01),Math.abs(t.m01))&&Math.abs(e.m02-t.m02)<=n*Math.max(1,Math.abs(e.m02),Math.abs(t.m02))&&Math.abs(e.m03-t.m03)<=n*Math.max(1,Math.abs(e.m03),Math.abs(t.m03))&&Math.abs(e.m04-t.m04)<=n*Math.max(1,Math.abs(e.m04),Math.abs(t.m04))&&Math.abs(e.m05-t.m05)<=n*Math.max(1,Math.abs(e.m05),Math.abs(t.m05))&&Math.abs(e.m06-t.m06)<=n*Math.max(1,Math.abs(e.m06),Math.abs(t.m06))&&Math.abs(e.m07-t.m07)<=n*Math.max(1,Math.abs(e.m07),Math.abs(t.m07))&&Math.abs(e.m08-t.m08)<=n*Math.max(1,Math.abs(e.m08),Math.abs(t.m08))}get m00(){return this._array[0]}set m00(e){this._array[0]=e}get m01(){return this._array[1]}set m01(e){this._array[1]=e}get m02(){return this._array[2]}set m02(e){this._array[2]=e}get m03(){return this._array[3]}set m03(e){this._array[3]=e}get m04(){return this._array[4]}set m04(e){this._array[4]=e}get m05(){return this._array[5]}set m05(e){this._array[5]=e}get m06(){return this._array[6]}set m06(e){this._array[6]=e}get m07(){return this._array[7]}set m07(e){this._array[7]=e}get m08(){return this._array[8]}set m08(e){this._array[8]=e}constructor(e=1,t=0,n=0,i=0,s=1,r=0,o=0,a=0,c=1){if(super(),e&&"object"==typeof e)if(ArrayBuffer.isView(e))this._array=e,this._array.set([1,0,0,0,1,0,0,0,1]);else{const t=e.array;this._array=si.createFloatArray(9),this._array[0]=t[0],this._array[1]=t[1],this._array[2]=t[2],this._array[3]=t[3],this._array[4]=t[4],this._array[5]=t[5],this._array[6]=t[6],this._array[7]=t[7],this._array[8]=t[8]}else this._array=si.createFloatArray(9),this._array[0]=e,this._array[1]=t,this._array[2]=n,this._array[3]=i,this._array[4]=s,this._array[5]=r,this._array[6]=o,this._array[7]=a,this._array[8]=c}clone(){const e=this._array;return new li(e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8])}set(e=1,t=0,n=0,i=0,s=1,r=0,o=0,a=0,c=1){if(e&&"object"==typeof e){const t=e.array;this._array[0]=t[0],this._array[1]=t[1],this._array[2]=t[2],this._array[3]=t[3],this._array[4]=t[4],this._array[5]=t[5],this._array[6]=t[6],this._array[7]=t[7],this._array[8]=t[8]}else this._array[0]=e,this._array[1]=t,this._array[2]=n,this._array[3]=i,this._array[4]=s,this._array[5]=r,this._array[6]=o,this._array[7]=a,this._array[8]=c;return this}equals(e,t=Mn){const n=e.array;return Math.abs(this._array[0]-n[0])<=t*Math.max(1,Math.abs(this._array[0]),Math.abs(n[0]))&&Math.abs(this._array[1]-n[1])<=t*Math.max(1,Math.abs(this._array[1]),Math.abs(n[1]))&&Math.abs(this._array[2]-n[2])<=t*Math.max(1,Math.abs(this._array[2]),Math.abs(n[2]))&&Math.abs(this._array[3]-n[3])<=t*Math.max(1,Math.abs(this._array[3]),Math.abs(n[3]))&&Math.abs(this._array[4]-n[4])<=t*Math.max(1,Math.abs(this._array[4]),Math.abs(n[4]))&&Math.abs(this._array[5]-n[5])<=t*Math.max(1,Math.abs(this._array[5]),Math.abs(n[5]))&&Math.abs(this._array[6]-n[6])<=t*Math.max(1,Math.abs(this._array[6]),Math.abs(n[6]))&&Math.abs(this._array[7]-n[7])<=t*Math.max(1,Math.abs(this._array[7]),Math.abs(n[7]))&&Math.abs(this._array[8]-n[8])<=t*Math.max(1,Math.abs(this._array[8]),Math.abs(n[8]))}strictEquals(e){const t=e.array;return this._array[0]===t[0]&&this._array[1]===t[1]&&this._array[2]===t[2]&&this._array[3]===t[3]&&this._array[4]===t[4]&&this._array[5]===t[5]&&this._array[6]===t[6]&&this._array[7]===t[7]&&this._array[8]===t[8]}toString(){return`[\n${this._array[0]}, ${this._array[1]}, ${this._array[2]},\n${this._array[3]},\n${this._array[4]}, ${this._array[5]},\n${this._array[6]}, ${this._array[7]},\n${this._array[8]}\n]`}identity(){return this._array[0]=1,this._array[1]=0,this._array[2]=0,this._array[3]=0,this._array[4]=1,this._array[5]=0,this._array[6]=0,this._array[7]=0,this._array[8]=1,this}transpose(){const e=this._array[1],t=this._array[2],n=this._array[5];return this._array[1]=this._array[3],this._array[2]=this._array[6],this._array[3]=e,this._array[5]=this._array[7],this._array[6]=t,this._array[7]=n,this}invert(){const e=this._array[0],t=this._array[1],n=this._array[2],i=this._array[3],s=this._array[4],r=this._array[5],o=this._array[6],a=this._array[7],c=this._array[8],l=c*s-r*a,h=-c*i+r*o,_=a*i-s*o;let u=e*l+t*h+n*_;return 0===u?(this.set(0,0,0,0,0,0,0,0,0),this):(u=1/u,this._array[0]=l*u,this._array[1]=(-c*t+n*a)*u,this._array[2]=(r*t-n*s)*u,this._array[3]=h*u,this._array[4]=(c*e-n*o)*u,this._array[5]=(-r*e+n*i)*u,this._array[6]=_*u,this._array[7]=(-a*e+t*o)*u,this._array[8]=(s*e-t*i)*u,this)}determinant(){const e=this._array[0],t=this._array[1],n=this._array[2],i=this._array[3],s=this._array[4],r=this._array[5],o=this._array[6],a=this._array[7],c=this._array[8];return e*(c*s-r*a)+t*(-c*i+r*o)+n*(a*i-s*o)}add(e){const t=e.array;return this._array[0]+=t[0],this._array[1]+=t[1],this._array[2]+=t[2],this._array[3]+=t[3],this._array[4]+=t[4],this._array[5]+=t[5],this._array[6]+=t[6],this._array[7]+=t[7],this._array[8]+=t[8],this}subtract(e){const t=e.array;return this._array[0]-=t[0],this._array[1]-=t[1],this._array[2]-=t[2],this._array[3]-=t[3],this._array[4]-=t[4],this._array[5]-=t[5],this._array[6]-=t[6],this._array[7]-=t[7],this._array[8]-=t[8],this}multiply(e){const t=this._array[0],n=this._array[1],i=this._array[2],s=this._array[3],r=this._array[4],o=this._array[5],a=this._array[6],c=this._array[7],l=this._array[8],h=e.array,_=h[0],u=h[1],p=h[2],d=h[3],f=h[4],m=h[5],g=h[6],v=h[7],y=h[8];return this._array[0]=_*t+u*s+p*a,this._array[1]=_*n+u*r+p*c,this._array[2]=_*i+u*o+p*l,this._array[3]=d*t+f*s+m*a,this._array[4]=d*n+f*r+m*c,this._array[5]=d*i+f*o+m*l,this._array[6]=g*t+v*s+y*a,this._array[7]=g*n+v*r+y*c,this._array[8]=g*i+v*o+y*l,this}multiplyScalar(e){return this._array[0]*=e,this._array[1]*=e,this._array[2]*=e,this._array[3]*=e,this._array[4]*=e,this._array[5]*=e,this._array[6]*=e,this._array[7]*=e,this._array[8]*=e,this}scale(e){const t=e.array[0],n=e.array[1];return this._array[0]*=t,this._array[1]*=t,this._array[2]*=t,this._array[3]*=n,this._array[4]*=n,this._array[5]*=n,this}rotate(e){const t=this._array[0],n=this._array[1],i=this._array[2],s=this._array[3],r=this._array[4],o=this._array[5],a=this._array[6],c=this._array[7],l=this._array[8],h=Math.sin(e),_=Math.cos(e);return this._array[0]=_*t+h*s,this._array[1]=_*n+h*r,this._array[2]=_*i+h*o,this._array[3]=_*s-h*t,this._array[4]=_*r-h*n,this._array[5]=_*o-h*i,this._array[6]=a,this._array[7]=c,this._array[8]=l,this}fromQuat(e){const t=e.x,n=e.y,i=e.z,s=e.w,r=t+t,o=n+n,a=i+i,c=t*r,l=n*r,h=n*o,_=i*r,u=i*o,p=i*a,d=s*r,f=s*o,m=s*a;return this._array[0]=1-h-p,this._array[3]=l-m,this._array[6]=_+f,this._array[1]=l+m,this._array[4]=1-c-p,this._array[7]=u-d,this._array[2]=_-f,this._array[5]=u+d,this._array[8]=1-c-h,this}}e("Mat3",li),li.IDENTITY=Object.freeze(new li);const hi=new ri,_i=new ri;Jn(li.prototype,["m00","m01","m02","m03","m04","m05","m06","m07","m08"]),Et.fastDefine("cc.Mat3",li,{m00:1,m01:0,m02:0,m03:0,m04:1,m05:0,m06:0,m07:0,m08:1}),i.Mat3=li;class ui extends si{static clone(e){return new ui(e.x,e.y,e.z,e.w)}static copy(e,t){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}static set(e,t,n,i,s){return e.x=t,e.y=n,e.z=i,e.w=s,e}static identity(e){return e.x=0,e.y=0,e.z=0,e.w=1,e}static rotationTo(e,t,n){const i=ri.dot(t,n);return i<-.999999?(ri.cross(fi,ri.UNIT_X,t),fi.length()<1e-6&&ri.cross(fi,ri.UNIT_Y,t),ri.normalize(fi,fi),ui.fromAxisAngle(e,fi,Math.PI),e):i>.999999?(e.x=0,e.y=0,e.z=0,e.w=1,e):(ri.cross(fi,t,n),e.x=fi.x,e.y=fi.y,e.z=fi.z,e.w=1+i,ui.normalize(e,e))}static getAxisAngle(e,t){const n=2*Math.acos(t.w),i=Math.sin(n/2);return 0!==i?(e.x=t.x/i,e.y=t.y/i,e.z=t.z/i):(e.x=1,e.y=0,e.z=0),n}static multiply(e,t,n){const i=t.x*n.w+t.w*n.x+t.y*n.z-t.z*n.y,s=t.y*n.w+t.w*n.y+t.z*n.x-t.x*n.z,r=t.z*n.w+t.w*n.z+t.x*n.y-t.y*n.x,o=t.w*n.w-t.x*n.x-t.y*n.y-t.z*n.z;return e.x=i,e.y=s,e.z=r,e.w=o,e}static multiplyScalar(e,t,n){return e.x=t.x*n,e.y=t.y*n,e.z=t.z*n,e.w=t.w*n,e}static scaleAndAdd(e,t,n,i){return e.x=t.x+n.x*i,e.y=t.y+n.y*i,e.z=t.z+n.z*i,e.w=t.w+n.w*i,e}static rotateX(e,t,n){n*=.5;const i=Math.sin(n),s=Math.cos(n),{x:r,y:o,z:a,w:c}=t;return e.x=r*s+c*i,e.y=o*s+a*i,e.z=a*s-o*i,e.w=c*s-r*i,e}static rotateY(e,t,n){n*=.5;const i=Math.sin(n),s=Math.cos(n),{x:r,y:o,z:a,w:c}=t;return e.x=r*s-a*i,e.y=o*s+c*i,e.z=a*s+r*i,e.w=c*s-o*i,e}static rotateZ(e,t,n){n*=.5;const i=Math.sin(n),s=Math.cos(n),{x:r,y:o,z:a,w:c}=t;return e.x=r*s+o*i,e.y=o*s-r*i,e.z=a*s+c*i,e.w=c*s-a*i,e}static rotateAround(e,t,n,i){return ui.invert(pi,t),ri.transformQuat(fi,n,pi),ui.fromAxisAngle(pi,fi,i),ui.multiply(e,t,pi),e}static rotateAroundLocal(e,t,n,i){return ui.fromAxisAngle(pi,n,i),ui.multiply(e,t,pi),e}static calculateW(e,t){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=Math.sqrt(Math.abs(1-t.x*t.x-t.y*t.y-t.z*t.z)),e}static dot(e,t){return e.x*t.x+e.y*t.y+e.z*t.z+e.w*t.w}static lerp(e,t,n,i){return e.x=t.x+i*(n.x-t.x),e.y=t.y+i*(n.y-t.y),e.z=t.z+i*(n.z-t.z),e.w=t.w+i*(n.w-t.w),e}static slerp(e,t,n,i){let s=0,r=0,o=n.x,a=n.y,c=n.z,l=n.w,h=t.x*n.x+t.y*n.y+t.z*n.z+t.w*n.w;if(h<0&&(h=-h,o=-o,a=-a,c=-c,l=-l),1-h>1e-6){const e=Math.acos(h),t=Math.sin(e);s=Math.sin((1-i)*e)/t,r=Math.sin(i*e)/t}else s=1-i,r=i;return e.x=s*t.x+r*o,e.y=s*t.y+r*a,e.z=s*t.z+r*c,e.w=s*t.w+r*l,e}static sqlerp(e,t,n,i,s,r){return ui.slerp(pi,t,s,r),ui.slerp(di,n,i,r),ui.slerp(e,pi,di,2*r*(1-r)),e}static invert(e,t){const n=t.x*t.x+t.y*t.y+t.z*t.z+t.w*t.w,i=n?1/n:0;return e.x=-t.x*i,e.y=-t.y*i,e.z=-t.z*i,e.w=t.w*i,e}static conjugate(e,t){return e.x=-t.x,e.y=-t.y,e.z=-t.z,e.w=t.w,e}static len(e){return Math.sqrt(e.x*e.x+e.y*e.y+e.z*e.z+e.w*e.w)}static lengthSqr(e){return e.x*e.x+e.y*e.y+e.z*e.z+e.w*e.w}static normalize(e,t){let n=t.x*t.x+t.y*t.y+t.z*t.z+t.w*t.w;return n>0&&(n=1/Math.sqrt(n),e.x=t.x*n,e.y=t.y*n,e.z=t.z*n,e.w=t.w*n),e}static fromAxes(e,t,n,i){return li.set(mi,t.x,t.y,t.z,n.x,n.y,n.z,i.x,i.y,i.z),ui.normalize(e,ui.fromMat3(e,mi))}static fromViewUp(e,t,n){return li.fromViewUp(mi,t,n),ui.normalize(e,ui.fromMat3(e,mi))}static fromAxisAngle(e,t,n){n*=.5;const i=Math.sin(n);return e.x=i*t.x,e.y=i*t.y,e.z=i*t.z,e.w=Math.cos(n),e}static fromMat3(e,t){const{m00:n,m03:i,m06:s,m01:r,m04:o,m07:a,m02:c,m05:l,m08:h}=t,_=n+o+h;if(_>0){const t=.5/Math.sqrt(_+1);e.w=.25/t,e.x=(l-a)*t,e.y=(s-c)*t,e.z=(r-i)*t}else if(n>o&&n>h){const t=2*Math.sqrt(1+n-o-h);e.w=(l-a)/t,e.x=.25*t,e.y=(i+r)/t,e.z=(s+c)/t}else if(o>h){const t=2*Math.sqrt(1+o-n-h);e.w=(s-c)/t,e.x=(i+r)/t,e.y=.25*t,e.z=(a+l)/t}else{const t=2*Math.sqrt(1+h-n-o);e.w=(r-i)/t,e.x=(s+c)/t,e.y=(a+l)/t,e.z=.25*t}return e}static fromEuler(e,t,n,i){t*=gi,n*=gi,i*=gi;const s=Math.sin(t),r=Math.cos(t),o=Math.sin(n),a=Math.cos(n),c=Math.sin(i),l=Math.cos(i);return e.x=s*a*l+r*o*c,e.y=r*o*l+s*a*c,e.z=r*a*c-s*o*l,e.w=r*a*l-s*o*c,e}static fromAngleZ(e,t){return t*=gi,e.x=e.y=0,e.z=Math.sin(t),e.w=Math.cos(t),e}static toAxisX(e,t){const n=2*t.y,i=2*t.z;return e.x=1-n*t.y-i*t.z,e.y=n*t.x+i*t.w,e.z=i*t.x+n*t.w,e}static toAxisY(e,t){const n=2*t.x,i=2*t.y,s=2*t.z;return e.x=i*t.x-s*t.w,e.y=1-n*t.x-s*t.z,e.z=s*t.y+n*t.w,e}static toAxisZ(e,t){const n=2*t.x,i=2*t.y,s=2*t.z;return e.x=s*t.x-i*t.w,e.y=s*t.y-n*t.w,e.z=1-n*t.x-i*t.y,e}static toEuler(e,t,n){const{x:i,y:s,z:r,w:o}=t;let a=0,c=0,l=0;const h=i*s+r*o;if(h>.499999)a=0,c=Gn(2*Math.atan2(i,o)),l=90;else if(h<-.499999)a=0,c=-Gn(2*Math.atan2(i,o)),l=-90;else{const e=i*i,t=s*s,_=r*r;a=Gn(Math.atan2(2*i*o-2*s*r,1-2*e-2*_)),c=Gn(Math.atan2(2*s*o-2*i*r,1-2*t-2*_)),l=Gn(Math.asin(2*h)),n&&(a=-180*Math.sign(a+1e-6)+a,c=-180*Math.sign(c+1e-6)+c,l=180*Math.sign(l+1e-6)-l)}return e.x=a,e.y=c,e.z=l,e}static toArray(e,t,n=0){return e[n+0]=t.x,e[n+1]=t.y,e[n+2]=t.z,e[n+3]=t.w,e}static fromArray(e,t,n=0){return e.x=t[n+0],e.y=t[n+1],e.z=t[n+2],e.w=t[n+3],e}static strictEquals(e,t){return e.x===t.x&&e.y===t.y&&e.z===t.z&&e.w===t.w}static equals(e,t,n=Mn){return Math.abs(e.x-t.x)<=n*Math.max(1,Math.abs(e.x),Math.abs(t.x))&&Math.abs(e.y-t.y)<=n*Math.max(1,Math.abs(e.y),Math.abs(t.y))&&Math.abs(e.z-t.z)<=n*Math.max(1,Math.abs(e.z),Math.abs(t.z))&&Math.abs(e.w-t.w)<=n*Math.max(1,Math.abs(e.w),Math.abs(t.w))}get x(){return this._array[0]}set x(e){this._array[0]=e}get y(){return this._array[1]}set y(e){this._array[1]=e}get z(){return this._array[2]}set z(e){this._array[2]=e}get w(){return this._array[3]}set w(e){this._array[3]=e}constructor(e,t,n,i){if(super(),e&&"object"==typeof e)if(ArrayBuffer.isView(e))this._array=e,this._array.fill(0),this._array[3]=1;else{const t=e.array;this._array=si.createFloatArray(4),this._array[0]=t[0],this._array[1]=t[1],this._array[2]=t[2],this._array[3]=t[3]}else this._array=si.createFloatArray(4),this._array[0]=e||0,this._array[1]=t||0,this._array[2]=n||0,this._array[3]=null!=i?i:1}clone(){return new ui(this._array[0],this._array[1],this._array[2],this._array[3])}set(e,t,n,i){if(e&&"object"==typeof e){const t=e.array;this._array[0]=t[0],this._array[1]=t[1],this._array[2]=t[2],this._array[3]=t[3]}else this._array[0]=e||0,this._array[1]=t||0,this._array[2]=n||0,this._array[3]=null!=i?i:1;return this}equals(e,t=Mn){const n=e.array;return Math.abs(this._array[0]-n[0])<=t*Math.max(1,Math.abs(this._array[0]),Math.abs(n[0]))&&Math.abs(this._array[1]-n[1])<=t*Math.max(1,Math.abs(this._array[1]),Math.abs(n[1]))&&Math.abs(this._array[2]-n[2])<=t*Math.max(1,Math.abs(this._array[2]),Math.abs(n[2]))&&Math.abs(this._array[3]-n[3])<=t*Math.max(1,Math.abs(this._array[3]),Math.abs(n[3]))}strictEquals(e){const t=e.array;return e&&this._array[0]===t[0]&&this._array[1]===t[1]&&this._array[2]===t[2]&&this._array[3]===t[3]}getEulerAngles(e){return ui.toEuler(e,this)}lerp(e,t){const n=e.array;return this._array[0]+=t*(n[0]-this._array[0]),this._array[1]+=t*(n[1]-this._array[1]),this._array[2]+=t*(n[2]-this._array[2]),this._array[3]+=t*(n[3]-this._array[3]),this}slerp(e,t){return ui.slerp(this,this,e,t)}length(){const e=this._array;return Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]+e[3]*e[3])}lengthSqr(){const e=this._array;return e[0]*e[0]+e[1]*e[1]+e[2]*e[2]+e[3]*e[3]}}e("Quat",ui),ui.IDENTITY=Object.freeze(new ui),Jn(ui.prototype,["x","y","z","w"]);const pi=new ui,di=new ui,fi=new ri,mi=new li,gi=.5*Math.PI/180;function vi(e=0,t=0,n=0,i=1){return new ui(e,t,n,i)}Et.fastDefine("cc.Quat",ui,{x:0,y:0,z:0,w:1}),i.Quat=ui,i.quat=vi;const yi=Object.freeze([Object.freeze([1,0,0,1]),Object.freeze([0,1,-1,0]),Object.freeze([-1,0,0,-1]),Object.freeze([0,-1,1,0])]);class xi extends si{static clone(e){return new xi(e.m00,e.m01,e.m02,e.m03,e.m04,e.m05,e.m06,e.m07,e.m08,e.m09,e.m10,e.m11,e.m12,e.m13,e.m14,e.m15)}static copy(e,t){return e.m00=t.m00,e.m01=t.m01,e.m02=t.m02,e.m03=t.m03,e.m04=t.m04,e.m05=t.m05,e.m06=t.m06,e.m07=t.m07,e.m08=t.m08,e.m09=t.m09,e.m10=t.m10,e.m11=t.m11,e.m12=t.m12,e.m13=t.m13,e.m14=t.m14,e.m15=t.m15,e}static set(e,t,n,i,s,r,o,a,c,l,h,_,u,p,d,f,m){return e.m00=t,e.m01=n,e.m02=i,e.m03=s,e.m04=r,e.m05=o,e.m06=a,e.m07=c,e.m08=l,e.m09=h,e.m10=_,e.m11=u,e.m12=p,e.m13=d,e.m14=f,e.m15=m,e}static identity(e){return e.m00=1,e.m01=0,e.m02=0,e.m03=0,e.m04=0,e.m05=1,e.m06=0,e.m07=0,e.m08=0,e.m09=0,e.m10=1,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e}static transpose(e,t){if(e===t){const n=t.m01,i=t.m02,s=t.m03,r=t.m06,o=t.m07,a=t.m11;e.m01=t.m04,e.m02=t.m08,e.m03=t.m12,e.m04=n,e.m06=t.m09,e.m07=t.m13,e.m08=i,e.m09=r,e.m11=t.m14,e.m12=s,e.m13=o,e.m14=a}else e.m00=t.m00,e.m01=t.m04,e.m02=t.m08,e.m03=t.m12,e.m04=t.m01,e.m05=t.m05,e.m06=t.m09,e.m07=t.m13,e.m08=t.m02,e.m09=t.m06,e.m10=t.m10,e.m11=t.m14,e.m12=t.m03,e.m13=t.m07,e.m14=t.m11,e.m15=t.m15;return e}static invert(e,t){const n=t.m00,i=t.m01,s=t.m02,r=t.m03,o=t.m04,a=t.m05,c=t.m06,l=t.m07,h=t.m08,_=t.m09,u=t.m10,p=t.m11,d=t.m12,f=t.m13,m=t.m14,g=t.m15,v=n*a-i*o,y=n*c-s*o,x=n*l-r*o,S=i*c-s*a,C=i*l-r*a,T=s*l-r*c,b=h*f-_*d,E=h*m-u*d,A=h*g-p*d,P=_*m-u*f,w=_*g-p*f,I=u*g-p*m;let R=v*I-y*w+x*P+S*A-C*E+T*b;return 0===R?(e.m00=0,e.m01=0,e.m02=0,e.m03=0,e.m04=0,e.m05=0,e.m06=0,e.m07=0,e.m08=0,e.m09=0,e.m10=0,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=0,e):(R=1/R,e.m00=(a*I-c*w+l*P)*R,e.m01=(s*w-i*I-r*P)*R,e.m02=(f*T-m*C+g*S)*R,e.m03=(u*C-_*T-p*S)*R,e.m04=(c*A-o*I-l*E)*R,e.m05=(n*I-s*A+r*E)*R,e.m06=(m*x-d*T-g*y)*R,e.m07=(h*T-u*x+p*y)*R,e.m08=(o*w-a*A+l*b)*R,e.m09=(i*A-n*w-r*b)*R,e.m10=(d*C-f*x+g*v)*R,e.m11=(_*x-h*C-p*v)*R,e.m12=(a*E-o*P-c*b)*R,e.m13=(n*P-i*E+s*b)*R,e.m14=(f*y-d*S-m*v)*R,e.m15=(h*S-_*y+u*v)*R,e)}static determinant(e){const t=e.m00,n=e.m01,i=e.m02,s=e.m03,r=e.m04,o=e.m05,a=e.m06,c=e.m07,l=e.m08,h=e.m09,_=e.m10,u=e.m11,p=e.m12,d=e.m13,f=e.m14,m=e.m15;return(t*o-n*r)*(_*m-u*f)-(t*a-i*r)*(h*m-u*d)+(t*c-s*r)*(h*f-_*d)+(n*a-i*o)*(l*m-u*p)-(n*c-s*o)*(l*f-_*p)+(i*c-s*a)*(l*d-h*p)}static multiply(e,t,n){const i=t.m00,s=t.m01,r=t.m02,o=t.m03,a=t.m04,c=t.m05,l=t.m06,h=t.m07,_=t.m08,u=t.m09,p=t.m10,d=t.m11,f=t.m12,m=t.m13,g=t.m14,v=t.m15;let y=n.m00,x=n.m01,S=n.m02,C=n.m03;return e.m00=y*i+x*a+S*_+C*f,e.m01=y*s+x*c+S*u+C*m,e.m02=y*r+x*l+S*p+C*g,e.m03=y*o+x*h+S*d+C*v,y=n.m04,x=n.m05,S=n.m06,C=n.m07,e.m04=y*i+x*a+S*_+C*f,e.m05=y*s+x*c+S*u+C*m,e.m06=y*r+x*l+S*p+C*g,e.m07=y*o+x*h+S*d+C*v,y=n.m08,x=n.m09,S=n.m10,C=n.m11,e.m08=y*i+x*a+S*_+C*f,e.m09=y*s+x*c+S*u+C*m,e.m10=y*r+x*l+S*p+C*g,e.m11=y*o+x*h+S*d+C*v,y=n.m12,x=n.m13,S=n.m14,C=n.m15,e.m12=y*i+x*a+S*_+C*f,e.m13=y*s+x*c+S*u+C*m,e.m14=y*r+x*l+S*p+C*g,e.m15=y*o+x*h+S*d+C*v,e}static transform(e,t,n){const i=n.x,s=n.y,r=n.z;if(t===e)e.m12=t.m00*i+t.m04*s+t.m08*r+t.m12,e.m13=t.m01*i+t.m05*s+t.m09*r+t.m13,e.m14=t.m02*i+t.m06*s+t.m10*r+t.m14,e.m15=t.m03*i+t.m07*s+t.m11*r+t.m15;else{const n=t.m00,o=t.m01,a=t.m02,c=t.m03,l=t.m04,h=t.m05,_=t.m06,u=t.m07,p=t.m08,d=t.m09,f=t.m10,m=t.m11;t.m12,t.m13,t.m14,t.m15,e.m00=n,e.m01=o,e.m02=a,e.m03=c,e.m04=l,e.m05=h,e.m06=_,e.m07=u,e.m08=p,e.m09=d,e.m10=f,e.m11=m,e.m12=n*i+l*s+p*r+t.m12,e.m13=o*i+h*s+d*r+t.m13,e.m14=a*i+_*s+f*r+t.m14,e.m15=c*i+u*s+m*r+t.m15}return e}static translate(e,t,n){return console.warn("function changed"),t===e?(e.m12+=n.x,e.m13+=n.y,e.m14+=n.z):(e.m00=t.m00,e.m01=t.m01,e.m02=t.m02,e.m03=t.m03,e.m04=t.m04,e.m05=t.m05,e.m06=t.m06,e.m07=t.m07,e.m08=t.m08,e.m09=t.m09,e.m10=t.m10,e.m11=t.m11,e.m12+=n.x,e.m13+=n.y,e.m14+=n.z,e.m15=t.m15),e}static scale(e,t,n){const i=n.x,s=n.y,r=n.z;return e.m00=t.m00*i,e.m01=t.m01*i,e.m02=t.m02*i,e.m03=t.m03*i,e.m04=t.m04*s,e.m05=t.m05*s,e.m06=t.m06*s,e.m07=t.m07*s,e.m08=t.m08*r,e.m09=t.m09*r,e.m10=t.m10*r,e.m11=t.m11*r,e.m12=t.m12,e.m13=t.m13,e.m14=t.m14,e.m15=t.m15,e}static rotate(e,t,n,i){let s=i.x,r=i.y,o=i.z,a=Math.sqrt(s*s+r*r+o*o);if(Math.abs(a)<Mn)return null;a=1/a,s*=a,r*=a,o*=a;const c=Math.sin(n),l=Math.cos(n),h=1-l,_=t.m00,u=t.m01,p=t.m02,d=t.m03,f=t.m04,m=t.m05,g=t.m06,v=t.m07,y=t.m08,x=t.m09,S=t.m10,C=t.m11,T=s*s*h+l,b=r*s*h+o*c,E=o*s*h-r*c,A=s*r*h-o*c,P=r*r*h+l,w=o*r*h+s*c,I=s*o*h+r*c,R=r*o*h-s*c,D=o*o*h+l;return e.m00=_*T+f*b+y*E,e.m01=u*T+m*b+x*E,e.m02=p*T+g*b+S*E,e.m03=d*T+v*b+C*E,e.m04=_*A+f*P+y*w,e.m05=u*A+m*P+x*w,e.m06=p*A+g*P+S*w,e.m07=d*A+v*P+C*w,e.m08=_*I+f*R+y*D,e.m09=u*I+m*R+x*D,e.m10=p*I+g*R+S*D,e.m11=d*I+v*R+C*D,t!==e&&(e.m12=t.m12,e.m13=t.m13,e.m14=t.m14,e.m15=t.m15),e}static rotateX(e,t,n){const i=Math.sin(n),s=Math.cos(n),r=t.m04,o=t.m05,a=t.m06,c=t.m07,l=t.m08,h=t.m09,_=t.m10,u=t.m11;return t!==e&&(e.m00=t.m00,e.m01=t.m01,e.m02=t.m02,e.m03=t.m03,e.m12=t.m12,e.m13=t.m13,e.m14=t.m14,e.m15=t.m15),e.m04=r*s+l*i,e.m05=o*s+h*i,e.m06=a*s+_*i,e.m07=c*s+u*i,e.m08=l*s-r*i,e.m09=h*s-o*i,e.m10=_*s-a*i,e.m11=u*s-c*i,e}static rotateY(e,t,n){const i=Math.sin(n),s=Math.cos(n),r=t.m00,o=t.m01,a=t.m02,c=t.m03,l=t.m08,h=t.m09,_=t.m10,u=t.m11;return t!==e&&(e.m04=t.m04,e.m05=t.m05,e.m06=t.m06,e.m07=t.m07,e.m12=t.m12,e.m13=t.m13,e.m14=t.m14,e.m15=t.m15),e.m00=r*s-l*i,e.m01=o*s-h*i,e.m02=a*s-_*i,e.m03=c*s-u*i,e.m08=r*i+l*s,e.m09=o*i+h*s,e.m10=a*i+_*s,e.m11=c*i+u*s,e}static rotateZ(e,t,n){const i=Math.sin(n),s=Math.cos(n),r=t.m00,o=t.m01,a=t.m02,c=t.m03,l=t.m04,h=t.m05,_=t.m06,u=t.m07;return t!==e&&(e.m08=t.m08,e.m09=t.m09,e.m10=t.m10,e.m11=t.m11,e.m12=t.m12,e.m13=t.m13,e.m14=t.m14,e.m15=t.m15),e.m00=r*s+l*i,e.m01=o*s+h*i,e.m02=a*s+_*i,e.m03=c*s+u*i,e.m04=l*s-r*i,e.m05=h*s-o*i,e.m06=_*s-a*i,e.m07=u*s-c*i,e}static fromTranslation(e,t){return e.m00=1,e.m01=0,e.m02=0,e.m03=0,e.m04=0,e.m05=1,e.m06=0,e.m07=0,e.m08=0,e.m09=0,e.m10=1,e.m11=0,e.m12=t.x,e.m13=t.y,e.m14=t.z,e.m15=1,e}static fromScaling(e,t){return e.m00=t.x,e.m01=0,e.m02=0,e.m03=0,e.m04=0,e.m05=t.y,e.m06=0,e.m07=0,e.m08=0,e.m09=0,e.m10=t.z,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e}static fromRotation(e,t,n){let i=n.x,s=n.y,r=n.z,o=Math.sqrt(i*i+s*s+r*r);if(Math.abs(o)<Mn)return null;o=1/o,i*=o,s*=o,r*=o;const a=Math.sin(t),c=Math.cos(t),l=1-c;return e.m00=i*i*l+c,e.m01=s*i*l+r*a,e.m02=r*i*l-s*a,e.m03=0,e.m04=i*s*l-r*a,e.m05=s*s*l+c,e.m06=r*s*l+i*a,e.m07=0,e.m08=i*r*l+s*a,e.m09=s*r*l-i*a,e.m10=r*r*l+c,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e}static fromXRotation(e,t){const n=Math.sin(t),i=Math.cos(t);return e.m00=1,e.m01=0,e.m02=0,e.m03=0,e.m04=0,e.m05=i,e.m06=n,e.m07=0,e.m08=0,e.m09=-n,e.m10=i,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e}static fromYRotation(e,t){const n=Math.sin(t),i=Math.cos(t);return e.m00=i,e.m01=0,e.m02=-n,e.m03=0,e.m04=0,e.m05=1,e.m06=0,e.m07=0,e.m08=n,e.m09=0,e.m10=i,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e}static fromZRotation(e,t){const n=Math.sin(t),i=Math.cos(t);return e.m00=i,e.m01=n,e.m02=0,e.m03=0,e.m04=-n,e.m05=i,e.m06=0,e.m07=0,e.m08=0,e.m09=0,e.m10=1,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e}static fromRT(e,t,n){const i=t.x,s=t.y,r=t.z,o=t.w,a=i+i,c=s+s,l=r+r,h=i*a,_=i*c,u=i*l,p=s*c,d=s*l,f=r*l,m=o*a,g=o*c,v=o*l;return e.m00=1-(p+f),e.m01=_+v,e.m02=u-g,e.m03=0,e.m04=_-v,e.m05=1-(h+f),e.m06=d+m,e.m07=0,e.m08=u+g,e.m09=d-m,e.m10=1-(h+p),e.m11=0,e.m12=n.x,e.m13=n.y,e.m14=n.z,e.m15=1,e}static getTranslation(e,t){return e.x=t.m12,e.y=t.m13,e.z=t.m14,e}static getScaling(e,t){const n=Ci.m00=t.m00,i=Ci.m01=t.m01,s=Ci.m02=t.m02,r=Ci.m03=t.m04,o=Ci.m04=t.m05,a=Ci.m05=t.m06,c=Ci.m06=t.m08,l=Ci.m07=t.m09,h=Ci.m08=t.m10;return e.x=Math.sqrt(n*n+i*i+s*s),e.y=Math.sqrt(r*r+o*o+a*a),e.z=Math.sqrt(c*c+l*l+h*h),li.determinant(Ci)<0&&(e.x*=-1),e}static getRotation(e,t){const n=t.m00+t.m05+t.m10;let i=0;return n>0?(i=2*Math.sqrt(n+1),e.w=.25*i,e.x=(t.m06-t.m09)/i,e.y=(t.m08-t.m02)/i,e.z=(t.m01-t.m04)/i):t.m00>t.m05&&t.m00>t.m10?(i=2*Math.sqrt(1+t.m00-t.m05-t.m10),e.w=(t.m06-t.m09)/i,e.x=.25*i,e.y=(t.m01+t.m04)/i,e.z=(t.m08+t.m02)/i):t.m05>t.m10?(i=2*Math.sqrt(1+t.m05-t.m00-t.m10),e.w=(t.m08-t.m02)/i,e.x=(t.m01+t.m04)/i,e.y=.25*i,e.z=(t.m06+t.m09)/i):(i=2*Math.sqrt(1+t.m10-t.m00-t.m05),e.w=(t.m01-t.m04)/i,e.x=(t.m08+t.m02)/i,e.y=(t.m06+t.m09)/i,e.z=.25*i),e}static toRTS(e,t,n,i){i.x=ri.set(Si,e.m00,e.m01,e.m02).length(),Ci.m00=e.m00/i.x,Ci.m01=e.m01/i.x,Ci.m02=e.m02/i.x,i.y=ri.set(Si,e.m04,e.m05,e.m06).length(),Ci.m03=e.m04/i.y,Ci.m04=e.m05/i.y,Ci.m05=e.m06/i.y,i.z=ri.set(Si,e.m08,e.m09,e.m10).length(),Ci.m06=e.m08/i.z,Ci.m07=e.m09/i.z,Ci.m08=e.m10/i.z,li.determinant(Ci)<0&&(i.x*=-1,Ci.m00*=-1,Ci.m01*=-1,Ci.m02*=-1),ui.fromMat3(t,Ci),ri.set(n,e.m12,e.m13,e.m14)}static fromRTS(e,t,n,i){const s=t.x,r=t.y,o=t.z,a=t.w,c=s+s,l=r+r,h=o+o,_=s*c,u=s*l,p=s*h,d=r*l,f=r*h,m=o*h,g=a*c,v=a*l,y=a*h,x=i.x,S=i.y,C=i.z;return e.m00=(1-(d+m))*x,e.m01=(u+y)*x,e.m02=(p-v)*x,e.m03=0,e.m04=(u-y)*S,e.m05=(1-(_+m))*S,e.m06=(f+g)*S,e.m07=0,e.m08=(p+v)*C,e.m09=(f-g)*C,e.m10=(1-(_+d))*C,e.m11=0,e.m12=n.x,e.m13=n.y,e.m14=n.z,e.m15=1,e}static fromRTSOrigin(e,t,n,i,s){const r=t.x,o=t.y,a=t.z,c=t.w,l=r+r,h=o+o,_=a+a,u=r*l,p=r*h,d=r*_,f=o*h,m=o*_,g=a*_,v=c*l,y=c*h,x=c*_,S=i.x,C=i.y,T=i.z,b=s.x,E=s.y,A=s.z;return e.m00=(1-(f+g))*S,e.m01=(p+x)*S,e.m02=(d-y)*S,e.m03=0,e.m04=(p-x)*C,e.m05=(1-(u+g))*C,e.m06=(m+v)*C,e.m07=0,e.m08=(d+y)*T,e.m09=(m-v)*T,e.m10=(1-(u+f))*T,e.m11=0,e.m12=n.x+b-(e.m00*b+e.m04*E+e.m08*A),e.m13=n.y+E-(e.m01*b+e.m05*E+e.m09*A),e.m14=n.z+A-(e.m02*b+e.m06*E+e.m10*A),e.m15=1,e}static fromQuat(e,t){const n=t.x,i=t.y,s=t.z,r=t.w,o=n+n,a=i+i,c=s+s,l=n*o,h=i*o,_=i*a,u=s*o,p=s*a,d=s*c,f=r*o,m=r*a,g=r*c;return e.m00=1-_-d,e.m01=h+g,e.m02=u-m,e.m03=0,e.m04=h-g,e.m05=1-l-d,e.m06=p+f,e.m07=0,e.m08=u+m,e.m09=p-f,e.m10=1-l-_,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e}static frustum(e,t,n,i,s,r,o){const a=1/(n-t),c=1/(s-i),l=1/(r-o);return e.m00=2*r*a,e.m01=0,e.m02=0,e.m03=0,e.m04=0,e.m05=2*r*c,e.m06=0,e.m07=0,e.m08=(n+t)*a,e.m09=(s+i)*c,e.m10=(o+r)*l,e.m11=-1,e.m12=0,e.m13=0,e.m14=o*r*2*l,e.m15=0,e}static perspective(e,t,n,i,s,r=!0,o=-1,a=1,c=0){const l=1/Math.tan(t/2),h=1/(i-s),_=r?l/n:l,u=(r?l:l*n)*a,p=yi[c];return e.m00=_*p[0],e.m01=_*p[1],e.m02=0,e.m03=0,e.m04=u*p[2],e.m05=u*p[3],e.m06=0,e.m07=0,e.m08=0,e.m09=0,e.m10=(s-o*i)*h,e.m11=-1,e.m12=0,e.m13=0,e.m14=s*i*h*(1-o),e.m15=0,e}static ortho(e,t,n,i,s,r,o,a=-1,c=1,l=0){const h=1/(t-n),_=1/(i-s)*c,u=1/(r-o),p=-2*h,d=-2*_,f=(t+n)*h,m=(s+i)*_,g=yi[l];return e.m00=p*g[0],e.m01=p*g[1],e.m02=0,e.m03=0,e.m04=d*g[2],e.m05=d*g[3],e.m06=0,e.m07=0,e.m08=0,e.m09=0,e.m10=u*(1-a),e.m11=0,e.m12=f*g[0]+m*g[2],e.m13=f*g[1]+m*g[3],e.m14=(r-a*o)*u,e.m15=1,e}static lookAt(e,t,n,i){const s=t.x,r=t.y,o=t.z,a=i.x,c=i.y,l=i.z;let h=s-n.x,_=r-n.y,u=o-n.z,p=1/Math.sqrt(h*h+_*_+u*u);h*=p,_*=p,u*=p;let d=c*u-l*_,f=l*h-a*u,m=a*_-c*h;p=1/Math.sqrt(d*d+f*f+m*m),d*=p,f*=p,m*=p;const g=_*m-u*f,v=u*d-h*m,y=h*f-_*d;return e.m00=d,e.m01=g,e.m02=h,e.m03=0,e.m04=f,e.m05=v,e.m06=_,e.m07=0,e.m08=m,e.m09=y,e.m10=u,e.m11=0,e.m12=-(d*s+f*r+m*o),e.m13=-(g*s+v*r+y*o),e.m14=-(h*s+_*r+u*o),e.m15=1,e}static inverseTranspose(e,t){const n=t.m00,i=t.m01,s=t.m02,r=t.m03,o=t.m04,a=t.m05,c=t.m06,l=t.m07,h=t.m08,_=t.m09,u=t.m10,p=t.m11,d=t.m12,f=t.m13,m=t.m14,g=t.m15,v=n*a-i*o,y=n*c-s*o,x=n*l-r*o,S=i*c-s*a,C=i*l-r*a,T=s*l-r*c,b=h*f-_*d,E=h*m-u*d,A=h*g-p*d,P=_*m-u*f,w=_*g-p*f,I=u*g-p*m;let R=v*I-y*w+x*P+S*A-C*E+T*b;return R?(R=1/R,e.m00=(a*I-c*w+l*P)*R,e.m01=(c*A-o*I-l*E)*R,e.m02=(o*w-a*A+l*b)*R,e.m03=0,e.m04=(s*w-i*I-r*P)*R,e.m05=(n*I-s*A+r*E)*R,e.m06=(i*A-n*w-r*b)*R,e.m07=0,e.m08=(f*T-m*C+g*S)*R,e.m09=(m*x-d*T-g*y)*R,e.m10=(d*C-f*x+g*v)*R,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e):null}static toArray(e,t,n=0){return e[n+0]=t.m00,e[n+1]=t.m01,e[n+2]=t.m02,e[n+3]=t.m03,e[n+4]=t.m04,e[n+5]=t.m05,e[n+6]=t.m06,e[n+7]=t.m07,e[n+8]=t.m08,e[n+9]=t.m09,e[n+10]=t.m10,e[n+11]=t.m11,e[n+12]=t.m12,e[n+13]=t.m13,e[n+14]=t.m14,e[n+15]=t.m15,e}static fromArray(e,t,n=0){return e.m00=t[n+0],e.m01=t[n+1],e.m02=t[n+2],e.m03=t[n+3],e.m04=t[n+4],e.m05=t[n+5],e.m06=t[n+6],e.m07=t[n+7],e.m08=t[n+8],e.m09=t[n+9],e.m10=t[n+10],e.m11=t[n+11],e.m12=t[n+12],e.m13=t[n+13],e.m14=t[n+14],e.m15=t[n+15],e}static add(e,t,n){return e.m00=t.m00+n.m00,e.m01=t.m01+n.m01,e.m02=t.m02+n.m02,e.m03=t.m03+n.m03,e.m04=t.m04+n.m04,e.m05=t.m05+n.m05,e.m06=t.m06+n.m06,e.m07=t.m07+n.m07,e.m08=t.m08+n.m08,e.m09=t.m09+n.m09,e.m10=t.m10+n.m10,e.m11=t.m11+n.m11,e.m12=t.m12+n.m12,e.m13=t.m13+n.m13,e.m14=t.m14+n.m14,e.m15=t.m15+n.m15,e}static subtract(e,t,n){return e.m00=t.m00-n.m00,e.m01=t.m01-n.m01,e.m02=t.m02-n.m02,e.m03=t.m03-n.m03,e.m04=t.m04-n.m04,e.m05=t.m05-n.m05,e.m06=t.m06-n.m06,e.m07=t.m07-n.m07,e.m08=t.m08-n.m08,e.m09=t.m09-n.m09,e.m10=t.m10-n.m10,e.m11=t.m11-n.m11,e.m12=t.m12-n.m12,e.m13=t.m13-n.m13,e.m14=t.m14-n.m14,e.m15=t.m15-n.m15,e}static multiplyScalar(e,t,n){return e.m00=t.m00*n,e.m01=t.m01*n,e.m02=t.m02*n,e.m03=t.m03*n,e.m04=t.m04*n,e.m05=t.m05*n,e.m06=t.m06*n,e.m07=t.m07*n,e.m08=t.m08*n,e.m09=t.m09*n,e.m10=t.m10*n,e.m11=t.m11*n,e.m12=t.m12*n,e.m13=t.m13*n,e.m14=t.m14*n,e.m15=t.m15*n,e}static multiplyScalarAndAdd(e,t,n,i){return e.m00=t.m00+n.m00*i,e.m01=t.m01+n.m01*i,e.m02=t.m02+n.m02*i,e.m03=t.m03+n.m03*i,e.m04=t.m04+n.m04*i,e.m05=t.m05+n.m05*i,e.m06=t.m06+n.m06*i,e.m07=t.m07+n.m07*i,e.m08=t.m08+n.m08*i,e.m09=t.m09+n.m09*i,e.m10=t.m10+n.m10*i,e.m11=t.m11+n.m11*i,e.m12=t.m12+n.m12*i,e.m13=t.m13+n.m13*i,e.m14=t.m14+n.m14*i,e.m15=t.m15+n.m15*i,e}static strictEquals(e,t){return e.m00===t.m00&&e.m01===t.m01&&e.m02===t.m02&&e.m03===t.m03&&e.m04===t.m04&&e.m05===t.m05&&e.m06===t.m06&&e.m07===t.m07&&e.m08===t.m08&&e.m09===t.m09&&e.m10===t.m10&&e.m11===t.m11&&e.m12===t.m12&&e.m13===t.m13&&e.m14===t.m14&&e.m15===t.m15}static equals(e,t,n=Mn){return Math.abs(e.m00-t.m00)<=n*Math.max(1,Math.abs(e.m00),Math.abs(t.m00))&&Math.abs(e.m01-t.m01)<=n*Math.max(1,Math.abs(e.m01),Math.abs(t.m01))&&Math.abs(e.m02-t.m02)<=n*Math.max(1,Math.abs(e.m02),Math.abs(t.m02))&&Math.abs(e.m03-t.m03)<=n*Math.max(1,Math.abs(e.m03),Math.abs(t.m03))&&Math.abs(e.m04-t.m04)<=n*Math.max(1,Math.abs(e.m04),Math.abs(t.m04))&&Math.abs(e.m05-t.m05)<=n*Math.max(1,Math.abs(e.m05),Math.abs(t.m05))&&Math.abs(e.m06-t.m06)<=n*Math.max(1,Math.abs(e.m06),Math.abs(t.m06))&&Math.abs(e.m07-t.m07)<=n*Math.max(1,Math.abs(e.m07),Math.abs(t.m07))&&Math.abs(e.m08-t.m08)<=n*Math.max(1,Math.abs(e.m08),Math.abs(t.m08))&&Math.abs(e.m09-t.m09)<=n*Math.max(1,Math.abs(e.m09),Math.abs(t.m09))&&Math.abs(e.m10-t.m10)<=n*Math.max(1,Math.abs(e.m10),Math.abs(t.m10))&&Math.abs(e.m11-t.m11)<=n*Math.max(1,Math.abs(e.m11),Math.abs(t.m11))&&Math.abs(e.m12-t.m12)<=n*Math.max(1,Math.abs(e.m12),Math.abs(t.m12))&&Math.abs(e.m13-t.m13)<=n*Math.max(1,Math.abs(e.m13),Math.abs(t.m13))&&Math.abs(e.m14-t.m14)<=n*Math.max(1,Math.abs(e.m14),Math.abs(t.m14))&&Math.abs(e.m15-t.m15)<=n*Math.max(1,Math.abs(e.m15),Math.abs(t.m15))}get m00(){return this._array[0]}set m00(e){this._array[0]=e}get m01(){return this._array[1]}set m01(e){this._array[1]=e}get m02(){return this._array[2]}set m02(e){this._array[2]=e}get m03(){return this._array[3]}set m03(e){this._array[3]=e}get m04(){return this._array[4]}set m04(e){this._array[4]=e}get m05(){return this._array[5]}set m05(e){this._array[5]=e}get m06(){return this._array[6]}set m06(e){this._array[6]=e}get m07(){return this._array[7]}set m07(e){this._array[7]=e}get m08(){return this._array[8]}set m08(e){this._array[8]=e}get m09(){return this._array[9]}set m09(e){this._array[9]=e}get m10(){return this._array[10]}set m10(e){this._array[10]=e}get m11(){return this._array[11]}set m11(e){this._array[11]=e}get m12(){return this._array[12]}set m12(e){this._array[12]=e}get m13(){return this._array[13]}set m13(e){this._array[13]=e}get m14(){return this._array[14]}set m14(e){this._array[14]=e}get m15(){return this._array[15]}set m15(e){this._array[15]=e}constructor(e=1,t=0,n=0,i=0,s=0,r=1,o=0,a=0,c=0,l=0,h=1,_=0,u=0,p=0,d=0,f=1){if(super(),e&&"object"==typeof e)if(ArrayBuffer.isView(e))this._array=e,this._array.set([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]);else{const t=e.array;this._array=si.createFloatArray(16),this._array[0]=t[0],this._array[1]=t[1],this._array[2]=t[2],this._array[3]=t[3],this._array[4]=t[4],this._array[5]=t[5],this._array[6]=t[6],this._array[7]=t[7],this._array[8]=t[8],this._array[9]=t[9],this._array[10]=t[10],this._array[11]=t[11],this._array[12]=t[12],this._array[13]=t[13],this._array[14]=t[14],this._array[15]=t[15]}else this._array=si.createFloatArray(16),this._array[0]=e,this._array[1]=t,this._array[2]=n,this._array[3]=i,this._array[4]=s,this._array[5]=r,this._array[6]=o,this._array[7]=a,this._array[8]=c,this._array[9]=l,this._array[10]=h,this._array[11]=_,this._array[12]=u,this._array[13]=p,this._array[14]=d,this._array[15]=f}clone(){const e=this._array;return new xi(e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8],e[9],e[10],e[11],e[12],e[13],e[14],e[15])}set(e=1,t=0,n=0,i=0,s=0,r=1,o=0,a=0,c=0,l=0,h=1,_=0,u=0,p=0,d=0,f=1){if(e&&"object"==typeof e){const t=e.array;this._array[1]=t[1],this._array[2]=t[2],this._array[3]=t[3],this._array[4]=t[4],this._array[5]=t[5],this._array[6]=t[6],this._array[7]=t[7],this._array[8]=t[8],this._array[9]=t[9],this._array[10]=t[10],this._array[11]=t[11],this._array[12]=t[12],this._array[13]=t[13],this._array[14]=t[14],this._array[15]=t[15],this._array[0]=t[0]}else this._array[1]=t,this._array[2]=n,this._array[3]=i,this._array[4]=s,this._array[5]=r,this._array[6]=o,this._array[7]=a,this._array[8]=c,this._array[9]=l,this._array[10]=h,this._array[11]=_,this._array[12]=u,this._array[13]=p,this._array[14]=d,this._array[15]=f,this._array[0]=e;return this}equals(e,t=Mn){const n=e.array;return Math.abs(this._array[0]-n[0])<=t*Math.max(1,Math.abs(this._array[0]),Math.abs(n[0]))&&Math.abs(this._array[1]-n[1])<=t*Math.max(1,Math.abs(this._array[1]),Math.abs(n[1]))&&Math.abs(this._array[2]-n[2])<=t*Math.max(1,Math.abs(this._array[2]),Math.abs(n[2]))&&Math.abs(this._array[3]-n[3])<=t*Math.max(1,Math.abs(this._array[3]),Math.abs(n[3]))&&Math.abs(this._array[4]-n[4])<=t*Math.max(1,Math.abs(this._array[4]),Math.abs(n[4]))&&Math.abs(this._array[5]-n[5])<=t*Math.max(1,Math.abs(this._array[5]),Math.abs(n[5]))&&Math.abs(this._array[6]-n[6])<=t*Math.max(1,Math.abs(this._array[6]),Math.abs(n[6]))&&Math.abs(this._array[7]-n[7])<=t*Math.max(1,Math.abs(this._array[7]),Math.abs(n[7]))&&Math.abs(this._array[8]-n[8])<=t*Math.max(1,Math.abs(this._array[8]),Math.abs(n[8]))&&Math.abs(this._array[9]-n[9])<=t*Math.max(1,Math.abs(this._array[9]),Math.abs(n[9]))&&Math.abs(this._array[10]-n[10])<=t*Math.max(1,Math.abs(this._array[10]),Math.abs(n[10]))&&Math.abs(this._array[11]-n[11])<=t*Math.max(1,Math.abs(this._array[11]),Math.abs(n[11]))&&Math.abs(this._array[12]-n[12])<=t*Math.max(1,Math.abs(this._array[12]),Math.abs(n[12]))&&Math.abs(this._array[13]-n[13])<=t*Math.max(1,Math.abs(this._array[13]),Math.abs(n[13]))&&Math.abs(this._array[14]-n[14])<=t*Math.max(1,Math.abs(this._array[14]),Math.abs(n[14]))&&Math.abs(this._array[15]-n[15])<=t*Math.max(1,Math.abs(this._array[15]),Math.abs(n[15]))}strictEquals(e){const t=e.array;return this._array[0]===e.m00&&this._array[1]===t[1]&&this._array[2]===t[2]&&this._array[3]===t[3]&&this._array[4]===t[4]&&this._array[5]===t[5]&&this._array[6]===t[6]&&this._array[7]===t[7]&&this._array[8]===t[8]&&this._array[9]===t[9]&&this._array[10]===t[10]&&this._array[11]===t[11]&&this._array[12]===t[12]&&this._array[13]===t[13]&&this._array[14]===t[14]&&this._array[15]===t[15]}toString(){return`[\n${this._array[0]}, ${this._array[1]}, ${this._array[2]}, ${this._array[3]},\n${this._array[4]}, ${this._array[5]}, ${this._array[6]}, ${this._array[7]},\n${this._array[8]}, ${this._array[9]}, ${this._array[10]}, ${this._array[11]},\n${this._array[12]}, ${this._array[13]}, ${this._array[14]}, ${this._array[15]}\n]`}identity(){return this._array[0]=1,this._array[1]=0,this._array[2]=0,this._array[3]=0,this._array[4]=0,this._array[5]=1,this._array[6]=0,this._array[7]=0,this._array[8]=0,this._array[9]=0,this._array[10]=1,this._array[11]=0,this._array[12]=0,this._array[13]=0,this._array[14]=0,this._array[15]=1,this}zero(){return this.m00=0,this.m01=0,this.m02=0,this.m03=0,this.m04=0,this.m05=0,this.m06=0,this.m07=0,this.m08=0,this.m09=0,this.m10=0,this.m11=0,this.m12=0,this.m13=0,this.m14=0,this.m15=0,this}transpose(){const e=this._array[1],t=this._array[2],n=this._array[3],i=this._array[6],s=this._array[7],r=this._array[11];return this._array[1]=this._array[4],this._array[2]=this._array[8],this._array[3]=this._array[12],this._array[4]=e,this._array[6]=this._array[9],this._array[7]=this._array[13],this._array[8]=t,this._array[9]=i,this._array[11]=this._array[14],this._array[12]=n,this._array[13]=s,this._array[14]=r,this}invert(){const e=this._array[0],t=this._array[1],n=this._array[2],i=this._array[3],s=this._array[4],r=this._array[5],o=this._array[6],a=this._array[7],c=this._array[8],l=this._array[9],h=this._array[10],_=this._array[11],u=this._array[12],p=this._array[13],d=this._array[14],f=this._array[15],m=e*r-t*s,g=e*o-n*s,v=e*a-i*s,y=t*o-n*r,x=t*a-i*r,S=n*a-i*o,C=c*p-l*u,T=c*d-h*u,b=c*f-_*u,E=l*d-h*p,A=l*f-_*p,P=h*f-_*d;let w=m*P-g*A+v*E+y*b-x*T+S*C;return 0===w?(this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),this):(w=1/w,this._array[0]=(r*P-o*A+a*E)*w,this._array[1]=(n*A-t*P-i*E)*w,this._array[2]=(p*S-d*x+f*y)*w,this._array[3]=(h*x-l*S-_*y)*w,this._array[4]=(o*b-s*P-a*T)*w,this._array[5]=(e*P-n*b+i*T)*w,this._array[6]=(d*v-u*S-f*g)*w,this._array[7]=(c*S-h*v+_*g)*w,this._array[8]=(s*A-r*b+a*C)*w,this._array[9]=(t*b-e*A-i*C)*w,this._array[10]=(u*x-p*v+f*m)*w,this._array[11]=(l*v-c*x-_*m)*w,this._array[12]=(r*T-s*E-o*C)*w,this._array[13]=(e*E-t*T+n*C)*w,this._array[14]=(p*g-u*y-d*m)*w,this._array[15]=(c*y-l*g+h*m)*w,this)}determinant(){const e=this._array[0],t=this._array[1],n=this._array[2],i=this._array[3],s=this._array[4],r=this._array[5],o=this._array[6],a=this._array[7],c=this._array[8],l=this._array[9],h=this._array[10],_=this._array[11],u=this._array[12],p=this._array[13],d=this._array[14],f=this._array[15];return(e*r-t*s)*(h*f-_*d)-(e*o-n*s)*(l*f-_*p)+(e*a-i*s)*(l*d-h*p)+(t*o-n*r)*(c*f-_*u)-(t*a-i*r)*(c*d-h*u)+(n*a-i*o)*(c*p-l*u)}add(e){const t=e.array;return this._array[0]+=t[0],this._array[1]+=t[1],this._array[2]+=t[2],this._array[3]+=t[3],this._array[4]+=t[4],this._array[5]+=t[5],this._array[6]+=t[6],this._array[7]+=t[7],this._array[8]+=t[8],this._array[9]+=t[9],this._array[10]+=t[10],this._array[11]+=t[11],this._array[12]+=t[12],this._array[13]+=t[13],this._array[14]+=t[14],this._array[15]+=t[15],this}subtract(e){const t=e.array;return this._array[0]-=t[0],this._array[1]-=t[1],this._array[2]-=t[2],this._array[3]-=t[3],this._array[4]-=t[4],this._array[5]-=t[5],this._array[6]-=t[6],this._array[7]-=t[7],this._array[8]-=t[8],this._array[9]-=t[9],this._array[10]-=t[10],this._array[11]-=t[11],this._array[12]-=t[12],this._array[13]-=t[13],this._array[14]-=t[14],this._array[15]-=t[15],this}multiply(e){const t=this._array[0],n=this._array[1],i=this._array[2],s=this._array[3],r=this._array[4],o=this._array[5],a=this._array[6],c=this._array[7],l=this._array[8],h=this._array[9],_=this._array[10],u=this._array[11],p=this._array[12],d=this._array[13],f=this._array[14],m=this._array[15],g=e.array;let v=g[0],y=g[1],x=g[2],S=g[3];return this._array[0]=v*t+y*r+x*l+S*p,this._array[1]=v*n+y*o+x*h+S*d,this._array[2]=v*i+y*a+x*_+S*f,this._array[3]=v*s+y*c+x*u+S*m,v=g[4],y=g[5],x=g[6],S=g[7],this._array[4]=v*t+y*r+x*l+S*p,this._array[5]=v*n+y*o+x*h+S*d,this._array[6]=v*i+y*a+x*_+S*f,this._array[7]=v*s+y*c+x*u+S*m,v=g[8],y=g[9],x=g[10],S=g[11],this._array[8]=v*t+y*r+x*l+S*p,this._array[9]=v*n+y*o+x*h+S*d,this._array[10]=v*i+y*a+x*_+S*f,this._array[11]=v*s+y*c+x*u+S*m,v=g[12],y=g[13],x=g[14],S=g[15],this._array[12]=v*t+y*r+x*l+S*p,this._array[13]=v*n+y*o+x*h+S*d,this._array[14]=v*i+y*a+x*_+S*f,this._array[15]=v*s+y*c+x*u+S*m,this}multiplyScalar(e){return this._array[0]*=e,this._array[1]*=e,this._array[2]*=e,this._array[3]*=e,this._array[4]*=e,this._array[5]*=e,this._array[6]*=e,this._array[7]*=e,this._array[8]*=e,this._array[9]*=e,this._array[10]*=e,this._array[11]*=e,this._array[12]*=e,this._array[13]*=e,this._array[14]*=e,this._array[15]*=e,this}translate(e){console.warn("function changed");const t=e.array;return this._array[12]+=t[0],this._array[13]+=t[1],this._array[14]+=t[2],this}scale(e){const t=e.array,n=t[0],i=t[1],s=t[2];return this._array[0]*=n,this._array[1]*=n,this._array[2]*=n,this._array[3]*=n,this._array[4]*=i,this._array[5]*=i,this._array[6]*=i,this._array[7]*=i,this._array[8]*=s,this._array[9]*=s,this._array[10]*=s,this._array[11]*=s,this}rotate(e,t){let n=t.x,i=t.y,s=t.z,r=Math.sqrt(n*n+i*i+s*s);if(Math.abs(r)<Mn)return null;r=1/r,n*=r,i*=r,s*=r;const o=Math.sin(e),a=Math.cos(e),c=1-a,l=this._array[0],h=this._array[1],_=this._array[2],u=this._array[3],p=this._array[4],d=this._array[5],f=this._array[6],m=this._array[7],g=this._array[8],v=this._array[9],y=this._array[10],x=this._array[11],S=n*n*c+a,C=i*n*c+s*o,T=s*n*c-i*o,b=n*i*c-s*o,E=i*i*c+a,A=s*i*c+n*o,P=n*s*c+i*o,w=i*s*c-n*o,I=s*s*c+a;return this._array[0]=l*S+p*C+g*T,this._array[1]=h*S+d*C+v*T,this._array[2]=_*S+f*C+y*T,this._array[3]=u*S+m*C+x*T,this._array[4]=l*b+p*E+g*A,this._array[5]=h*b+d*E+v*A,this._array[6]=_*b+f*E+y*A,this._array[7]=u*b+m*E+x*A,this._array[8]=l*P+p*w+g*I,this._array[9]=h*P+d*w+v*I,this._array[10]=_*P+f*w+y*I,this._array[11]=u*P+m*w+x*I,this}getTranslation(e){return e.x=this._array[12],e.y=this._array[13],e.z=this._array[14],e}getScale(e){const t=e.array,n=Ci.array,i=n[0]=this._array[0],s=n[1]=this._array[1],r=n[2]=this._array[2],o=n[3]=this._array[4],a=n[4]=this._array[5],c=n[5]=this._array[6],l=n[6]=this._array[8],h=n[7]=this._array[9],_=n[8]=this._array[10];return t[0]=Math.sqrt(i*i+s*s+r*r),t[1]=Math.sqrt(o*o+a*a+c*c),t[2]=Math.sqrt(l*l+h*h+_*_),li.determinant(Ci)<0&&(e.x*=-1),e}getRotation(e){const t=this._array[0]+this._array[5]+this._array[10];let n=0;return t>0?(n=2*Math.sqrt(t+1),e.w=.25*n,e.x=(this._array[6]-this._array[9])/n,e.y=(this._array[8]-this._array[2])/n,e.z=(this._array[1]-this._array[4])/n):this._array[0]>this._array[5]&&this._array[0]>this._array[10]?(n=2*Math.sqrt(1+this._array[0]-this._array[5]-this._array[10]),e.w=(this._array[6]-this._array[9])/n,e.x=.25*n,e.y=(this._array[1]+this._array[4])/n,e.z=(this._array[8]+this._array[2])/n):this._array[5]>this._array[10]?(n=2*Math.sqrt(1+this._array[5]-this._array[0]-this._array[10]),e.w=(this._array[8]-this._array[2])/n,e.x=(this._array[1]+this._array[4])/n,e.y=.25*n,e.z=(this._array[6]+this._array[9])/n):(n=2*Math.sqrt(1+this._array[10]-this._array[0]-this._array[5]),e.w=(this._array[1]-this._array[4])/n,e.x=(this._array[8]+this._array[2])/n,e.y=(this._array[6]+this._array[9])/n,e.z=.25*n),e}fromRTS(e,t,n){const i=e.x,s=e.y,r=e.z,o=e.w,a=i+i,c=s+s,l=r+r,h=i*a,_=i*c,u=i*l,p=s*c,d=s*l,f=r*l,m=o*a,g=o*c,v=o*l,y=n.x,x=n.y,S=n.z;return this._array[0]=(1-(p+f))*y,this._array[1]=(_+v)*y,this._array[2]=(u-g)*y,this._array[3]=0,this._array[4]=(_-v)*x,this._array[5]=(1-(h+f))*x,this._array[6]=(d+m)*x,this._array[7]=0,this._array[8]=(u+g)*S,this._array[9]=(d-m)*S,this._array[10]=(1-(h+p))*S,this._array[11]=0,this._array[12]=t.x,this._array[13]=t.y,this._array[14]=t.z,this._array[15]=1,this}fromQuat(e){const t=e.x,n=e.y,i=e.z,s=e.w,r=t+t,o=n+n,a=i+i,c=t*r,l=n*r,h=n*o,_=i*r,u=i*o,p=i*a,d=s*r,f=s*o,m=s*a;return this._array[0]=1-h-p,this._array[1]=l+m,this._array[2]=_-f,this._array[3]=0,this._array[4]=l-m,this._array[5]=1-c-p,this._array[6]=u+d,this._array[7]=0,this._array[8]=_+f,this._array[9]=u-d,this._array[10]=1-c-h,this._array[11]=0,this._array[12]=0,this._array[13]=0,this._array[14]=0,this._array[15]=1,this}}e("Mat4",xi),xi.IDENTITY=Object.freeze(new xi);const Si=new ri,Ci=new li;function Ti(e,t,n,i,s,r,o,a,c,l,h,_,u,p,d,f){return new xi(e,t,n,i,s,r,o,a,c,l,h,_,u,p,d,f)}Jn(xi.prototype,["m00","m01","m02","m03","m04","m05","m06","m07","m08","m09","m10","m11","m12","m13","m14","m15"]),Et.fastDefine("cc.Mat4",xi,{m00:1,m01:0,m02:0,m03:0,m04:0,m05:1,m06:0,m07:0,m08:0,m09:0,m10:1,m11:0,m12:0,m13:0,m14:0,m15:1}),i.Mat4=xi,i.mat4=Ti;class bi extends Be{static clone(e){return new bi(e.x,e.y)}static copy(e,t){return e.x=t.x,e.y=t.y,e}static set(e,t,n){return e.x=t,e.y=n,e}static add(e,t,n){return e.x=t.x+n.x,e.y=t.y+n.y,e}static subtract(e,t,n){return e.x=t.x-n.x,e.y=t.y-n.y,e}static multiply(e,t,n){return e.x=t.x*n.x,e.y=t.y*n.y,e}static divide(e,t,n){return e.x=t.x/n.x,e.y=t.y/n.y,e}static ceil(e,t){return e.x=Math.ceil(t.x),e.y=Math.ceil(t.y),e}static floor(e,t){return e.x=Math.floor(t.x),e.y=Math.floor(t.y),e}static min(e,t,n){return e.x=Math.min(t.x,n.x),e.y=Math.min(t.y,n.y),e}static max(e,t,n){return e.x=Math.max(t.x,n.x),e.y=Math.max(t.y,n.y),e}static round(e,t){return e.x=Math.round(t.x),e.y=Math.round(t.y),e}static multiplyScalar(e,t,n){return e.x=t.x*n,e.y=t.y*n,e}static scaleAndAdd(e,t,n,i){return e.x=t.x+n.x*i,e.y=t.y+n.y*i,e}static distance(e,t){const n=t.x-e.x,i=t.y-e.y;return Math.sqrt(n*n+i*i)}static squaredDistance(e,t){const n=t.x-e.x,i=t.y-e.y;return n*n+i*i}static len(e){const t=e.x,n=e.y;return Math.sqrt(t*t+n*n)}static lengthSqr(e){const t=e.x,n=e.y;return t*t+n*n}static negate(e,t){return e.x=-t.x,e.y=-t.y,e}static inverse(e,t){return e.x=1/t.x,e.y=1/t.y,e}static inverseSafe(e,t){const n=t.x,i=t.y;return Math.abs(n)<Mn?e.x=0:e.x=1/n,Math.abs(i)<Mn?e.y=0:e.y=1/i,e}static normalize(e,t){const n=t.x,i=t.y;let s=n*n+i*i;return s>0&&(s=1/Math.sqrt(s),e.x=n*s,e.y=i*s),e}static dot(e,t){return e.x*t.x+e.y*t.y}static cross(e,t,n){return e instanceof ri?(e.x=e.y=0,e.z=t.x*n.y-t.y*n.x,e):e.x*t.y-e.y*t.x}static lerp(e,t,n,i){const s=t.x,r=t.y;return e.x=s+i*(n.x-s),e.y=r+i*(n.y-r),e}static random(e,t){t=t||1;const n=2*Hn()*Math.PI;return e.x=Math.cos(n)*t,e.y=Math.sin(n)*t,e}static transformMat3(e,t,n){const i=t.x,s=t.y;return e.x=n.m00*i+n.m03*s+n.m06,e.y=n.m01*i+n.m04*s+n.m07,e}static transformMat4(e,t,n){const i=t.x,s=t.y;return e.x=n.m00*i+n.m04*s+n.m12,e.y=n.m01*i+n.m05*s+n.m13,e}static str(e){return`Vec2(${e.x}, ${e.y})`}static toArray(e,t,n=0){return e[n+0]=t.x,e[n+1]=t.y,e}static fromArray(e,t,n=0){return e.x=t[n+0],e.y=t[n+1],e}static strictEquals(e,t){return e.x===t.x&&e.y===t.y}static equals(e,t,n=Mn){return Math.abs(e.x-t.x)<=n*Math.max(1,Math.abs(e.x),Math.abs(t.x))&&Math.abs(e.y-t.y)<=n*Math.max(1,Math.abs(e.y),Math.abs(t.y))}static angle(e,t){bi.normalize(Ei,e),bi.normalize(Ai,t);const n=bi.dot(Ei,Ai);return n>1?0:n<-1?Math.PI:Math.acos(n)}constructor(e,t){super(),e&&"object"==typeof e?(this.x=e.x,this.y=e.y):(this.x=e||0,this.y=t||0)}clone(){return new bi(this.x,this.y)}set(e,t){return e&&"object"==typeof e?(this.x=e.x,this.y=e.y):(this.x=e||0,this.y=t||0),this}equals(e,t=Mn){return Math.abs(this.x-e.x)<=t*Math.max(1,Math.abs(this.x),Math.abs(e.x))&&Math.abs(this.y-e.y)<=t*Math.max(1,Math.abs(this.y),Math.abs(e.y))}equals2f(e,t,n=Mn){return Math.abs(this.x-e)<=n*Math.max(1,Math.abs(this.x),Math.abs(e))&&Math.abs(this.y-t)<=n*Math.max(1,Math.abs(this.y),Math.abs(t))}strictEquals(e){return e&&this.x===e.x&&this.y===e.y}strictEquals2f(e,t){return this.x===e&&this.y===t}toString(){return`(${this.x.toFixed(2)}, ${this.y.toFixed(2)})`}lerp(e,t){const n=this.x,i=this.y;return this.x=n+t*(e.x-n),this.y=i+t*(e.y-i),this}clampf(e,t){return this.x=zn(this.x,e.x,t.x),this.y=zn(this.y,e.y,t.y),this}add(e){return this.x+=e.x,this.y+=e.y,this}add2f(e,t){return this.x+=e,this.y+=t,this}subtract(e){return this.x-=e.x,this.y-=e.y,this}subtract2f(e,t){return this.x-=e,this.y-=t,this}multiplyScalar(e){return"object"==typeof e&&console.warn("should use Vec2.multiply for vector * vector operation"),this.x*=e,this.y*=e,this}multiply(e){return"object"!=typeof e&&console.warn("should use Vec2.scale for vector * scalar operation"),this.x*=e.x,this.y*=e.y,this}multiply2f(e,t){return this.x*=e,this.y*=t,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divide2f(e,t){return this.x/=e,this.y/=t,this}negative(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}lengthSqr(){return this.x*this.x+this.y*this.y}normalize(){const e=this.x,t=this.y;let n=e*e+t*t;return n>0&&(n=1/Math.sqrt(n),this.x*=n,this.y*=n),this}angle(e){const t=this.lengthSqr(),n=e.lengthSqr();if(0===t||0===n)return console.warn("Can't get angle between zero vector"),0;let i=this.dot(e)/Math.sqrt(t*n);return i=zn(i,-1,1),Math.acos(i)}signAngle(e){const t=this.angle(e);return this.cross(e)<0?-t:t}rotate(e){const t=this.x,n=this.y,i=Math.sin(e),s=Math.cos(e);return this.x=s*t-i*n,this.y=i*t+s*n,this}project(e){const t=this.dot(e)/e.dot(e);return this.x=e.x*t,this.y=e.y*t,this}transformMat4(e){const t=this.x,n=this.y;return this.x=e.m00*t+e.m04*n+e.m12,this.y=e.m01*t+e.m05*n+e.m13,this}}e("Vec2",bi),bi.ZERO=Object.freeze(new bi(0,0)),bi.ONE=Object.freeze(new bi(1,1)),bi.NEG_ONE=Object.freeze(new bi(-1,-1)),bi.UNIT_X=Object.freeze(new bi(1,0)),bi.UNIT_Y=Object.freeze(new bi(0,1));const Ei=new bi,Ai=new bi;function Pi(e,t){return new bi(e,t)}Et.fastDefine("cc.Vec2",bi,{x:0,y:0}),i.Vec2=bi,i.v2=Pi;class wi extends Be{static clone(e){return new wi(e.x,e.y,e.z,e.w)}static copy(e,t){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}static set(e,t,n,i,s){return e.x=t,e.y=n,e.z=i,e.w=s,e}static add(e,t,n){return e.x=t.x+n.x,e.y=t.y+n.y,e.z=t.z+n.z,e.w=t.w+n.w,e}static subtract(e,t,n){return e.x=t.x-n.x,e.y=t.y-n.y,e.z=t.z-n.z,e.w=t.w-n.w,e}static multiply(e,t,n){return e.x=t.x*n.x,e.y=t.y*n.y,e.z=t.z*n.z,e.w=t.w*n.w,e}static divide(e,t,n){return e.x=t.x/n.x,e.y=t.y/n.y,e.z=t.z/n.z,e.w=t.w/n.w,e}static ceil(e,t){return e.x=Math.ceil(t.x),e.y=Math.ceil(t.y),e.z=Math.ceil(t.z),e.w=Math.ceil(t.w),e}static floor(e,t){return e.x=Math.floor(t.x),e.y=Math.floor(t.y),e.z=Math.floor(t.z),e.w=Math.floor(t.w),e}static min(e,t,n){return e.x=Math.min(t.x,n.x),e.y=Math.min(t.y,n.y),e.z=Math.min(t.z,n.z),e.w=Math.min(t.w,n.w),e}static max(e,t,n){return e.x=Math.max(t.x,n.x),e.y=Math.max(t.y,n.y),e.z=Math.max(t.z,n.z),e.w=Math.max(t.w,n.w),e}static round(e,t){return e.x=Math.round(t.x),e.y=Math.round(t.y),e.z=Math.round(t.z),e.w=Math.round(t.w),e}static multiplyScalar(e,t,n){return e.x=t.x*n,e.y=t.y*n,e.z=t.z*n,e.w=t.w*n,e}static scaleAndAdd(e,t,n,i){return e.x=t.x+n.x*i,e.y=t.y+n.y*i,e.z=t.z+n.z*i,e.w=t.w+n.w*i,e}static distance(e,t){const n=t.x-e.x,i=t.y-e.y,s=t.z-e.z,r=t.w-e.w;return Math.sqrt(n*n+i*i+s*s+r*r)}static squaredDistance(e,t){const n=t.x-e.x,i=t.y-e.y,s=t.z-e.z,r=t.w-e.w;return n*n+i*i+s*s+r*r}static len(e){const t=e.x,n=e.y,i=e.z,s=e.w;return Math.sqrt(t*t+n*n+i*i+s*s)}static lengthSqr(e){const t=e.x,n=e.y,i=e.z,s=e.w;return t*t+n*n+i*i+s*s}static negate(e,t){return e.x=-t.x,e.y=-t.y,e.z=-t.z,e.w=-t.w,e}static inverse(e,t){return e.x=1/t.x,e.y=1/t.y,e.z=1/t.z,e.w=1/t.w,e}static inverseSafe(e,t){const n=t.x,i=t.y,s=t.z,r=t.w;return Math.abs(n)<Mn?e.x=0:e.x=1/n,Math.abs(i)<Mn?e.y=0:e.y=1/i,Math.abs(s)<Mn?e.z=0:e.z=1/s,Math.abs(r)<Mn?e.w=0:e.w=1/r,e}static normalize(e,t){const n=t.x,i=t.y,s=t.z,r=t.w;let o=n*n+i*i+s*s+r*r;return o>0&&(o=1/Math.sqrt(o),e.x=n*o,e.y=i*o,e.z=s*o,e.w=r*o),e}static dot(e,t){return e.x*t.x+e.y*t.y+e.z*t.z+e.w*t.w}static lerp(e,t,n,i){return e.x=t.x+i*(n.x-t.x),e.y=t.y+i*(n.y-t.y),e.z=t.z+i*(n.z-t.z),e.w=t.w+i*(n.w-t.w),e}static random(e,t){t=t||1;const n=2*Hn()*Math.PI,i=2*Hn()-1,s=Math.sqrt(1-i*i);return e.x=s*Math.cos(n)*t,e.y=s*Math.sin(n)*t,e.z=i*t,e.w=0,e}static transformMat4(e,t,n){const i=t.x,s=t.y,r=t.z,o=t.w;return e.x=n.m00*i+n.m04*s+n.m08*r+n.m12*o,e.y=n.m01*i+n.m05*s+n.m09*r+n.m13*o,e.z=n.m02*i+n.m06*s+n.m10*r+n.m14*o,e.w=n.m03*i+n.m07*s+n.m11*r+n.m15*o,e}static transformAffine(e,t,n){const i=t.x,s=t.y,r=t.z,o=t.w;return e.x=n.m00*i+n.m01*s+n.m02*r+n.m03*o,e.y=n.m04*i+n.m05*s+n.m06*r+n.m07*o,e.x=n.m08*i+n.m09*s+n.m10*r+n.m11*o,e.w=t.w,e}static transformQuat(e,t,n){const{x:i,y:s,z:r}=t,o=n.x,a=n.y,c=n.z,l=n.w,h=l*i+a*r-c*s,_=l*s+c*i-o*r,u=l*r+o*s-a*i,p=-o*i-a*s-c*r;return e.x=h*l+p*-o+_*-c-u*-a,e.y=_*l+p*-a+u*-o-h*-c,e.z=u*l+p*-c+h*-a-_*-o,e.w=t.w,e}static toArray(e,t,n=0){return e[n+0]=t.x,e[n+1]=t.y,e[n+2]=t.z,e[n+3]=t.w,e}static fromArray(e,t,n=0){return e.x=t[n+0],e.y=t[n+1],e.z=t[n+2],e.w=t[n+3],e}static strictEquals(e,t){return e.x===t.x&&e.y===t.y&&e.z===t.z&&e.w===t.w}static equals(e,t,n=Mn){return Math.abs(e.x-t.x)<=n*Math.max(1,Math.abs(e.x),Math.abs(t.x))&&Math.abs(e.y-t.y)<=n*Math.max(1,Math.abs(e.y),Math.abs(t.y))&&Math.abs(e.z-t.z)<=n*Math.max(1,Math.abs(e.z),Math.abs(t.z))&&Math.abs(e.w-t.w)<=n*Math.max(1,Math.abs(e.w),Math.abs(t.w))}constructor(e,t,n,i){super(),e&&"object"==typeof e?(this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w):(this.x=e||0,this.y=t||0,this.z=n||0,this.w=i||0)}clone(){return new wi(this.x,this.y,this.z,this.w)}set(e,t,n,i){return e&&"object"==typeof e?(this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w):(this.x=e||0,this.y=t||0,this.z=n||0,this.w=i||0),this}equals(e,t=Mn){return Math.abs(this.x-e.x)<=t*Math.max(1,Math.abs(this.x),Math.abs(e.x))&&Math.abs(this.y-e.y)<=t*Math.max(1,Math.abs(this.y),Math.abs(e.y))&&Math.abs(this.z-e.z)<=t*Math.max(1,Math.abs(this.z),Math.abs(e.z))&&Math.abs(this.w-e.w)<=t*Math.max(1,Math.abs(this.w),Math.abs(e.w))}equals4f(e,t,n,i,s=Mn){return Math.abs(this.x-e)<=s*Math.max(1,Math.abs(this.x),Math.abs(e))&&Math.abs(this.y-t)<=s*Math.max(1,Math.abs(this.y),Math.abs(t))&&Math.abs(this.z-n)<=s*Math.max(1,Math.abs(this.z),Math.abs(n))&&Math.abs(this.w-i)<=s*Math.max(1,Math.abs(this.w),Math.abs(i))}strictEquals(e){return this.x===e.x&&this.y===e.y&&this.z===e.z&&this.w===e.w}strictEquals4f(e,t,n,i){return this.x===e&&this.y===t&&this.z===n&&this.w===i}lerp(e,t){const n=this.x,i=this.y,s=this.z,r=this.w;return this.x=n+t*(e.x-n),this.y=i+t*(e.y-i),this.z=s+t*(e.z-s),this.w=r+t*(e.w-r),this}toString(){return`(${this.x.toFixed(2)}, ${this.y.toFixed(2)}, ${this.z.toFixed(2)}, ${this.w.toFixed(2)})`}clampf(e,t){return this.x=zn(this.x,e.x,t.x),this.y=zn(this.y,e.y,t.y),this.z=zn(this.z,e.z,t.z),this.w=zn(this.w,e.w,t.w),this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}add4f(e,t,n,i){return this.x+=e,this.y+=t,this.z+=n,this.w+=i,this}subtract(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subtract4f(e,t,n,i){return this.x-=e,this.y-=t,this.z-=n,this.w-=i,this}multiplyScalar(e){return"object"==typeof e&&console.warn("should use Vec4.multiply for vector * vector operation"),this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}multiply(e){return"object"!=typeof e&&console.warn("should use Vec4.scale for vector * scalar operation"),this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiply4f(e,t,n,i){return this.x*=e,this.y*=t,this.z*=n,this.w*=i,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divide4f(e,t,n,i){return this.x/=e,this.y/=t,this.z/=n,this.w/=i,this}negative(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}cross(e){const{x:t,y:n,z:i}=this,{x:s,y:r,z:o}=e;return this.x=n*o-i*r,this.y=i*s-t*o,this.z=t*r-n*s,this}length(){const e=this.x,t=this.y,n=this.z,i=this.w;return Math.sqrt(e*e+t*t+n*n+i*i)}lengthSqr(){const e=this.x,t=this.y,n=this.z,i=this.w;return e*e+t*t+n*n+i*i}normalize(){const e=this.x,t=this.y,n=this.z,i=this.w;let s=e*e+t*t+n*n+i*i;return s>0&&(s=1/Math.sqrt(s),this.x=e*s,this.y=t*s,this.z=n*s,this.w=i*s),this}transformMat4(e){const t=this.x,n=this.y,i=this.z,s=this.w;return this.x=e.m00*t+e.m04*n+e.m08*i+e.m12*s,this.y=e.m01*t+e.m05*n+e.m09*i+e.m13*s,this.z=e.m02*t+e.m06*n+e.m10*i+e.m14*s,this.w=e.m03*t+e.m07*n+e.m11*i+e.m15*s,this}}function Ii(e,t,n,i){return new wi(e,t,n,i)}e("Vec4",wi),wi.ZERO=Object.freeze(new wi(0,0,0,0)),wi.ONE=Object.freeze(new wi(1,1,1,1)),wi.NEG_ONE=Object.freeze(new wi(-1,-1,-1,-1)),Et.fastDefine("cc.Vec4",wi,{x:0,y:0,z:0,w:0}),i.Vec4=wi,i.v4=Ii,Cn(bi,"Vec2",[{name:"sub",newName:"subtract",target:bi,targetName:"Vec2"},{name:"mul",newName:"multiply",target:bi,targetName:"Vec2"},{name:"div",newName:"divide",target:bi,targetName:"Vec2"},{name:"dist",newName:"distance",target:bi,targetName:"Vec2"},{name:"sqrDist",newName:"squaredDistance",target:bi,targetName:"Vec2"},{name:"mag",newName:"len",target:bi,targetName:"Vec2"},{name:"sqrMag",newName:"lengthSqr",target:bi,targetName:"Vec2"},{name:"scale",newName:"multiplyScalar",target:bi,targetName:"Vec2"},{name:"exactEquals",newName:"strictEquals",target:bi,targetName:"Vec2"}]),Cn(bi.prototype,"Vec2",[{name:"mag",newName:"length",target:bi.prototype,targetName:"Vec2"},{name:"magSqr",newName:"lengthSqr",target:bi.prototype,targetName:"Vec2"},{name:"scale",newName:"multiplyScalar",target:bi.prototype,targetName:"Vec2"},{name:"exactEquals",newName:"strictEquals",target:bi.prototype,targetName:"Vec2"}]),Cn(ri,"Vec3",[{name:"sub",newName:"subtract",target:ri,targetName:"Vec3"},{name:"mul",newName:"multiply",target:ri,targetName:"Vec3"},{name:"div",newName:"divide",target:ri,targetName:"Vec3"},{name:"dist",newName:"distance",target:ri,targetName:"Vec3"},{name:"sqrDist",newName:"squaredDistance",target:ri,targetName:"Vec3"},{name:"mag",newName:"len",target:ri,targetName:"Vec3"},{name:"sqrMag",newName:"lengthSqr",target:ri,targetName:"Vec3"},{name:"scale",newName:"multiplyScalar",target:ri,targetName:"Vec3"},{name:"exactEquals",newName:"strictEquals",target:ri,targetName:"Vec3"}]),Cn(ri.prototype,"Vec3",[{name:"mag",newName:"length",target:ri.prototype,targetName:"Vec3"},{name:"magSqr",newName:"lengthSqr",target:ri.prototype,targetName:"Vec3"},{name:"scale",newName:"multiplyScalar",target:ri.prototype,targetName:"Vec3"},{name:"exactEquals",newName:"strictEquals",target:ri.prototype,targetName:"Vec3"}]),Cn(wi,"Vec4",[{name:"sub",newName:"subtract",target:wi,targetName:"Vec4"},{name:"mul",newName:"multiply",target:wi,targetName:"Vec4"},{name:"div",newName:"divide",target:wi,targetName:"Vec4"},{name:"dist",newName:"distance",target:wi,targetName:"Vec4"},{name:"sqrDist",newName:"squaredDistance",target:wi,targetName:"Vec4"},{name:"mag",newName:"len",target:wi,targetName:"Vec4"},{name:"sqrMag",newName:"lengthSqr",target:wi,targetName:"Vec4"},{name:"scale",newName:"multiplyScalar",target:wi,targetName:"Vec4"},{name:"exactEquals",newName:"strictEquals",target:wi,targetName:"Vec4"}]),Cn(wi.prototype,"Vec4",[{name:"mag",newName:"length",target:wi.prototype,targetName:"Vec4"},{name:"magSqr",newName:"lengthSqr",target:wi.prototype,targetName:"Vec4"},{name:"scale",newName:"multiplyScalar",target:wi.prototype,targetName:"Vec4"},{name:"exactEquals",newName:"strictEquals",target:wi.prototype,targetName:"Vec4"}]),Cn(ui,"Quat",[{name:"mag",newName:"len",target:ui,targetName:"Quat"},{name:"mul",newName:"multiply",target:ui,targetName:"Quat"},{name:"sqrMag",newName:"lengthSqr",target:ui,targetName:"Quat"},{name:"scale",newName:"multiplyScalar",target:ui,targetName:"Quat"},{name:"exactEquals",newName:"strictEquals",target:ui,targetName:"Quat"}]),Cn(ui.prototype,"Quat",[{name:"scale",newName:"multiplyScalar",target:ui.prototype,targetName:"Quat"},{name:"exactEquals",newName:"strictEquals",target:ui.prototype,targetName:"Quat"}]),Cn(ti,"Color",[{name:"sub",newName:"subtract",target:ti,targetName:"Color"},{name:"mul",newName:"multiply",target:ti,targetName:"Color"},{name:"div",newName:"divide",target:ti,targetName:"Color"},{name:"exactEquals",newName:"strictEquals",target:ti,targetName:"Color"},{name:"fromHex",newName:"fromHEX",customFunction(...e){const t=e[1].toString(16);return i.Color.fromHEX(e[0],t)}}]),Cn(li,"Mat3",[{name:"sub",newName:"subtract",target:li,targetName:"Mat3"},{name:"mul",newName:"multiply",target:li,targetName:"Mat3"},{name:"exactEquals",newName:"strictEquals",target:li,targetName:"Mat3"},{name:"transfrom",newName:"transform",target:li,targetName:"Mat3"}]),Cn(li.prototype,"Mat3",[{name:"sub",newName:"subtract",target:li.prototype,targetName:"Mat3"},{name:"mul",newName:"multiply",target:li.prototype,targetName:"Mat3"},{name:"mulScalar",newName:"multiplyScalar",target:li.prototype,targetName:"Mat3"},{name:"exactEquals",newName:"strictEquals",target:li.prototype,targetName:"Mat3"}]),Cn(xi,"Mat4",[{name:"sub",newName:"subtract",target:xi,targetName:"Mat4"},{name:"mul",newName:"multiply",target:xi,targetName:"Mat4"},{name:"exactEquals",newName:"strictEquals",target:xi,targetName:"Mat4"}]),Cn(xi.prototype,"Mat4",[{name:"sub",newName:"subtract",target:xi.prototype,targetName:"Mat4"},{name:"mul",newName:"multiply",target:xi.prototype,targetName:"Mat4"},{name:"mulScalar",newName:"multiplyScalar",target:xi.prototype,targetName:"Mat4"},{name:"exactEquals",newName:"strictEquals",target:xi.prototype,targetName:"Mat4"}]);class Ri{static identity(){return new Ri}static clone(e){return new Ri(e.a,e.b,e.c,e.d,e.tx,e.ty)}static concat(e,t,n){const i=t.a,s=t.b,r=t.c,o=t.d,a=t.tx,c=t.ty;e.a=i*n.a+s*n.c,e.b=i*n.b+s*n.d,e.c=r*n.a+o*n.c,e.d=r*n.b+o*n.d,e.tx=a*n.a+c*n.c+n.tx,e.ty=a*n.b+c*n.d+n.ty}static invert(e,t){const n=1/(t.a*t.d-t.b*t.c);e.a=n*t.d,e.b=-n*t.b,e.c=-n*t.c,e.d=n*t.a,e.tx=n*(t.c*t.ty-t.d*t.tx),e.ty=n*(t.b*t.tx-t.a*t.ty)}static fromMat4(e,t){e.a=t.m00,e.b=t.m01,e.c=t.m04,e.d=t.m05,e.tx=t.m12,e.ty=t.m13}static transformVec2(e,t,n,i){let s,r;void 0===i?(i=n,s=t.x,r=t.y):(s=t,r=n),e.x=i.a*s+i.c*r+i.tx,e.y=i.b*s+i.d*r+i.ty}static transformSize(e,t,n){e.width=n.a*t.width+n.c*t.height,e.height=n.b*t.width+n.d*t.height}static transformRect(e,t,n){const i=t.x+t.width,s=t.y+t.height,r=n.a*t.x+n.c*t.y+n.tx,o=n.b*t.x+n.d*t.y+n.ty,a=n.a*i+n.c*t.y+n.tx,c=n.b*i+n.d*t.y+n.ty,l=n.a*t.x+n.c*s+n.tx,h=n.b*t.x+n.d*s+n.ty,_=n.a*i+n.c*s+n.tx,u=n.b*i+n.d*s+n.ty,p=Math.min(r,a,l,_),d=Math.max(r,a,l,_),f=Math.min(o,c,h,u),m=Math.max(o,c,h,u);e.x=p,e.y=f,e.width=d-p,e.height=m-f}static transformObb(e,t,n,i,s,r){const o=r.a*s.x+r.c*s.y+r.tx,a=r.b*s.x+r.d*s.y+r.ty,c=r.a*s.width,l=r.b*s.width,h=r.c*s.height,_=r.d*s.height;t.x=o,t.y=a,n.x=c+o,n.y=l+a,e.x=h+o,e.y=_+a,i.x=c+h+o,i.y=l+_+a}constructor(e=1,t=0,n=0,i=1,s=0,r=0){this.a=e,this.b=t,this.c=n,this.d=i,this.tx=s,this.ty=r}}e("AffineTransform",Ri),i.AffineTransform=Ri;class Di extends Be{static lerp(e,t,n,i){return e.width=t.width+(n.width-t.width)*i,e.height=t.height+(n.height-t.height)*i,e}set x(e){this.width=e}get x(){return this.width}set y(e){this.height=e}get y(){return this.height}constructor(e,t){super(),e&&"object"==typeof e?(this.width=e.width,this.height=e.height):(this.width=e||0,this.height=t||0)}clone(){return new Di(this.width,this.height)}set(e,t){return e&&"object"==typeof e?(this.height=e.height,this.width=e.width):(this.width=e||0,this.height=t||0),this}equals(e){return this.width===e.width&&this.height===e.height}lerp(e,t){return this.width+=(e.width-this.width)*t,this.height+=(e.height-this.height)*t,this}toString(){return`(${this.width.toFixed(2)}, ${this.height.toFixed(2)})`}}function Oi(e=0,t=0){return new Di(e,t)}e("Size",Di),Di.ZERO=Object.freeze(new Di(0,0)),Di.ONE=Object.freeze(new Di(1,1)),Et.fastDefine("cc.Size",Di,{width:0,height:0}),i.size=Oi,i.Size=Di;class Mi extends Be{static fromMinMax(e,t,n){const i=Math.min(t.x,n.x),s=Math.min(t.y,n.y),r=Math.max(t.x,n.x),o=Math.max(t.y,n.y);return e.x=i,e.y=s,e.width=r-i,e.height=o-s,e}static lerp(e,t,n,i){const s=t.x,r=t.y,o=t.width,a=t.height;return e.x=s+(n.x-s)*i,e.y=r+(n.y-r)*i,e.width=o+(n.width-o)*i,e.height=a+(n.height-a)*i,e}static intersection(e,t,n){const i=t.x,s=t.y,r=t.x+t.width,o=t.y+t.height,a=n.x,c=n.y,l=n.x+n.width,h=n.y+n.height;return e.x=Math.max(i,a),e.y=Math.max(s,c),e.width=Math.min(r,l)-e.x,e.height=Math.min(o,h)-e.y,e}static union(e,t,n){const i=t.x,s=t.y,r=t.width,o=t.height,a=n.x,c=n.y,l=n.width,h=n.height;return e.x=Math.min(i,a),e.y=Math.min(s,c),e.width=Math.max(i+r,a+l)-e.x,e.height=Math.max(s+o,c+h)-e.y,e}get xMin(){return this.x}set xMin(e){this.width+=this.x-e,this.x=e}get yMin(){return this.y}set yMin(e){this.height+=this.y-e,this.y=e}get xMax(){return this.x+this.width}set xMax(e){this.width=e-this.x}get yMax(){return this.y+this.height}set yMax(e){this.height=e-this.y}get center(){return new bi(this.x+.5*this.width,this.y+.5*this.height)}set center(e){this.x=e.x-.5*this.width,this.y=e.y-.5*this.height}get origin(){return new bi(this.x,this.y)}set origin(e){this.x=e.x,this.y=e.y}get size(){return new Di(this.width,this.height)}set size(e){this.width=e.width,this.height=e.height}set z(e){this.width=e}get z(){return this.width}set w(e){this.height=e}get w(){return this.height}constructor(e,t,n,i){super(),e&&"object"==typeof e?(this.y=e.y,this.width=e.width,this.height=e.height,this.x=e.x):(this.x=e||0,this.y=t||0,this.width=n||0,this.height=i||0)}clone(){return new Mi(this.x,this.y,this.width,this.height)}set(e,t,n,i){return e&&"object"==typeof e?(this.y=e.y,this.width=e.width,this.height=e.height,this.x=e.x):(this.x=e||0,this.y=t||0,this.width=n||0,this.height=i||0),this}equals(e){return this.x===e.x&&this.y===e.y&&this.width===e.width&&this.height===e.height}lerp(e,t){const n=this.x,i=this.y,s=this.width,r=this.height;return this.x=n+(e.x-n)*t,this.y=i+(e.y-i)*t,this.width=s+(e.width-s)*t,this.height=r+(e.height-r)*t,this}toString(){return`(${this.x.toFixed(2)}, ${this.y.toFixed(2)}, ${this.width.toFixed(2)}, ${this.height.toFixed(2)})`}intersects(e){const t=this.x+this.width,n=this.y+this.height,i=e.x+e.width,s=e.y+e.height;return!(t<e.x||i<this.x||n<e.y||s<this.y)}contains(e){return this.x<=e.x&&this.x+this.width>=e.x&&this.y<=e.y&&this.y+this.height>=e.y}containsRect(e){return this.x<=e.x&&this.x+this.width>=e.x+e.width&&this.y<=e.y&&this.y+this.height>=e.y+e.height}transformMat4(e){const t=this.x,n=this.y,i=t+this.width,s=n+this.height,r=e.m00*t+e.m04*n+e.m12,o=e.m01*t+e.m05*n+e.m13,a=e.m00*i+e.m04*n+e.m12,c=e.m01*i+e.m05*n+e.m13,l=e.m00*t+e.m04*s+e.m12,h=e.m01*t+e.m05*s+e.m13,_=e.m00*i+e.m04*s+e.m12,u=e.m01*i+e.m05*s+e.m13,p=Math.min(r,a,l,_),d=Math.max(r,a,l,_),f=Math.min(o,c,h,u),m=Math.max(o,c,h,u);return this.x=p,this.y=f,this.width=d-p,this.height=m-f,this}transformMat4ToPoints(e,t,n,i,s){const r=this.x,o=this.y,a=r+this.width,c=o+this.height;t.x=e.m00*r+e.m04*o+e.m12,t.y=e.m01*r+e.m05*o+e.m13,s.x=e.m00*a+e.m04*o+e.m12,s.y=e.m01*a+e.m05*o+e.m13,n.x=e.m00*r+e.m04*c+e.m12,n.y=e.m01*r+e.m05*c+e.m13,i.x=e.m00*a+e.m04*c+e.m12,i.y=e.m01*a+e.m05*c+e.m13}}function Ni(e=0,t=0,n=0,i=0){return new Mi(e,t,n,i)}e("Rect",Mi),Et.fastDefine("cc.Rect",Mi,{x:0,y:0,width:0,height:0}),i.Rect=Mi,i.rect=Ni;var Li=Object.freeze({__proto__:null,bits:Sn,Vec2:bi,v2:Pi,Vec3:ri,v3:ci,Vec4:wi,v4:Ii,Quat:ui,quat:vi,Mat3:li,Mat4:xi,mat4:Ti,AffineTransform:Ri,Size:Di,size:Oi,Rect:Mi,rect:Ni,Color:ti,color:ni,EPSILON:Mn,equals:Nn,approx:Ln,clamp:zn,clamp01:Fn,lerp:Bn,toRadian:Un,toDegree:Gn,random:Hn,randomRange:kn,randomRangeInt:Vn,pseudoRandom:jn,pseudoRandomRange:Wn,pseudoRandomRangeInt:qn,nextPow2:Xn,repeat:Yn,pingPong:Kn,inverseLerp:$n,absMaxComponent:Zn,absMax:Qn,enumerableProps:Jn,MATH_FLOAT_ARRAY:ii,MathBase:si});e("math",Li);const zi=ns.Node,Fi=ns.Scene,Bi=ns.Model,Ui=ns.SkinningModel,Gi=ns.BakedSkinningModel,Hi=ns.light,ki=ns.DirectionalLight,Vi=ns.SpotLight,ji=ns.SphereLight,Wi=ns.Skybox,qi=ns.Fog,Xi=ns.Ambient,Yi=ns.Shadow,Ki=ns.OctreeInfo,$i=ns.Camera,Zi=ns.RenderWindow,Qi=ns.RenderScene,Ji=ns.DrawBatch2D,es=ns.Pass,ts=ns.SubModel,is=ns.Root,ss=ns.PipelineSharedSceneData,rs=ns.AABB;class os{set enabled(e){this._enabled=e,this._nativeObj.enabled=e}get enabled(){return this._enabled}get skyColor(){return i.director.root.pipeline.pipelineSceneData.isHDR?this._skyColorHDR:this._skyColorLDR}set skyColor(e){const t=i.director.root.pipeline.pipelineSceneData.isHDR;t?this._skyColorHDR.set(e):this._skyColorLDR.set(e),this._nativeObj.skyColor=t?this._skyColorHDR:this._skyColorLDR}get skyIllum(){return i.director.root.pipeline.pipelineSceneData.isHDR?this._skyIllumHDR:this._skyIllumLDR}set skyIllum(e){const t=i.director.root.pipeline.pipelineSceneData.isHDR;t?this._skyIllumHDR=e:this._skyIllumLDR=e,this._nativeObj.skyIllum=t?this._skyIllumHDR:this._skyIllumLDR}get groundAlbedo(){return i.director.root.pipeline.pipelineSceneData.isHDR?this._groundAlbedoHDR:this._groundAlbedoLDR}set groundAlbedo(e){const t=i.director.root.pipeline.pipelineSceneData.isHDR;t?this._groundAlbedoHDR.set(e):this._groundAlbedoLDR.set(e),this._nativeObj.groundAlbedo=t?this._groundAlbedoHDR:this._groundAlbedoLDR}get mipmapCount(){return this._mipmapCount}set mipmapCount(e){this._mipmapCount=e}get native(){return this._nativeObj}constructor(){this._groundAlbedoHDR=new wi(.2,.2,.2,1),this._skyColorHDR=new wi(.2,.5,.8,1),this._skyIllumHDR=0,this._groundAlbedoLDR=new wi(.2,.2,.2,1),this._skyColorLDR=new wi(.2,.5,.8,1),this._skyIllumLDR=0,this._mipmapCount=1,this._enabled=!1,this._nativeObj=new Xi}initialize(e){this._skyColorHDR=e.skyColorHDR,this._groundAlbedoHDR.set(e.groundAlbedoHDR),this._skyIllumHDR=e.skyIllumHDR,this._skyColorLDR=e.skyColorLDR,this._groundAlbedoLDR.set(e.groundAlbedoLDR),this._skyIllumLDR=e.skyIllumLDR,this._nativeObj.skyIllum=this.skyIllum,this._nativeObj.skyColor=this.skyColor,this._nativeObj.groundAlbedo=this.groundAlbedo}_destroy(){this._nativeObj=null}destroy(){this._destroy()}}os.SUN_ILLUM=65e3,os.SKY_ILLUM=2e4,i.Ambient=os;class as{set enabled(e){this._enabled=e,this._nativeObj.enabled=e}get enabled(){return this._enabled}get minPos(){return this._minPos}set minPos(e){this._minPos=e,this._nativeObj.minPos=e}get maxPos(){return this._maxPos}set maxPos(e){this._maxPos=e,this._nativeObj.maxPos=e}get depth(){return this._depth}set depth(e){this._depth=e,this._nativeObj.depth=e}get native(){return this._nativeObj}constructor(){this._enabled=!1,this._minPos=new ri(0,0,0),this._maxPos=new ri(0,0,0),this._depth=0,this._nativeObj=new Ki}initialize(e){this._enabled=e.enabled,this._minPos=e.minPos,this._maxPos=e.maxPos,this._depth=e.depth,this._nativeObj.enabled=this._enabled,this._nativeObj.minPos=this._minPos,this._nativeObj.maxPos=this._maxPos,this._nativeObj.depth=this._depth}_destroy(){this._nativeObj=null}destroy(){this._destroy()}}const cs=new ri,ls=new ri,hs=new ri,_s=new ri,us=new ri,ps=new ri,ds=new Array(3),fs=new Array(3);function ms(e,t){return ri.dot(t.n,e)-t.d}function gs(e,t,n){return ri.copy(e,t),ri.subtract(us,n.center,n.halfExtents),ri.add(ps,n.center,n.halfExtents),e.x=e.x<us.x?us.x:e.x,e.y=e.y<us.y?us.y:e.y,e.z=e.z<us.z?us.z:e.z,e.x=e.x>ps.x?ps.x:e.x,e.y=e.y>ps.y?ps.y:e.y,e.z=e.z>ps.z?ps.z:e.z,e}function vs(e,t,n){ri.set(cs,n.orientation.m00,n.orientation.m01,n.orientation.m02),ri.set(ls,n.orientation.m03,n.orientation.m04,n.orientation.m05),ri.set(hs,n.orientation.m06,n.orientation.m07,n.orientation.m08),ds[0]=cs,ds[1]=ls,ds[2]=hs,fs[0]=n.halfExtents.x,fs[1]=n.halfExtents.y,fs[2]=n.halfExtents.z,ri.subtract(_s,t,n.center),ri.set(e,n.center.x,n.center.y,n.center.z);for(let t=0;t<3;t++){let n=ri.dot(_s,ds[t]);n>fs[t]&&(n=fs[t]),n<-fs[t]&&(n=-fs[t]),e.x+=n*ds[t].x,e.y+=n*ds[t].y,e.z+=n*ds[t].z}return e}var ys=Object.freeze({__proto__:null,point_plane:ms,pt_point_plane:function(e,t,n){const i=ms(t,n);return ri.subtract(e,t,ri.multiplyScalar(e,n.n,i))},pt_point_aabb:gs,pt_point_obb:vs,pt_point_line:function(e,t,n,i){ri.subtract(cs,n,i);const s=cs,r=ri.lengthSqr(s);if(0==r)ri.copy(e,n);else{ri.subtract(cs,t,n);const o=ri.dot(cs,s)/r;o<0?ri.copy(e,n):o>1?ri.copy(e,i):ri.scaleAndAdd(e,n,s,o)}}}),xs={SHAPE_RAY:1,SHAPE_LINE:2,SHAPE_SPHERE:4,SHAPE_AABB:8,SHAPE_OBB:16,SHAPE_PLANE:32,SHAPE_TRIANGLE:64,SHAPE_FRUSTUM:128,SHAPE_FRUSTUM_ACCURATE:256,SHAPE_CAPSULE:512};class Ss{static create(e,t,n,i,s,r){return new Ss(e,t,n,i,s,r)}static clone(e){return new Ss(e.s.x,e.s.y,e.s.z,e.e.x,e.e.y,e.e.z)}static copy(e,t){return ri.copy(e.s,t.s),ri.copy(e.e,t.e),e}static fromPoints(e,t,n){return ri.copy(e.s,t),ri.copy(e.e,n),e}static set(e,t,n,i,s,r,o){return e.s.x=t,e.s.y=n,e.s.z=i,e.e.x=s,e.e.y=r,e.e.z=o,e}static len(e){return ri.distance(e.s,e.e)}get type(){return this._type}constructor(e=0,t=0,n=0,i=0,s=0,r=-1){this.s=void 0,this.e=void 0,this._type=void 0,this._type=xs.SHAPE_LINE,this.s=new ri(e,t,n),this.e=new ri(i,s,r)}length(){return ri.distance(this.s,this.e)}}class Cs{static create(e=0,t=0,n=0,i=0,s=0,r=1){return new Cs(e,t,n,i,s,r)}static clone(e){return new Cs(e.o.x,e.o.y,e.o.z,e.d.x,e.d.y,e.d.z)}static copy(e,t){return ri.copy(e.o,t.o),ri.copy(e.d,t.d),e}static fromPoints(e,t,n){return ri.copy(e.o,t),ri.normalize(e.d,ri.subtract(e.d,n,t)),e}static set(e,t,n,i,s,r,o){return e.o.x=t,e.o.y=n,e.o.z=i,e.d.x=s,e.d.y=r,e.d.z=o,e}get type(){return this._type}constructor(e=0,t=0,n=0,i=0,s=0,r=-1){this.o=void 0,this.d=void 0,this._type=void 0,this._type=xs.SHAPE_RAY,this.o=new ri(e,t,n),this.d=new ri(i,s,r)}computeHit(e,t){ri.normalize(e,this.d),ri.scaleAndAdd(e,this.o,e,t)}}const Ts=new ri,bs=new ri,Es=new ri,As=new ri;function Ps(e){return Math.max(Math.max(e.x,e.y),e.z)}class ws{static create(e,t,n,i){return new ws(e,t,n,i)}static clone(e){return new ws(e.center.x,e.center.y,e.center.z,e.radius)}static copy(e,t){return ri.copy(e.center,t.center),e.radius=t.radius,e}static fromPoints(e,t,n){return ri.multiplyScalar(e.center,ri.add(Ts,t,n),.5),e.radius=.5*ri.subtract(Ts,n,t).length(),e}static set(e,t,n,i,s){return e.center.x=t,e.center.y=n,e.center.z=i,e.radius=s,e}get center(){return this._center}set center(e){this._center=e}get radius(){return this._radius}set radius(e){this._radius=e}get type(){return this._type}constructor(e=0,t=0,n=0,i=1){this._center=new ri(0,0,0),this._radius=0,this._type=void 0,this._type=xs.SHAPE_SPHERE,this._center=new ri(e,t,n),this._radius=i}destroy(){}clone(){return ws.clone(this)}copy(e){return ws.copy(this,e)}getBoundary(e,t){ri.set(e,this.center.x-this.radius,this.center.y-this.radius,this.center.z-this.radius),ri.set(t,this.center.x+this.radius,this.center.y+this.radius,this.center.z+this.radius)}transform(e,t,n,i,s){ri.transformMat4(s.center,this.center,e),s.radius=this.radius*Ps(i)}translateAndRotate(e,t,n){ri.transformMat4(n.center,this.center,e)}setScale(e,t){t.radius=this.radius*Ps(e)}mergePoint(e){this.radius<0&&(this.center.set(e),this.radius=0),ri.subtract(bs,e,this.center);const t=bs.length();if(t>this.radius){const e=.5*(t-this.radius);this.radius+=e,ri.multiplyScalar(bs,bs,e/t),ri.add(this.center,this.center,bs)}}mergePoints(e){const t=e.length;if(!(t<1)){this.radius=-1;for(let n=0;n<t;n++)this.mergePoint(e[n])}}mergeAABB(e){e.getBoundary(Es,As),this.mergePoint(Es),this.mergePoint(As)}}class Is{static create(e=1,t=0,n=0,i=0,s=0,r=0,o=0,a=0,c=1){return new Is(e,t,n,i,s,r,o,a,c)}static clone(e){return new Is(e.a.x,e.a.y,e.a.z,e.b.x,e.b.y,e.b.z,e.c.x,e.c.y,e.c.z)}static copy(e,t){return ri.copy(e.a,t.a),ri.copy(e.b,t.b),ri.copy(e.c,t.c),e}static fromPoints(e,t,n,i){return ri.copy(e.a,t),ri.copy(e.b,n),ri.copy(e.c,i),e}static set(e,t,n,i,s,r,o,a,c,l){return e.a.x=t,e.a.y=n,e.a.z=i,e.b.x=s,e.b.y=r,e.b.z=o,e.c.x=a,e.c.y=c,e.c.z=l,e}get type(){return this._type}constructor(e=0,t=0,n=0,i=1,s=0,r=0,o=0,a=1,c=0){this.a=void 0,this.b=void 0,this.c=void 0,this._type=void 0,this._type=xs.SHAPE_TRIANGLE,this.a=new ri(e,t,n),this.b=new ri(i,s,r),this.c=new ri(o,a,c)}}const Rs=(e,t,n)=>{for(let i=0;i<t.length;++i)e.length<=i&&e.push(new n),e[i].copy(t[i]);e.length=t.length};let Ds,Os,Ms,Ns,Ls,zs,Fs,Bs,Us,Gs,Hs,ks,Vs,js,Ws,qs,Xs,Ys,Ks,$s,Zs,Qs,Js,er,tr,ir,sr,rr,or,ar,cr,lr,hr,_r,ur,pr,dr,fr,mr,gr,vr,yr;!function(e){e[e.UNKNOWN=0]="UNKNOWN",e[e.SWAPCHAIN=1]="SWAPCHAIN",e[e.BUFFER=2]="BUFFER",e[e.TEXTURE=3]="TEXTURE",e[e.RENDER_PASS=4]="RENDER_PASS",e[e.FRAMEBUFFER=5]="FRAMEBUFFER",e[e.SAMPLER=6]="SAMPLER",e[e.SHADER=7]="SHADER",e[e.DESCRIPTOR_SET_LAYOUT=8]="DESCRIPTOR_SET_LAYOUT",e[e.PIPELINE_LAYOUT=9]="PIPELINE_LAYOUT",e[e.PIPELINE_STATE=10]="PIPELINE_STATE",e[e.DESCRIPTOR_SET=11]="DESCRIPTOR_SET",e[e.INPUT_ASSEMBLER=12]="INPUT_ASSEMBLER",e[e.COMMAND_BUFFER=13]="COMMAND_BUFFER",e[e.QUEUE=14]="QUEUE",e[e.QUERY_POOL=15]="QUERY_POOL",e[e.GLOBAL_BARRIER=16]="GLOBAL_BARRIER",e[e.TEXTURE_BARRIER=17]="TEXTURE_BARRIER",e[e.BUFFER_BARRIER=18]="BUFFER_BARRIER",e[e.COUNT=19]="COUNT"}(Ds||(Ds={})),function(e){e[e.UNREADY=0]="UNREADY",e[e.FAILED=1]="FAILED",e[e.SUCCESS=2]="SUCCESS"}(Os||(Os={})),function(e){e[e.UNKNOWN=0]="UNKNOWN",e[e.GLES2=1]="GLES2",e[e.GLES3=2]="GLES3",e[e.METAL=3]="METAL",e[e.VULKAN=4]="VULKAN",e[e.WEBGL=5]="WEBGL",e[e.WEBGL2=6]="WEBGL2",e[e.WEBGPU=7]="WEBGPU"}(Ms||(Ms={})),function(e){e[e.IDENTITY=0]="IDENTITY",e[e.ROTATE_90=1]="ROTATE_90",e[e.ROTATE_180=2]="ROTATE_180",e[e.ROTATE_270=3]="ROTATE_270"}(Ns||(Ns={})),function(e){e[e.COLOR_FLOAT=0]="COLOR_FLOAT",e[e.COLOR_HALF_FLOAT=1]="COLOR_HALF_FLOAT",e[e.TEXTURE_FLOAT=2]="TEXTURE_FLOAT",e[e.TEXTURE_HALF_FLOAT=3]="TEXTURE_HALF_FLOAT",e[e.TEXTURE_FLOAT_LINEAR=4]="TEXTURE_FLOAT_LINEAR",e[e.TEXTURE_HALF_FLOAT_LINEAR=5]="TEXTURE_HALF_FLOAT_LINEAR",e[e.FORMAT_R11G11B10F=6]="FORMAT_R11G11B10F",e[e.FORMAT_SRGB=7]="FORMAT_SRGB",e[e.FORMAT_ETC1=8]="FORMAT_ETC1",e[e.FORMAT_ETC2=9]="FORMAT_ETC2",e[e.FORMAT_DXT=10]="FORMAT_DXT",e[e.FORMAT_PVRTC=11]="FORMAT_PVRTC",e[e.FORMAT_ASTC=12]="FORMAT_ASTC",e[e.FORMAT_RGB8=13]="FORMAT_RGB8",e[e.ELEMENT_INDEX_UINT=14]="ELEMENT_INDEX_UINT",e[e.INSTANCED_ARRAYS=15]="INSTANCED_ARRAYS",e[e.MULTIPLE_RENDER_TARGETS=16]="MULTIPLE_RENDER_TARGETS",e[e.BLEND_MINMAX=17]="BLEND_MINMAX",e[e.COMPUTE_SHADER=18]="COMPUTE_SHADER",e[e.INPUT_ATTACHMENT_BENEFIT=19]="INPUT_ATTACHMENT_BENEFIT",e[e.COUNT=20]="COUNT"}(Ls||(Ls={})),function(e){e[e.UNKNOWN=0]="UNKNOWN",e[e.A8=1]="A8",e[e.L8=2]="L8",e[e.LA8=3]="LA8",e[e.R8=4]="R8",e[e.R8SN=5]="R8SN",e[e.R8UI=6]="R8UI",e[e.R8I=7]="R8I",e[e.R16F=8]="R16F",e[e.R16UI=9]="R16UI",e[e.R16I=10]="R16I",e[e.R32F=11]="R32F",e[e.R32UI=12]="R32UI",e[e.R32I=13]="R32I",e[e.RG8=14]="RG8",e[e.RG8SN=15]="RG8SN",e[e.RG8UI=16]="RG8UI",e[e.RG8I=17]="RG8I",e[e.RG16F=18]="RG16F",e[e.RG16UI=19]="RG16UI",e[e.RG16I=20]="RG16I",e[e.RG32F=21]="RG32F",e[e.RG32UI=22]="RG32UI",e[e.RG32I=23]="RG32I",e[e.RGB8=24]="RGB8",e[e.SRGB8=25]="SRGB8",e[e.RGB8SN=26]="RGB8SN",e[e.RGB8UI=27]="RGB8UI",e[e.RGB8I=28]="RGB8I",e[e.RGB16F=29]="RGB16F",e[e.RGB16UI=30]="RGB16UI",e[e.RGB16I=31]="RGB16I",e[e.RGB32F=32]="RGB32F",e[e.RGB32UI=33]="RGB32UI",e[e.RGB32I=34]="RGB32I",e[e.RGBA8=35]="RGBA8",e[e.BGRA8=36]="BGRA8",e[e.SRGB8_A8=37]="SRGB8_A8",e[e.RGBA8SN=38]="RGBA8SN",e[e.RGBA8UI=39]="RGBA8UI",e[e.RGBA8I=40]="RGBA8I",e[e.RGBA16F=41]="RGBA16F",e[e.RGBA16UI=42]="RGBA16UI",e[e.RGBA16I=43]="RGBA16I",e[e.RGBA32F=44]="RGBA32F",e[e.RGBA32UI=45]="RGBA32UI",e[e.RGBA32I=46]="RGBA32I",e[e.R5G6B5=47]="R5G6B5",e[e.R11G11B10F=48]="R11G11B10F",e[e.RGB5A1=49]="RGB5A1",e[e.RGBA4=50]="RGBA4",e[e.RGB10A2=51]="RGB10A2",e[e.RGB10A2UI=52]="RGB10A2UI",e[e.RGB9E5=53]="RGB9E5",e[e.DEPTH=54]="DEPTH",e[e.DEPTH_STENCIL=55]="DEPTH_STENCIL",e[e.BC1=56]="BC1",e[e.BC1_ALPHA=57]="BC1_ALPHA",e[e.BC1_SRGB=58]="BC1_SRGB",e[e.BC1_SRGB_ALPHA=59]="BC1_SRGB_ALPHA",e[e.BC2=60]="BC2",e[e.BC2_SRGB=61]="BC2_SRGB",e[e.BC3=62]="BC3",e[e.BC3_SRGB=63]="BC3_SRGB",e[e.BC4=64]="BC4",e[e.BC4_SNORM=65]="BC4_SNORM",e[e.BC5=66]="BC5",e[e.BC5_SNORM=67]="BC5_SNORM",e[e.BC6H_UF16=68]="BC6H_UF16",e[e.BC6H_SF16=69]="BC6H_SF16",e[e.BC7=70]="BC7",e[e.BC7_SRGB=71]="BC7_SRGB",e[e.ETC_RGB8=72]="ETC_RGB8",e[e.ETC2_RGB8=73]="ETC2_RGB8",e[e.ETC2_SRGB8=74]="ETC2_SRGB8",e[e.ETC2_RGB8_A1=75]="ETC2_RGB8_A1",e[e.ETC2_SRGB8_A1=76]="ETC2_SRGB8_A1",e[e.ETC2_RGBA8=77]="ETC2_RGBA8",e[e.ETC2_SRGB8_A8=78]="ETC2_SRGB8_A8",e[e.EAC_R11=79]="EAC_R11",e[e.EAC_R11SN=80]="EAC_R11SN",e[e.EAC_RG11=81]="EAC_RG11",e[e.EAC_RG11SN=82]="EAC_RG11SN",e[e.PVRTC_RGB2=83]="PVRTC_RGB2",e[e.PVRTC_RGBA2=84]="PVRTC_RGBA2",e[e.PVRTC_RGB4=85]="PVRTC_RGB4",e[e.PVRTC_RGBA4=86]="PVRTC_RGBA4",e[e.PVRTC2_2BPP=87]="PVRTC2_2BPP",e[e.PVRTC2_4BPP=88]="PVRTC2_4BPP",e[e.ASTC_RGBA_4X4=89]="ASTC_RGBA_4X4",e[e.ASTC_RGBA_5X4=90]="ASTC_RGBA_5X4",e[e.ASTC_RGBA_5X5=91]="ASTC_RGBA_5X5",e[e.ASTC_RGBA_6X5=92]="ASTC_RGBA_6X5",e[e.ASTC_RGBA_6X6=93]="ASTC_RGBA_6X6",e[e.ASTC_RGBA_8X5=94]="ASTC_RGBA_8X5",e[e.ASTC_RGBA_8X6=95]="ASTC_RGBA_8X6",e[e.ASTC_RGBA_8X8=96]="ASTC_RGBA_8X8",e[e.ASTC_RGBA_10X5=97]="ASTC_RGBA_10X5",e[e.ASTC_RGBA_10X6=98]="ASTC_RGBA_10X6",e[e.ASTC_RGBA_10X8=99]="ASTC_RGBA_10X8",e[e.ASTC_RGBA_10X10=100]="ASTC_RGBA_10X10",e[e.ASTC_RGBA_12X10=101]="ASTC_RGBA_12X10",e[e.ASTC_RGBA_12X12=102]="ASTC_RGBA_12X12",e[e.ASTC_SRGBA_4X4=103]="ASTC_SRGBA_4X4",e[e.ASTC_SRGBA_5X4=104]="ASTC_SRGBA_5X4",e[e.ASTC_SRGBA_5X5=105]="ASTC_SRGBA_5X5",e[e.ASTC_SRGBA_6X5=106]="ASTC_SRGBA_6X5",e[e.ASTC_SRGBA_6X6=107]="ASTC_SRGBA_6X6",e[e.ASTC_SRGBA_8X5=108]="ASTC_SRGBA_8X5",e[e.ASTC_SRGBA_8X6=109]="ASTC_SRGBA_8X6",e[e.ASTC_SRGBA_8X8=110]="ASTC_SRGBA_8X8",e[e.ASTC_SRGBA_10X5=111]="ASTC_SRGBA_10X5",e[e.ASTC_SRGBA_10X6=112]="ASTC_SRGBA_10X6",e[e.ASTC_SRGBA_10X8=113]="ASTC_SRGBA_10X8",e[e.ASTC_SRGBA_10X10=114]="ASTC_SRGBA_10X10",e[e.ASTC_SRGBA_12X10=115]="ASTC_SRGBA_12X10",e[e.ASTC_SRGBA_12X12=116]="ASTC_SRGBA_12X12",e[e.COUNT=117]="COUNT"}(zs||(zs={})),function(e){e[e.NONE=0]="NONE",e[e.UNORM=1]="UNORM",e[e.SNORM=2]="SNORM",e[e.UINT=3]="UINT",e[e.INT=4]="INT",e[e.UFLOAT=5]="UFLOAT",e[e.FLOAT=6]="FLOAT"}(Fs||(Fs={})),function(e){e[e.UNKNOWN=0]="UNKNOWN",e[e.BOOL=1]="BOOL",e[e.BOOL2=2]="BOOL2",e[e.BOOL3=3]="BOOL3",e[e.BOOL4=4]="BOOL4",e[e.INT=5]="INT",e[e.INT2=6]="INT2",e[e.INT3=7]="INT3",e[e.INT4=8]="INT4",e[e.UINT=9]="UINT",e[e.UINT2=10]="UINT2",e[e.UINT3=11]="UINT3",e[e.UINT4=12]="UINT4",e[e.FLOAT=13]="FLOAT",e[e.FLOAT2=14]="FLOAT2",e[e.FLOAT3=15]="FLOAT3",e[e.FLOAT4=16]="FLOAT4",e[e.MAT2=17]="MAT2",e[e.MAT2X3=18]="MAT2X3",e[e.MAT2X4=19]="MAT2X4",e[e.MAT3X2=20]="MAT3X2",e[e.MAT3=21]="MAT3",e[e.MAT3X4=22]="MAT3X4",e[e.MAT4X2=23]="MAT4X2",e[e.MAT4X3=24]="MAT4X3",e[e.MAT4=25]="MAT4",e[e.SAMPLER1D=26]="SAMPLER1D",e[e.SAMPLER1D_ARRAY=27]="SAMPLER1D_ARRAY",e[e.SAMPLER2D=28]="SAMPLER2D",e[e.SAMPLER2D_ARRAY=29]="SAMPLER2D_ARRAY",e[e.SAMPLER3D=30]="SAMPLER3D",e[e.SAMPLER_CUBE=31]="SAMPLER_CUBE",e[e.SAMPLER=32]="SAMPLER",e[e.TEXTURE1D=33]="TEXTURE1D",e[e.TEXTURE1D_ARRAY=34]="TEXTURE1D_ARRAY",e[e.TEXTURE2D=35]="TEXTURE2D",e[e.TEXTURE2D_ARRAY=36]="TEXTURE2D_ARRAY",e[e.TEXTURE3D=37]="TEXTURE3D",e[e.TEXTURE_CUBE=38]="TEXTURE_CUBE",e[e.IMAGE1D=39]="IMAGE1D",e[e.IMAGE1D_ARRAY=40]="IMAGE1D_ARRAY",e[e.IMAGE2D=41]="IMAGE2D",e[e.IMAGE2D_ARRAY=42]="IMAGE2D_ARRAY",e[e.IMAGE3D=43]="IMAGE3D",e[e.IMAGE_CUBE=44]="IMAGE_CUBE",e[e.SUBPASS_INPUT=45]="SUBPASS_INPUT",e[e.COUNT=46]="COUNT"}(Bs||(Bs={})),function(e){e[e.NONE=0]="NONE",e[e.TRANSFER_SRC=1]="TRANSFER_SRC",e[e.TRANSFER_DST=2]="TRANSFER_DST",e[e.INDEX=4]="INDEX",e[e.VERTEX=8]="VERTEX",e[e.UNIFORM=16]="UNIFORM",e[e.STORAGE=32]="STORAGE",e[e.INDIRECT=64]="INDIRECT"}(Us||(Us={})),function(e){e[e.NONE=0]="NONE"}(Gs||(Gs={})),function(e){e[e.NONE=0]="NONE",e[e.READ_ONLY=1]="READ_ONLY",e[e.WRITE_ONLY=2]="WRITE_ONLY",e[e.READ_WRITE=3]="READ_WRITE"}(Hs||(Hs={})),function(e){e[e.NONE=0]="NONE",e[e.DEVICE=1]="DEVICE",e[e.HOST=2]="HOST"}(ks||(ks={})),function(e){e[e.TEX1D=0]="TEX1D",e[e.TEX2D=1]="TEX2D",e[e.TEX3D=2]="TEX3D",e[e.CUBE=3]="CUBE",e[e.TEX1D_ARRAY=4]="TEX1D_ARRAY",e[e.TEX2D_ARRAY=5]="TEX2D_ARRAY"}(Vs||(Vs={})),function(e){e[e.NONE=0]="NONE",e[e.TRANSFER_SRC=1]="TRANSFER_SRC",e[e.TRANSFER_DST=2]="TRANSFER_DST",e[e.SAMPLED=4]="SAMPLED",e[e.STORAGE=8]="STORAGE",e[e.COLOR_ATTACHMENT=16]="COLOR_ATTACHMENT",e[e.DEPTH_STENCIL_ATTACHMENT=32]="DEPTH_STENCIL_ATTACHMENT",e[e.INPUT_ATTACHMENT=64]="INPUT_ATTACHMENT"}(js||(js={})),function(e){e[e.NONE=0]="NONE",e[e.GEN_MIPMAP=1]="GEN_MIPMAP",e[e.GENERAL_LAYOUT=2]="GENERAL_LAYOUT"}(Ws||(Ws={})),function(e){e[e.ONE=0]="ONE",e[e.MULTIPLE_PERFORMANCE=1]="MULTIPLE_PERFORMANCE",e[e.MULTIPLE_BALANCE=2]="MULTIPLE_BALANCE",e[e.MULTIPLE_QUALITY=3]="MULTIPLE_QUALITY"}(qs||(qs={})),function(e){e[e.OFF=0]="OFF",e[e.ON=1]="ON",e[e.RELAXED=2]="RELAXED",e[e.MAILBOX=3]="MAILBOX",e[e.HALF=4]="HALF"}(Xs||(Xs={})),function(e){e[e.NONE=0]="NONE",e[e.POINT=1]="POINT",e[e.LINEAR=2]="LINEAR",e[e.ANISOTROPIC=3]="ANISOTROPIC"}(Ys||(Ys={})),function(e){e[e.WRAP=0]="WRAP",e[e.MIRROR=1]="MIRROR",e[e.CLAMP=2]="CLAMP",e[e.BORDER=3]="BORDER"}(Ks||(Ks={})),function(e){e[e.NEVER=0]="NEVER",e[e.LESS=1]="LESS",e[e.EQUAL=2]="EQUAL",e[e.LESS_EQUAL=3]="LESS_EQUAL",e[e.GREATER=4]="GREATER",e[e.NOT_EQUAL=5]="NOT_EQUAL",e[e.GREATER_EQUAL=6]="GREATER_EQUAL",e[e.ALWAYS=7]="ALWAYS"}($s||($s={})),function(e){e[e.ZERO=0]="ZERO",e[e.KEEP=1]="KEEP",e[e.REPLACE=2]="REPLACE",e[e.INCR=3]="INCR",e[e.DECR=4]="DECR",e[e.INVERT=5]="INVERT",e[e.INCR_WRAP=6]="INCR_WRAP",e[e.DECR_WRAP=7]="DECR_WRAP"}(Zs||(Zs={})),function(e){e[e.ZERO=0]="ZERO",e[e.ONE=1]="ONE",e[e.SRC_ALPHA=2]="SRC_ALPHA",e[e.DST_ALPHA=3]="DST_ALPHA",e[e.ONE_MINUS_SRC_ALPHA=4]="ONE_MINUS_SRC_ALPHA",e[e.ONE_MINUS_DST_ALPHA=5]="ONE_MINUS_DST_ALPHA",e[e.SRC_COLOR=6]="SRC_COLOR",e[e.DST_COLOR=7]="DST_COLOR",e[e.ONE_MINUS_SRC_COLOR=8]="ONE_MINUS_SRC_COLOR",e[e.ONE_MINUS_DST_COLOR=9]="ONE_MINUS_DST_COLOR",e[e.SRC_ALPHA_SATURATE=10]="SRC_ALPHA_SATURATE",e[e.CONSTANT_COLOR=11]="CONSTANT_COLOR",e[e.ONE_MINUS_CONSTANT_COLOR=12]="ONE_MINUS_CONSTANT_COLOR",e[e.CONSTANT_ALPHA=13]="CONSTANT_ALPHA",e[e.ONE_MINUS_CONSTANT_ALPHA=14]="ONE_MINUS_CONSTANT_ALPHA"}(Qs||(Qs={})),function(e){e[e.ADD=0]="ADD",e[e.SUB=1]="SUB",e[e.REV_SUB=2]="REV_SUB",e[e.MIN=3]="MIN",e[e.MAX=4]="MAX"}(Js||(Js={})),function(e){e[e.NONE=0]="NONE",e[e.R=1]="R",e[e.G=2]="G",e[e.B=4]="B",e[e.A=8]="A",e[e.ALL=15]="ALL"}(er||(er={})),function(e){e[e.NONE=0]="NONE",e[e.VERTEX=1]="VERTEX",e[e.CONTROL=2]="CONTROL",e[e.EVALUATION=4]="EVALUATION",e[e.GEOMETRY=8]="GEOMETRY",e[e.FRAGMENT=16]="FRAGMENT",e[e.COMPUTE=32]="COMPUTE",e[e.ALL=63]="ALL"}(tr||(tr={})),function(e){e[e.LOAD=0]="LOAD",e[e.CLEAR=1]="CLEAR",e[e.DISCARD=2]="DISCARD"}(ir||(ir={})),function(e){e[e.STORE=0]="STORE",e[e.DISCARD=1]="DISCARD"}(sr||(sr={})),function(e){e[e.NONE=0]="NONE",e[e.INDIRECT_BUFFER=1]="INDIRECT_BUFFER",e[e.INDEX_BUFFER=2]="INDEX_BUFFER",e[e.VERTEX_BUFFER=3]="VERTEX_BUFFER",e[e.VERTEX_SHADER_READ_UNIFORM_BUFFER=4]="VERTEX_SHADER_READ_UNIFORM_BUFFER",e[e.VERTEX_SHADER_READ_TEXTURE=5]="VERTEX_SHADER_READ_TEXTURE",e[e.VERTEX_SHADER_READ_OTHER=6]="VERTEX_SHADER_READ_OTHER",e[e.FRAGMENT_SHADER_READ_UNIFORM_BUFFER=7]="FRAGMENT_SHADER_READ_UNIFORM_BUFFER",e[e.FRAGMENT_SHADER_READ_TEXTURE=8]="FRAGMENT_SHADER_READ_TEXTURE",e[e.FRAGMENT_SHADER_READ_COLOR_INPUT_ATTACHMENT=9]="FRAGMENT_SHADER_READ_COLOR_INPUT_ATTACHMENT",e[e.FRAGMENT_SHADER_READ_DEPTH_STENCIL_INPUT_ATTACHMENT=10]="FRAGMENT_SHADER_READ_DEPTH_STENCIL_INPUT_ATTACHMENT",e[e.FRAGMENT_SHADER_READ_OTHER=11]="FRAGMENT_SHADER_READ_OTHER",e[e.COLOR_ATTACHMENT_READ=12]="COLOR_ATTACHMENT_READ",e[e.DEPTH_STENCIL_ATTACHMENT_READ=13]="DEPTH_STENCIL_ATTACHMENT_READ",e[e.COMPUTE_SHADER_READ_UNIFORM_BUFFER=14]="COMPUTE_SHADER_READ_UNIFORM_BUFFER",e[e.COMPUTE_SHADER_READ_TEXTURE=15]="COMPUTE_SHADER_READ_TEXTURE",e[e.COMPUTE_SHADER_READ_OTHER=16]="COMPUTE_SHADER_READ_OTHER",e[e.TRANSFER_READ=17]="TRANSFER_READ",e[e.HOST_READ=18]="HOST_READ",e[e.PRESENT=19]="PRESENT",e[e.VERTEX_SHADER_WRITE=20]="VERTEX_SHADER_WRITE",e[e.FRAGMENT_SHADER_WRITE=21]="FRAGMENT_SHADER_WRITE",e[e.COLOR_ATTACHMENT_WRITE=22]="COLOR_ATTACHMENT_WRITE",e[e.DEPTH_STENCIL_ATTACHMENT_WRITE=23]="DEPTH_STENCIL_ATTACHMENT_WRITE",e[e.COMPUTE_SHADER_WRITE=24]="COMPUTE_SHADER_WRITE",e[e.TRANSFER_WRITE=25]="TRANSFER_WRITE",e[e.HOST_PREINITIALIZED=26]="HOST_PREINITIALIZED",e[e.HOST_WRITE=27]="HOST_WRITE"}(rr||(rr={})),function(e){e[e.NONE=0]="NONE",e[e.SAMPLE_ZERO=1]="SAMPLE_ZERO",e[e.AVERAGE=2]="AVERAGE",e[e.MIN=3]="MIN",e[e.MAX=4]="MAX"}(or||(or={})),function(e){e[e.GRAPHICS=0]="GRAPHICS",e[e.COMPUTE=1]="COMPUTE",e[e.RAY_TRACING=2]="RAY_TRACING"}(ar||(ar={})),function(e){e[e.POINT_LIST=0]="POINT_LIST",e[e.LINE_LIST=1]="LINE_LIST",e[e.LINE_STRIP=2]="LINE_STRIP",e[e.LINE_LOOP=3]="LINE_LOOP",e[e.LINE_LIST_ADJACENCY=4]="LINE_LIST_ADJACENCY",e[e.LINE_STRIP_ADJACENCY=5]="LINE_STRIP_ADJACENCY",e[e.ISO_LINE_LIST=6]="ISO_LINE_LIST",e[e.TRIANGLE_LIST=7]="TRIANGLE_LIST",e[e.TRIANGLE_STRIP=8]="TRIANGLE_STRIP",e[e.TRIANGLE_FAN=9]="TRIANGLE_FAN",e[e.TRIANGLE_LIST_ADJACENCY=10]="TRIANGLE_LIST_ADJACENCY",e[e.TRIANGLE_STRIP_ADJACENCY=11]="TRIANGLE_STRIP_ADJACENCY",e[e.TRIANGLE_PATCH_ADJACENCY=12]="TRIANGLE_PATCH_ADJACENCY",e[e.QUAD_PATCH_LIST=13]="QUAD_PATCH_LIST"}(cr||(cr={})),function(e){e[e.FILL=0]="FILL",e[e.POINT=1]="POINT",e[e.LINE=2]="LINE"}(lr||(lr={})),function(e){e[e.GOURAND=0]="GOURAND",e[e.FLAT=1]="FLAT"}(hr||(hr={})),function(e){e[e.NONE=0]="NONE",e[e.FRONT=1]="FRONT",e[e.BACK=2]="BACK"}(_r||(_r={})),function(e){e[e.NONE=0]="NONE",e[e.LINE_WIDTH=1]="LINE_WIDTH",e[e.DEPTH_BIAS=2]="DEPTH_BIAS",e[e.BLEND_CONSTANTS=4]="BLEND_CONSTANTS",e[e.DEPTH_BOUNDS=8]="DEPTH_BOUNDS",e[e.STENCIL_WRITE_MASK=16]="STENCIL_WRITE_MASK",e[e.STENCIL_COMPARE_MASK=32]="STENCIL_COMPARE_MASK"}(ur||(ur={})),function(e){e[e.FRONT=1]="FRONT",e[e.BACK=2]="BACK",e[e.ALL=3]="ALL"}(pr||(pr={})),function(e){e[e.UNKNOWN=0]="UNKNOWN",e[e.UNIFORM_BUFFER=1]="UNIFORM_BUFFER",e[e.DYNAMIC_UNIFORM_BUFFER=2]="DYNAMIC_UNIFORM_BUFFER",e[e.STORAGE_BUFFER=4]="STORAGE_BUFFER",e[e.DYNAMIC_STORAGE_BUFFER=8]="DYNAMIC_STORAGE_BUFFER",e[e.SAMPLER_TEXTURE=16]="SAMPLER_TEXTURE",e[e.SAMPLER=32]="SAMPLER",e[e.TEXTURE=64]="TEXTURE",e[e.STORAGE_IMAGE=128]="STORAGE_IMAGE",e[e.INPUT_ATTACHMENT=256]="INPUT_ATTACHMENT"}(dr||(dr={})),function(e){e[e.GRAPHICS=0]="GRAPHICS",e[e.COMPUTE=1]="COMPUTE",e[e.TRANSFER=2]="TRANSFER"}(fr||(fr={})),function(e){e[e.OCCLUSION=0]="OCCLUSION",e[e.PIPELINE_STATISTICS=1]="PIPELINE_STATISTICS",e[e.TIMESTAMP=2]="TIMESTAMP"}(mr||(mr={})),function(e){e[e.PRIMARY=0]="PRIMARY",e[e.SECONDARY=1]="SECONDARY"}(gr||(gr={})),function(e){e[e.NONE=0]="NONE",e[e.COLOR=1]="COLOR",e[e.DEPTH=2]="DEPTH",e[e.STENCIL=4]="STENCIL",e[e.DEPTH_STENCIL=6]="DEPTH_STENCIL",e[e.ALL=7]="ALL"}(vr||(vr={}));class xr{constructor(e=0,t=0,n=0){this.x=e,this.y=t,this.z=n}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}}class Sr{constructor(e=0,t=0,n=0,i=0,s=0,r=0,o=0,a=0,c=0,l=0,h=0,_=0,u=0,p=1,d=0,f=0,m=new xr,g=new xr,v=!1,y=-1,x=1,S=1){this.maxVertexAttributes=e,this.maxVertexUniformVectors=t,this.maxFragmentUniformVectors=n,this.maxTextureUnits=i,this.maxImageUnits=s,this.maxVertexTextureUnits=r,this.maxColorRenderTargets=o,this.maxShaderStorageBufferBindings=a,this.maxShaderStorageBlockSize=c,this.maxUniformBufferBindings=l,this.maxUniformBlockSize=h,this.maxTextureSize=_,this.maxCubeMapTextureSize=u,this.uboOffsetAlignment=p,this.maxComputeSharedMemorySize=d,this.maxComputeWorkGroupInvocations=f,this.maxComputeWorkGroupSize=m,this.maxComputeWorkGroupCount=g,this.supportQuery=v,this.clipSpaceMinZ=y,this.screenSpaceSignY=x,this.clipSpaceSignY=S}copy(e){return this.maxVertexAttributes=e.maxVertexAttributes,this.maxVertexUniformVectors=e.maxVertexUniformVectors,this.maxFragmentUniformVectors=e.maxFragmentUniformVectors,this.maxTextureUnits=e.maxTextureUnits,this.maxImageUnits=e.maxImageUnits,this.maxVertexTextureUnits=e.maxVertexTextureUnits,this.maxColorRenderTargets=e.maxColorRenderTargets,this.maxShaderStorageBufferBindings=e.maxShaderStorageBufferBindings,this.maxShaderStorageBlockSize=e.maxShaderStorageBlockSize,this.maxUniformBufferBindings=e.maxUniformBufferBindings,this.maxUniformBlockSize=e.maxUniformBlockSize,this.maxTextureSize=e.maxTextureSize,this.maxCubeMapTextureSize=e.maxCubeMapTextureSize,this.uboOffsetAlignment=e.uboOffsetAlignment,this.maxComputeSharedMemorySize=e.maxComputeSharedMemorySize,this.maxComputeWorkGroupInvocations=e.maxComputeWorkGroupInvocations,this.maxComputeWorkGroupSize.copy(e.maxComputeWorkGroupSize),this.maxComputeWorkGroupCount.copy(e.maxComputeWorkGroupCount),this.supportQuery=e.supportQuery,this.clipSpaceMinZ=e.clipSpaceMinZ,this.screenSpaceSignY=e.screenSpaceSignY,this.clipSpaceSignY=e.clipSpaceSignY,this}}class Cr{constructor(e=0,t=0,n=0){this.x=e,this.y=t,this.z=n}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}}class Tr{constructor(e=0,t=0,n=0,i=0){this.x=e,this.y=t,this.width=n,this.height=i}copy(e){return this.x=e.x,this.y=e.y,this.width=e.width,this.height=e.height,this}}class br{constructor(e=0,t=0,n=1){this.width=e,this.height=t,this.depth=n}copy(e){return this.width=e.width,this.height=e.height,this.depth=e.depth,this}}class Er{constructor(e=0,t=0,n=1){this.mipLevel=e,this.baseArrayLayer=t,this.layerCount=n}copy(e){return this.mipLevel=e.mipLevel,this.baseArrayLayer=e.baseArrayLayer,this.layerCount=e.layerCount,this}}class Ar{constructor(e=0,t=1,n=0,i=1){this.baseMipLevel=e,this.levelCount=t,this.baseArrayLayer=n,this.layerCount=i}copy(e){return this.baseMipLevel=e.baseMipLevel,this.levelCount=e.levelCount,this.baseArrayLayer=e.baseArrayLayer,this.layerCount=e.layerCount,this}}class Pr{constructor(e=new Er,t=new Cr,n=new Er,i=new Cr,s=new br){this.srcSubres=e,this.srcOffset=t,this.dstSubres=n,this.dstOffset=i,this.extent=s}copy(e){return this.srcSubres.copy(e.srcSubres),this.srcOffset.copy(e.srcOffset),this.dstSubres.copy(e.dstSubres),this.dstOffset.copy(e.dstOffset),this.extent.copy(e.extent),this}}class wr{constructor(e=new Er,t=new Cr,n=new br,i=new Er,s=new Cr,r=new br){this.srcSubres=e,this.srcOffset=t,this.srcExtent=n,this.dstSubres=i,this.dstOffset=s,this.dstExtent=r}copy(e){return this.srcSubres.copy(e.srcSubres),this.srcOffset.copy(e.srcOffset),this.srcExtent.copy(e.srcExtent),this.dstSubres.copy(e.dstSubres),this.dstOffset.copy(e.dstOffset),this.dstExtent.copy(e.dstExtent),this}}class Ir{constructor(e=0,t=0,n=new Cr,i=new br,s=new Er){this.buffStride=e,this.buffTexHeight=t,this.texOffset=n,this.texExtent=i,this.texSubres=s}copy(e){return this.buffStride=e.buffStride,this.buffTexHeight=e.buffTexHeight,this.texOffset.copy(e.texOffset),this.texExtent.copy(e.texExtent),this.texSubres.copy(e.texSubres),this}}class Rr{constructor(e=0,t=0,n=0,i=0,s=0,r=1){this.left=e,this.top=t,this.width=n,this.height=i,this.minDepth=s,this.maxDepth=r}copy(e){return this.left=e.left,this.top=e.top,this.width=e.width,this.height=e.height,this.minDepth=e.minDepth,this.maxDepth=e.maxDepth,this}}class Dr{constructor(e=0,t=0,n=0,i=0){this.x=e,this.y=t,this.z=n,this.w=i}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w,this}}class Or{constructor(e=[],t=[],n=0){this.bufferOffsets=e,this.samplerOffsets=t,this.flexibleSet=n}copy(e){return this.bufferOffsets=e.bufferOffsets.slice(),this.samplerOffsets=e.samplerOffsets.slice(),this.flexibleSet=e.flexibleSet,this}}class Mr{constructor(e=null,t=Xs.ON,n=0,i=0){this.windowHandle=e,this.vsyncMode=t,this.width=n,this.height=i}copy(e){return this.windowHandle=e.windowHandle,this.vsyncMode=e.vsyncMode,this.width=e.width,this.height=e.height,this}}class Nr{constructor(e=new Or){this.bindingMappingInfo=e}copy(e){return this.bindingMappingInfo.copy(e.bindingMappingInfo),this}}class Lr{constructor(e=Us.NONE,t=ks.NONE,n=0,i=1,s=Gs.NONE){this.usage=e,this.memUsage=t,this.size=n,this.stride=i,this.flags=s}copy(e){return this.usage=e.usage,this.memUsage=e.memUsage,this.size=e.size,this.stride=e.stride,this.flags=e.flags,this}}class zr{constructor(e=null,t=0,n=0){this.buffer=e,this.offset=t,this.range=n}copy(e){return this.buffer=e.buffer,this.offset=e.offset,this.range=e.range,this}}class Fr{constructor(e=0,t=0,n=0,i=0,s=0,r=0,o=0){this.vertexCount=e,this.firstVertex=t,this.indexCount=n,this.firstIndex=i,this.vertexOffset=s,this.instanceCount=r,this.firstInstance=o}copy(e){return this.vertexCount=e.vertexCount,this.firstVertex=e.firstVertex,this.indexCount=e.indexCount,this.firstIndex=e.firstIndex,this.vertexOffset=e.vertexOffset,this.instanceCount=e.instanceCount,this.firstInstance=e.firstInstance,this}}class Br{constructor(e=0,t=0,n=0,i=null,s=0){this.groupCountX=e,this.groupCountY=t,this.groupCountZ=n,this.indirectBuffer=i,this.indirectOffset=s}copy(e){return this.groupCountX=e.groupCountX,this.groupCountY=e.groupCountY,this.groupCountZ=e.groupCountZ,this.indirectBuffer=e.indirectBuffer,this.indirectOffset=e.indirectOffset,this}}class Ur{constructor(e=[]){this.drawInfos=e}copy(e){return Rs(this.drawInfos,e.drawInfos,Fr),this}}class Gr{constructor(e=Vs.TEX2D,t=js.NONE,n=zs.UNKNOWN,i=0,s=0,r=Ws.NONE,o=1,a=1,c=qs.ONE,l=1,h=0){this.type=e,this.usage=t,this.format=n,this.width=i,this.height=s,this.flags=r,this.layerCount=o,this.levelCount=a,this.samples=c,this.depth=l,this.externalRes=h}copy(e){return this.type=e.type,this.usage=e.usage,this.format=e.format,this.width=e.width,this.height=e.height,this.flags=e.flags,this.layerCount=e.layerCount,this.levelCount=e.levelCount,this.samples=e.samples,this.depth=e.depth,this.externalRes=e.externalRes,this}}class Hr{constructor(e=null,t=Vs.TEX2D,n=zs.UNKNOWN,i=0,s=1,r=0,o=1){this.texture=e,this.type=t,this.format=n,this.baseLevel=i,this.levelCount=s,this.baseLayer=r,this.layerCount=o}copy(e){return this.texture=e.texture,this.type=e.type,this.format=e.format,this.baseLevel=e.baseLevel,this.levelCount=e.levelCount,this.baseLayer=e.baseLayer,this.layerCount=e.layerCount,this}}class kr{constructor(e=Ys.LINEAR,t=Ys.LINEAR,n=Ys.NONE,i=Ks.WRAP,s=Ks.WRAP,r=Ks.WRAP,o=0,a=$s.ALWAYS){this.minFilter=e,this.magFilter=t,this.mipFilter=n,this.addressU=i,this.addressV=s,this.addressW=r,this.maxAnisotropy=o,this.cmpFunc=a}copy(e){return this.minFilter=e.minFilter,this.magFilter=e.magFilter,this.mipFilter=e.mipFilter,this.addressU=e.addressU,this.addressV=e.addressV,this.addressW=e.addressW,this.maxAnisotropy=e.maxAnisotropy,this.cmpFunc=e.cmpFunc,this}}class Vr{constructor(e="",t=Bs.UNKNOWN,n=0){this.name=e,this.type=t,this.count=n}copy(e){return this.name=e.name,this.type=e.type,this.count=e.count,this}}class jr{constructor(e=0,t=0,n="",i=[],s=0){this.set=e,this.binding=t,this.name=n,this.members=i,this.count=s}copy(e){return this.set=e.set,this.binding=e.binding,this.name=e.name,Rs(this.members,e.members,Vr),this.count=e.count,this}}class Wr{constructor(e=0,t=0,n="",i=Bs.UNKNOWN,s=0){this.set=e,this.binding=t,this.name=n,this.type=i,this.count=s}copy(e){return this.set=e.set,this.binding=e.binding,this.name=e.name,this.type=e.type,this.count=e.count,this}}class qr{constructor(e=0,t=0,n="",i=0){this.set=e,this.binding=t,this.name=n,this.count=i}copy(e){return this.set=e.set,this.binding=e.binding,this.name=e.name,this.count=e.count,this}}class Xr{constructor(e=0,t=0,n="",i=Bs.UNKNOWN,s=0){this.set=e,this.binding=t,this.name=n,this.type=i,this.count=s}copy(e){return this.set=e.set,this.binding=e.binding,this.name=e.name,this.type=e.type,this.count=e.count,this}}class Yr{constructor(e=0,t=0,n="",i=Bs.UNKNOWN,s=0,r=Hs.READ_WRITE){this.set=e,this.binding=t,this.name=n,this.type=i,this.count=s,this.memoryAccess=r}copy(e){return this.set=e.set,this.binding=e.binding,this.name=e.name,this.type=e.type,this.count=e.count,this.memoryAccess=e.memoryAccess,this}}class Kr{constructor(e=0,t=0,n="",i=0,s=Hs.READ_WRITE){this.set=e,this.binding=t,this.name=n,this.count=i,this.memoryAccess=s}copy(e){return this.set=e.set,this.binding=e.binding,this.name=e.name,this.count=e.count,this.memoryAccess=e.memoryAccess,this}}class $r{constructor(e=0,t=0,n="",i=0){this.set=e,this.binding=t,this.name=n,this.count=i}copy(e){return this.set=e.set,this.binding=e.binding,this.name=e.name,this.count=e.count,this}}class Zr{constructor(e=tr.NONE,t=""){this.stage=e,this.source=t}copy(e){return this.stage=e.stage,this.source=e.source,this}}class Qr{constructor(e="",t=zs.UNKNOWN,n=!1,i=0,s=!1,r=0){this.name=e,this.format=t,this.isNormalized=n,this.stream=i,this.isInstanced=s,this.location=r}copy(e){return this.name=e.name,this.format=e.format,this.isNormalized=e.isNormalized,this.stream=e.stream,this.isInstanced=e.isInstanced,this.location=e.location,this}}class Jr{constructor(e="",t=[],n=[],i=[],s=[],r=[],o=[],a=[],c=[],l=[]){this.name=e,this.stages=t,this.attributes=n,this.blocks=i,this.buffers=s,this.samplerTextures=r,this.samplers=o,this.textures=a,this.images=c,this.subpassInputs=l}copy(e){return this.name=e.name,Rs(this.stages,e.stages,Zr),Rs(this.attributes,e.attributes,Qr),Rs(this.blocks,e.blocks,jr),Rs(this.buffers,e.buffers,Kr),Rs(this.samplerTextures,e.samplerTextures,Wr),Rs(this.samplers,e.samplers,qr),Rs(this.textures,e.textures,Xr),Rs(this.images,e.images,Yr),Rs(this.subpassInputs,e.subpassInputs,$r),this}}class eo{constructor(e=[],t=[],n=null,i=null){this.attributes=e,this.vertexBuffers=t,this.indexBuffer=n,this.indirectBuffer=i}copy(e){return Rs(this.attributes,e.attributes,Qr),this.vertexBuffers=e.vertexBuffers.slice(),this.indexBuffer=e.indexBuffer,this.indirectBuffer=e.indirectBuffer,this}}class to{constructor(e=zs.UNKNOWN,t=qs.ONE,n=ir.CLEAR,i=sr.STORE,s=[],r=[rr.COLOR_ATTACHMENT_WRITE],o=!1){this.format=e,this.sampleCount=t,this.loadOp=n,this.storeOp=i,this.beginAccesses=s,this.endAccesses=r,this.isGeneralLayout=o}copy(e){return this.format=e.format,this.sampleCount=e.sampleCount,this.loadOp=e.loadOp,this.storeOp=e.storeOp,this.beginAccesses=e.beginAccesses.slice(),this.endAccesses=e.endAccesses.slice(),this.isGeneralLayout=e.isGeneralLayout,this}}class no{constructor(e=zs.UNKNOWN,t=qs.ONE,n=ir.CLEAR,i=sr.STORE,s=ir.CLEAR,r=sr.STORE,o=[],a=[rr.DEPTH_STENCIL_ATTACHMENT_WRITE],c=!1){this.format=e,this.sampleCount=t,this.depthLoadOp=n,this.depthStoreOp=i,this.stencilLoadOp=s,this.stencilStoreOp=r,this.beginAccesses=o,this.endAccesses=a,this.isGeneralLayout=c}copy(e){return this.format=e.format,this.sampleCount=e.sampleCount,this.depthLoadOp=e.depthLoadOp,this.depthStoreOp=e.depthStoreOp,this.stencilLoadOp=e.stencilLoadOp,this.stencilStoreOp=e.stencilStoreOp,this.beginAccesses=e.beginAccesses.slice(),this.endAccesses=e.endAccesses.slice(),this.isGeneralLayout=e.isGeneralLayout,this}}class io{constructor(e=[],t=[],n=[],i=[],s=-1,r=-1,o=or.NONE,a=or.NONE){this.inputs=e,this.colors=t,this.resolves=n,this.preserves=i,this.depthStencil=s,this.depthStencilResolve=r,this.depthResolveMode=o,this.stencilResolveMode=a}copy(e){return this.inputs=e.inputs.slice(),this.colors=e.colors.slice(),this.resolves=e.resolves.slice(),this.preserves=e.preserves.slice(),this.depthStencil=e.depthStencil,this.depthStencilResolve=e.depthStencilResolve,this.depthResolveMode=e.depthResolveMode,this.stencilResolveMode=e.stencilResolveMode,this}}class so{constructor(e=0,t=0,n=[],i=[]){this.srcSubpass=e,this.dstSubpass=t,this.srcAccesses=n,this.dstAccesses=i}copy(e){return this.srcSubpass=e.srcSubpass,this.dstSubpass=e.dstSubpass,this.srcAccesses=e.srcAccesses.slice(),this.dstAccesses=e.dstAccesses.slice(),this}}class ro{constructor(e=[],t=new no,n=[],i=[]){this.colorAttachments=e,this.depthStencilAttachment=t,this.subpasses=n,this.dependencies=i}copy(e){return Rs(this.colorAttachments,e.colorAttachments,to),this.depthStencilAttachment.copy(e.depthStencilAttachment),Rs(this.subpasses,e.subpasses,io),Rs(this.dependencies,e.dependencies,so),this}}class oo{constructor(e=[],t=[]){this.prevAccesses=e,this.nextAccesses=t}copy(e){return this.prevAccesses=e.prevAccesses.slice(),this.nextAccesses=e.nextAccesses.slice(),this}}class ao{constructor(e=[],t=[],n=!1,i=null,s=null){this.prevAccesses=e,this.nextAccesses=t,this.discardContents=n,this.srcQueue=i,this.dstQueue=s}copy(e){return this.prevAccesses=e.prevAccesses.slice(),this.nextAccesses=e.nextAccesses.slice(),this.discardContents=e.discardContents,this.srcQueue=e.srcQueue,this.dstQueue=e.dstQueue,this}}class co{constructor(e=null,t=[],n=null){this.renderPass=e,this.colorTextures=t,this.depthStencilTexture=n}copy(e){return this.renderPass=e.renderPass,this.colorTextures=e.colorTextures.slice(),this.depthStencilTexture=e.depthStencilTexture,this}}class lo{constructor(e=-1,t=dr.UNKNOWN,n=0,i=tr.NONE,s=[]){this.binding=e,this.descriptorType=t,this.count=n,this.stageFlags=i,this.immutableSamplers=s}copy(e){return this.binding=e.binding,this.descriptorType=e.descriptorType,this.count=e.count,this.stageFlags=e.stageFlags,this.immutableSamplers=e.immutableSamplers.slice(),this}}class ho{constructor(e=[]){this.bindings=e}copy(e){return Rs(this.bindings,e.bindings,lo),this}}class _o{constructor(e=null){this.layout=e}copy(e){return this.layout=e.layout,this}}class uo{constructor(e=[]){this.setLayouts=e}copy(e){return this.setLayouts=e.setLayouts.slice(),this}}class po{constructor(e=[]){this.attributes=e}copy(e){return Rs(this.attributes,e.attributes,Qr),this}}class fo{constructor(e=null,t=gr.PRIMARY){this.queue=e,this.type=t}copy(e){return this.queue=e.queue,this.type=e.type,this}}class mo{constructor(e=fr.GRAPHICS){this.type=e}copy(e){return this.type=e.type,this}}class go{constructor(e=mr.OCCLUSION,t=65536,n=!0){this.type=e,this.maxQueryObjects=t,this.forceWait=n}copy(e){return this.type=e.type,this.maxQueryObjects=e.maxQueryObjects,this.forceWait=e.forceWait,this}}class vo{constructor(e="",t=0,n=0,i=Fs.NONE,s=!1,r=!1,o=!1,a=!1){this.name=e,this.size=t,this.count=n,this.type=i,this.hasAlpha=s,this.hasDepth=r,this.hasStencil=o,this.isCompressed=a}}class yo{constructor(e=0,t=0){this.bufferSize=e,this.textureSize=t}copy(e){return this.bufferSize=e.bufferSize,this.textureSize=e.textureSize,this}}class xo{constructor(e=0,t=0,n=0){this.writeMask=e,this.compareMask=t,this.reference=n}copy(e){return this.writeMask=e.writeMask,this.compareMask=e.compareMask,this.reference=e.reference,this}}class So{constructor(e=new Rr,t=new Tr,n=new Dr,i=1,s=0,r=0,o=0,a=0,c=0,l=new xo,h=new xo){this.viewport=e,this.scissor=t,this.blendConstant=n,this.lineWidth=i,this.depthBiasConstant=s,this.depthBiasClamp=r,this.depthBiasSlope=o,this.depthMinBounds=a,this.depthMaxBounds=c,this.stencilStatesFront=l,this.stencilStatesBack=h}copy(e){return this.viewport.copy(e.viewport),this.scissor.copy(e.scissor),this.blendConstant.copy(e.blendConstant),this.lineWidth=e.lineWidth,this.depthBiasConstant=e.depthBiasConstant,this.depthBiasClamp=e.depthBiasClamp,this.depthBiasSlope=e.depthBiasSlope,this.depthMinBounds=e.depthMinBounds,this.depthMaxBounds=e.depthMaxBounds,this.stencilStatesFront.copy(e.stencilStatesFront),this.stencilStatesBack.copy(e.stencilStatesBack),this}}class Co{get objectType(){return this._objectType}get objectID(){return this._objectID}get typedID(){return this._typedID}constructor(e){this._objectType=Ds.UNKNOWN,this._objectID=0,this._typedID=0,this._objectType=e,this._objectID=Co._idTable[Ds.UNKNOWN]++,this._typedID=Co._idTable[e]++}}Co._idTable=Array(Ds.COUNT).fill(65536),function(e){e.ATTR_POSITION="a_position",e.ATTR_NORMAL="a_normal",e.ATTR_TANGENT="a_tangent",e.ATTR_BITANGENT="a_bitangent",e.ATTR_WEIGHTS="a_weights",e.ATTR_JOINTS="a_joints",e.ATTR_COLOR="a_color",e.ATTR_COLOR1="a_color1",e.ATTR_COLOR2="a_color2",e.ATTR_TEX_COORD="a_texCoord",e.ATTR_TEX_COORD1="a_texCoord1",e.ATTR_TEX_COORD2="a_texCoord2",e.ATTR_TEX_COORD3="a_texCoord3",e.ATTR_TEX_COORD4="a_texCoord4",e.ATTR_TEX_COORD5="a_texCoord5",e.ATTR_TEX_COORD6="a_texCoord6",e.ATTR_TEX_COORD7="a_texCoord7",e.ATTR_TEX_COORD8="a_texCoord8",e.ATTR_BATCH_ID="a_batch_id",e.ATTR_BATCH_UV="a_batch_uv"}(yr||(yr={}));const To=Object.freeze([new vo("UNKNOWN",0,0,Fs.NONE,!1,!1,!1,!1),new vo("A8",1,1,Fs.UNORM,!0,!1,!1,!1),new vo("L8",1,1,Fs.UNORM,!1,!1,!1,!1),new vo("LA8",1,2,Fs.UNORM,!0,!1,!1,!1),new vo("R8",1,1,Fs.UNORM,!1,!1,!1,!1),new vo("R8SN",1,1,Fs.SNORM,!1,!1,!1,!1),new vo("R8UI",1,1,Fs.UINT,!1,!1,!1,!1),new vo("R8I",1,1,Fs.INT,!1,!1,!1,!1),new vo("R16F",2,1,Fs.FLOAT,!1,!1,!1,!1),new vo("R16UI",2,1,Fs.UINT,!1,!1,!1,!1),new vo("R16I",2,1,Fs.INT,!1,!1,!1,!1),new vo("R32F",4,1,Fs.FLOAT,!1,!1,!1,!1),new vo("R32UI",4,1,Fs.UINT,!1,!1,!1,!1),new vo("R32I",4,1,Fs.INT,!1,!1,!1,!1),new vo("RG8",2,2,Fs.UNORM,!1,!1,!1,!1),new vo("RG8SN",2,2,Fs.SNORM,!1,!1,!1,!1),new vo("RG8UI",2,2,Fs.UINT,!1,!1,!1,!1),new vo("RG8I",2,2,Fs.INT,!1,!1,!1,!1),new vo("RG16F",4,2,Fs.FLOAT,!1,!1,!1,!1),new vo("RG16UI",4,2,Fs.UINT,!1,!1,!1,!1),new vo("RG16I",4,2,Fs.INT,!1,!1,!1,!1),new vo("RG32F",8,2,Fs.FLOAT,!1,!1,!1,!1),new vo("RG32UI",8,2,Fs.UINT,!1,!1,!1,!1),new vo("RG32I",8,2,Fs.INT,!1,!1,!1,!1),new vo("RGB8",3,3,Fs.UNORM,!1,!1,!1,!1),new vo("SRGB8",3,3,Fs.UNORM,!1,!1,!1,!1),new vo("RGB8SN",3,3,Fs.SNORM,!1,!1,!1,!1),new vo("RGB8UI",3,3,Fs.UINT,!1,!1,!1,!1),new vo("RGB8I",3,3,Fs.INT,!1,!1,!1,!1),new vo("RGB16F",6,3,Fs.FLOAT,!1,!1,!1,!1),new vo("RGB16UI",6,3,Fs.UINT,!1,!1,!1,!1),new vo("RGB16I",6,3,Fs.INT,!1,!1,!1,!1),new vo("RGB32F",12,3,Fs.FLOAT,!1,!1,!1,!1),new vo("RGB32UI",12,3,Fs.UINT,!1,!1,!1,!1),new vo("RGB32I",12,3,Fs.INT,!1,!1,!1,!1),new vo("RGBA8",4,4,Fs.UNORM,!0,!1,!1,!1),new vo("BGRA8",4,4,Fs.UNORM,!0,!1,!1,!1),new vo("SRGB8_A8",4,4,Fs.UNORM,!0,!1,!1,!1),new vo("RGBA8SN",4,4,Fs.SNORM,!0,!1,!1,!1),new vo("RGBA8UI",4,4,Fs.UINT,!0,!1,!1,!1),new vo("RGBA8I",4,4,Fs.INT,!0,!1,!1,!1),new vo("RGBA16F",8,4,Fs.FLOAT,!0,!1,!1,!1),new vo("RGBA16UI",8,4,Fs.UINT,!0,!1,!1,!1),new vo("RGBA16I",8,4,Fs.INT,!0,!1,!1,!1),new vo("RGBA32F",16,4,Fs.FLOAT,!0,!1,!1,!1),new vo("RGBA32UI",16,4,Fs.UINT,!0,!1,!1,!1),new vo("RGBA32I",16,4,Fs.INT,!0,!1,!1,!1),new vo("R5G6B5",2,3,Fs.UNORM,!1,!1,!1,!1),new vo("R11G11B10F",4,3,Fs.FLOAT,!1,!1,!1,!1),new vo("RGB5A1",2,4,Fs.UNORM,!0,!1,!1,!1),new vo("RGBA4",2,4,Fs.UNORM,!0,!1,!1,!1),new vo("RGB10A2",2,4,Fs.UNORM,!0,!1,!1,!1),new vo("RGB10A2UI",2,4,Fs.UINT,!0,!1,!1,!1),new vo("RGB9E5",2,4,Fs.FLOAT,!0,!1,!1,!1),new vo("DEPTH",4,1,Fs.FLOAT,!1,!0,!1,!1),new vo("DEPTH_STENCIL",5,2,Fs.FLOAT,!1,!0,!0,!1),new vo("BC1",1,3,Fs.UNORM,!1,!1,!1,!0),new vo("BC1_ALPHA",1,4,Fs.UNORM,!0,!1,!1,!0),new vo("BC1_SRGB",1,3,Fs.UNORM,!1,!1,!1,!0),new vo("BC1_SRGB_ALPHA",1,4,Fs.UNORM,!0,!1,!1,!0),new vo("BC2",1,4,Fs.UNORM,!0,!1,!1,!0),new vo("BC2_SRGB",1,4,Fs.UNORM,!0,!1,!1,!0),new vo("BC3",1,4,Fs.UNORM,!0,!1,!1,!0),new vo("BC3_SRGB",1,4,Fs.UNORM,!0,!1,!1,!0),new vo("BC4",1,1,Fs.UNORM,!1,!1,!1,!0),new vo("BC4_SNORM",1,1,Fs.SNORM,!1,!1,!1,!0),new vo("BC5",1,2,Fs.UNORM,!1,!1,!1,!0),new vo("BC5_SNORM",1,2,Fs.SNORM,!1,!1,!1,!0),new vo("BC6H_UF16",1,3,Fs.UFLOAT,!1,!1,!1,!0),new vo("BC6H_SF16",1,3,Fs.FLOAT,!1,!1,!1,!0),new vo("BC7",1,4,Fs.UNORM,!0,!1,!1,!0),new vo("BC7_SRGB",1,4,Fs.UNORM,!0,!1,!1,!0),new vo("ETC_RGB8",1,3,Fs.UNORM,!1,!1,!1,!0),new vo("ETC2_RGB8",1,3,Fs.UNORM,!1,!1,!1,!0),new vo("ETC2_SRGB8",1,3,Fs.UNORM,!1,!1,!1,!0),new vo("ETC2_RGB8_A1",1,4,Fs.UNORM,!0,!1,!1,!0),new vo("ETC2_SRGB8_A1",1,4,Fs.UNORM,!0,!1,!1,!0),new vo("ETC2_RGBA8",2,4,Fs.UNORM,!0,!1,!1,!0),new vo("ETC2_SRGB8_A8",2,4,Fs.UNORM,!0,!1,!1,!0),new vo("EAC_R11",1,1,Fs.UNORM,!1,!1,!1,!0),new vo("EAC_R11SN",1,1,Fs.SNORM,!1,!1,!1,!0),new vo("EAC_RG11",2,2,Fs.UNORM,!1,!1,!1,!0),new vo("EAC_RG11SN",2,2,Fs.SNORM,!1,!1,!1,!0),new vo("PVRTC_RGB2",2,3,Fs.UNORM,!1,!1,!1,!0),new vo("PVRTC_RGBA2",2,4,Fs.UNORM,!0,!1,!1,!0),new vo("PVRTC_RGB4",2,3,Fs.UNORM,!1,!1,!1,!0),new vo("PVRTC_RGBA4",2,4,Fs.UNORM,!0,!1,!1,!0),new vo("PVRTC2_2BPP",2,4,Fs.UNORM,!0,!1,!1,!0),new vo("PVRTC2_4BPP",2,4,Fs.UNORM,!0,!1,!1,!0),new vo("ASTC_RGBA_4x4",1,4,Fs.UNORM,!0,!1,!1,!0),new vo("ASTC_RGBA_5x4",1,4,Fs.UNORM,!0,!1,!1,!0),new vo("ASTC_RGBA_5x5",1,4,Fs.UNORM,!0,!1,!1,!0),new vo("ASTC_RGBA_6x5",1,4,Fs.UNORM,!0,!1,!1,!0),new vo("ASTC_RGBA_6x6",1,4,Fs.UNORM,!0,!1,!1,!0),new vo("ASTC_RGBA_8x5",1,4,Fs.UNORM,!0,!1,!1,!0),new vo("ASTC_RGBA_8x6",1,4,Fs.UNORM,!0,!1,!1,!0),new vo("ASTC_RGBA_8x8",1,4,Fs.UNORM,!0,!1,!1,!0),new vo("ASTC_RGBA_10x5",1,4,Fs.UNORM,!0,!1,!1,!0),new vo("ASTC_RGBA_10x6",1,4,Fs.UNORM,!0,!1,!1,!0),new vo("ASTC_RGBA_10x8",1,4,Fs.UNORM,!0,!1,!1,!0),new vo("ASTC_RGBA_10x10",1,4,Fs.UNORM,!0,!1,!1,!0),new vo("ASTC_RGBA_12x10",1,4,Fs.UNORM,!0,!1,!1,!0),new vo("ASTC_RGBA_12x12",1,4,Fs.UNORM,!0,!1,!1,!0),new vo("ASTC_SRGBA_4x4",1,4,Fs.UNORM,!0,!1,!1,!0),new vo("ASTC_SRGBA_5x4",1,4,Fs.UNORM,!0,!1,!1,!0),new vo("ASTC_SRGBA_5x5",1,4,Fs.UNORM,!0,!1,!1,!0),new vo("ASTC_SRGBA_6x5",1,4,Fs.UNORM,!0,!1,!1,!0),new vo("ASTC_SRGBA_6x6",1,4,Fs.UNORM,!0,!1,!1,!0),new vo("ASTC_SRGBA_8x5",1,4,Fs.UNORM,!0,!1,!1,!0),new vo("ASTC_SRGBA_8x6",1,4,Fs.UNORM,!0,!1,!1,!0),new vo("ASTC_SRGBA_8x8",1,4,Fs.UNORM,!0,!1,!1,!0),new vo("ASTC_SRGBA_10x5",1,4,Fs.UNORM,!0,!1,!1,!0),new vo("ASTC_SRGBA_10x6",1,4,Fs.UNORM,!0,!1,!1,!0),new vo("ASTC_SRGBA_10x8",1,4,Fs.UNORM,!0,!1,!1,!0),new vo("ASTC_SRGBA_10x10",1,4,Fs.UNORM,!0,!1,!1,!0),new vo("ASTC_SRGBA_12x10",1,4,Fs.UNORM,!0,!1,!1,!0),new vo("ASTC_SRGBA_12x12",1,4,Fs.UNORM,!0,!1,!1,!0)]),bo=dr.UNIFORM_BUFFER|dr.DYNAMIC_UNIFORM_BUFFER|dr.STORAGE_BUFFER|dr.DYNAMIC_STORAGE_BUFFER,Eo=dr.SAMPLER_TEXTURE|dr.SAMPLER|dr.TEXTURE|dr.STORAGE_IMAGE|dr.INPUT_ATTACHMENT,Ao=dr.DYNAMIC_STORAGE_BUFFER|dr.DYNAMIC_UNIFORM_BUFFER,Po=28;function wo(e){return e>0&&0==(e&e-1)}function Io(e,t,n,i){if(!To[e].isCompressed)return t*n*i*To[e].size;switch(e){case zs.BC1:case zs.BC1_ALPHA:case zs.BC1_SRGB:case zs.BC1_SRGB_ALPHA:return Math.ceil(t/4)*Math.ceil(n/4)*8*i;case zs.BC2:case zs.BC2_SRGB:case zs.BC3:case zs.BC3_SRGB:case zs.BC4:case zs.BC4_SNORM:case zs.BC6H_SF16:case zs.BC6H_UF16:case zs.BC7:case zs.BC7_SRGB:return Math.ceil(t/4)*Math.ceil(n/4)*16*i;case zs.BC5:case zs.BC5_SNORM:return Math.ceil(t/4)*Math.ceil(n/4)*32*i;case zs.ETC_RGB8:case zs.ETC2_RGB8:case zs.ETC2_SRGB8:case zs.ETC2_RGB8_A1:case zs.EAC_R11:case zs.EAC_R11SN:return Math.ceil(t/4)*Math.ceil(n/4)*8*i;case zs.ETC2_RGBA8:case zs.ETC2_SRGB8_A1:case zs.EAC_RG11:case zs.EAC_RG11SN:return Math.ceil(t/4)*Math.ceil(n/4)*16*i;case zs.PVRTC_RGB2:case zs.PVRTC_RGBA2:case zs.PVRTC2_2BPP:return Math.ceil(Math.max(t,16)*Math.max(n,8)/4)*i;case zs.PVRTC_RGB4:case zs.PVRTC_RGBA4:case zs.PVRTC2_4BPP:return Math.ceil(Math.max(t,8)*Math.max(n,8)/2)*i;case zs.ASTC_RGBA_4X4:case zs.ASTC_SRGBA_4X4:return Math.ceil(t/4)*Math.ceil(n/4)*16*i;case zs.ASTC_RGBA_5X4:case zs.ASTC_SRGBA_5X4:return Math.ceil(t/5)*Math.ceil(n/4)*16*i;case zs.ASTC_RGBA_5X5:case zs.ASTC_SRGBA_5X5:return Math.ceil(t/5)*Math.ceil(n/5)*16*i;case zs.ASTC_RGBA_6X5:case zs.ASTC_SRGBA_6X5:return Math.ceil(t/6)*Math.ceil(n/5)*16*i;case zs.ASTC_RGBA_6X6:case zs.ASTC_SRGBA_6X6:return Math.ceil(t/6)*Math.ceil(n/6)*16*i;case zs.ASTC_RGBA_8X5:case zs.ASTC_SRGBA_8X5:return Math.ceil(t/8)*Math.ceil(n/5)*16*i;case zs.ASTC_RGBA_8X6:case zs.ASTC_SRGBA_8X6:return Math.ceil(t/8)*Math.ceil(n/6)*16*i;case zs.ASTC_RGBA_8X8:case zs.ASTC_SRGBA_8X8:return Math.ceil(t/8)*Math.ceil(n/8)*16*i;case zs.ASTC_RGBA_10X5:case zs.ASTC_SRGBA_10X5:return Math.ceil(t/10)*Math.ceil(n/5)*16*i;case zs.ASTC_RGBA_10X6:case zs.ASTC_SRGBA_10X6:return Math.ceil(t/10)*Math.ceil(n/6)*16*i;case zs.ASTC_RGBA_10X8:case zs.ASTC_SRGBA_10X8:return Math.ceil(t/10)*Math.ceil(n/8)*16*i;case zs.ASTC_RGBA_10X10:case zs.ASTC_SRGBA_10X10:return Math.ceil(t/10)*Math.ceil(n/10)*16*i;case zs.ASTC_RGBA_12X10:case zs.ASTC_SRGBA_12X10:return Math.ceil(t/12)*Math.ceil(n/10)*16*i;case zs.ASTC_RGBA_12X12:case zs.ASTC_SRGBA_12X12:return Math.ceil(t/12)*Math.ceil(n/12)*16*i;default:return 0}}function Ro(e,t,n,i,s){let r=0;for(let o=0;o<s;++o)r+=Io(e,t,n,i),t=Math.max(t>>1,1),n=Math.max(n>>1,1);return r}const Do=[0,4,8,12,16,4,8,12,16,4,8,12,16,4,8,12,16,16,24,32,24,36,48,32,48,64,4,4,4,4,4,4];function Oo(e){return Do[e]||0}function Mo(e){const t=e.size/e.count;switch(e.type){case Fs.UNORM:case Fs.UINT:switch(t){case 1:return Uint8Array;case 2:return Uint16Array;case 4:return Uint32Array}break;case Fs.SNORM:case Fs.INT:switch(t){case 1:return Int8Array;case 2:return Int16Array;case 4:return Int32Array}break;case Fs.FLOAT:return Float32Array}return Float32Array}var No=Object.freeze({__proto__:null,get ObjectType(){return Ds},get Status(){return Os},get API(){return Ms},get SurfaceTransform(){return Ns},get Feature(){return Ls},get Format(){return zs},get FormatType(){return Fs},get Type(){return Bs},get BufferUsageBit(){return Us},get BufferFlagBit(){return Gs},get MemoryAccessBit(){return Hs},get MemoryUsageBit(){return ks},get TextureType(){return Vs},get TextureUsageBit(){return js},get TextureFlagBit(){return Ws},get SampleCount(){return qs},get VsyncMode(){return Xs},get Filter(){return Ys},get Address(){return Ks},get ComparisonFunc(){return $s},get StencilOp(){return Zs},get BlendFactor(){return Qs},get BlendOp(){return Js},get ColorMask(){return er},get ShaderStageFlagBit(){return tr},get LoadOp(){return ir},get StoreOp(){return sr},get AccessType(){return rr},get ResolveMode(){return or},get PipelineBindPoint(){return ar},get PrimitiveMode(){return cr},get PolygonMode(){return lr},get ShadeModel(){return hr},get CullMode(){return _r},get DynamicStateFlagBit(){return ur},get StencilFace(){return pr},get DescriptorType(){return dr},get QueueType(){return fr},get QueryType(){return mr},get CommandBufferType(){return gr},get ClearFlagBit(){return vr},Size:xr,DeviceCaps:Sr,Offset:Cr,Rect:Tr,Extent:br,TextureSubresLayers:Er,TextureSubresRange:Ar,TextureCopy:Pr,TextureBlit:wr,BufferTextureCopy:Ir,Viewport:Rr,Color:Dr,BindingMappingInfo:Or,SwapchainInfo:Mr,DeviceInfo:Nr,BufferInfo:Lr,BufferViewInfo:zr,DrawInfo:Fr,DispatchInfo:Br,IndirectBuffer:Ur,TextureInfo:Gr,TextureViewInfo:Hr,SamplerInfo:kr,Uniform:Vr,UniformBlock:jr,UniformSamplerTexture:Wr,UniformSampler:qr,UniformTexture:Xr,UniformStorageImage:Yr,UniformStorageBuffer:Kr,UniformInputAttachment:$r,ShaderStage:Zr,Attribute:Qr,ShaderInfo:Jr,InputAssemblerInfo:eo,ColorAttachment:to,DepthStencilAttachment:no,SubpassInfo:io,SubpassDependency:so,RenderPassInfo:ro,GlobalBarrierInfo:oo,TextureBarrierInfo:ao,FramebufferInfo:co,DescriptorSetLayoutBinding:lo,DescriptorSetLayoutInfo:ho,DescriptorSetInfo:_o,PipelineLayoutInfo:uo,InputState:po,CommandBufferInfo:fo,QueueInfo:mo,QueryPoolInfo:go,FormatInfo:vo,MemoryStatus:yo,DynamicStencilStates:xo,DynamicStates:So,GFXObject:Co,get AttributeName(){return yr},FormatInfos:To,DESCRIPTOR_BUFFER_TYPE:bo,DESCRIPTOR_SAMPLER_TYPE:Eo,DESCRIPTOR_DYNAMIC_TYPE:Ao,DRAW_INFO_SIZE:Po,IsPowerOf2:wo,FormatSize:Io,FormatSurfaceSize:Ro,GetTypeSize:Oo,getTypedArrayConstructor:Mo});class Lo{constructor(e=!1,t=lr.FILL,n=hr.GOURAND,i=_r.BACK,s=!0,r=!1,o=0,a=0,c=0,l=!0,h=!1,_=1){this._nativeObj=void 0,this._isDiscard=!1,this._polygonMode=lr.FILL,this._shadeModel=hr.GOURAND,this._cullMode=_r.BACK,this._isFrontFaceCCW=!0,this._depthBiasEnabled=!1,this._depthBias=0,this._depthBiasClamp=0,this._depthBiasSlop=0,this._isDepthClip=!0,this._isMultisample=!1,this._lineWidth=1,this._nativeObj=new gfx.RasterizerState,this.assignProperties(e,t,n,i,s,r,o,a,c,l,h,_)}get native(){return this._nativeObj}get isDiscard(){return this._isDiscard}set isDiscard(e){this._isDiscard=e,this._nativeObj.isDiscard=e}get polygonMode(){return this._polygonMode}set polygonMode(e){this._polygonMode=e,this._nativeObj.polygonMode=e}get shadeModel(){return this._shadeModel}set shadeModel(e){this._shadeModel=e,this._nativeObj.shadeModel=e}get cullMode(){return this._cullMode}set cullMode(e){this._cullMode=e,this._nativeObj.cullMode=e}get isFrontFaceCCW(){return this._isFrontFaceCCW}set isFrontFaceCCW(e){this._isFrontFaceCCW=e,this._nativeObj.isFrontFaceCCW=e}get depthBiasEnabled(){return this._depthBiasEnabled}set depthBiasEnabled(e){this._depthBiasEnabled=e,this._nativeObj.depthBiasEnabled=e}get depthBias(){return this._depthBias}set depthBias(e){this._depthBias=e,this._nativeObj.depthBias=e}get depthBiasClamp(){return this._depthBiasClamp}set depthBiasClamp(e){this._depthBiasClamp=e,this._nativeObj.depthBiasClamp=e}get depthBiasSlop(){return this._depthBiasSlop}set depthBiasSlop(e){this._depthBiasSlop=e,this._nativeObj.depthBiasSlop=e}get isDepthClip(){return this._isDepthClip}set isDepthClip(e){this._isDepthClip=e,this._nativeObj.isDepthClip=e}get isMultisample(){return this._isMultisample}set isMultisample(e){this._isMultisample=e,this._nativeObj.isMultisample=e}get lineWidth(){return this._lineWidth}set lineWidth(e){this._lineWidth=e,this._nativeObj.lineWidth=e}reset(){this.assignProperties(!1,lr.FILL,hr.GOURAND,_r.BACK,!0,!1,0,0,0,!0,!1,1)}assign(e){e&&this.assignProperties(e.isDiscard,e.polygonMode,e.shadeModel,e.cullMode,e.isFrontFaceCCW,e.depthBiasEnabled,e.depthBias,e.depthBiasClamp,e.depthBiasSlop,e.isDepthClip,e.isMultisample,e.lineWidth)}destroy(){this._nativeObj=null}assignProperties(e,t,n,i,s,r,o,a,c,l,h,_){void 0!==e&&(this.isDiscard=e),void 0!==t&&(this.polygonMode=t),void 0!==n&&(this.shadeModel=n),void 0!==i&&(this.cullMode=i),void 0!==s&&(this.isFrontFaceCCW=s),void 0!==r&&(this.depthBiasEnabled=r),void 0!==o&&(this.depthBias=o),void 0!==a&&(this.depthBiasClamp=a),void 0!==c&&(this.depthBiasSlop=c),void 0!==l&&(this.isDepthClip=l),void 0!==h&&(this.isMultisample=h),void 0!==_&&(this.lineWidth=_)}}class zo{constructor(e=!0,t=!0,n=$s.LESS,i=!1,s=$s.ALWAYS,r=65535,o=65535,a=Zs.KEEP,c=Zs.KEEP,l=Zs.KEEP,h=1,_=!1,u=$s.ALWAYS,p=65535,d=65535,f=Zs.KEEP,m=Zs.KEEP,g=Zs.KEEP,v=1){this._nativeObj=void 0,this._depthTest=!0,this._depthWrite=!0,this._depthFunc=$s.LESS,this._stencilTestFront=!1,this._stencilFuncFront=$s.ALWAYS,this._stencilReadMaskFront=65535,this._stencilWriteMaskFront=65535,this._stencilFailOpFront=Zs.KEEP,this._stencilZFailOpFront=Zs.KEEP,this._stencilPassOpFront=Zs.KEEP,this._stencilRefFront=1,this._stencilTestBack=!1,this._stencilFuncBack=$s.ALWAYS,this._stencilReadMaskBack=65535,this._stencilWriteMaskBack=65535,this._stencilFailOpBack=Zs.KEEP,this._stencilZFailOpBack=Zs.KEEP,this._stencilPassOpBack=Zs.KEEP,this._stencilRefBack=1,this._nativeObj=new gfx.DepthStencilState,this.assignProperties(e,t,n,i,s,r,o,a,c,l,h,_,u,p,d,f,m,g,v)}get native(){return this._nativeObj}get depthTest(){return this._depthTest}set depthTest(e){this._depthTest=e,this._nativeObj.depthTest=e}get depthWrite(){return this._depthWrite}set depthWrite(e){this._depthWrite=e,this._nativeObj.depthWrite=e}get depthFunc(){return this._depthFunc}set depthFunc(e){this._depthFunc=e,this._nativeObj.depthFunc=e}get stencilTestFront(){return this._stencilTestFront}set stencilTestFront(e){this._stencilTestFront=e,this._nativeObj.stencilTestFront=e}get stencilFuncFront(){return this._stencilFuncFront}set stencilFuncFront(e){this._stencilFuncFront=e,this._nativeObj.stencilFuncFront=e}get stencilReadMaskFront(){return this._stencilReadMaskFront}set stencilReadMaskFront(e){this._stencilReadMaskFront=e,this._nativeObj.stencilReadMaskFront=e}get stencilWriteMaskFront(){return this._stencilWriteMaskFront}set stencilWriteMaskFront(e){this._stencilWriteMaskFront=e,this._nativeObj.stencilWriteMaskFront=e}get stencilFailOpFront(){return this._stencilFailOpFront}set stencilFailOpFront(e){this._stencilFailOpFront=e,this._nativeObj.stencilFailOpFront=e}get stencilZFailOpFront(){return this._stencilZFailOpFront}set stencilZFailOpFront(e){this._stencilZFailOpFront=e,this._nativeObj.stencilZFailOpFront=e}get stencilPassOpFront(){return this._stencilPassOpFront}set stencilPassOpFront(e){this._stencilPassOpFront=e,this._nativeObj.stencilPassOpFront=e}get stencilRefFront(){return this._stencilRefFront}set stencilRefFront(e){this._stencilRefFront=e,this._nativeObj.stencilRefFront=e}get stencilTestBack(){return this._stencilTestBack}set stencilTestBack(e){this._stencilTestBack=e,this._nativeObj.stencilTestBack=e}get stencilFuncBack(){return this._stencilFuncBack}set stencilFuncBack(e){this._stencilFuncBack=e,this._nativeObj.stencilFuncBack=e}get stencilReadMaskBack(){return this._stencilReadMaskBack}set stencilReadMaskBack(e){this._stencilReadMaskBack=e,this._nativeObj.stencilReadMaskBack=e}get stencilWriteMaskBack(){return this._stencilWriteMaskBack}set stencilWriteMaskBack(e){this._stencilWriteMaskBack=e,this._nativeObj.stencilWriteMaskBack=e}get stencilFailOpBack(){return this._stencilFailOpBack}set stencilFailOpBack(e){this._stencilFailOpBack=e,this._nativeObj.stencilFailOpBack=e}get stencilZFailOpBack(){return this._stencilZFailOpBack}set stencilZFailOpBack(e){this._stencilZFailOpBack=e,this._nativeObj.stencilZFailOpBack=e}get stencilPassOpBack(){return this._stencilPassOpBack}set stencilPassOpBack(e){this._stencilPassOpBack=e,this._nativeObj.stencilPassOpBack=e}get stencilRefBack(){return this._stencilRefBack}set stencilRefBack(e){this._stencilRefBack=e,this._nativeObj.stencilRefBack=e}reset(){this.assignProperties(!0,!0,$s.LESS,!1,$s.ALWAYS,65535,65535,Zs.KEEP,Zs.KEEP,Zs.KEEP,1,!1,$s.ALWAYS,65535,65535,Zs.KEEP,Zs.KEEP,Zs.KEEP,1)}assign(e){e&&this.assignProperties(e.depthTest,e.depthWrite,e.depthFunc,e.stencilTestFront,e.stencilFuncFront,e.stencilReadMaskFront,e.stencilWriteMaskFront,e.stencilFailOpFront,e.stencilZFailOpFront,e.stencilPassOpFront,e.stencilRefFront,e.stencilTestBack,e.stencilFuncBack,e.stencilReadMaskBack,e.stencilWriteMaskBack,e.stencilFailOpBack,e.stencilZFailOpBack,e.stencilPassOpBack,e.stencilRefBack)}destroy(){this._nativeObj=null}assignProperties(e,t,n,i,s,r,o,a,c,l,h,_,u,p,d,f,m,g,v){void 0!==e&&(this.depthTest=e),void 0!==t&&(this.depthWrite=t),void 0!==n&&(this.depthFunc=n),void 0!==i&&(this.stencilTestFront=i),void 0!==s&&(this.stencilFuncFront=s),void 0!==r&&(this.stencilReadMaskFront=r),void 0!==o&&(this.stencilWriteMaskFront=o),void 0!==a&&(this.stencilFailOpFront=a),void 0!==c&&(this.stencilZFailOpFront=c),void 0!==l&&(this.stencilPassOpFront=l),void 0!==h&&(this.stencilRefFront=h),void 0!==_&&(this.stencilTestBack=_),void 0!==u&&(this.stencilFuncBack=u),void 0!==p&&(this.stencilReadMaskBack=p),void 0!==d&&(this.stencilWriteMaskBack=d),void 0!==f&&(this.stencilFailOpBack=f),void 0!==m&&(this.stencilZFailOpBack=m),void 0!==g&&(this.stencilPassOpBack=g),void 0!==v&&(this.stencilRefBack=v)}}class Fo{get native(){return this._nativeObj}constructor(e=!1,t=Qs.ONE,n=Qs.ZERO,i=Js.ADD,s=Qs.ONE,r=Qs.ZERO,o=Js.ADD,a=er.ALL){this._nativeObj=void 0,this._blend=!1,this._blendSrc=Qs.ONE,this._blendDst=Qs.ZERO,this._blendEq=Js.ADD,this._blendSrcAlpha=Qs.ONE,this._blendDstAlpha=Qs.ZERO,this._blendAlphaEq=Js.ADD,this._blendColorMask=er.ALL,this._nativeObj=new gfx.BlendTarget,this.assignProperties(e,t,n,i,s,r,o,a)}get blend(){return this._blend}set blend(e){this._blend=e,this._nativeObj.blend=e}get blendSrc(){return this._blendSrc}set blendSrc(e){this._blendSrc=e,this._nativeObj.blendSrc=e}get blendDst(){return this._blendDst}set blendDst(e){this._blendDst=e,this._nativeObj.blendDst=e}get blendEq(){return this._blendEq}set blendEq(e){this._blendEq=e,this._nativeObj.blendEq=e}get blendSrcAlpha(){return this._blendSrcAlpha}set blendSrcAlpha(e){this._blendSrcAlpha=e,this._nativeObj.blendSrcAlpha=e}get blendDstAlpha(){return this._blendDstAlpha}set blendDstAlpha(e){this._blendDstAlpha=e,this._nativeObj.blendDstAlpha=e}get blendAlphaEq(){return this._blendAlphaEq}set blendAlphaEq(e){this._blendAlphaEq=e,this._nativeObj.blendAlphaEq=e}get blendColorMask(){return this._blendColorMask}set blendColorMask(e){this._blendColorMask=e,this._nativeObj.blendColorMask=e}reset(){this.assignProperties(!1,Qs.ONE,Qs.ZERO,Js.ADD,Qs.ONE,Qs.ZERO,Js.ADD,er.ALL)}destroy(){this._nativeObj=null}assign(e){e&&this.assignProperties(e.blend,e.blendSrc,e.blendDst,e.blendEq,e.blendSrcAlpha,e.blendDstAlpha,e.blendAlphaEq,e.blendColorMask)}assignProperties(e,t,n,i,s,r,o,a){void 0!==e&&(this.blend=e),void 0!==t&&(this.blendSrc=t),void 0!==n&&(this.blendDst=n),void 0!==i&&(this.blendEq=i),void 0!==s&&(this.blendSrcAlpha=s),void 0!==r&&(this.blendDstAlpha=r),void 0!==o&&(this.blendAlphaEq=o),void 0!==a&&(this.blendColorMask=a)}}class Bo{_setTargets(e){this.targets=e;const t="$__nativeObj";this._syncTargetsToNativeObj(t),function(e,t,n,i,s){for(let r=0,o=t.length;r<o;r++){let o=t[r],a=o[n].$__nativeObj||o[n];o[n]=new Proxy(a,{get:(e,t)=>t===i?e:Reflect.get(e,t),set:(t,n,i)=>(Reflect.set(t,n,i),s(e),!0)})}}(this,this.targets,"_nativeObj",t,(e=>{e._syncTargetsToNativeObj(t)}))}_syncTargetsToNativeObj(e){const t=this.targets.map((t=>t.native[e]||t.native));this._nativeObj.targets=t}get native(){return this._nativeObj}constructor(e=!1,t=!1,n=new Dr,i=[new Fo]){this.targets=void 0,this._blendColor=void 0,this._nativeObj=void 0,this._isA2C=!1,this._isIndepend=!1,this._nativeObj=new gfx.BlendState,this._setTargets(i),this.blendColor=n,this.isA2c=e,this.isIndepend=t}get isA2c(){return this._isA2C}set isA2c(e){this._isA2C=e,this._nativeObj.isA2C=e}get isIndepend(){return this._isIndepend}set isIndepend(e){this._isIndepend=e,this._nativeObj.isIndepend=e}get blendColor(){return this._blendColor}set blendColor(e){this._blendColor=e,this._nativeObj.blendColor=e}setTarget(e,t){let n=this.targets[e];n||(n=this.targets[e]=new Fo),n.assign(t),this._setTargets(this.targets)}reset(){this.isA2c=!1,this.isIndepend=!1,this.blendColor=new Dr(0,0,0,0);const e=this.targets;for(let t=1,n=e.length;t<n;++t)e[t].destroy();e.length=1,e[0].reset(),this._setTargets(e)}destroy(){for(let e=0,t=this.targets.length;e<t;++e)this.targets[e].destroy();this.targets=null,this._nativeObj=null}}const Uo=gfx.PipelineState,Go=gfx.PipelineStateInfo;class Ho extends Co{get layout(){return this._layout}constructor(){super(Ds.DESCRIPTOR_SET),this._layout=null,this._buffers=[],this._textures=[],this._samplers=[],this._isDirty=!1}bindBuffer(e,t,n=0){const i=this._layout.bindingIndices[e],s=this._layout.bindings[i];if(s&&s.descriptorType&bo){const i=this._layout.descriptorIndices[e];this._buffers[i+n]!==t&&(this._buffers[i+n]=t,this._isDirty=!0)}}bindSampler(e,t,n=0){const i=this._layout.bindingIndices[e],s=this._layout.bindings[i];if(s&&s.descriptorType&Eo){const i=this._layout.descriptorIndices[e];this._samplers[i+n]!==t&&(this._samplers[i+n]=t,this._isDirty=!0)}}bindTexture(e,t,n=0){const i=this._layout.bindingIndices[e],s=this._layout.bindings[i];if(s&&s.descriptorType&Eo){const i=this._layout.descriptorIndices[e];this._textures[i+n]!==t&&(this._textures[i+n]=t,this._isDirty=!0)}}getBuffer(e,t=0){const n=this._layout.descriptorIndices[e];return this._buffers[n+t]}getSampler(e,t=0){const n=this._layout.descriptorIndices[e];return this._samplers[n+t]}getTexture(e,t=0){const n=this._layout.descriptorIndices[e];return this._textures[n+t]}}class ko extends Co{get usage(){return this._usage}get memUsage(){return this._memUsage}get size(){return this._size}get stride(){return this._stride}get count(){return this._count}get flags(){return this._flags}constructor(){super(Ds.BUFFER),this._usage=Us.NONE,this._memUsage=ks.NONE,this._size=0,this._stride=1,this._count=0,this._flags=Gs.NONE,this._isBufferView=!1}}class Vo extends Co{get type(){return this._type}get queue(){return this._queue}get numDrawCalls(){return this._numDrawCalls}get numInstances(){return this._numInstances}get numTris(){return this._numTris}constructor(){super(Ds.COMMAND_BUFFER),this._queue=null,this._type=gr.PRIMARY,this._numDrawCalls=0,this._numInstances=0,this._numTris=0}}class jo{constructor(){this._gfxAPI=Ms.UNKNOWN,this._renderer="",this._vendor="",this._features=new Array(Ls.COUNT),this._queue=null,this._cmdBuff=null,this._numDrawCalls=0,this._numInstances=0,this._numTris=0,this._memoryStatus=new yo,this._caps=new Sr,this._bindingMappingInfo=new Or,this._samplers=new Map,this._globalBarriers=new Map,this._textureBarriers=new Map}get gfxAPI(){return this._gfxAPI}get queue(){return this._queue}get commandBuffer(){return this._cmdBuff}get renderer(){return this._renderer}get vendor(){return this._vendor}get numDrawCalls(){return this._numDrawCalls}get numInstances(){return this._numInstances}get numTris(){return this._numTris}get memoryStatus(){return this._memoryStatus}get capabilities(){return this._caps}get bindingMappingInfo(){return this._bindingMappingInfo}hasFeature(e){return this._features[e]}}jo.canvas=void 0;class Wo extends Co{get colorTexture(){return this._colorTexture}get depthStencilTexture(){return this._depthStencilTexture}get surfaceTransform(){return this._transform}get width(){return this._colorTexture.width}get height(){return this._colorTexture.height}constructor(){super(Ds.SWAPCHAIN),this._transform=Ns.IDENTITY,this._colorTexture=null,this._depthStencilTexture=null}}class qo extends Co{get renderPass(){return this._renderPass}get colorTextures(){return this._colorTextures}get depthStencilTexture(){return this._depthStencilTexture}constructor(){super(Ds.FRAMEBUFFER),this._renderPass=null,this._colorTextures=[],this._depthStencilTexture=null}}const Xo=String.prototype.charCodeAt;function Yo(e){return this[e]}function Ko(e,t){let n=e.length,i=t^n,s=0;const r="string"==typeof e?Xo:Yo;for(;n>=4;){let t=255&r.call(e,s)|(255&r.call(e,++s))<<8|(255&r.call(e,++s))<<16|(255&r.call(e,++s))<<24;t=1540483477*(65535&t)+((1540483477*(t>>>16)&65535)<<16),t^=t>>>24,t=1540483477*(65535&t)+((1540483477*(t>>>16)&65535)<<16),i=1540483477*(65535&i)+((1540483477*(i>>>16)&65535)<<16)^t,n-=4,++s}switch(n){case 3:i^=(255&r.call(e,s+2))<<16;case 2:i^=(255&r.call(e,s+1))<<8;case 1:i^=255&r.call(e,s),i=1540483477*(65535&i)+((1540483477*(i>>>16)&65535)<<16)}return i^=i>>>13,i=1540483477*(65535&i)+((1540483477*(i>>>16)&65535)<<16),i^=i>>>15,i>>>0}class $o extends Co{get attributes(){return this._attributes}get vertexBuffers(){return this._vertexBuffers}get indexBuffer(){return this._indexBuffer}get indirectBuffer(){return this._indirectBuffer}get attributesHash(){return this._attributesHash}set vertexCount(e){this._drawInfo.vertexCount=e}get vertexCount(){return this._drawInfo.vertexCount}set firstVertex(e){this._drawInfo.firstVertex=e}get firstVertex(){return this._drawInfo.firstVertex}set indexCount(e){this._drawInfo.indexCount=e}get indexCount(){return this._drawInfo.indexCount}set firstIndex(e){this._drawInfo.firstIndex=e}get firstIndex(){return this._drawInfo.firstIndex}set vertexOffset(e){this._drawInfo.vertexOffset=e}get vertexOffset(){return this._drawInfo.vertexOffset}set instanceCount(e){this._drawInfo.instanceCount=e}get instanceCount(){return this._drawInfo.instanceCount}set firstInstance(e){this._drawInfo.firstInstance=e}get firstInstance(){return this._drawInfo.firstInstance}get drawInfo(){return this._drawInfo}constructor(){super(Ds.INPUT_ASSEMBLER),this._attributes=[],this._attributesHash=0,this._vertexBuffers=[],this._indexBuffer=null,this._indirectBuffer=null,this._drawInfo=new Fr}getVertexBuffer(e=0){return e<this._vertexBuffers.length?this._vertexBuffers[e]:null}computeAttributesHash(){let e="attrs";for(let t=0;t<this.attributes.length;++t){const n=this.attributes[t];e+=`,${n.name},${n.format},${n.isNormalized},${n.stream},${n.isInstanced}`}return Ko(e,666)}}class Zo extends Co{get bindings(){return this._bindings}get bindingIndices(){return this._bindingIndices}get descriptorIndices(){return this._descriptorIndices}constructor(){super(Ds.DESCRIPTOR_SET_LAYOUT),this._bindings=[],this._bindingIndices=[],this._descriptorIndices=[]}}class Qo extends Co{get setLayouts(){return this._setLayouts}constructor(){super(Ds.PIPELINE_LAYOUT),this._setLayouts=[]}}class Jo extends Co{get type(){return this._type}constructor(){super(Ds.QUEUE),this._type=fr.GRAPHICS}}class ea extends Co{get colorAttachments(){return this._colorInfos}get depthStencilAttachment(){return this._depthStencilInfo}get subPasses(){return this._subpasses}get hash(){return this._hash}constructor(){super(Ds.RENDER_PASS),this._colorInfos=[],this._depthStencilInfo=null,this._subpasses=[],this._hash=0}computeHash(){let e="";if(this._subpasses.length)for(let t=0;t<this._subpasses.length;++t){const n=this._subpasses[t];if(n.inputs.length){e+="ia";for(let t=0;t<n.inputs.length;++t){const i=this._colorInfos[n.inputs[t]];e+=`,${i.format},${i.sampleCount}`}}if(n.colors.length){e+="ca";for(let t=0;t<n.inputs.length;++t){const i=this._colorInfos[n.inputs[t]];e+=`,${i.format},${i.sampleCount}`}}if(n.depthStencil>=0){const t=this._colorInfos[n.depthStencil];e+=`ds,${t.format},${t.sampleCount}`}}else{e+="ca";for(let t=0;t<this._colorInfos.length;++t){const n=this._colorInfos[t];e+=`,${n.format},${n.sampleCount}`}const t=this._depthStencilInfo;t&&(e+=`ds,${t.format},${t.sampleCount}`)}return Ko(e,666)}}class ta extends Co{get name(){return this._name}get attributes(){return this._attributes}get blocks(){return this._blocks}get samplers(){return this._samplers}constructor(){super(Ds.SHADER),this._name="",this._stages=[],this._attributes=[],this._blocks=[],this._samplers=[]}}class na extends Co{get type(){return this._type}get usage(){return this._usage}get format(){return this._format}get width(){return this._width}get height(){return this._height}get depth(){return this._depth}get layerCount(){return this._layerCount}get levelCount(){return this._levelCount}get samples(){return this._samples}get flags(){return this._flags}get size(){return this._size}constructor(){super(Ds.TEXTURE),this._type=Vs.TEX2D,this._usage=js.NONE,this._format=zs.UNKNOWN,this._width=0,this._height=0,this._depth=1,this._layerCount=1,this._levelCount=1,this._samples=qs.ONE,this._flags=Ws.NONE,this._isPowerOf2=!1,this._size=0}}class ia extends Co{get info(){return this._info}get hash(){return this._hash}constructor(e,t){super(Ds.SAMPLER),this._info=new kr,this._hash=0,this._info.copy(e),this._hash=t}static computeHash(e){let t=e.minFilter;return t|=e.magFilter<<2,t|=e.mipFilter<<4,t|=e.addressU<<6,t|=e.addressV<<8,t|=e.addressW<<10,t|=e.maxAnisotropy<<12,t|=e.cmpFunc<<16,t}static unpackFromHash(e){const t=new kr;return t.minFilter=(3&e)>>0,t.magFilter=(3&e)>>2,t.mipFilter=(3&e)>>4,t.addressU=(3&e)>>6,t.addressV=(3&e)>>8,t.addressW=(3&e)>>10,t.maxAnisotropy=(15&e)>>12,t.cmpFunc=(7&e)>>16,t}}class sa extends Co{get info(){return this._info}get hash(){return this._hash}constructor(e,t){super(Ds.GLOBAL_BARRIER),this._info=new oo,this._hash=0,this._info.copy(e),this._hash=t}static computeHash(e){let t="prev:";for(let n=0;n<e.prevAccesses.length;++n)t+=` ${e.prevAccesses[n]}`;t+="next:";for(let n=0;n<e.nextAccesses.length;++n)t+=` ${e.nextAccesses[n]}`;return Ko(t,666)}}class ra extends Co{get info(){return this._info}get hash(){return this._hash}constructor(e,t){super(Ds.TEXTURE_BARRIER),this._info=new ao,this._hash=0,this._info.copy(e),this._hash=t}static computeHash(e){let t="prev:";for(let n=0;n<e.prevAccesses.length;++n)t+=` ${e.prevAccesses[n]}`;t+="next:";for(let n=0;n<e.nextAccesses.length;++n)t+=` ${e.nextAccesses[n]}`;return t+=e.discardContents,t+=e.srcQueue?e.srcQueue.type:0,t+=e.dstQueue?e.dstQueue.type:0,Ko(t,666)}}const oa={Obj:"GFXObject",DRAW_INFO_SIZE:"GFX_DRAW_INFO_SIZE",DESCRIPTOR_BUFFER_TYPE:"",DESCRIPTOR_SAMPLER_TYPE:"",DESCRIPTOR_DYNAMIC_TYPE:"",getTypedArrayConstructor:""};for(const e in i.gfx){if("__esModule"===e)continue;let t=oa[e];""===t?t=e:void 0===t&&(t=`GFX${e}`),Cn(i,"cc",[{name:t,newName:e,target:i.gfx,targetName:"cc.gfx"}])}const aa=Object.assign({},No);aa.Device=gfx.Device,aa.Swapchain=gfx.Swapchain,aa.Buffer=gfx.Buffer,aa.Texture=gfx.Texture,aa.Sampler=gfx.Sampler,aa.Shader=gfx.Shader,aa.InputAssembler=gfx.InputAssembler,aa.RenderPass=gfx.RenderPass,aa.Framebuffer=gfx.Framebuffer,aa.DescriptorSet=gfx.DescriptorSet,aa.DescriptorSetLayout=gfx.DescriptorSetLayout,aa.PipelineLayout=gfx.PipelineLayout,aa.PipelineState=gfx.PipelineState,aa.CommandBuffer=gfx.CommandBuffer,aa.Queue=gfx.Queue,i.gfx=aa;const ca=Fo,la=Bo,ha=Lo,_a=zo,ua=Uo,pa=Go;let da;aa.BlendTarget=Fo,aa.BlendState=Bo,aa.RasterizerState=Lo,aa.DepthStencilState=zo,aa.PipelineStateInfo=Go,e("gfx",Object.freeze({__proto__:null,DescriptorSet:Ho,Buffer:ko,CommandBuffer:Vo,get ObjectType(){return Ds},get Status(){return Os},get API(){return Ms},get SurfaceTransform(){return Ns},get Feature(){return Ls},get Format(){return zs},get FormatType(){return Fs},get Type(){return Bs},get BufferUsageBit(){return Us},get BufferFlagBit(){return Gs},get MemoryAccessBit(){return Hs},get MemoryUsageBit(){return ks},get TextureType(){return Vs},get TextureUsageBit(){return js},get TextureFlagBit(){return Ws},get SampleCount(){return qs},get VsyncMode(){return Xs},get Filter(){return Ys},get Address(){return Ks},get ComparisonFunc(){return $s},get StencilOp(){return Zs},get BlendFactor(){return Qs},get BlendOp(){return Js},get ColorMask(){return er},get ShaderStageFlagBit(){return tr},get LoadOp(){return ir},get StoreOp(){return sr},get AccessType(){return rr},get ResolveMode(){return or},get PipelineBindPoint(){return ar},get PrimitiveMode(){return cr},get PolygonMode(){return lr},get ShadeModel(){return hr},get CullMode(){return _r},get DynamicStateFlagBit(){return ur},get StencilFace(){return pr},get DescriptorType(){return dr},get QueueType(){return fr},get QueryType(){return mr},get CommandBufferType(){return gr},get ClearFlagBit(){return vr},Size:xr,DeviceCaps:Sr,Offset:Cr,Rect:Tr,Extent:br,TextureSubresLayers:Er,TextureSubresRange:Ar,TextureCopy:Pr,TextureBlit:wr,BufferTextureCopy:Ir,Viewport:Rr,Color:Dr,BindingMappingInfo:Or,SwapchainInfo:Mr,DeviceInfo:Nr,BufferInfo:Lr,BufferViewInfo:zr,DrawInfo:Fr,DispatchInfo:Br,IndirectBuffer:Ur,TextureInfo:Gr,TextureViewInfo:Hr,SamplerInfo:kr,Uniform:Vr,UniformBlock:jr,UniformSamplerTexture:Wr,UniformSampler:qr,UniformTexture:Xr,UniformStorageImage:Yr,UniformStorageBuffer:Kr,UniformInputAttachment:$r,ShaderStage:Zr,Attribute:Qr,ShaderInfo:Jr,InputAssemblerInfo:eo,ColorAttachment:to,DepthStencilAttachment:no,SubpassInfo:io,SubpassDependency:so,RenderPassInfo:ro,GlobalBarrierInfo:oo,TextureBarrierInfo:ao,FramebufferInfo:co,DescriptorSetLayoutBinding:lo,DescriptorSetLayoutInfo:ho,DescriptorSetInfo:_o,PipelineLayoutInfo:uo,InputState:po,CommandBufferInfo:fo,QueueInfo:mo,QueryPoolInfo:go,FormatInfo:vo,MemoryStatus:yo,DynamicStencilStates:xo,DynamicStates:So,GFXObject:Co,get AttributeName(){return yr},FormatInfos:To,DESCRIPTOR_BUFFER_TYPE:bo,DESCRIPTOR_SAMPLER_TYPE:Eo,DESCRIPTOR_DYNAMIC_TYPE:Ao,DRAW_INFO_SIZE:Po,IsPowerOf2:wo,FormatSize:Io,FormatSurfaceSize:Ro,GetTypeSize:Oo,getTypedArrayConstructor:Mo,Device:jo,Swapchain:Wo,Framebuffer:qo,InputAssembler:$o,DescriptorSetLayout:Zo,PipelineLayout:Qo,Queue:Jo,RenderPass:ea,Shader:ta,Texture:na,Sampler:ia,GlobalBarrier:sa,TextureBarrier:ra,BlendTarget:ca,BlendState:la,RasterizerState:ha,DepthStencilState:_a,PipelineState:ua,PipelineStateInfo:pa})),function(e){e[e.ALL=0]="ALL",e[e.CLOSEST=1]="CLOSEST",e[e.ANY=2]="ANY"}(da||(da={}));const fa=function(){const e=new ri(0,0,0);return function(t,n){const i=ri.dot(t.d,n.n);if(Math.abs(i)<Number.EPSILON)return 0;ri.multiplyScalar(e,n.n,n.d);const s=ri.dot(ri.subtract(e,e,t.o),n.n)/i;return s<0?0:s}}(),ma=function(){const e=new ri(0,0,0),t=new ri(0,0,0),n=new ri(0,0,0),i=new ri(0,0,0),s=new ri(0,0,0);return function(r,o,a){ri.subtract(e,o.b,o.a),ri.subtract(t,o.c,o.a),ri.cross(n,r.d,t);const c=ri.dot(e,n);if(c<Number.EPSILON&&(!a||c>-Number.EPSILON))return 0;const l=1/c;ri.subtract(i,r.o,o.a);const h=ri.dot(i,n)*l;if(h<0||h>1)return 0;ri.cross(s,i,e);const _=ri.dot(r.d,s)*l;if(_<0||h+_>1)return 0;const u=ri.dot(t,s)*l;return u<0?0:u}}(),ga=function(){const e=new ri(0,0,0);return function(t,n){const i=n.radius,s=n.center,r=t.o,o=t.d,a=i*i;ri.subtract(e,s,r);const c=e.lengthSqr(),l=ri.dot(e,o),h=a-(c-l*l);if(h<0)return 0;const _=Math.sqrt(h),u=c<a?l+_:l-_;return u<0?0:u}}(),va=function(){const e=new ri,t=new ri;return function(n,i){return ri.subtract(e,i.center,i.halfExtents),ri.add(t,i.center,i.halfExtents),ya(n,e,t)}}();function ya(e,t,n){const i=e.o,s=e.d,r=1/s.x,o=1/s.y,a=1/s.z,c=(t.x-i.x)*r,l=(n.x-i.x)*r,h=(t.y-i.y)*o,_=(n.y-i.y)*o,u=(t.z-i.z)*a,p=(n.z-i.z)*a,d=Math.max(Math.max(Math.min(c,l),Math.min(h,_)),Math.min(u,p)),f=Math.min(Math.min(Math.max(c,l),Math.max(h,_)),Math.max(u,p));return f<0||d>f?0:d>0?d:f}const xa=function(){let e=new ri,t=new ri,n=new ri;const i=new ri,s=new ri,r=new ri,o=new ri,a=new Array(3),c=new Array(3),l=new Array(3),h=new Array(6);return function(_,u){a[0]=u.halfExtents.x,a[1]=u.halfExtents.y,a[2]=u.halfExtents.z,e=u.center,t=_.o,n=_.d,ri.set(i,u.orientation.m00,u.orientation.m01,u.orientation.m02),ri.set(s,u.orientation.m03,u.orientation.m04,u.orientation.m05),ri.set(r,u.orientation.m06,u.orientation.m07,u.orientation.m08),ri.subtract(o,e,t),c[0]=ri.dot(i,n),c[1]=ri.dot(s,n),c[2]=ri.dot(r,n),l[0]=ri.dot(i,o),l[1]=ri.dot(s,o),l[2]=ri.dot(r,o);for(let e=0;e<3;++e){if(0===c[e]){if(-l[e]-a[e]>0||-l[e]+a[e]<0)return 0;c[e]=1e-7}h[2*e+0]=(l[e]+a[e])/c[e],h[2*e+1]=(l[e]-a[e])/c[e]}const p=Math.max(Math.max(Math.min(h[0],h[1]),Math.min(h[2],h[3])),Math.min(h[4],h[5])),d=Math.min(Math.min(Math.max(h[0],h[1]),Math.max(h[2],h[3])),Math.max(h[4],h[5]));return d<0||p>d?0:p>0?p:d}}(),Sa=function(){const e=new ri,t=new ri,n=new ri,i=new ri,s=new ri,r=new ri,o=new ri,a=new ws;return function(c,l){const h=l.radius*l.radius,_=ri.normalize(e,c.d),u=l.ellipseCenter0,p=l.ellipseCenter1,d=ri.subtract(t,p,u);if(d.equals(ri.ZERO))return a.radius=l.radius,a.center.set(l.ellipseCenter0),Qa.raySphere(c,a);const f=c.o,m=ri.subtract(n,f,u),g=ri.cross(i,_,d),v=g.lengthSqr();if(0===v){a.radius=l.radius;const e=ri.subtract(s,p,f);return m.lengthSqr()<e.lengthSqr()?a.center.set(l.ellipseCenter0):a.center.set(l.ellipseCenter1),Qa.raySphere(c,a)}const y=ri.cross(s,m,d),x=d.lengthSqr(),S=2*ri.dot(g,y),C=S*S-4*v*(y.lengthSqr()-h*x);if(C<0)return 0;const T=(-S-Math.sqrt(C))/(2*v);if(T<0){a.radius=l.radius;const e=ri.subtract(r,p,f);return m.lengthSqr()<e.lengthSqr()?a.center.set(l.ellipseCenter0):a.center.set(l.ellipseCenter1),Qa.raySphere(c,a)}{const e=ri.scaleAndAdd(r,c.o,_,T),t=ri.subtract(o,e,u),n=ri.dot(t,d)/x;return n>=0&&n<=1?T:n<0?(a.radius=l.radius,a.center.set(l.ellipseCenter0),Qa.raySphere(c,a)):n>1?(a.radius=l.radius,a.center.set(l.ellipseCenter1),Qa.raySphere(c,a)):0}}}(),Ca=function(){const e=Is.create(),t={distance:1/0,doubleSided:!1,mode:da.ANY};let n=0;const i=(e,t,i,s,r,o)=>{e===da.CLOSEST?(n>t||0===n)&&(n=t,o&&(0===o.length?o.push({distance:t,vertexIndex0:i/3,vertexIndex1:s/3,vertexIndex2:r/3}):(o[0].distance=t,o[0].vertexIndex0=i/3,o[0].vertexIndex1=s/3,o[0].vertexIndex2=r/3))):(n=t,o&&o.push({distance:t,vertexIndex0:i/3,vertexIndex1:s/3,vertexIndex2:r/3}))};return function(s,r,o){if(n=0,0===r.geometricInfo.positions.length)return n;const a=void 0===o?t:o;if(ya(s,r.geometricInfo.boundingBox.min,r.geometricInfo.boundingBox.max)){const t=r.primitiveMode,{positions:n,indices:o}=r.geometricInfo;((t,n,s,r,o)=>{if(s===cr.TRIANGLE_LIST){const s=n.length;for(let a=0;a<s;a+=3){const s=3*n[a],c=3*n[a+1],l=3*n[a+2];ri.set(e.a,t[s],t[s+1],t[s+2]),ri.set(e.b,t[c],t[c+1],t[c+2]),ri.set(e.c,t[l],t[l+1],t[l+2]);const h=Qa.rayTriangle(r,e,o.doubleSided);if(!(0===h||h>o.distance)&&(i(o.mode,h,s,c,l,o.result),o.mode===da.ANY))return h}}else if(s===cr.TRIANGLE_STRIP){const s=n.length-2;let a=0;for(let c=0;c<s;c+=1){const s=3*n[c-a],l=3*n[c+a+1],h=3*n[c+2];ri.set(e.a,t[s],t[s+1],t[s+2]),ri.set(e.b,t[l],t[l+1],t[l+2]),ri.set(e.c,t[h],t[h+1],t[h+2]),a=~a;const _=Qa.rayTriangle(r,e,o.doubleSided);if(!(0===_||_>o.distance)&&(i(o.mode,_,s,l,h,o.result),o.mode===da.ANY))return _}}else if(s===cr.TRIANGLE_FAN){const s=n.length-1,a=3*n[0];ri.set(e.a,t[a],t[a+1],t[a+2]);for(let c=1;c<s;c+=1){const s=3*n[c],l=3*n[c+1];ri.set(e.b,t[s],t[s+1],t[s+2]),ri.set(e.c,t[l],t[l+1],t[l+2]);const h=Qa.rayTriangle(r,e,o.doubleSided);if(!(0===h||h>o.distance)&&(i(o.mode,h,a,s,l,o.result),o.mode===da.ANY))return h}}})(n,o,t,s,a)}return n}}(),Ta=function(){let e=0;const t={distance:1/0,doubleSided:!1,mode:da.ANY};return function(n,i,s){e=0;const r=void 0===s?t:s,o=i.renderingSubMeshes.length,a=i.struct.minPosition,c=i.struct.maxPosition;if(a&&c&&!ya(n,a,c))return e;for(let t=0;t<o;t++){const s=i.renderingSubMeshes[t],o=Ca(n,s,r);if(o)if(r.mode===da.CLOSEST)(0===e||e>o)&&(e=o,r.subIndices&&(r.subIndices[0]=t));else if(e=o,r.subIndices&&r.subIndices.push(t),r.mode===da.ANY)return o}return e&&r.mode===da.CLOSEST&&(r.result&&(r.result[0].distance=e,r.result.length=1),r.subIndices&&(r.subIndices.length=1)),e}}(),ba=function(){let e=0;const t={distance:1/0,doubleSided:!1,mode:da.ANY},n=new Cs,i=new xi;return function(s,r,o){e=0;const a=void 0===o?t:o,c=r.worldBounds;if(c&&!va(s,c))return e;Cs.copy(n,s),r.node&&(xi.invert(i,r.node.getWorldMatrix(i)),ri.transformMat4(n.o,s.o,i),ri.transformMat4Normal(n.d,s.d,i));const l=r.subModels;for(let t=0;t<l.length;t++){const i=l[t].subMesh,s=Ca(n,i,a);if(s)if(a.mode===da.CLOSEST)(0===e||e>s)&&(e=s,a.subIndices&&(a.subIndices[0]=t));else if(e=s,a.subIndices&&a.subIndices.push(t),a.mode===da.ANY)return s}return e&&a.mode===da.CLOSEST&&(a.result&&(a.result[0].distance=e,a.result.length=1),a.subIndices&&(a.subIndices.length=1)),e}}(),Ea=function(){const e=new ri(0,0,0);return function(t,n){ri.subtract(e,t.e,t.s);const i=(n.d-ri.dot(t.s,n.n))/ri.dot(e,n.n);return i<0||i>1?0:i}}(),Aa=function(){const e=new ri(0,0,0),t=new ri(0,0,0),n=new ri(0,0,0),i=new ri(0,0,0),s=new ri(0,0,0),r=new ri(0,0,0);return function(o,a,c){ri.subtract(e,a.b,a.a),ri.subtract(t,a.c,a.a),ri.subtract(n,o.s,o.e),ri.cross(s,e,t);const l=ri.dot(n,s);if(l<=0)return 0;ri.subtract(i,o.s,a.a);const h=ri.dot(i,s);if(h<0||h>l)return 0;ri.cross(r,n,i);let _=ri.dot(t,r);if(_<0||_>l)return 0;let u=-ri.dot(e,r);if(u<0||_+u>l)return 0;if(c){const e=1/l;_*=e,u*=e;const t=1-_-u;ri.set(c,a.a.x*t+a.b.x*_+a.c.x*u,a.a.y*t+a.b.y*_+a.c.y*u,a.a.z*t+a.b.z*_+a.c.z*u)}return 1}}(),Pa=new Cs;function wa(e,t){Pa.o.set(e.s),ri.subtract(Pa.d,e.e,e.s),Pa.d.normalize();const n=va(Pa,t);return n<=e.length()?n:0}function Ia(e,t){Pa.o.set(e.s),ri.subtract(Pa.d,e.e,e.s),Pa.d.normalize();const n=xa(Pa,t);return n<=e.length()?n:0}function Ra(e,t){Pa.o.set(e.s),ri.subtract(Pa.d,e.e,e.s),Pa.d.normalize();const n=ga(Pa,t);return n<=e.length()?n:0}const Da=function(){const e=new ri,t=new ri,n=new ri,i=new ri;return function(s,r){return ri.subtract(e,s.center,s.halfExtents),ri.add(t,s.center,s.halfExtents),ri.subtract(n,r.center,r.halfExtents),ri.add(i,r.center,r.halfExtents),e.x<=i.x&&t.x>=n.x&&e.y<=i.y&&t.y>=n.y&&e.z<=i.z&&t.z>=n.z}}();function Oa(e,t,n,i,s,r){ri.set(r[0],e.x+n.x*t.x+i.x*t.y+s.x*t.z,e.y+n.y*t.x+i.y*t.y+s.y*t.z,e.z+n.z*t.x+i.z*t.y+s.z*t.z),ri.set(r[1],e.x-n.x*t.x+i.x*t.y+s.x*t.z,e.y-n.y*t.x+i.y*t.y+s.y*t.z,e.z-n.z*t.x+i.z*t.y+s.z*t.z),ri.set(r[2],e.x+n.x*t.x-i.x*t.y+s.x*t.z,e.y+n.y*t.x-i.y*t.y+s.y*t.z,e.z+n.z*t.x-i.z*t.y+s.z*t.z),ri.set(r[3],e.x+n.x*t.x+i.x*t.y-s.x*t.z,e.y+n.y*t.x+i.y*t.y-s.y*t.z,e.z+n.z*t.x+i.z*t.y-s.z*t.z),ri.set(r[4],e.x-n.x*t.x-i.x*t.y-s.x*t.z,e.y-n.y*t.x-i.y*t.y-s.y*t.z,e.z-n.z*t.x-i.z*t.y-s.z*t.z),ri.set(r[5],e.x+n.x*t.x-i.x*t.y-s.x*t.z,e.y+n.y*t.x-i.y*t.y-s.y*t.z,e.z+n.z*t.x-i.z*t.y-s.z*t.z),ri.set(r[6],e.x-n.x*t.x+i.x*t.y-s.x*t.z,e.y-n.y*t.x+i.y*t.y-s.y*t.z,e.z-n.z*t.x+i.z*t.y-s.z*t.z),ri.set(r[7],e.x-n.x*t.x-i.x*t.y+s.x*t.z,e.y-n.y*t.x-i.y*t.y+s.y*t.z,e.z-n.z*t.x-i.z*t.y+s.z*t.z)}function Ma(e,t){let n=ri.dot(t,e[0]),i=n;for(let s=1;s<8;++s){const r=ri.dot(t,e[s]);n=r<n?r:n,i=r>i?r:i}return[n,i]}const Na=function(){const e=new Array(15);for(let t=0;t<15;t++)e[t]=new ri(0,0,0);const t=new Array(8),n=new Array(8);for(let e=0;e<8;e++)t[e]=new ri(0,0,0),n[e]=new ri(0,0,0);const i=new ri,s=new ri;return function(r,o){ri.set(e[0],1,0,0),ri.set(e[1],0,1,0),ri.set(e[2],0,0,1),ri.set(e[3],o.orientation.m00,o.orientation.m01,o.orientation.m02),ri.set(e[4],o.orientation.m03,o.orientation.m04,o.orientation.m05),ri.set(e[5],o.orientation.m06,o.orientation.m07,o.orientation.m08);for(let t=0;t<3;++t)ri.cross(e[6+3*t],e[t],e[3]),ri.cross(e[7+3*t],e[t],e[4]),ri.cross(e[7+3*t],e[t],e[5]);ri.subtract(i,r.center,r.halfExtents),ri.add(s,r.center,r.halfExtents),function(e,t,n){ri.set(n[0],e.x,t.y,t.z),ri.set(n[1],e.x,t.y,e.z),ri.set(n[2],e.x,e.y,t.z),ri.set(n[3],e.x,e.y,e.z),ri.set(n[4],t.x,t.y,t.z),ri.set(n[5],t.x,t.y,e.z),ri.set(n[6],t.x,e.y,t.z),ri.set(n[7],t.x,e.y,e.z)}(i,s,t),Oa(o.center,o.halfExtents,e[3],e[4],e[5],n);for(let i=0;i<15;++i){const s=Ma(t,e[i]),r=Ma(n,e[i]);if(r[0]>s[1]||s[0]>r[1])return 0}return 1}}(),La=function(e,t){const n=e.halfExtents.x*Math.abs(t.n.x)+e.halfExtents.y*Math.abs(t.n.y)+e.halfExtents.z*Math.abs(t.n.z),i=ri.dot(t.n,e.center);return i+n<t.d?-1:i-n>t.d?0:1},za=function(e,t){for(let n=0;n<t.planes.length;n++)if(-1===La(e,t.planes[n]))return 0;return 1},Fa=function(){const e=new Array(8);let t=0,n=0;for(let t=0;t<e.length;t++)e[t]=new ri(0,0,0);return function(i,s){let r=0,o=!1;for(let e=0;e<s.planes.length;e++){if(r=La(i,s.planes[e]),-1===r)return 0;1===r&&(o=!0)}if(!o)return 1;for(let t=0;t<s.vertices.length;t++)ri.subtract(e[t],s.vertices[t],i.center);t=0,n=0;for(let r=0;r<s.vertices.length;r++)e[r].x>i.halfExtents.x?t++:e[r].x<-i.halfExtents.x&&n++;if(t===s.vertices.length||n===s.vertices.length)return 0;t=0,n=0;for(let r=0;r<s.vertices.length;r++)e[r].y>i.halfExtents.y?t++:e[r].y<-i.halfExtents.y&&n++;if(t===s.vertices.length||n===s.vertices.length)return 0;t=0,n=0;for(let r=0;r<s.vertices.length;r++)e[r].z>i.halfExtents.z?t++:e[r].z<-i.halfExtents.z&&n++;return t===s.vertices.length||n===s.vertices.length?0:1}}(),Ba=function(){const e=new ri(0,0,0),t=new li;return function(n,i){return ri.subtract(e,i,n.center),ri.transformMat3(e,e,li.transpose(t,n.orientation)),s=e,r=n.halfExtents,Math.abs(s.x)<r.x&&Math.abs(s.y)<r.y&&Math.abs(s.z)<r.z;var s,r}}(),Ua=function(){const e=function(e,t,n,i){return Math.abs(e.x*t+e.y*n+e.z*i)};return function(t,n){const i=t.halfExtents.x*e(n.n,t.orientation.m00,t.orientation.m01,t.orientation.m02)+t.halfExtents.y*e(n.n,t.orientation.m03,t.orientation.m04,t.orientation.m05)+t.halfExtents.z*e(n.n,t.orientation.m06,t.orientation.m07,t.orientation.m08),s=ri.dot(n.n,t.center);return s+i<n.d?-1:s-i>n.d?0:1}}(),Ga=function(e,t){for(let n=0;n<t.planes.length;n++)if(-1===Ua(e,t.planes[n]))return 0;return 1},Ha=function(){const e=new Array(8);let t=0,n=0,i=0;for(let t=0;t<e.length;t++)e[t]=new ri(0,0,0);const s=function(e,t,n,i){return e.x*t+e.y*n+e.z*i};return function(r,o){let a=0,c=!1;for(let e=0;e<o.planes.length;e++){if(a=Ua(r,o.planes[e]),-1===a)return 0;1===a&&(c=!0)}if(!c)return 1;for(let t=0;t<o.vertices.length;t++)ri.subtract(e[t],o.vertices[t],r.center);n=0,i=0;for(let a=0;a<o.vertices.length;a++)t=s(e[a],r.orientation.m00,r.orientation.m01,r.orientation.m02),t>r.halfExtents.x?n++:t<-r.halfExtents.x&&i++;if(n===o.vertices.length||i===o.vertices.length)return 0;n=0,i=0;for(let a=0;a<o.vertices.length;a++)t=s(e[a],r.orientation.m03,r.orientation.m04,r.orientation.m05),t>r.halfExtents.y?n++:t<-r.halfExtents.y&&i++;if(n===o.vertices.length||i===o.vertices.length)return 0;n=0,i=0;for(let a=0;a<o.vertices.length;a++)t=s(e[a],r.orientation.m06,r.orientation.m07,r.orientation.m08),t>r.halfExtents.z?n++:t<-r.halfExtents.z&&i++;return n===o.vertices.length||i===o.vertices.length?0:1}}(),ka=function(){const e=new Array(15);for(let t=0;t<15;t++)e[t]=new ri(0,0,0);const t=new Array(8),n=new Array(8);for(let e=0;e<8;e++)t[e]=new ri(0,0,0),n[e]=new ri(0,0,0);return function(i,s){ri.set(e[0],i.orientation.m00,i.orientation.m01,i.orientation.m02),ri.set(e[1],i.orientation.m03,i.orientation.m04,i.orientation.m05),ri.set(e[2],i.orientation.m06,i.orientation.m07,i.orientation.m08),ri.set(e[3],s.orientation.m00,s.orientation.m01,s.orientation.m02),ri.set(e[4],s.orientation.m03,s.orientation.m04,s.orientation.m05),ri.set(e[5],s.orientation.m06,s.orientation.m07,s.orientation.m08);for(let t=0;t<3;++t)ri.cross(e[6+3*t],e[t],e[3]),ri.cross(e[7+3*t],e[t],e[4]),ri.cross(e[8+3*t],e[t],e[5]);Oa(i.center,i.halfExtents,e[0],e[1],e[2],t),Oa(s.center,s.halfExtents,e[3],e[4],e[5],n);for(let i=0;i<15;++i){const s=Ma(t,e[i]),r=Ma(n,e[i]);if(r[0]>s[1]||s[0]>r[1])return 0}return 1}}(),Va=function(){const e=new ws,t=new ri,n=new ri,i=new ri,s=new Array(8);for(let e=0;e<8;e++)s[e]=new ri;const r=new Array(8);for(let e=0;e<8;e++)r[e]=new ri;return function(o,a){if(0===ri.squaredDistance(a.ellipseCenter0,a.ellipseCenter1))return e.radius=a.radius,e.center.set(a.ellipseCenter0),Qa.sphereOBB(e,o);{t.x=o.orientation.m00,t.y=o.orientation.m01,t.z=o.orientation.m02,n.x=o.orientation.m03,n.y=o.orientation.m04,n.z=o.orientation.m05,i.x=o.orientation.m06,i.y=o.orientation.m07,i.z=o.orientation.m08,Oa(o.center,o.halfExtents,t,n,i,s);const e=r,c=ri.copy(e[0],t),l=ri.copy(e[1],n),h=ri.copy(e[2],i);ri.subtract(e[3],a.center,o.center).normalize();const _=ri.subtract(e[4],a.ellipseCenter0,a.ellipseCenter1);_.normalize(),ri.cross(e[5],c,_),ri.cross(e[6],l,_),ri.cross(e[7],h,_);for(let t=0;t<8;++t){const n=Ma(s,e[t]),i=ri.dot(e[t],a.ellipseCenter0),r=ri.dot(e[t],a.ellipseCenter1),o=Math.max(i,r),c=Math.min(i,r)-a.radius,l=o+a.radius;if(c>n[1]||n[0]>l)return 0}return 1}}}(),ja=function(e,t){const n=ri.dot(t.n,e.center),i=e.radius*t.n.length();return n+i<t.d?-1:n-i>t.d?0:1},Wa=function(e,t){for(let n=0;n<t.planes.length;n++)if(-1===ja(e,t.planes[n]))return 0;return 1},qa=function(){const e=new ri(0,0,0),t=[1,-1,1,-1,1,-1];return function(n,i){for(let s=0;s<6;s++){const r=i.planes[s],o=n.radius,a=n.center,c=r.n,l=r.d,h=ri.dot(c,a);if(h+o<l)return 0;if(!(h-o>l)){ri.add(e,a,ri.multiplyScalar(e,c,o));for(let n=0;n<6;n++){if(n===s||n===s+t[s])continue;const r=i.planes[n];if(ri.dot(r.n,e)<r.d)return 0}}}return 1}}(),Xa=function(e,t){const n=e.radius+t.radius;return ri.squaredDistance(e.center,t.center)<n*n},Ya=function(){const e=new ri;return function(t,n){return gs(e,t.center,n),ri.squaredDistance(t.center,e)<t.radius*t.radius}}(),Ka=function(){const e=new ri;return function(t,n){return vs(e,t.center,n),ri.squaredDistance(t.center,e)<t.radius*t.radius}}(),$a=function(){const e=new ri,t=new ri;return function(n,i){const s=n.radius+i.radius,r=s*s,o=ri.squaredDistance(i.ellipseCenter0,i.ellipseCenter1);if(0===o)return ri.squaredDistance(n.center,i.center)<r;{ri.subtract(e,n.center,i.ellipseCenter0),ri.subtract(t,i.ellipseCenter1,i.ellipseCenter0);const s=ri.dot(e,t)/o;return s<0?ri.squaredDistance(n.center,i.ellipseCenter0)<r:s>1?ri.squaredDistance(n.center,i.ellipseCenter1)<r:(ri.scaleAndAdd(e,i.ellipseCenter0,t,s),ri.squaredDistance(n.center,e)<r)}}}(),Za=function(){const e=new ri,t=new ri,n=new ri,i=new ri,s=new ri,r=new ri;return function(o,a){const c=ri.subtract(e,o.ellipseCenter1,o.ellipseCenter0),l=ri.subtract(t,a.ellipseCenter1,a.ellipseCenter0),h=ri.subtract(n,o.ellipseCenter0,a.ellipseCenter0),_=ri.dot(c,c),u=ri.dot(c,l),p=ri.dot(l,l),d=ri.dot(c,h),f=ri.dot(l,h),m=_*p-u*u;let g,v,y=m,x=m;m<Mn?(g=0,y=1,v=f,x=p):(g=u*f-p*d,v=_*f-u*d,g<0?(g=0,v=f,x=p):g>y&&(g=y,v=f+u,x=p)),v<0?(v=0,-d<0?g=0:-d>_?g=y:(g=-d,y=_)):v>x&&(v=x,-d+u<0?g=0:-d+u>_?g=y:(g=-d+u,y=_));const S=Math.abs(g)<Mn?0:g/y,C=Math.abs(v)<Mn?0:v/x,T=i;T.set(h),T.add(ri.multiplyScalar(s,c,S)),T.subtract(ri.multiplyScalar(r,l,C));const b=o.radius+a.radius;return T.lengthSqr()<b*b}}(),Qa={raySphere:ga,rayAABB:va,rayOBB:xa,rayPlane:fa,rayTriangle:ma,rayCapsule:Sa,raySubMesh:Ca,rayMesh:Ta,rayModel:ba,lineSphere:Ra,lineAABB:wa,lineOBB:Ia,linePlane:Ea,lineTriangle:Aa,sphereWithSphere:Xa,sphereAABB:Ya,sphereOBB:Ka,spherePlane:ja,sphereFrustum:Wa,sphereFrustumAccurate:qa,sphereCapsule:$a,aabbWithAABB:Da,aabbWithOBB:Na,aabbPlane:La,aabbFrustum:za,aabbFrustumAccurate:Fa,obbWithOBB:ka,obbPlane:Ua,obbFrustum:Ga,obbFrustumAccurate:Ha,obbPoint:Ba,obbCapsule:Va,capsuleWithCapsule:Za,resolve(e,t,n=null){const i=e._type,s=t._type,r=this[i|s];return i<s?r(e,t,n):r(t,e,n)}};Qa[xs.SHAPE_RAY|xs.SHAPE_SPHERE]=ga,Qa[xs.SHAPE_RAY|xs.SHAPE_AABB]=va,Qa[xs.SHAPE_RAY|xs.SHAPE_OBB]=xa,Qa[xs.SHAPE_RAY|xs.SHAPE_PLANE]=fa,Qa[xs.SHAPE_RAY|xs.SHAPE_TRIANGLE]=ma,Qa[xs.SHAPE_RAY|xs.SHAPE_CAPSULE]=Sa,Qa[xs.SHAPE_LINE|xs.SHAPE_SPHERE]=Ra,Qa[xs.SHAPE_LINE|xs.SHAPE_AABB]=wa,Qa[xs.SHAPE_LINE|xs.SHAPE_OBB]=Ia,Qa[xs.SHAPE_LINE|xs.SHAPE_PLANE]=Ea,Qa[xs.SHAPE_LINE|xs.SHAPE_TRIANGLE]=Aa,Qa[xs.SHAPE_SPHERE]=Xa,Qa[xs.SHAPE_SPHERE|xs.SHAPE_AABB]=Ya,Qa[xs.SHAPE_SPHERE|xs.SHAPE_OBB]=Ka,Qa[xs.SHAPE_SPHERE|xs.SHAPE_PLANE]=ja,Qa[xs.SHAPE_SPHERE|xs.SHAPE_FRUSTUM]=Wa,Qa[xs.SHAPE_SPHERE|xs.SHAPE_FRUSTUM_ACCURATE]=qa,Qa[xs.SHAPE_SPHERE|xs.SHAPE_CAPSULE]=$a,Qa[xs.SHAPE_AABB]=Da,Qa[xs.SHAPE_AABB|xs.SHAPE_OBB]=Na,Qa[xs.SHAPE_AABB|xs.SHAPE_PLANE]=La,Qa[xs.SHAPE_AABB|xs.SHAPE_FRUSTUM]=za,Qa[xs.SHAPE_AABB|xs.SHAPE_FRUSTUM_ACCURATE]=Fa,Qa[xs.SHAPE_OBB]=ka,Qa[xs.SHAPE_OBB|xs.SHAPE_PLANE]=Ua,Qa[xs.SHAPE_OBB|xs.SHAPE_FRUSTUM]=Ga,Qa[xs.SHAPE_OBB|xs.SHAPE_FRUSTUM_ACCURATE]=Ha,Qa[xs.SHAPE_OBB|xs.SHAPE_CAPSULE]=Va,Qa[xs.SHAPE_CAPSULE]=Za,Cn(Ss.prototype,"line",[{name:"mag",newName:"len"},{name:"magnitude",newName:"len"}]),Tn(Qa,"intersect",[{name:"line_quad"}]);const Ja=new ri(0,0,0),ec=new ri(0,0,0),tc=i.mat4(),nc=i.v4();class ic{static create(e,t,n,i){return new ic(e,t,n,i)}static clone(e){return new ic(e.n.x,e.n.y,e.n.z,e.d)}static copy(e,t){return ri.copy(e.n,t.n),e.d=t.d,e}static fromPoints(e,t,n,i){return ri.subtract(Ja,n,t),ri.subtract(ec,i,t),ri.normalize(e.n,ri.cross(e.n,Ja,ec)),e.d=ri.dot(e.n,t),e}static set(e,t,n,i,s){return e.n.x=t,e.n.y=n,e.n.z=i,e.d=s,e}static fromNormalAndPoint(e,t,n){return ri.copy(e.n,t),e.d=ri.dot(t,n),e}static normalize(e,t){const n=t.n.length();return ri.normalize(e.n,t.n),n>0&&(e.d=t.d/n),e}get type(){return this._type}set x(e){this.n.x=e}get x(){return this.n.x}set y(e){this.n.y=e}get y(){return this.n.y}set z(e){this.n.z=e}get z(){return this.n.z}set w(e){this.d=e}get w(){return this.d}constructor(e=0,t=1,n=0,i=0){this.n=void 0,this.d=void 0,this._type=void 0,this._type=xs.SHAPE_PLANE,this.n=new ri(e,t,n),this.d=i}transform(e){xi.invert(tc,e),xi.transpose(tc,tc),wi.set(nc,this.n.x,this.n.y,this.n.z,this.d),wi.transformMat4(nc,nc,tc),ri.set(this.n,nc.x,nc.y,nc.z),this.d=nc.w}}const sc=jsb.NativeBufferPool;var rc;jsb.NativeObjectPool,jsb.NativeBufferAllocator,function(e){e[e.UINT32=0]="UINT32",e[e.FLOAT32=1]="FLOAT32",e[e.NEVER=2]="NEVER"}(rc||(rc={}));class oc{constructor(e,t,n,i,s=8){this._dataType=void 0,this._dataMembers=void 0,this._elementCount=void 0,this._entryBits=void 0,this._stride=void 0,this._entriesPerChunk=void 0,this._entryMask=void 0,this._chunkMask=void 0,this._poolFlag=void 0,this._arrayBuffers=[],this._freeLists=[],this._uint32BufferViews=[],this._float32BufferViews=[],this._hasUint32=!1,this._hasFloat32=!1,this._nativePool=void 0,this._elementCount=i.COUNT,this._entryBits=s,this._dataType=t,this._dataMembers=n,this._stride=4*this._elementCount,this._entriesPerChunk=1<<s,this._entryMask=this._entriesPerChunk-1,this._poolFlag=1<<30,this._chunkMask=~(this._entryMask|this._poolFlag),this._nativePool=new sc(e,s,this._stride);let r=rc.NEVER,o=!1,a=!1;for(const e in t){if(o=this._hasFloat32,a=this._hasUint32,a&&o)break;r=t[e],o||r!==rc.FLOAT32?a||r!==rc.UINT32||(this._hasUint32=!0):this._hasFloat32=!0}}alloc(){let e=0;for(;e<this._freeLists.length;e++){const t=this._freeLists[e];if(t.length){const n=t[t.length-1];return t.length--,(e<<this._entryBits)+n+this._poolFlag}}const t=this._nativePool.allocateNewChunk(),n=[],i=[],s=[],r=this._hasFloat32,o=this._hasUint32;for(let e=0;e<this._entriesPerChunk;e++)r&&n.push(new Float32Array(t,this._stride*e,this._elementCount)),o&&i.push(new Uint32Array(t,this._stride*e,this._elementCount)),e&&s.push(e);return o&&this._uint32BufferViews.push(i),r&&this._float32BufferViews.push(n),this._freeLists.push(s),this._arrayBuffers.push(t),(e<<this._entryBits)+this._poolFlag}getBuffer(e){const t=(this._chunkMask&e)>>this._entryBits,n=this._entryMask&e;return(this._hasFloat32?this._float32BufferViews:this._uint32BufferViews)[t][n]}getTypedArray(e,t){const n=(this._chunkMask&e)>>this._entryBits,i=this._entryMask&e,s=t,r=(this._dataType[t]===rc.UINT32?this._uint32BufferViews:this._float32BufferViews)[n][i],o=this._dataMembers[t];return r.subarray(s,s+o)}free(e){const t=(this._chunkMask&e)>>this._entryBits,n=this._entryMask&e;(this._hasUint32?this._uint32BufferViews:this._float32BufferViews)[t][n].fill(0),this._freeLists[t].push(n)}}let ac,cc;!function(e){e[e.NODE=0]="NODE",e[e.PASS=1]="PASS",e[e.AABB=2]="AABB"}(ac||(ac={})),function(e){e[e.DIRTY_FLAG=0]="DIRTY_FLAG",e[e.LAYER=1]="LAYER",e[e.WORLD_SCALE=2]="WORLD_SCALE",e[e.WORLD_POSITION=5]="WORLD_POSITION",e[e.WORLD_ROTATION=8]="WORLD_ROTATION",e[e.WORLD_MATRIX=12]="WORLD_MATRIX",e[e.LOCAL_SCALE=28]="LOCAL_SCALE",e[e.LOCAL_POSITION=31]="LOCAL_POSITION",e[e.LOCAL_ROTATION=34]="LOCAL_ROTATION",e[e.COUNT=38]="COUNT"}(cc||(cc={}));const lc={[cc.DIRTY_FLAG]:rc.UINT32,[cc.LAYER]:rc.UINT32,[cc.WORLD_SCALE]:rc.FLOAT32,[cc.WORLD_POSITION]:rc.FLOAT32,[cc.WORLD_ROTATION]:rc.FLOAT32,[cc.WORLD_MATRIX]:rc.FLOAT32,[cc.LOCAL_SCALE]:rc.FLOAT32,[cc.LOCAL_POSITION]:rc.FLOAT32,[cc.LOCAL_ROTATION]:rc.FLOAT32,[cc.COUNT]:rc.NEVER},hc={[cc.DIRTY_FLAG]:cc.LAYER-cc.DIRTY_FLAG,[cc.LAYER]:cc.WORLD_SCALE-cc.LAYER,[cc.WORLD_SCALE]:cc.WORLD_POSITION-cc.WORLD_SCALE,[cc.WORLD_POSITION]:cc.WORLD_ROTATION-cc.WORLD_POSITION,[cc.WORLD_ROTATION]:cc.WORLD_MATRIX-cc.WORLD_ROTATION,[cc.WORLD_MATRIX]:cc.LOCAL_SCALE-cc.WORLD_MATRIX,[cc.LOCAL_SCALE]:cc.LOCAL_POSITION-cc.LOCAL_SCALE,[cc.LOCAL_POSITION]:cc.LOCAL_ROTATION-cc.LOCAL_POSITION,[cc.LOCAL_ROTATION]:cc.COUNT-cc.LOCAL_ROTATION,[cc.COUNT]:1},_c=new oc(ac.NODE,lc,hc,cc);let uc;!function(e){e[e.PRIORITY=0]="PRIORITY",e[e.STAGE=1]="STAGE",e[e.PHASE=2]="PHASE",e[e.PRIMITIVE=3]="PRIMITIVE",e[e.BATCHING_SCHEME=4]="BATCHING_SCHEME",e[e.DYNAMIC_STATE=5]="DYNAMIC_STATE",e[e.HASH=6]="HASH",e[e.COUNT=7]="COUNT"}(uc||(uc={}));const pc={[uc.PRIORITY]:rc.UINT32,[uc.STAGE]:rc.UINT32,[uc.PHASE]:rc.UINT32,[uc.PRIMITIVE]:rc.UINT32,[uc.BATCHING_SCHEME]:rc.UINT32,[uc.DYNAMIC_STATE]:rc.UINT32,[uc.HASH]:rc.UINT32,[uc.COUNT]:rc.NEVER},dc={[uc.PRIORITY]:uc.STAGE-uc.PRIORITY,[uc.STAGE]:uc.PHASE-uc.STAGE,[uc.PHASE]:uc.PRIMITIVE-uc.PHASE,[uc.PRIMITIVE]:uc.BATCHING_SCHEME-uc.PRIMITIVE,[uc.BATCHING_SCHEME]:uc.DYNAMIC_STATE-uc.BATCHING_SCHEME,[uc.DYNAMIC_STATE]:uc.HASH-uc.DYNAMIC_STATE,[uc.HASH]:uc.COUNT-uc.HASH,[uc.COUNT]:1},fc=new oc(ac.PASS,pc,dc,uc);let mc;!function(e){e[e.CENTER=0]="CENTER",e[e.HALFEXTENTS=3]="HALFEXTENTS",e[e.COUNT=6]="COUNT"}(mc||(mc={}));const gc={[mc.CENTER]:rc.FLOAT32,[mc.HALFEXTENTS]:rc.FLOAT32,[mc.COUNT]:rc.NEVER},vc={[mc.CENTER]:mc.HALFEXTENTS-mc.CENTER,[mc.HALFEXTENTS]:mc.COUNT-mc.HALFEXTENTS,[mc.COUNT]:1},yc=new oc(ac.AABB,gc,vc,mc),xc=new ri,Sc=new ri,Cc=new ri,Tc=new ri,bc=new li,Ec=(e,t,n)=>{bc.m00=Math.abs(n.m00),bc.m01=Math.abs(n.m01),bc.m02=Math.abs(n.m02),bc.m03=Math.abs(n.m04),bc.m04=Math.abs(n.m05),bc.m05=Math.abs(n.m06),bc.m06=Math.abs(n.m08),bc.m07=Math.abs(n.m09),bc.m08=Math.abs(n.m10),ri.transformMat3(e,t,bc)};class Ac{static create(e,t,n,i,s,r){return new Ac(e,t,n,i,s,r)}static clone(e){return new Ac(e.center.x,e.center.y,e.center.z,e.halfExtents.x,e.halfExtents.y,e.halfExtents.z)}static copy(e,t){return ri.copy(e.center,t.center),ri.copy(e.halfExtents,t.halfExtents),e}static fromPoints(e,t,n){return ri.add(xc,n,t),ri.subtract(Sc,n,t),ri.multiplyScalar(e.center,xc,.5),ri.multiplyScalar(e.halfExtents,Sc,.5),e}static set(e,t,n,i,s,r,o){return e.center.set(t,n,i),e.halfExtents.set(s,r,o),e}static merge(e,t,n){return ri.subtract(xc,t.center,t.halfExtents),ri.subtract(Sc,n.center,n.halfExtents),ri.add(Cc,t.center,t.halfExtents),ri.add(Tc,n.center,n.halfExtents),ri.max(Tc,Cc,Tc),ri.min(Cc,xc,Sc),Ac.fromPoints(e,Cc,Tc)}static toBoundingSphere(e,t){return e.center.set(t.center),e.radius=t.halfExtents.length(),e}static transform(e,t,n){return ri.transformMat4(e.center,t.center,n),Ec(e.halfExtents,t.halfExtents,n),e}get type(){return this._type}constructor(e=0,t=0,n=0,i=1,s=1,r=1){return this.center=void 0,this.halfExtents=void 0,this._type=void 0,this._aabbHandle=0,this._type=xs.SHAPE_AABB,this._aabbHandle=yc.alloc(),this.center=new ri(yc.getTypedArray(this._aabbHandle,mc.CENTER)),this.halfExtents=new ri(yc.getTypedArray(this._aabbHandle,mc.HALFEXTENTS)),this.center.set(e,t,n),this.halfExtents.set(i,s,r),this._nativeObj=new rs,void this._nativeObj.initWithData(yc.getBuffer(this._aabbHandle))}get native(){return this._nativeObj}getBoundary(e,t){ri.subtract(e,this.center,this.halfExtents),ri.add(t,this.center,this.halfExtents)}transform(e,t,n,i,s){ri.transformMat4(s.center,this.center,e),Ec(s.halfExtents,this.halfExtents,e)}clone(){return Ac.clone(this)}copy(e){return Ac.copy(this,e)}mergePoint(e){this.getBoundary(xc,Sc),e.x<xc.x&&(xc.x=e.x),e.y<xc.y&&(xc.y=e.y),e.z<xc.z&&(xc.z=e.z),e.x>Sc.x&&(Sc.x=e.x),e.y>Sc.y&&(Sc.y=e.y),e.z>Sc.z&&(Sc.z=e.z),ri.add(Cc,xc,Sc),this.center.set(ri.multiplyScalar(Cc,Cc,.5)),this.halfExtents.set(Sc.x-Cc.x,Sc.y-Cc.y,Sc.z-Cc.z)}mergePoints(e){if(!(e.length<1))for(let t=0;t<e.length;t++)this.mergePoint(e[t])}mergeFrustum(e){return this.mergePoints(e.vertices)}}const Pc=new ri,wc=new ri,Ic=new li;class Rc{static create(e,t,n,i,s,r,o,a,c,l,h,_,u,p,d){return new Rc(e,t,n,i,s,r,o,a,c,l,h,_,u,p,d)}static clone(e){return new Rc(e.center.x,e.center.y,e.center.z,e.halfExtents.x,e.halfExtents.y,e.halfExtents.z,e.orientation.m00,e.orientation.m01,e.orientation.m02,e.orientation.m03,e.orientation.m04,e.orientation.m05,e.orientation.m06,e.orientation.m07,e.orientation.m08)}static copy(e,t){return ri.copy(e.center,t.center),ri.copy(e.halfExtents,t.halfExtents),li.copy(e.orientation,t.orientation),e}static fromPoints(e,t,n){return ri.multiplyScalar(e.center,ri.add(Pc,t,n),.5),ri.multiplyScalar(e.halfExtents,ri.subtract(wc,n,t),.5),li.identity(e.orientation),e}static set(e,t,n,i,s,r,o,a,c,l,h,_,u,p,d,f){return ri.set(e.center,t,n,i),ri.set(e.halfExtents,s,r,o),li.set(e.orientation,a,c,l,h,_,u,p,d,f),e}get type(){return this._type}constructor(e=0,t=0,n=0,i=1,s=1,r=1,o=1,a=0,c=0,l=0,h=1,_=0,u=0,p=0,d=1){this.center=void 0,this.halfExtents=void 0,this.orientation=void 0,this._type=void 0,this._type=xs.SHAPE_OBB,this.center=new ri(e,t,n),this.halfExtents=new ri(i,s,r),this.orientation=new li(o,a,c,l,h,_,u,p,d)}getBoundary(e,t){var n,i,s;n=Pc,i=this.halfExtents,s=this.orientation,Ic.m00=Math.abs(s.m00),Ic.m01=Math.abs(s.m01),Ic.m02=Math.abs(s.m02),Ic.m03=Math.abs(s.m03),Ic.m04=Math.abs(s.m04),Ic.m05=Math.abs(s.m05),Ic.m06=Math.abs(s.m06),Ic.m07=Math.abs(s.m07),Ic.m08=Math.abs(s.m08),ri.transformMat3(n,i,Ic),ri.subtract(e,this.center,Pc),ri.add(t,this.center,Pc)}transform(e,t,n,i,s){ri.transformMat4(s.center,this.center,e),li.fromQuat(s.orientation,n),ri.multiply(s.halfExtents,this.halfExtents,i)}translateAndRotate(e,t,n){ri.transformMat4(n.center,this.center,e),li.fromQuat(n.orientation,t)}setScale(e,t){ri.multiply(t.halfExtents,this.halfExtents,e)}}class Dc{get type(){return this._type}constructor(e=.5,t=.5,n=1){this._type=void 0,this.radius=void 0,this.halfHeight=void 0,this.axis=void 0,this.center=void 0,this.rotation=void 0,this.ellipseCenter0=void 0,this.ellipseCenter1=void 0,this._type=xs.SHAPE_CAPSULE,this.radius=e,this.halfHeight=t,this.axis=n,this.center=new ri,this.rotation=new ui,this.ellipseCenter0=new ri(0,t,0),this.ellipseCenter1=new ri(0,-t,0),this.updateCache()}transform(e,t,n,i,s){const r=i,o=Zn(r);s.radius=this.radius*Math.abs(o);let a=(this.halfHeight+this.radius)*Math.abs(r.y)-s.radius;a<0&&(a=0),s.halfHeight=a,ri.transformMat4(s.center,this.center,e),ui.multiply(s.rotation,this.rotation,n),s.updateCache()}updateCache(){this.updateLocalCenter(),ri.transformQuat(this.ellipseCenter0,this.ellipseCenter0,this.rotation),ri.transformQuat(this.ellipseCenter1,this.ellipseCenter1,this.rotation),this.ellipseCenter0.add(this.center),this.ellipseCenter1.add(this.center)}updateLocalCenter(){const e=this.halfHeight;switch(this.axis){case 0:this.ellipseCenter0.set(e,0,0),this.ellipseCenter1.set(-e,0,0);break;case 1:this.ellipseCenter0.set(0,e,0),this.ellipseCenter1.set(0,-e,0);break;case 2:this.ellipseCenter0.set(0,0,e),this.ellipseCenter1.set(0,0,-e)}}}const Oc=new Array(8);Oc[0]=new ri(1,1,1),Oc[1]=new ri(-1,1,1),Oc[2]=new ri(-1,-1,1),Oc[3]=new ri(1,-1,1),Oc[4]=new ri(1,1,-1),Oc[5]=new ri(-1,1,-1),Oc[6]=new ri(-1,-1,-1),Oc[7]=new ri(1,-1,-1);const Mc=new ri,Nc=new ri,Lc=new ri;class zc{set accurate(e){this._type=e?xs.SHAPE_FRUSTUM_ACCURATE:xs.SHAPE_FRUSTUM}static createFromAABB(e,t){const n=new ri,i=new ri;return ri.subtract(n,t.center,t.halfExtents),ri.add(i,t.center,t.halfExtents),e.vertices[0].set(n.x,i.y,n.z),e.vertices[1].set(i.x,i.y,n.z),e.vertices[2].set(i.x,n.y,n.z),e.vertices[3].set(n.x,n.y,n.z),e.vertices[4].set(n.x,i.y,i.z),e.vertices[5].set(i.x,i.y,i.z),e.vertices[6].set(i.x,n.y,i.z),e.vertices[7].set(n.x,n.y,i.z),e._type!==xs.SHAPE_FRUSTUM_ACCURATE||e.updatePlanes(),e}static split(e,t,n,i,s){const r=Math.tan(.5*t.fov),o=r*t.aspect;Mc.set(i*o,i*r,i),Nc.set(s*o,s*r,s);const a=e.vertices;return Lc.set(Mc.x,Mc.y,Mc.z),ri.transformMat4(a[0],Lc,n),Lc.set(-Mc.x,Mc.y,Mc.z),ri.transformMat4(a[1],Lc,n),Lc.set(-Mc.x,-Mc.y,Mc.z),ri.transformMat4(a[2],Lc,n),Lc.set(Mc.x,-Mc.y,Mc.z),ri.transformMat4(a[3],Lc,n),Lc.set(Nc.x,Nc.y,Nc.z),ri.transformMat4(a[4],Lc,n),Lc.set(-Nc.x,Nc.y,Nc.z),ri.transformMat4(a[5],Lc,n),Lc.set(-Nc.x,-Nc.y,Nc.z),ri.transformMat4(a[6],Lc,n),Lc.set(Nc.x,-Nc.y,Nc.z),ri.transformMat4(a[7],Lc,n),e.updatePlanes(),e}static create(){return new zc}static clone(e){return zc.copy(new zc,e)}static copy(e,t){e._type=t._type;for(let n=0;n<6;++n)ic.copy(e.planes[n],t.planes[n]);for(let n=0;n<8;++n)ri.copy(e.vertices[n],t.vertices[n]);return e}get type(){return this._type}constructor(){this._type=void 0,this.planes=void 0,this.vertices=void 0,this._type=xs.SHAPE_FRUSTUM,this.planes=new Array(6);for(let e=0;e<6;++e)this.planes[e]=ic.create(0,0,0,0);this.vertices=new Array(8);for(let e=0;e<8;++e)this.vertices[e]=new ri}update(e,t){if(ri.set(this.planes[0].n,e.m03+e.m00,e.m07+e.m04,e.m11+e.m08),this.planes[0].d=-(e.m15+e.m12),ri.set(this.planes[1].n,e.m03-e.m00,e.m07-e.m04,e.m11-e.m08),this.planes[1].d=-(e.m15-e.m12),ri.set(this.planes[2].n,e.m03+e.m01,e.m07+e.m05,e.m11+e.m09),this.planes[2].d=-(e.m15+e.m13),ri.set(this.planes[3].n,e.m03-e.m01,e.m07-e.m05,e.m11-e.m09),this.planes[3].d=-(e.m15-e.m13),ri.set(this.planes[4].n,e.m03+e.m02,e.m07+e.m06,e.m11+e.m10),this.planes[4].d=-(e.m15+e.m14),ri.set(this.planes[5].n,e.m03-e.m02,e.m07-e.m06,e.m11-e.m10),this.planes[5].d=-(e.m15-e.m14),this._type===xs.SHAPE_FRUSTUM_ACCURATE){for(let e=0;e<6;e++){const t=this.planes[e],n=1/t.n.length();ri.multiplyScalar(t.n,t.n,n),t.d*=n}for(let e=0;e<8;e++)ri.transformMat4(this.vertices[e],Oc[e],t)}}transform(e){if(this._type===xs.SHAPE_FRUSTUM_ACCURATE){for(let t=0;t<8;t++)ri.transformMat4(this.vertices[t],this.vertices[t],e);ic.fromPoints(this.planes[0],this.vertices[1],this.vertices[6],this.vertices[5]),ic.fromPoints(this.planes[1],this.vertices[3],this.vertices[4],this.vertices[7]),ic.fromPoints(this.planes[2],this.vertices[6],this.vertices[3],this.vertices[7]),ic.fromPoints(this.planes[3],this.vertices[0],this.vertices[5],this.vertices[4]),ic.fromPoints(this.planes[4],this.vertices[2],this.vertices[0],this.vertices[3]),ic.fromPoints(this.planes[5],this.vertices[7],this.vertices[5],this.vertices[6])}}updatePlanes(){ic.fromPoints(this.planes[0],this.vertices[1],this.vertices[6],this.vertices[5]),ic.fromPoints(this.planes[1],this.vertices[3],this.vertices[4],this.vertices[7]),ic.fromPoints(this.planes[2],this.vertices[6],this.vertices[3],this.vertices[7]),ic.fromPoints(this.planes[3],this.vertices[0],this.vertices[5],this.vertices[4]),ic.fromPoints(this.planes[4],this.vertices[2],this.vertices[0],this.vertices[3]),ic.fromPoints(this.planes[5],this.vertices[7],this.vertices[5],this.vertices[6])}}function Fc(e,t,n,i){n&&Object.defineProperty(e,t,{enumerable:n.enumerable,configurable:n.configurable,writable:n.writable,value:n.initializer?n.initializer.call(i):void 0})}function Bc(e,t,n,i,s){var r={};return Object.keys(i).forEach((function(e){r[e]=i[e]})),r.enumerable=!!r.enumerable,r.configurable=!!r.configurable,("value"in r||r.initializer)&&(r.writable=!0),r=n.slice().reverse().reduce((function(n,i){return i(e,t,n)||n}),r),s&&void 0!==r.initializer&&(r.value=r.initializer?r.initializer.call(s):void 0,r.initializer=void 0),void 0===r.initializer&&(Object.defineProperty(e,t,r),r=null),r}let Uc,Gc;zc.createOrtho=(e,t,n,i,s,r)=>{const o=t/2,a=n/2;ri.set(Lc,o,a,-i),ri.transformMat4(e.vertices[0],Lc,r),ri.set(Lc,-o,a,-i),ri.transformMat4(e.vertices[1],Lc,r),ri.set(Lc,-o,-a,-i),ri.transformMat4(e.vertices[2],Lc,r),ri.set(Lc,o,-a,-i),ri.transformMat4(e.vertices[3],Lc,r),ri.set(Lc,o,a,-s),ri.transformMat4(e.vertices[4],Lc,r),ri.set(Lc,-o,a,-s),ri.transformMat4(e.vertices[5],Lc,r),ri.set(Lc,-o,-a,-s),ri.transformMat4(e.vertices[6],Lc,r),ri.set(Lc,o,-a,-s),ri.transformMat4(e.vertices[7],Lc,r),ic.fromPoints(e.planes[0],e.vertices[1],e.vertices[6],e.vertices[5]),ic.fromPoints(e.planes[1],e.vertices[3],e.vertices[4],e.vertices[7]),ic.fromPoints(e.planes[2],e.vertices[6],e.vertices[3],e.vertices[7]),ic.fromPoints(e.planes[3],e.vertices[0],e.vertices[5],e.vertices[4]),ic.fromPoints(e.planes[4],e.vertices[2],e.vertices[0],e.vertices[3]),ic.fromPoints(e.planes[5],e.vertices[7],e.vertices[5],e.vertices[6])},function(e){e[e.Default=0]="Default",e[e.Normal=1]="Normal",e[e.Loop=2]="Loop",e[e.ShouldWrap=4]="ShouldWrap",e[e.Clamp=8]="Clamp",e[e.PingPong=22]="PingPong",e[e.Reverse=36]="Reverse"}(Uc||(Uc={})),function(e){e[e.Default=Uc.Default]="Default",e[e.Normal=Uc.Normal]="Normal",e[e.Reverse=Uc.Reverse]="Reverse",e[e.Loop=Uc.Loop]="Loop",e[e.LoopReverse=Uc.Loop|Uc.Reverse]="LoopReverse",e[e.PingPong=Uc.PingPong]="PingPong",e[e.PingPongReverse=Uc.PingPong|Uc.Reverse]="PingPongReverse"}(Gc||(Gc={})),Fe(Gc);class Hc{constructor(e){this.ratio=0,this.time=0,this.direction=1,this.stopped=!0,this.iterations=0,this.frameIndex=void 0,e&&this.set(e)}set(e){this.ratio=e.ratio,this.time=e.time,this.direction=e.direction,this.stopped=e.stopped,this.iterations=e.iterations,this.frameIndex=e.frameIndex}}function kc(e,t,n=1e-6){let i=0,s=e.length-1,r=s>>>1;for(;i<=s;r=i+s>>>1){const o=e[r];if(o>t+n)s=r-1;else{if(!(o<t-n))return r;i=r+1}}return~i}const Vc=()=>{},jc=()=>Vc,Wc=qc((()=>{}));function qc(e){return function(t){return"function"==typeof t?e(t):function(n){return e(n,t)}}}function Xc(e){return t=>n=>{!function(e,t,n){const i=Kc(e);if(i){const e=$c(i,"proto");$c(e,"editor")[t]=n}}(n,e,t)}}const Yc="__ccclassCache__";function Kc(e){return $c(e,Yc)}function $c(e,t){return e[t]||(e[t]={})}const Zc=qc(((e,t)=>{let n=Ae.getSuper(e);n===Object&&(n=null);const i={name:t,extends:n,ctor:e},s=e[Yc];if(s){const t=s.proto;t&&Ae.mixin(i,t),e[Yc]=void 0}return Et(i)})),Qc=Xc("requireComponent"),Jc=Xc("executionOrder"),el=Wc;function tl(e,t,n){let i=null;function s(e,t,n){const s=Kc(e.constructor);if(s){const r=$c(s,"proto"),o=$c(r,"properties");!function(e,t,n,i,s,r){let o;const a=s&&(s.get||s.set);i&&(o=ft(i,a));const c=t[n],l=Ae.mixin(c||{},o||i||{});if(a)s.get&&(l.get=s.get),s.set&&(l.set=s.set);else if(s)s.initializer&&(l.default=function(e){let t;try{t=e()}catch(t){return e}return"object"!=typeof t||null===t?t:e}(s.initializer));else{const t=r.default||(r.default=function(e){let t;try{t=new e}catch(e){return{}}return t}(e));t.hasOwnProperty(n)&&(l.default=t[n])}t[n]=l}(e.constructor,o,t,i,n,s)}}return void 0===e?tl({type:void 0}):void 0===t?(i=e,s):void s(e,t,n)}const nl=Symbol("cc:SerializationMetadata"),il=(e,t,n)=>tl(ol({}))(e,t,n);function sl(e){return tl(ol({formerlySerializedAs:e}))}const rl=(e,t,n)=>tl({editorOnly:!0})(e,t,n);function ol(e){return e.__noImplicit=!0,"serializable"in e||(e.serializable=!0),e}const al=Vc,cl=Wc,ll=jc,hl=Wc,_l=jc,ul=jc,pl=jc,dl=Vc,fl=jc,ml=Vc,gl=jc,vl=jc,yl=jc,xl=jc,Sl=jc,Cl=jc,Tl=Vc,bl=jc,El=Vc,Al=Vc,Pl=Vc,wl=Ol(rt),Il=Ol(ot),Rl=Ol(at),Dl=Ol(ct);function Ol(e){return tl({type:e})}const Ml=(e,t,n)=>tl({__noImplicit:!0,override:!0})(e,t,n);let Nl;var Ll,zl,Fl,Bl;let Ul,Gl,Hl,kl=Zc("cc.KeyframeCurve")((Nl=Symbol.iterator,Fl=Bc((zl=class{constructor(){Fc(this,"_times",Fl,this),Fc(this,"_values",Bl,this)}get keyFramesCount(){return this._times.length}get rangeMin(){return this._times[0]}get rangeMax(){return this._times[this._values.length-1]}[Nl](){let e=0;return{next:()=>{if(e>=this._times.length)return{done:!0,value:void 0};{const t=[this._times[e],this._values[e]];return++e,{done:!1,value:t}}}}}keyframes(){return this}times(){return this._times}values(){return this._values}getKeyframeTime(e){return this._times[e]}getKeyframeValue(e){return this._values[e]}addKeyFrame(e,t){return this._insertNewKeyframe(e,t)}removeKeyframe(e){this._times.splice(e,1),this._values.splice(e,1)}indexOfKeyframe(e){return kc(this._times,e)}updateTime(e,t){const n=this._values[e];this.removeKeyframe(e),this._insertNewKeyframe(t,n)}assignSorted(e,t){if(void 0!==t)this.setKeyframes(e.slice(),t.slice());else{const t=Array.from(e);this.setKeyframes(t.map((([e])=>e)),t.map((([,e])=>e)))}}clear(){this._times.length=0,this._values.length=0}searchKeyframe(e){return kc(this._times,e)}setKeyframes(e,t){e.length,t.length,function(e){e.every(((e,t,n)=>0===t||e>n[t-1]||Ln(e,n[t-1],1e-6)))}(e),this._times=e,this._values=t}_insertNewKeyframe(e,t){const n=this._times,i=this._values,s=n.length,r=kc(n,e);if(r>=0)return r;const o=~r;return 0===o?(n.unshift(e),i.unshift(t)):o===s?(n.push(e),i.push(t)):(n.splice(o-1,0,e),i.splice(o-1,0,t)),o}}).prototype,"_times",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Bl=Bc(zl.prototype,"_values",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Ll=zl))||Ll;function Vl(e){return e>-1e-9&&e<1e-9}!function(e){e[e.LINEAR=0]="LINEAR",e[e.CONSTANT=1]="CONSTANT",e[e.CUBIC=2]="CUBIC"}(Ul||(Ul=e("RealInterpolationMode",{}))),function(e){e[e.LINEAR=0]="LINEAR",e[e.CLAMP=1]="CLAMP",e[e.LOOP=2]="LOOP",e[e.PING_PONG=3]="PING_PONG"}(Gl||(Gl=e("ExtrapolationMode",{}))),function(e){e[e.NONE=0]="NONE",e[e.LEFT=1]="LEFT",e[e.RIGHT=2]="RIGHT",e[e.BOTH=3]="BOTH"}(Hl||(Hl=e("TangentWeightMode",{})));const jl=class{};var Wl=Object.freeze({__proto__:null,uniquelyReferenced:al,ccclass:Zc,property:tl,requireComponent:Qc,executionOrder:Jc,disallowMultiple:el,allowReplicated:e=>{Et.Attr.setClassAttr(e,"replicated","visible",!0)},executeInEditMode:cl,menu:ll,playOnFocus:hl,inspector:_l,icon:ul,help:pl,type:Ol,integer:wl,float:Il,boolean:Rl,string:Dl});e("_decorator",Wl);class ql{constructor(e){this._map=null,this._count=0,e?(this._map=e,this._count=Object.keys(e).length):(this._map=Ae.createMap(!0),this._count=0)}add(e,t){return e in this._map||this._count++,this._map[e]=t}get(e){return this._map[e]}has(e){return e in this._map}remove(e){const t=this._map[e];return e in this._map&&(delete this._map[e],this._count--),t}clear(){0!==this._count&&(this._map=Ae.createMap(!0),this._count=0)}forEach(e){for(const t in this._map)e(this._map[t],t)}find(e){for(const t in this._map)if(e(this._map[t],t))return this._map[t];return null}get count(){return this._count}destroy(){this._map=null}}class Xl{constructor(e,t){this.id=Xl._pipelineId++,this.name="",this.pipes=[],this.name=e;for(let e=0,n=t.length;e<n;e++)this.pipes.push(t[e])}insert(e,t){return t>this.pipes.length?(T(4921),this):(this.pipes.splice(t,0,e),this)}append(e){return this.pipes.push(e),this}remove(e){return this.pipes.splice(e,1),this}sync(e){const t=this.pipes;if(0===t.length)return null;e.isFinish=!1;for(let n=0,i=t.length;n<i;){const s=(0,t[n])(e);if(s)return e.isFinish=!0,s;n++,n!==i&&(e.input=e.output,e.output=null)}return e.isFinish=!0,e.output}async(e){0!==this.pipes.length&&(e.isFinish=!1,this._flow(0,e))}_flow(e,t){(0,this.pipes[e])(t,(n=>{n?(t.isFinish=!0,t.dispatch("complete",n)):++e<this.pipes.length?(t.input=t.output,t.output=null,this._flow(e,t)):(t.isFinish=!0,t.dispatch("complete",n,t.output))}))}}Xl._pipelineId=0;const Yl=new ql,Kl=new ql,$l=new ql,Zl=new ql,Ql=new Xl("normal load",[]),Jl=new Xl("fetch",[]),eh=new Xl("transform url",[]);let th;!function(e){e.UUID="uuid",e.PATH="path",e.DIR="dir",e.URL="url",e.SCENE="scene"}(th||(th={}));const nh={default:{priority:0},preload:{maxConcurrency:6,maxRequestsPerFrame:2,priority:-1},scene:{maxConcurrency:20,maxRequestsPerFrame:20,priority:1},bundle:{maxConcurrency:20,maxRequestsPerFrame:20,priority:2},remote:{maxRetryCount:4}};let ih;!function(e){e.RESOURCES="resources",e.MAIN="main",e.START_SCENE="start-scene"}(ih||(ih={}));class sh{static create(e){let t;return 0!==sh._deadPool.length?(t=sh._deadPool.pop(),t.set(e)):t=new sh(e),t}constructor(e){this.id=sh._taskId++,this.onComplete=null,this.onProgress=null,this.onError=null,this.source=null,this.output=null,this.input=null,this.progress=null,this.options=null,this.isFinish=!0,this.set(e)}set(e=Object.create(null)){this.onComplete=e.onComplete||null,this.onProgress=e.onProgress||null,this.onError=e.onError||null,this.source=this.input=e.input,this.output=null,this.progress=e.progress,this.options=e.options||Object.create(null)}dispatch(e,t,n,i,s){switch(e){case"complete":this.onComplete&&this.onComplete(t,n);break;case"progress":this.onProgress&&this.onProgress(t,n,i,s);break;case"error":this.onError&&this.onError(t,n,i,s);break;default:{const r=`on${e[0].toUpperCase()}${e.substr(1)}`;"function"==typeof this[r]&&this[r](t,n,i,s);break}}}recycle(){sh._deadPool.length!==sh.MAX_DEAD_NUM&&(this.onComplete=null,this.onProgress=null,this.onError=null,this.source=this.output=this.input=null,this.progress=null,this.options=null,sh._deadPool.push(this))}}sh.MAX_DEAD_NUM=500,sh._taskId=0,sh._deadPool=[];const rh="0123456789abcdef".split(""),oh=["","","",""],ah=oh.concat(oh,"-",oh,"-",oh,"-",oh,"-",oh,oh,oh),ch=ah.map(((e,t)=>"-"===e?NaN:t)).filter(isFinite);function lh(e){const t=e.split("@")[0];if(22!==t.length)return e;ah[0]=e[0],ah[1]=e[1];for(let t=2,n=2;t<22;t+=2){const i=ke[e.charCodeAt(t)],s=ke[e.charCodeAt(t+1)];ah[ch[n++]]=rh[i>>2],ah[ch[n++]]=rh[(3&i)<<2|s>>4],ah[ch[n++]]=rh[15&s]}return e.replace(t,ah.join(""))}const hh=/.*[/\\][0-9a-fA-F]{2}[/\\]([0-9a-fA-F-@]{8,}).*/;function _h(e){const t=hh.exec(e);return t?t[1]:""}function uh(e,t){(t=t||Object.create(null)).__isNative__=t.isNative,t.ext=t.nativeExt;const n=Zl.find((t=>!!t.getAssetInfo(e)));return n&&(t.bundle=n.name),fh(e,t)}function ph(e){return!!e&&(e instanceof i.SceneAsset||e instanceof i.Scene)}function dh(e){return e&&(46===e.charCodeAt(0)&&47===e.charCodeAt(1)?e=e.slice(2):47===e.charCodeAt(0)&&(e=e.slice(1))),e}function fh(e,t){const n=sh.create({input:e,options:t}),i=[];try{const e=eh.sync(n);for(const t of e){const e=t.url;t.recycle(),i.push(e)}}catch(e){for(const e of n.output)e.recycle();d(e.message,e.stack)}return n.recycle(),i.length>1?i:i[0]}var mh=Object.freeze({__proto__:null,getUuidFromURL:_h,getUrlWithUuid:uh,isScene:ph,normalize:dh,transform:fh,decodeUuid:lh});const gh=new class{constructor(){this._finalizationRegistry=null}registerGCObject(e){return e}unregisterGCObject(e){}init(){}finalizationRegistryCallback(e){e.isValid&&e.destroy()}destroy(){}};var vh;let yh=Zc("cc.GCObject")(vh=class extends Dt{constructor(...e){return super(...e),gh.registerGCObject(this)}equals(e){return!!e&&e===this}destroy(){return gh.unregisterGCObject(this),super.destroy()}})||vh;var xh,Sh,Ch,Th;let bh=e("Asset",Zc("cc.Asset")((Th=class extends(Ht(yh)){static deserialize(e){return i.deserialize(e)}get nativeUrl(){if(!this._nativeUrl){if(!this._native)return"";const e=this._native;if(47===e.charCodeAt(0))return e.slice(1);46===e.charCodeAt(0)?this._nativeUrl=uh(this._uuid,{nativeExt:e,isNative:!0}):this._nativeUrl=uh(this._uuid,{__nativeName__:e,nativeExt:nn(e),isNative:!0})}return this._nativeUrl}get _nativeAsset(){return this._file}set _nativeAsset(e){this._file=e}constructor(...e){super(...e),this.loaded=!0,Fc(this,"_native",Ch,this),this._nativeUrl="",this._file=null,this._ref=0,Object.defineProperty(this,"_uuid",{value:"",writable:!0})}toString(){return this.nativeUrl}serialize(){}_setRawAsset(e,t=!0){this._native=!1!==t?e||"":`/${e}`}get _nativeDep(){if(this._native)return{__isNative__:!0,uuid:this._uuid,ext:this._native}}get refCount(){return this._ref}addRef(){return this._ref++,this}decRef(e=!0){return this._ref>0&&this._ref--,e&&i.assetManager._releaseManager.tryRelease(this),this}onLoaded(){}initDefault(e){e&&(this._uuid=e),this.isDefault=!0}validate(){return!0}destroy(){return m(I(12101,this._uuid)),super.destroy()}},Ch=Bc((Sh=Th).prototype,"_native",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),Bc(Sh.prototype,"_nativeAsset",[tl],Object.getOwnPropertyDescriptor(Sh.prototype,"_nativeAsset"),Sh.prototype),xh=Sh))||xh);var Eh,Ah,Ph;bh.prototype.createNode=null,i.Asset=bh;let wh=e("Script",Zc("cc.Script")(Eh=class extends bh{})||Eh);i._Script=wh;let Ih=e("JavaScript",Zc("cc.JavaScript")(Ah=class extends wh{})||Ah);i._JavaScript=Ih;let Rh=e("TypeScript",Zc("cc.TypeScript")(Ph=class extends wh{})||Ph);var Dh,Oh,Mh,Nh,Lh,zh,Fh,Bh,Uh,Gh,Hh;i._TypeScript=Rh;const kh=new G("Comp"),Vh=Dt.Flags.IsOnLoadCalled;let jh=e("Component",(Dh=Zc("cc.Component"),Oh=gl(),Mh=Ol(wh),Nh=vl(),Dh((Hh=Gh=class extends Dt{constructor(...e){super(...e),Fc(this,"node",Fh,this),Fc(this,"_enabled",Bh,this),Fc(this,"__prefab",Uh,this),this._sceneGetter=null,this._id=kh.getNewId()}get name(){if(this._name)return this._name;let e=Q(this);const t=e.lastIndexOf(".");return t>=0&&(e=e.slice(t+1)),this.node?`${this.node.name}<${e}>`:e}set name(e){this._name=e}get uuid(){return this._id}get __scriptAsset(){return null}get enabled(){return this._enabled}set enabled(e){if(this._enabled!==e&&(this._enabled=e,this.node.activeInHierarchy)){const t=i.director._compScheduler;e?t.enableComp(this):t.disableComp(this)}}get enabledInHierarchy(){return this._enabled&&this.node&&this.node.activeInHierarchy}get _isOnLoadCalled(){return this._objFlags&Vh}_getRenderScene(){return this._sceneGetter?this._sceneGetter():this.node.scene.renderScene}addComponent(e){return this.node.addComponent(e)}getComponent(e){return this.node.getComponent(e)}getComponents(e){return this.node.getComponents(e)}getComponentInChildren(e){return this.node.getComponentInChildren(e)}getComponentsInChildren(e){return this.node.getComponentsInChildren(e)}destroy(){return!!super.destroy()&&(this._enabled&&this.node.activeInHierarchy&&i.director._compScheduler.disableComp(this),!0)}_onPreDestroy(){this.unscheduleAllCallbacks(),i.director._nodeActivator.destroyComp(this),this.node._removeComponent(this)}_instantiate(e){return e||(e=i.instantiate._clone(this,this)),e&&(e.node=null),e}schedule(e,t=0,n=i.macro.REPEAT_FOREVER,s=0){P(e,1619),P((t=t||0)>=0,1620),n=Number.isNaN(n)?i.macro.REPEAT_FOREVER:n,s=s||0;const r=i.director.getScheduler(),o=r.isTargetPaused(this);r.schedule(e,this,t,n,s,o)}scheduleOnce(e,t=0){this.schedule(e,0,0,t)}unschedule(e){e&&i.director.getScheduler().unschedule(e,this)}unscheduleAllCallbacks(){i.director.getScheduler().unscheduleAllForTarget(this)}},Gh.system=null,Bc((zh=Hh).prototype,"__scriptAsset",[Oh,Mh,Nh,Pl],Object.getOwnPropertyDescriptor(zh.prototype,"__scriptAsset"),zh.prototype),Fh=Bc(zh.prototype,"node",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Bh=Bc(zh.prototype,"_enabled",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),Uh=Bc(zh.prototype,"__prefab",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Lh=zh))||Lh));const Wh=jh.prototype;var qh,Xh,Yh;Wh.update=null,Wh.lateUpdate=null,Wh.__preload=null,Wh.onLoad=null,Wh.start=null,Wh.onEnable=null,Wh.onDisable=null,Wh.onDestroy=null,Wh.onFocusInEditor=null,Wh.onLostFocusInEditor=null,Wh.resetInEditor=null,Wh._getLocalBounds=null,Wh.onRestore=null,jh._requireComponent=null,jh._executionOrder=0,X(jh,"_registerEditorProps",((e,t)=>{let n=t.requireComponent;n&&(Array.isArray(n)&&(n=n.filter(Boolean)),e._requireComponent=n);const i=t.executionOrder;i&&"number"==typeof i&&(e._executionOrder=i)})),i.Component=jh;let Kh,$h=e("MissingScript",Zc("cc.MissingScript")(qh=_l()((Yh=Bc((Xh=class extends jh{static safeFindClass(e){const t=Se(e);if(t)return t;i.deserialize.reportMissingClass(e)}constructor(){super(),Fc(this,"_$erialized",Yh,this)}onLoad(){T(4600,this.node.name)}}).prototype,"_$erialized",[il,rl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),qh=Xh))||qh)||qh);i._MissingScript=$h;try{const e=$h.__values__;0!==e.length&&"_$erialized"===e[e.length-1]||(d("The '_$erialized' prop in MissingScript is missing. Please contact jare."),d(`    Error props: ['${e}']`))}catch(fs){d(`Error when checking MissingScript 5, ${fs}`)}!function(e){e[e.PORTRAIT=1]="PORTRAIT",e[e.PORTRAIT_UPSIDE_DOWN=2]="PORTRAIT_UPSIDE_DOWN",e[e.LANDSCAPE_LEFT=4]="LANDSCAPE_LEFT",e[e.LANDSCAPE_RIGHT=8]="LANDSCAPE_RIGHT",e[e.LANDSCAPE=12]="LANDSCAPE",e[e.AUTO=13]="AUTO"}(Kh||(Kh={}));const Zh={0:Kh.PORTRAIT,"-90":Kh.LANDSCAPE_LEFT,90:Kh.LANDSCAPE_RIGHT,180:Kh.PORTRAIT_UPSIDE_DOWN},Qh=new class extends kt{get supportFullScreen(){return!1}get isFullScreen(){return!1}get devicePixelRatio(){return jsb.device.getDevicePixelRatio()||1}get windowSize(){const e=this.devicePixelRatio,t=Math.round(window.innerWidth),n=Math.round(window.innerHeight);return new Di(t*e,n*e)}set windowSize(e){console.warn("Setting window size is not supported yet.")}get resolution(){const e=this.windowSize,t=this.resolutionScale;return new Di(e.width*t,e.height*t)}get resolutionScale(){return this._resolutionScale}set resolutionScale(e){var t;e!==this._resolutionScale&&(this._resolutionScale=e,null===(t=this._cbToUpdateFrameBuffer)||void 0===t||t.call(this))}get orientation(){return Zh[jsb.device.getDeviceOrientation()]}set orientation(e){console.warn("Setting orientation is not supported yet.")}get safeAreaEdge(){const e=jsb.device.getSafeAreaEdge(),t=this.devicePixelRatio;let n=e.x*t,i=e.z*t,s=e.y*t,r=e.w*t;return this.orientation===Kh.PORTRAIT?n<i?n=i:i=n:s<r?s=r:r=s,{top:n,bottom:i,left:s,right:r}}get isProportionalToFrame(){return this._isProportionalToFrame}set isProportionalToFrame(e){}constructor(){super(),this.isFrameRotated=!1,this.handleResizeEvent=!0,this._cbToUpdateFrameBuffer=void 0,this._resolutionScale=1,this._isProportionalToFrame=!1,this._registerEvent()}init(e,t){this._cbToUpdateFrameBuffer=t,this._cbToUpdateFrameBuffer()}requestFullScreen(){return Promise.reject(new Error("request fullscreen has not been supported yet on this platform."))}exitFullScreen(){return Promise.reject(new Error("exit fullscreen has not been supported yet on this platform."))}_registerEvent(){jsb.onResize=e=>{0!==e.width&&0!==e.height&&(e.width/=this.devicePixelRatio,e.height/=this.devicePixelRatio,window.resize(e.width,e.height),this.emit("window-resize"))},jsb.onOrientationChanged=()=>{this.emit("orientation-change")}}},Jh=e("screen",new class{_init(e){Qh.init(e,(()=>{var e;const t=i.director;(null===(e=t.root)||void 0===e?void 0:e.pipeline)?t.root.pipeline.pipelineSceneData.shadingScale=Qh.resolutionScale:T(1220)}))}get devicePixelRatio(){return Qh.devicePixelRatio}get windowSize(){return Qh.windowSize}set windowSize(e){Qh.windowSize=e}get resolution(){return Qh.resolution}get supportsFullScreen(){return Qh.supportFullScreen}fullScreen(){return Qh.isFullScreen}requestFullScreen(e,t,n){return arguments.length>0&&T(1400,"screen.requestFullScreen(element, onFullScreenChange?, onFullScreenError?)","screen.requestFullScreen(): Promise"),Qh.requestFullScreen().then((()=>{null==t||t()})).catch((e=>{console.error(e),null==n||n()}))}exitFullScreen(){return Qh.exitFullScreen()}autoFullScreen(e,t){var n;null===(n=this.requestFullScreen(e,t))||void 0===n||n.catch((()=>{}))}disableAutoFullScreen(e){}});i.screen=Jh;const e_=e("sys",{Feature:Yt,hasFeature:e=>Zt.hasFeature(e),NetworkType:Wt,Language:jt,OS:qt,Platform:Xt,BrowserType:Vt,isNative:Zt.isNative,isBrowser:Zt.isBrowser,isMobile:Zt.isMobile,isLittleEndian:Zt.isLittleEndian,platform:Zt.platform,language:Zt.language,languageCode:Zt.nativeLanguage,os:Zt.os,osVersion:Zt.osVersion,osMainVersion:Zt.osMainVersion,browserType:Zt.browserType,browserVersion:Zt.browserVersion,windowPixelResolution:Jh.windowSize,capabilities:{canvas:!0,opengl:!0,webp:Zt.hasFeature(Yt.WEBP),imageBitmap:Zt.hasFeature(Yt.IMAGE_BITMAP),touches:Zt.hasFeature(Yt.INPUT_TOUCH),mouse:Zt.hasFeature(Yt.EVENT_MOUSE),keyboard:Zt.hasFeature(Yt.EVENT_KEYBOARD),accelerometer:Zt.hasFeature(Yt.EVENT_ACCELEROMETER)},localStorage:{},getNetworkType:()=>Zt.networkType,getBatteryLevel:()=>Zt.getBatteryLevel(),garbageCollect(){Zt.triggerGC()},isObjectValid:e=>null!=e,dump(){let e="";e+=`isMobile : ${this.isMobile}\r\n`,e+=`language : ${this.language}\r\n`,e+=`browserType : ${this.browserType}\r\n`,e+=`browserVersion : ${this.browserVersion}\r\n`,e+=`capabilities : ${JSON.stringify(this.capabilities)}\r\n`,e+=`os : ${this.os}\r\n`,e+=`osVersion : ${this.osVersion}\r\n`,e+=`platform : ${this.platform}\r\n`,e+=`Using ${i.game.renderType===i.game.RENDER_TYPE_WEBGL?"WEBGL":"CANVAS"} renderer.\r\n`,u(e)},openURL(e){Zt.openURL(e)},now:()=>Zt.now(),restartVM(){Zt.restartJSVM()},getSafeAreaRect(){const e=i.view,t=Qh.safeAreaEdge,n=Qh.windowSize,s=new bi(t.left,t.bottom),r=new bi(n.width-t.right,n.height-t.top);e._convertToUISpace(s),e._convertToUISpace(r);const o=s.x,a=s.y,c=r.x-s.x,l=r.y-s.y;return new Mi(o,a,c,l)}});!function(){try{let e=e_.localStorage=window.localStorage;e.setItem("storage",""),e.removeItem("storage"),e=null}catch(e){const t=function(){T(5200)};e_.localStorage={getItem:t,setItem:t,clear:t,removeItem:t}}e_.__isWebIOS14OrIPadOS14Env=(e_.os===qt.IOS||e_.os===qt.OSX)&&Zt.isBrowser&&/(OS 14)|(Version\/14)/.test(window.navigator.userAgent)}(),i.sys=e_;const t_=e("serializeTag",Symbol("[[Serialize]]")),n_=e("deserializeTag",Symbol("[[Deserialize]]"));class i_{constructor(e,t){this._document=void 0,this._chunks=void 0,this._document=e,this._chunks=t}get document(){return this._document}get chunks(){return this._chunks}}function s_(e){const t=e;return{chunks:t.chunks,document:t.document}}function r_(e){if(e.length<16)throw new o_(I(13102));const t=new DataView(e.buffer,e.byteOffset,e.byteLength);if(1313817411!==t.getUint32(0,!0))throw new o_(I(13100));const n=t.getUint32(4,!0);if(1!==n)throw new o_(I(13101,n));if(t.getUint32(8,!0)!==t.byteLength)throw new o_(I(13102));let i=12;const s=t.getUint32(i,!0);i+=4;const r=new Uint8Array(t.buffer,i+t.byteOffset,s);i+=s;const o=function(e){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(e);if("Buffer"in globalThis){const{Buffer:t}=globalThis;return t.from(e.buffer,e.byteOffset,e.byteLength).toString()}throw new Error(I(13104))}(r);let a;try{a=JSON.parse(o)}catch(e){throw new o_(e)}const c=[];for(;i<t.byteLength;){i%8!=0&&(i+=8-i%8);const e=t.getUint32(i,!0);i+=4,c.push(new Uint8Array(t.buffer,i+t.byteOffset,e)),i+=e}if(i!==t.byteLength)throw new o_(I(13102));return new i_(a,c)}class o_ extends Error{}function a_(e,t,n,s,r){if(t instanceof i.ValueType){r||e.push("if(prop){");const i=Q(t);e.push(`s._deserializeFastDefinedObject(o${n},prop,${i});`),r||e.push(`}else o${n}=null;`)}else e.push(`\nif (prop) {\n    s._deserializeAndAssignField(o, prop, ${s});\n} else {\n    o${n}=null;\n}\n`)}i.internal.parseCCONJson=s_,i.internal.decodeCCONBinary=r_,i.internal.CCON=i_;const c_="$_$type",l_="$_$default",h_="$_$formerlySerializedAs";class __{constructor(e,t,n,i,s){this.deserializedList=void 0,this.deserializedData=void 0,this._ignoreEditorOnly=void 0,this.result=e,this.customEnv=i,this.deserializedList=[],this.deserializedData=null,this._classFinder=t,this._reportMissingClass=n,this._onDereferenced=null==t?void 0:t.onDereferenced}reset(e,t,n,i,s){this.result=e,this.customEnv=i,this._classFinder=t,this._reportMissingClass=n,this._onDereferenced=null==t?void 0:t.onDereferenced}clear(){this.result=null,this.customEnv=null,this.deserializedList.length=0,this.deserializedData=null,this._classFinder=null,this._reportMissingClass=null,this._onDereferenced=null}deserialize(e){let t,n=!1;e instanceof i_?(n=!0,t=e.document,e.chunks.length>0&&(e.chunks.length,this._mainBinChunk=e.chunks[0])):t=e,this._serializedData=t,this._context={fromCCON:n};const i=Array.isArray(t)?t[0]:t;return this.deserializedData=this._deserializeObject(i,0),this._serializedData=void 0,this._mainBinChunk=void 0,this._context=void 0,this.deserializedData}_deserializeObject(e,t,n,i){switch(e.__type__){case"TypedArray":return this._deserializeTypedArrayView(e);case"TypedArrayRef":return this._deserializeTypedArrayViewRef(e);default:return e.__type__?this._deserializeTypeTaggedObject(e,t,n,i):Array.isArray(e)?this._deserializeArray(e):this._deserializePlainObject(e)}}_deserializeTypedArrayView(e){return globalThis[e.ctor].from(e.array)}_deserializeTypedArrayViewRef(e){const{offset:t,length:n,ctor:i}=e;return new globalThis[i](this._mainBinChunk.buffer,this._mainBinChunk.byteOffset+t,n)}_deserializeArray(e){const t=new Array(e.length);let n;for(let i=0;i<e.length;i++)n=e[i],"object"==typeof n&&n?this._deserializeAndAssignField(t,n,`${i}`)&&(t[i]=null):t[i]=n;return t}_deserializePlainObject(e){const t={};return this._fillPlainObject(t,e),t}_deserializeTypeTaggedObject(e,t,n,i){const s=e.__type__,r=this._classFinder(s,e,n,i);if(!r)return this._classFinder===Se&&this._reportMissingClass(s),null;{const n=(e=>{const n=new e;return t>=0&&(this.deserializedList[t]=n),n})(r);return this._deserializeInto(e,n,r),n}}_deserializeInto(e,t,n,s=!1){s||!t[n_]?t._deserialize?t._deserialize(e.content,this):i.Class._isCCClass(n)?this._deserializeFireClass(t,e,n):this._deserializeFastDefinedObject(t,e,n):this._runCustomizedDeserialize(e,t,n)}_runCustomizedDeserialize(e,t,n){const i={readProperty:t=>{const n=e[t];return"object"==typeof n&&n?this._deserializeObjectField(n):n},readThis:()=>{this._deserializeInto(e,t,n,!0)},readSuper:()=>{const i=he(n);i&&this._deserializeInto(e,t,i)}};t[n_](i,this._context)}_deserializeFireClass(e,t,n){let s;if(n.hasOwnProperty("__deserialize__"))s=n.__deserialize__;else{s=function(e,t){const n=nt(t),s=t.__values__,r=["var prop;"],o=Ge.test(Te(t));for(let e=0;e<s.length;e++){const t=s[e];let i,a;Et.IDENTIFIER_RE.test(t)?(a=`"${t}"`,i=`.${t}`):(a=Et.escapeForJS(t),i=`[${a}]`);let c=i;if(n[t+h_]){const e=n[t+h_];c=Et.IDENTIFIER_RE.test(e)?`.${e}`:`[${Et.escapeForJS(e)}]`}r.push(`prop=d${c};`),r.push('if(typeof (prop)!=="undefined"){');const l=Et.getDefault(n[t+l_]);if(o){let e;const s=n[t+c_];if(void 0===l&&s)e=s instanceof st;else{const t=typeof l;e="string"===t||"number"===t||"boolean"===t}e?r.push(`o${i}=prop;`):a_(r,l,i,a,!0)}else r.push(`if(typeof (prop)!=="object"){o${i}=prop;}else{`),a_(r,l,i,a,!1),r.push("}");r.push("}")}return(i.js.isChildClassOf(t,i._BaseNode)||i.js.isChildClassOf(t,i.Component))&&r.push("d._id&&(o._id=d._id);"),"_$erialized"===s[s.length-1]&&(r.push("o._$erialized=JSON.parse(JSON.stringify(d));"),r.push("s._fillPlainObject(o._$erialized,d);")),Function("s","o","d","k",r.join(""))}(0,n);try{if(n===$h){const e=n.__values__;0!==e.length&&"_$erialized"===e[e.length-1]||(d("The '_$erialized' prop of MissingScript is missing. Will force the raw data to be save."),d(`    Error props: ['${e}']. Please contact jare.`));const t=s;s=function(e,n,i,s){try{JSON.parse(JSON.stringify(i._$erialized))||d(`Unable to load previously serialized data. ${JSON.stringify(i)}`)}catch(e){d(`Error when checking MissingScript 7, ${e}`)}t(e,n,i,s)}}}catch(e){d(`Error when checking MissingScript 6, ${e}`)}X(n,"__deserialize__",s,!0)}s(this,e,t,n)}_deserializeAndAssignField(e,t,n){const i=t.__id__;if("number"==typeof i){const t=this.deserializedList[i];if(t)e[n]=t;else{var s;const t=this._serializedData[i];e[n]=this._deserializeObject(t,i,void 0,n),null===(s=this._onDereferenced)||void 0===s||s.call(this,this.deserializedList,i,e,n)}}else{const i=t.__uuid__;if(i){const s=t.__expectedType__;this.result.push(e,n,i,s)}else e[n]=this._deserializeObject(t,-1)}return!1}_deserializeObjectField(e){const t=e.__id__;if("number"==typeof t){const e=this.deserializedList[t];if(e)return e;{const e=this._serializedData[t];return this._deserializeObject(e,t,void 0,void 0)}}if(e.__uuid__)throw e.__expectedType__,new Error("Asset reference field serialization is currently not supported in custom serialization.");return this._deserializeObject(e,-1)}_fillPlainObject(e,t){for(const n in t){if(!t.hasOwnProperty(n))continue;const i=t[n];"object"!=typeof i?"__type__"!==n&&(e[n]=i):i?this._deserializeAndAssignField(e,i,n)&&(e[n]=null):e[n]=null}}_deserializeFastDefinedObject(e,t,n){if(n===i.Vec2)return e.x=t.x||0,void(e.y=t.y||0);if(n===i.Vec3)return e.x=t.x||0,e.y=t.y||0,void(e.z=t.z||0);if(n===i.Color){e.r=t.r||0,e.g=t.g||0,e.b=t.b||0;const n=t.a;return void(e.a=void 0===n?255:n)}if(n===i.Size)return e.width=t.width||0,void(e.height=t.height||0);const s=nt(n),r=n.__values__;for(let n=0;n<r.length;n++){const i=r[n];let o=t[i];void 0!==o||t.hasOwnProperty(i)||(o=Et.getDefault(s[i+l_])),"object"!=typeof o?e[i]=o:o?this._deserializeAndAssignField(e,o,i):e[i]=null}}}__.pool=new class extends be{constructor(){super((e=>{e.clear()}),1)}get(e,t,n,i,s){const r=this._get();return r?(r.reset(e,t,n,i,s),r):new __(e,t,n,i,s)}};const u_=[bi,ri,wi,ui,ti,Di,Mi,xi];function p_(e,t){e.x=t[1],e.y=t[2],e.z=t[3],e.w=t[4]}const d_=[(e,t)=>{e.x=t[1],e.y=t[2]},(e,t)=>{e.x=t[1],e.y=t[2],e.z=t[3]},p_,p_,(e,t)=>{e._val=t[1]},(e,t)=>{e.width=t[1],e.height=t[2]},(e,t)=>{e.x=t[1],e.y=t[2],e.width=t[3],e.height=t[4]},(e,t)=>{xi.fromArray(e,t,1)}];class f_{constructor(){this.uuidObjList=null,this.uuidPropList=null,this.uuidList=null,this.uuidTypeList=[]}init(e){e?(this.uuidObjList=e[8],this.uuidPropList=e[9],this.uuidList=e[10]):this.uuidList||(this.uuidList=[],this.uuidObjList=[],this.uuidPropList=[],this.uuidTypeList=[])}reset(){this.uuidList&&(this.uuidList.length=0,this.uuidObjList.length=0,this.uuidPropList.length=0,this.uuidTypeList.length=0)}push(e,t,n,i){this.uuidObjList.push(e),this.uuidPropList.push(t),this.uuidList.push(n),this.uuidTypeList.push(i||"")}}function m_(e,t){const n=e[4][t[0]],i=n[0],s=new(0,i[0]),r=i[1],o=i[2],a=n[n.length-1];let c=1;for(;c<a;++c)s[r[n[c]]]=t[c];for(;c<t.length;++c){const a=r[n[c]],l=i[n[c]+o];(0,C_[l])(e,s,a,t[c])}return s}function g_(e,t,n){const i=new t;return i._deserialize?i._deserialize(n,e[0]):E(5303,Q(t)),i}function v_(e,t,n,i){i>=0?t[n]=e[5][i]:e[7][3*~i]=t}function y_(e){return(t,n,i,s)=>{n[i]=s;for(let n=0;n<s.length;++n)e(t,s,n,s[n])}}function x_(e,t,n,i){t[n]=null,e[8][i]=t}function S_(e,t,n,i){t[n]=m_(e,i)}e("Details",f_),f_.pool=new be((e=>{e.reset()}),5),f_.pool.get=function(){return this._get()||new f_};const C_=new Array(13);function T_(e,t,n){return e||n(t),Object}function b_(e,t,n,i,s,r,o){let a=e(t);if(!a){if(s)return void(n[i]=(c=n,l=i,h=t,function(){const t=e(h)||T_(r,h,o);return c[l]=t,new t}));a=T_(r,t,o)}var c,l,h;n[i]=a}function E_(e,t,n,i){const s=n||Se,r=e[3];for(let e=0;e<r.length;++e){const o=r[e];"string"!=typeof o?b_(s,o[0],o,0,t,n,i):b_(s,o,r,e,t,n,i)}}function A_(e){const t=e[4];if(t){const n=e[3];for(let e=0;e<t.length;++e){const i=t[e];i[0]=n[i[0]]}}}function P_(e,t,n){"string"==typeof e&&(e=JSON.parse(e));const s=!t;let r;if(t=t||f_.pool.get(),function(e){if(Array.isArray(e)){const t=e[0];return"number"==typeof t||t instanceof w_}return!1}(e)){t.init(e),n=n||{};let s=e[0],a=!1;if("object"==typeof s&&(a=s.preprocessed,s=s.version),s<1)throw new Error(I(5304,s));var o;n._version=s,n.result=t,e[0]=n,a||(E_(e,!1,n.classFinder,null!==(o=n.reportMissingClass)&&void 0!==o?o:P_.reportMissingClass),A_(e)),i.game._isCloning=!0;const c=e[5],l=function(e){const t=e[5],n=e[6],i=0===n?0:n.length;let s=t[t.length-1],r=t.length-i;"number"!=typeof s?s=0:(s<0&&(s=~s),--r);let o=0;for(;o<r;++o)t[o]=m_(e,t[o]);const a=e[3];for(let s=0;s<i;++s,++o){let i=n[s];const r=t[o];if(i>=0){const n=a[i];t[o]=g_(e,n,r)}else i=~i,(0,C_[i])(e,t,o,r)}return s}(e);i.game._isCloning=!1,e[7]&&function(e,t,n){const i=e.length-1;let s=0;const r=3*e[i];for(;s<r;s+=3){const i=e[s],r=t[e[s+2]],o=e[s+1];o>=0?i[n[o]]=r:i[~o]=r}for(;s<i;s+=3){const i=t[e[s]],r=t[e[s+2]],o=e[s+1];o>=0?i[n[o]]=r:i[~o]=r}}(e[7],c,e[2]),function(e){const t=e[5],n=e[2],i=e[1],s=e[8],r=e[9],o=e[10];for(let e=0;e<s.length;++e){const a=s[e];"number"==typeof a&&(s[e]=t[a]);let c=r[e];"number"==typeof c&&(c=c>=0?n[c]:~c,r[e]=c);const l=o[e];"number"==typeof l&&(o[e]=i[l])}}(e),r=c[l]}else r=function(e,t,n){var s;const r=(n=n||{}).classFinder||Se,o=n.createAssetRefs||e_.platform===Xt.EDITOR_CORE,a=n.customEnv,c=n.ignoreEditorOnly,l=null!==(s=n.reportMissingClass)&&void 0!==s?s:i.deserialize.reportMissingClass;t.init();const h=__.pool.get(t,r,l,a,c);i.game._isCloning=!0;const _=h.deserialize(e);return i.game._isCloning=!1,__.pool.put(h),o&&t.assignAssetsBy(EditorExtends.serialize.asAsset),_}(e,t,n);return s&&f_.pool.put(t),r}C_[0]=function(e,t,n,i){t[n]=i},C_[1]=v_,C_[2]=y_(v_),C_[3]=y_(x_),C_[4]=S_,C_[5]=function(e,t,n,i){d_[i[0]](t[n],i)},C_[6]=x_,C_[7]=function(e,t,n,i){t[n].set(i)},C_[8]=function(e,t,n,i){const s=new u_[i[0]];d_[i[0]](s,i),t[n]=s},C_[9]=y_(S_),C_[10]=function(e,t,n,i){const s=e[3][i[0]];t[n]=g_(e,s,i[1])},C_[11]=function(e,t,n,i){const s=i[0];t[n]=s;for(let t=1;t<i.length;t+=3){const n=i[t],r=i[t+1],o=i[t+2];(0,C_[r])(e,s,n,o)}},C_[12]=function(e,t,n,i){const s=i[0];t[n]=s;for(let t=0;t<s.length;++t){const n=s[t],r=i[t+1];0!==r&&(0,C_[r])(e,s,t,n)}},P_.Details=f_,P_.reportMissingClass=function(e){E(5302,e)};class w_{constructor(e){this.preprocessed=!0,this.version=e}}function I_(e,t,n){return[1,0,0,[e],0,n?[t,-1]:[t],[0],0,[],[],[]]}i.deserialize=P_;const R_=Dt.Flags.Destroyed,D_=Dt.Flags.PersistentMask,O_=[];function M_(e){let t;if(e instanceof Dt){if(e._instantiate)return i.game._isCloning=!0,t=e._instantiate(null,!0),i.game._isCloning=!1,t;if(e instanceof i.Asset)throw new TypeError(I(6903))}return i.game._isCloning=!0,t=N_(e),i.game._isCloning=!1,t}function N_(e,t){let n;n=e._iN$t?e._iN$t:e.constructor?new(0,e.constructor):Object.create(null),L_(e,n,t);for(let e=0,t=O_.length;e<t;++e)O_[e]._iN$t=null;return O_.length=0,n}function L_(e,t,n){Ae.value(e,"_iN$t",t,!0),O_.push(e);const s=e.constructor;if(i.Class._isCCClass(s))!function(e,t,n,i){const s=e.__values__;for(let e=0;e<s.length;e++){const r=s[e],o=t[r];if("object"==typeof o&&o){const e=n[r];e instanceof Be&&e.constructor===o.constructor?e.set(o):n[r]=o._iN$t||z_(o,i)}else n[r]=o}}(s,e,t,n);else for(const i in e){if(!e.hasOwnProperty(i)||95===i.charCodeAt(0)&&95===i.charCodeAt(1)&&"__type__"!==i&&"__prefab"!==i)continue;const s=e[i];if("object"==typeof s&&s){if(s===t)continue;t[i]=s._iN$t||z_(s,n)}else t[i]=s}e instanceof Dt&&(t._objFlags&=D_)}function z_(e,t){if(e instanceof Be)return e.clone();if(e instanceof i.Asset)return e;let n;if(ArrayBuffer.isView(e)){const t=e.length;n=new e.constructor(t),e._iN$t=n,O_.push(e);for(let i=0;i<t;++i)n[i]=e[i];return n}if(Array.isArray(e)){const i=e.length;n=new Array(i),e._iN$t=n,O_.push(e);for(let s=0;s<i;++s){const i=e[s];n[s]="object"==typeof i&&i?i._iN$t||z_(i,t):i}return n}if(e._objFlags&R_)return null;const s=e.constructor;if(i.Class._isCCClass(s)){if(t)if(t instanceof i.Component){if(e instanceof i._BaseNode||e instanceof i.Component)return e}else if(t instanceof i._BaseNode)if(e instanceof i._BaseNode){if(!e.isChildOf(t))return e}else if(e instanceof i.Component&&e.node&&!e.node.isChildOf(t))return e;n=new s}else if(s===Object)n={};else{if(s)return e;n=Object.create(null)}return L_(e,n,t),n}var F_,B_,U_,G_,H_,k_,V_,j_;let W_,q_;function X_(e,t){return(t<<3)+e}function Y_(e){return $_[e]}function K_(e){switch(e){case W_.Uint8:return Uint8Array;case W_.Uint16:return Uint16Array;case W_.Uint32:return Uint32Array;case W_.Int8:return Int8Array;case W_.Int16:return Int16Array;case W_.Int32:return Int32Array;case W_.Float32:return Float32Array;case W_.Float64:return Float64Array}}M_._clone=N_,i.instantiate=M_,function(e){e[e.Uint8=0]="Uint8",e[e.Uint16=1]="Uint16",e[e.Uint32=2]="Uint32",e[e.Int8=3]="Int8",e[e.Int16=4]="Int16",e[e.Int32=5]="Int32",e[e.Float32=6]="Float32",e[e.Float64=7]="Float64"}(W_||(W_={})),function(e){e[e.Scalar=0]="Scalar",e[e.Vec2=1]="Vec2",e[e.Vec3=2]="Vec3",e[e.Vec4=3]="Vec4",e[e.Quat=4]="Quat",e[e.Mat4=5]="Mat4"}(q_||(q_={})),e("CompactValueTypeArray",Zc("cc.CompactValueTypeArray")((j_=V_=class e{constructor(){Fc(this,"_byteOffset",U_,this),Fc(this,"_unitCount",G_,this),Fc(this,"_unitElement",H_,this),Fc(this,"_length",k_,this)}static lengthFor(e,t,n){return Y_(t).requiredUnits*e.length*K_(n).BYTES_PER_ELEMENT}static compress(t,n,i,s,r,o){const a=Y_(n),c=K_(i),l=a.requiredUnits*t.length,h=new c(s,r,l);for(let e=0;e<t.length;++e)a.compress(h,e,t[e]);const _=new e;return _._unitElement=X_(i,n),_._byteOffset=o,_._unitCount=l,_._length=t.length,_}decompress(e){const{storageUnit:t,elementType:n}={storageUnit:7&(i=this._unitElement),elementType:i>>3};var i;const s=Y_(n),r=new(K_(t))(e,this._byteOffset,this._unitCount),o=new Array(this._length);for(let e=0;e<this._length;++e)o[e]=s.decompress(r,e);return o}},V_.StorageUnit=W_,V_.ElementType=q_,U_=Bc((B_=j_).prototype,"_byteOffset",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),G_=Bc(B_.prototype,"_unitCount",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),H_=Bc(B_.prototype,"_unitElement",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return X_(W_.Uint8,q_.Scalar)}}),k_=Bc(B_.prototype,"_length",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),F_=B_))||F_);const $_={[q_.Scalar]:{requiredUnits:1,compress(e,t,n){e[t]=n},decompress:(e,t)=>e[t]},[q_.Vec2]:{requiredUnits:2,compress(e,t,n){e[2*t]=n.x,e[2*t+1]=n.y},decompress:(e,t)=>new ri(e[2*t],e[2*t+1])},[q_.Vec3]:{requiredUnits:3,compress(e,t,n){e[3*t]=n.x,e[3*t+1]=n.y,e[3*t+2]=n.z},decompress:(e,t)=>new ri(e[3*t],e[3*t+1],e[3*t+2])},[q_.Vec4]:{requiredUnits:4,compress(e,t,n){e[4*t]=n.x,e[4*t+1]=n.y,e[4*t+2]=n.z,e[4*t+3]=n.w},decompress:(e,t)=>new wi(e[4*t],e[4*t+1],e[4*t+2],e[4*t+3])},[q_.Quat]:{requiredUnits:4,compress(e,t,n){e[4*t]=n.x,e[4*t+1]=n.y,e[4*t+2]=n.z,e[4*t+3]=n.w},decompress:(e,t)=>new ui(e[4*t],e[4*t+1],e[4*t+2],e[4*t+3])},[q_.Mat4]:{requiredUnits:16,compress(e,t,n){xi.toArray(e,n,16*t)},decompress:(e,t)=>xi.fromArray(new xi,e,16*t)}};function Z_(){return 0}function Q_(e){return e}function J_(e){return e*e}function eu(e){return e*(2-e)}function tu(e){return(e*=2)<1?.5*e*e:-.5*(--e*(e-2)-1)}function nu(e){return e*e*e}function iu(e){return--e*e*e+1}function su(e){return(e*=2)<1?.5*e*e*e:.5*((e-=2)*e*e+2)}function ru(e){return e*e*e*e}function ou(e){return 1- --e*e*e*e}function au(e){return(e*=2)<1?.5*e*e*e*e:-.5*((e-=2)*e*e*e-2)}function cu(e){return e*e*e*e*e}function lu(e){return--e*e*e*e*e+1}function hu(e){return(e*=2)<1?.5*e*e*e*e*e:.5*((e-=2)*e*e*e*e+2)}function _u(e){return 1===e?1:1-Math.cos(e*Math.PI/2)}function uu(e){return Math.sin(e*Math.PI/2)}function pu(e){return.5*(1-Math.cos(Math.PI*e))}function du(e){return 0===e?0:Math.pow(1024,e-1)}function fu(e){return 1===e?1:1-Math.pow(2,-10*e)}function mu(e){return 0===e?0:1===e?1:(e*=2)<1?.5*Math.pow(1024,e-1):.5*(2-Math.pow(2,-10*(e-1)))}function gu(e){return 1-Math.sqrt(1-e*e)}function vu(e){return Math.sqrt(1- --e*e)}function yu(e){return(e*=2)<1?-.5*(Math.sqrt(1-e*e)-1):.5*(Math.sqrt(1-(e-=2)*e)+1)}function xu(e){let t,n=.1;return 0===e?0:1===e?1:(!n||n<1?(n=1,t=.1):t=.4*Math.asin(1/n)/(2*Math.PI),-n*Math.pow(2,10*(e-=1))*Math.sin(2*(e-t)*Math.PI/.4))}function Su(e){let t,n=.1;return 0===e?0:1===e?1:(!n||n<1?(n=1,t=.1):t=.4*Math.asin(1/n)/(2*Math.PI),n*Math.pow(2,-10*e)*Math.sin(2*(e-t)*Math.PI/.4)+1)}function Cu(e){let t,n=.1;return 0===e?0:1===e?1:(!n||n<1?(n=1,t=.1):t=.4*Math.asin(1/n)/(2*Math.PI),(e*=2)<1?n*Math.pow(2,10*(e-=1))*Math.sin(2*(e-t)*Math.PI/.4)*-.5:n*Math.pow(2,-10*(e-=1))*Math.sin(2*(e-t)*Math.PI/.4)*.5+1)}function Tu(e){if(1===e)return 1;const t=1.70158;return e*e*((t+1)*e-t)}function bu(e){if(0===e)return 0;const t=1.70158;return--e*e*((t+1)*e+t)+1}function Eu(e){const t=2.5949095;return(e*=2)<1?e*e*((t+1)*e-t)*.5:.5*((e-=2)*e*((t+1)*e+t)+2)}function Au(e){return 1-Pu(1-e)}function Pu(e){return e<1/2.75?7.5625*e*e:e<2/2.75?7.5625*(e-=1.5/2.75)*e+.75:e<2.5/2.75?7.5625*(e-=2.25/2.75)*e+.9375:7.5625*(e-=2.625/2.75)*e+.984375}function wu(e){return e<.5?.5*Au(2*e):.5*Pu(2*e-1)+.5}function Iu(e){return e<=0?0:e>=1?1:e*e*(3-2*e)}function Ru(e){return e<=0?0:e>=1?1:e*e*e*(e*(6*e-15)+10)}i._decorator=Wl;const Du=Hu(J_,eu),Ou=Hu(nu,iu),Mu=Hu(ru,ou),Nu=Hu(cu,lu),Lu=Hu(_u,uu),zu=Hu(du,fu),Fu=Hu(gu,vu),Bu=Hu(xu,Su),Uu=Hu(Tu,bu),Gu=Hu(Au,Pu);function Hu(e,t){return n=>n<.5?t(2*n)/2:e(2*n-1)/2+.5}var ku=Object.freeze({__proto__:null,constant:Z_,linear:Q_,quadIn:J_,quadOut:eu,quadInOut:tu,cubicIn:nu,cubicOut:iu,cubicInOut:su,quartIn:ru,quartOut:ou,quartInOut:au,quintIn:cu,quintOut:lu,quintInOut:hu,sineIn:_u,sineOut:uu,sineInOut:pu,expoIn:du,expoOut:fu,expoInOut:mu,circIn:gu,circOut:vu,circInOut:yu,elasticIn:xu,elasticOut:Su,elasticInOut:Cu,backIn:Tu,backOut:bu,backInOut:Eu,bounceIn:Au,bounceOut:Pu,bounceInOut:wu,smooth:Iu,fade:Ru,quadOutIn:Du,cubicOutIn:Ou,quartOutIn:Mu,quintOutIn:Nu,sineOutIn:Lu,expoOutIn:zu,circOutIn:Fu,elasticOutIn:Bu,backOutIn:Uu,bounceOutIn:Gu});let Vu;e("easing",ku),function(e){e[e.LINEAR=0]="LINEAR",e[e.CONSTANT=1]="CONSTANT",e[e.QUAD_IN=2]="QUAD_IN",e[e.QUAD_OUT=3]="QUAD_OUT",e[e.QUAD_IN_OUT=4]="QUAD_IN_OUT",e[e.QUAD_OUT_IN=5]="QUAD_OUT_IN",e[e.CUBIC_IN=6]="CUBIC_IN",e[e.CUBIC_OUT=7]="CUBIC_OUT",e[e.CUBIC_IN_OUT=8]="CUBIC_IN_OUT",e[e.CUBIC_OUT_IN=9]="CUBIC_OUT_IN",e[e.QUART_IN=10]="QUART_IN",e[e.QUART_OUT=11]="QUART_OUT",e[e.QUART_IN_OUT=12]="QUART_IN_OUT",e[e.QUART_OUT_IN=13]="QUART_OUT_IN",e[e.QUINT_IN=14]="QUINT_IN",e[e.QUINT_OUT=15]="QUINT_OUT",e[e.QUINT_IN_OUT=16]="QUINT_IN_OUT",e[e.QUINT_OUT_IN=17]="QUINT_OUT_IN",e[e.SINE_IN=18]="SINE_IN",e[e.SINE_OUT=19]="SINE_OUT",e[e.SINE_IN_OUT=20]="SINE_IN_OUT",e[e.SINE_OUT_IN=21]="SINE_OUT_IN",e[e.EXPO_IN=22]="EXPO_IN",e[e.EXPO_OUT=23]="EXPO_OUT",e[e.EXPO_IN_OUT=24]="EXPO_IN_OUT",e[e.EXPO_OUT_IN=25]="EXPO_OUT_IN",e[e.CIRC_IN=26]="CIRC_IN",e[e.CIRC_OUT=27]="CIRC_OUT",e[e.CIRC_IN_OUT=28]="CIRC_IN_OUT",e[e.CIRC_OUT_IN=29]="CIRC_OUT_IN",e[e.ELASTIC_IN=30]="ELASTIC_IN",e[e.ELASTIC_OUT=31]="ELASTIC_OUT",e[e.ELASTIC_IN_OUT=32]="ELASTIC_IN_OUT",e[e.ELASTIC_OUT_IN=33]="ELASTIC_OUT_IN",e[e.BACK_IN=34]="BACK_IN",e[e.BACK_OUT=35]="BACK_OUT",e[e.BACK_IN_OUT=36]="BACK_IN_OUT",e[e.BACK_OUT_IN=37]="BACK_OUT_IN",e[e.BOUNCE_IN=38]="BOUNCE_IN",e[e.BOUNCE_OUT=39]="BOUNCE_OUT",e[e.BOUNCE_IN_OUT=40]="BOUNCE_IN_OUT",e[e.BOUNCE_OUT_IN=41]="BOUNCE_OUT_IN",e[e.SMOOTH=42]="SMOOTH",e[e.FADE=43]="FADE"}(Vu||(Vu={}));const ju={[Vu.CONSTANT]:Z_,[Vu.LINEAR]:Q_,[Vu.QUAD_IN]:J_,[Vu.QUAD_OUT]:eu,[Vu.QUAD_IN_OUT]:tu,[Vu.QUAD_OUT_IN]:Du,[Vu.CUBIC_IN]:nu,[Vu.CUBIC_OUT]:iu,[Vu.CUBIC_IN_OUT]:su,[Vu.CUBIC_OUT_IN]:Ou,[Vu.QUART_IN]:ru,[Vu.QUART_OUT]:ou,[Vu.QUART_IN_OUT]:au,[Vu.QUART_OUT_IN]:Mu,[Vu.QUINT_IN]:cu,[Vu.QUINT_OUT]:lu,[Vu.QUINT_IN_OUT]:hu,[Vu.QUINT_OUT_IN]:Nu,[Vu.SINE_IN]:_u,[Vu.SINE_OUT]:uu,[Vu.SINE_IN_OUT]:pu,[Vu.SINE_OUT_IN]:Lu,[Vu.EXPO_IN]:du,[Vu.EXPO_OUT]:fu,[Vu.EXPO_IN_OUT]:mu,[Vu.EXPO_OUT_IN]:zu,[Vu.CIRC_IN]:gu,[Vu.CIRC_OUT]:vu,[Vu.CIRC_IN_OUT]:yu,[Vu.CIRC_OUT_IN]:Fu,[Vu.ELASTIC_IN]:xu,[Vu.ELASTIC_OUT]:Su,[Vu.ELASTIC_IN_OUT]:Cu,[Vu.ELASTIC_OUT_IN]:Bu,[Vu.BACK_IN]:Tu,[Vu.BACK_OUT]:bu,[Vu.BACK_IN_OUT]:Eu,[Vu.BACK_OUT_IN]:Uu,[Vu.BOUNCE_IN]:Au,[Vu.BOUNCE_OUT]:Pu,[Vu.BOUNCE_IN_OUT]:wu,[Vu.BOUNCE_OUT_IN]:Gu,[Vu.SMOOTH]:Iu,[Vu.FADE]:Ru};function Wu(e){return ju[e]}var qu,Xu,Yu,Ku,$u,Zu,Qu;class Ju extends jl{constructor(...e){super(...e),this.interpolationMode=Ul.LINEAR,this.tangentWeightMode=Hl.NONE,this.value=0,this.rightTangent=0,this.rightTangentWeight=0,this.leftTangent=0,this.leftTangentWeight=0,this.easingMethod=Vu.LINEAR}}function ep(e){const t=new Ju;if("number"==typeof e)t.value=e;else{const{interpolationMode:n,tangentWeightMode:i,value:s,rightTangent:r,rightTangentWeight:o,leftTangent:a,leftTangentWeight:c,easingMethod:l,[wt]:h}=e;t.value=null!=s?s:t.value,t.rightTangent=null!=r?r:t.rightTangent,t.rightTangentWeight=null!=o?o:t.rightTangentWeight,t.leftTangent=null!=a?a:t.leftTangent,t.leftTangentWeight=null!=c?c:t.leftTangentWeight,t.interpolationMode=null!=n?n:t.interpolationMode,t.tangentWeightMode=null!=i?i:t.tangentWeightMode,t.easingMethod=null!=l?l:t.easingMethod,h&&(t[wt]=h)}return t}Et.fastDefine("cc.RealKeyframeValue",Ju,{interpolationMode:Ul.LINEAR,tangentWeightMode:Hl.NONE,value:0,rightTangent:0,rightTangentWeight:0,leftTangent:0,leftTangentWeight:0,easingMethod:Vu.LINEAR}),Et.Attr.setClassAttr(Ju,wt,"editorOnly",!0),($u=Ju,null!==(Qu=(Zu=$u)[nl])&&void 0!==Qu?Qu:Zu[nl]={}).uniquelyReferenced=!0;let tp=e("RealCurve",Zc("cc.RealCurve")((Yu=Bc((Xu=class extends kl{constructor(...e){super(...e),Fc(this,"preExtrapolation",Yu,this),Fc(this,"postExtrapolation",Ku,this)}evaluate(e){const{_times:t,_values:n}=this,i=t.length;if(0===i)return 0;const s=t[0],r=t[i-1];if(e<s){const{preExtrapolation:o}=this,a=n[0];if(o===Gl.CLAMP||i<2)return a.value;switch(o){case Gl.LINEAR:return gp(s,n[0].value,t[1],n[1].value,e);case Gl.LOOP:e=fp(e,s,r);break;case Gl.PING_PONG:e=mp(e,s,r);break;default:return a.value}}else if(e>r){const{postExtrapolation:o}=this,a=n[i-1];if(o===Gl.CLAMP||i<2)return a.value;switch(o){case Gl.LINEAR:return gp(r,a.value,t[i-2],n[i-2].value,e);case Gl.LOOP:e=fp(e,s,r);break;case Gl.PING_PONG:e=mp(e,s,r);break;default:return a.value}}const o=kc(t,e);if(o>=0)return n[o].value;const a=~o,c=a-1,l=t[c],h=n[c],_=t[a];return function(e,t,n,i,s){const r=n-e;switch(t.interpolationMode){default:case Ul.CONSTANT:return t.value;case Ul.LINEAR:{const e=t.easingMethod===Vu.LINEAR?s:Wu(t.easingMethod)(s);return Bn(t.value,i.value,e)}case Ul.CUBIC:{const o=1/3,{rightTangent:a,rightTangentWeight:c}=t,l=0!=(t.tangentWeightMode&Hl.RIGHT),{leftTangent:h,leftTangentWeight:_}=i,u=0!=(i.tangentWeightMode&Hl.LEFT);if(l||u){let p=0;if(l)p=c;else{const e=r,t=r*a;p=Math.sqrt(e*e+t*t)*o}const d=Math.atan(a),f=Math.cos(d)*p+e,m=Math.sin(d)*p+t.value;let g=0;if(u)g=_;else{const e=r,t=r*h;g=Math.sqrt(e*e+t*t)*o}const v=Math.atan(h),y=(f-e)/r,x=(-Math.cos(v)*g+n-e)/r,S=m,C=-Math.sin(v)*g+i.value,T=[0,0,0],b=function(e,t,n,i,s){const r=n/i,o=t/i,a=r*r,c=1/3*(-1/3*a+o),l=.5*(2/27*r*a-1/3*r*o+e/i),h=c*c*c,_=l*l+h;let u=0;if(Vl(_)){if(Vl(l))return s[0]=0,1;{const e=Math.cbrt(-l);return s[0]=2*e,s[1]=-e,2}}if(_<0){const e=1/3*Math.acos(-l/Math.sqrt(-h)),t=2*Math.sqrt(-c);s[0]=t*Math.cos(e),s[1]=-t*Math.cos(e+Math.PI/3),s[2]=-t*Math.cos(e-Math.PI/3),u=3}else{const e=Math.sqrt(_),t=Math.cbrt(e-l),n=-Math.cbrt(e+l);s[0]=t+n,u=1}const p=1/3*r;for(let e=0;e<u;++e)s[e]-=p;return u}(0-s,3*y,3*x-6*y,3*(y-x)+1,T),E=function(e,t,n){let i=n;if(1===t)i=e[0];else{i=-1/0;for(let n=0;n<t;++n){const t=e[n];t>=0&&t<=1&&t>i&&(i=t)}i===-1/0&&(i=0)}return i}(T,b,s);return vp(t.value,S,C,i.value,E)}{const e=t.value+o*a*r,n=i.value-o*h*r;return vp(t.value,e,n,i.value,s)}}}}(l,h,_,n[a],(e-l)/(_-l))}addKeyFrame(e,t){return super.addKeyFrame(e,ep(t))}assignSorted(e,t){if(void 0!==t)this.setKeyframes(e.slice(),t.map((e=>ep(e))));else{const t=Array.from(e);this.setKeyframes(t.map((([e])=>e)),t.map((([,e])=>ep(e))))}}isConstant(e){if(this._values.length<=1)return!0;const t=this._values[0].value;return this._values.every((n=>Ln(n.value,t,e)))}[t_](e,t){if(!t.toCCON)return void e.writeThis();const{_times:n,_values:i}=this,s=n.length,r=new DataView(new ArrayBuffer(0+ip+ip+sp+rp*s+up*s));let o=0;r.setUint8(o,this.preExtrapolation),o+=ip,r.setUint8(o,this.postExtrapolation),o+=ip,r.setUint32(o,s,!0),o+=sp,n.forEach(((e,t)=>r.setFloat32(o+rp*t,e,!0))),o+=rp*s;for(const e of i)o=pp(r,e,o);const a=new Uint8Array(r.buffer,0,o);e.writeProperty("bytes",a);const c=i.map((e=>e[wt]));c.some((e=>void 0!==e))&&e.writeProperty("keyframeValueEditorExtras",c)}[n_](e,t){if(!t.fromCCON)return void e.readThis();const n=e.readProperty("bytes"),i=new DataView(n.buffer,n.byteOffset,n.byteLength);let s=0;this.preExtrapolation=i.getUint8(s),s+=ip,this.postExtrapolation=i.getUint8(s),s+=ip;const r=i.getUint32(s,!0);s+=sp;const o=Array.from({length:r},((e,t)=>i.getFloat32(s+rp*t,!0)));s+=rp*r;const a=new Array(r);for(let e=0;e<r;++e){const t=ep({});s=dp(i,t,s),a[e]=t}n.byteLength;const c=e.readProperty("keyframeValueEditorExtras");c&&(c.length,c.forEach(((e,t)=>a[t][wt]=e))),this._times=o,this._values=a}}).prototype,"preExtrapolation",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Gl.CLAMP}}),Ku=Bc(Xu.prototype,"postExtrapolation",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Gl.CLAMP}}),qu=Xu))||qu);var np;!function(e){e[e.VALUE=1]="VALUE",e[e.INTERPOLATION_MODE=2]="INTERPOLATION_MODE",e[e.TANGENT_WEIGHT_MODE=4]="TANGENT_WEIGHT_MODE",e[e.LEFT_TANGENT=8]="LEFT_TANGENT",e[e.LEFT_TANGENT_WEIGHT=16]="LEFT_TANGENT_WEIGHT",e[e.RIGHT_TANGENT=32]="RIGHT_TANGENT",e[e.RIGHT_TANGENT_WEIGHT=64]="RIGHT_TANGENT_WEIGHT"}(np||(np={}));const ip=1,sp=4,rp=4,{interpolationMode:op,tangentWeightMode:ap,leftTangent:cp,leftTangentWeight:lp,rightTangent:hp,rightTangentWeight:_p}=ep({}),up=26;function pp(e,t,n){let i=0,s=n;const r=s;s+=4;const{value:o,interpolationMode:a,tangentWeightMode:c,rightTangent:l,rightTangentWeight:h,leftTangent:_,leftTangentWeight:u,easingMethod:p}=t;return e.setFloat32(s,o,!0),s+=4,a!==op&&(i|=np.INTERPOLATION_MODE,e.setUint8(s,a),s+=1),c!==ap&&(i|=np.TANGENT_WEIGHT_MODE,e.setUint8(s,c),s+=1),_!==cp&&(i|=np.LEFT_TANGENT,e.setFloat32(s,_,!0),s+=4),u!==lp&&(i|=np.LEFT_TANGENT_WEIGHT,e.setFloat32(s,u,!0),s+=4),l!==hp&&(i|=np.RIGHT_TANGENT,e.setFloat32(s,l,!0),s+=4),h!==_p&&(i|=np.RIGHT_TANGENT_WEIGHT,e.setFloat32(s,h,!0),s+=4),i|=p<<8,e.setUint32(r,i,!0),s}function dp(e,t,n){let i=n;const s=e.getUint32(i,!0);i+=4,t.value=e.getFloat32(i,!0),i+=4,s&np.INTERPOLATION_MODE&&(t.interpolationMode=e.getUint8(i),i+=1),s&np.TANGENT_WEIGHT_MODE&&(t.tangentWeightMode=e.getUint8(i),i+=1),s&np.LEFT_TANGENT&&(t.leftTangent=e.getFloat32(i,!0),i+=4),s&np.LEFT_TANGENT_WEIGHT&&(t.leftTangentWeight=e.getFloat32(i,!0),i+=4),s&np.RIGHT_TANGENT&&(t.rightTangent=e.getFloat32(i,!0),i+=4),s&np.RIGHT_TANGENT_WEIGHT&&(t.rightTangentWeight=e.getFloat32(i,!0),i+=4);const r=(65280&s)>>8;return t.easingMethod=r,i}function fp(e,t,n){return t+Yn(e-t,n-t)}function mp(e,t,n){return t+Kn(e-t,n-t)}function gp(e,t,n,i,s){return t+(i-t)/(n-e)*(s-e)}function vp(e,t,n,i,s){const r=1-s;return r*r*r*e+3*r*r*s*t+3*r*s*s*n+s*s*s*i}function yp(e,t,n,i,s){const r=1-s;return r*(r*(e+(3*t-e)*s)+3*n*s*s)+i*s*s*s}i.bezier=yp;const xp=Math.cos,Sp=Math.acos,Cp=Math.max,Tp=2*Math.PI,bp=Math.sqrt;function Ep(e){return e<0?-Math.pow(-e,1/3):Math.pow(e,1/3)}function Ap(e,t){const n=function(e,t){const n=t-0,i=t-e[0],s=3*n,r=3*i,o=3*(t-e[2]),a=1/(-n+r-o+(t-1)),c=1/3,l=(s-6*i+o)*a,h=l*c,_=(-s+r)*a,u=(3*_-l*l)*c,p=u*c,d=(2*l*l*l-9*l*_+n*a*27)/27,f=d/2,m=f*f+p*p*p;let g,v,y,x,S;if(m<0){const e=-u*c,t=bp(e*e*e),n=-d/(2*t),i=Sp(n<-1?-1:n>1?1:n),s=2*Ep(t);return y=s*xp(i*c)-h,x=s*xp((i+Tp)*c)-h,S=s*xp((i+2*Tp)*c)-h,y>=0&&y<=1?x>=0&&x<=1?S>=0&&S<=1?Cp(y,x,S):Cp(y,x):S>=0&&S<=1?Cp(y,S):y:x>=0&&x<=1?S>=0&&S<=1?Cp(x,S):x:S}if(0===m)return g=f<0?Ep(-f):-Ep(f),y=2*g-h,x=-g-h,y>=0&&y<=1?x>=0&&x<=1?Cp(y,x):y:x;{const e=bp(m);return g=Ep(-f+e),v=Ep(f+e),y=g-v-h,y}}(e,t),i=e[1];return((1-n)*(i+(e[3]-i)*n)*3+n*n)*n}var Pp,wp,Ip,Rp,Dp,Op,Mp,Np,Lp;let zp;i.bezierByTime=Ap,function(e){e[e.SLERP=0]="SLERP",e[e.CONSTANT=1]="CONSTANT"}(zp||(zp=e("QuatInterpolationMode",{})));let Fp=Zc("cc.QuatKeyframeValue")(Pp=al((Ip=Bc((wp=class{constructor({value:e,interpolationMode:t,easingMethod:n}={}){Fc(this,"interpolationMode",Ip,this),Fc(this,"value",Rp,this),Fc(this,"easingMethod",Dp,this),this.value=e?ui.clone(e):this.value,this.interpolationMode=null!=t?t:this.interpolationMode,this.easingMethod=null!=n?n:this.easingMethod}}).prototype,"interpolationMode",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return zp.SLERP}}),Rp=Bc(wp.prototype,"value",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return ui.clone(ui.IDENTITY)}}),Dp=Bc(wp.prototype,"easingMethod",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Vu.LINEAR}}),Pp=wp))||Pp)||Pp;function Bp(e){return new Fp(e)}let Up=e("QuatCurve",Zc("cc.QuatCurve")((Np=Bc((Mp=class extends kl{constructor(...e){super(...e),Fc(this,"preExtrapolation",Np,this),Fc(this,"postExtrapolation",Lp,this)}evaluate(e,t){var n;null!==(n=t)&&void 0!==n||(t=new ui);const{_times:i,_values:s,postExtrapolation:r,preExtrapolation:o}=this,a=i.length;if(0===a)return t;const c=i[0],l=i[a-1];if(e<c){const n=s[0];switch(o){case Gl.LOOP:e=c+Yn(e-c,l-c);break;case Gl.PING_PONG:e=c+Kn(e-c,l-c);break;case Gl.CLAMP:default:return ui.copy(t,n.value)}}else if(e>l){const n=s[a-1];switch(r){case Gl.LOOP:e=c+Yn(e-c,l-c);break;case Gl.PING_PONG:e=c+Kn(e-c,l-c);break;case Gl.CLAMP:default:return ui.copy(t,n.value)}}const h=kc(i,e);if(h>=0)return ui.copy(t,s[h].value);const _=~h,u=_-1,p=i[u],d=s[u],f=i[_],m=s[_],g=(e-p)/(f-p);switch(d.interpolationMode){default:case zp.CONSTANT:return ui.copy(t,d.value);case zp.SLERP:{const{easingMethod:e}=d,n=e===Vu.LINEAR?g:Array.isArray(e)?Ap(e,g):Wu(e)(g);return ui.slerp(t,d.value,m.value,n)}}}addKeyFrame(e,t){const n=new Fp(t);return super.addKeyFrame(e,n)}assignSorted(e,t){if(void 0!==t)this.setKeyframes(e.slice(),t.map((e=>Bp(e))));else{const t=Array.from(e);this.setKeyframes(t.map((([e])=>e)),t.map((([,e])=>Bp(e))))}}[t_](e,t){if(!t.toCCON)return void e.writeThis();const{_times:n,_values:i}=this;let s=!0;i.forEach(((e,t,[n])=>{s&&e.interpolationMode!==n.interpolationMode&&(s=!1)}));const r=n.length,o=Wp*(s?1:r),a=i.reduce(((e,{easingMethod:t})=>e+(Array.isArray(t)?qp+4*Yp:qp)),0);let c=0;c+=Hp+kp+Vp*r+4*jp*r+a+o+0;const l=new DataView(new ArrayBuffer(c));let h=0,_=0;s&&(_|=Gp.INTERPOLATION_MODE),l.setUint32(h,_,!0),h+=Hp,l.setUint32(h,r,!0),h+=kp,n.forEach(((e,t)=>l.setFloat32(h+Vp*t,e,!0))),h+=Vp*r,i.forEach((({value:{x:e,y:t,z:n,w:i}},s)=>{const r=h+4*jp*s;l.setFloat32(r+0*jp,e,!0),l.setFloat32(r+1*jp,t,!0),l.setFloat32(r+2*jp,n,!0),l.setFloat32(r+3*jp,i,!0)})),h+=4*jp*r,i.forEach((({easingMethod:e})=>{Array.isArray(e)?(l.setUint8(h,Xp),++h,l.setFloat32(h+0*Yp,e[0],!0),l.setFloat32(h+1*Yp,e[1],!0),l.setFloat32(h+2*Yp,e[2],!0),l.setFloat32(h+3*Yp,e[3],!0),h+=4*Yp):(l.setUint8(h,e),++h)}));const u=h;h+=o;let p=u;i.forEach((({interpolationMode:e})=>{l.setUint8(p,e),s||(p+=Wp)}));const d=new Uint8Array(l.buffer);e.writeProperty("bytes",d)}[n_](e,t){if(!t.fromCCON)return void e.readThis();const n=e.readProperty("bytes"),i=new DataView(n.buffer,n.byteOffset,n.byteLength);let s=0;const r=i.getUint32(s,!0);s+=Hp;const o=r&Gp.INTERPOLATION_MODE,a=i.getUint32(s,!0);s+=kp;const c=Array.from({length:a},((e,t)=>i.getFloat32(s+Vp*t,!0)));s+=Vp*a;const l=s;s+=4*jp*a;const h=Array.from({length:a},((e,t)=>{const n=l+4*jp*t,r=i.getFloat32(n+0*jp,!0),o=i.getFloat32(n+1*jp,!0),a=i.getFloat32(n+2*jp,!0),c=i.getFloat32(n+3*jp,!0),h=i.getUint8(s);++s;const _=Bp({value:{x:r,y:o,z:a,w:c}});return h!==Xp?_.easingMethod=h:(_.easingMethod=[i.getFloat32(s+0*Yp,!0),i.getFloat32(s+1*Yp,!0),i.getFloat32(s+2*Yp,!0),i.getFloat32(s+3*Yp,!0)],s+=4*Yp),_}));if(o){const e=i.getUint8(s);++s;for(let t=0;t<a;++t)h[t].interpolationMode=e}else{for(let e=0;e<a;++e){const t=i.getUint8(s+e);h[e].interpolationMode=t}s+=a}this._times=c,this._values=h}}).prototype,"preExtrapolation",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Gl.CLAMP}}),Lp=Bc(Mp.prototype,"postExtrapolation",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Gl.CLAMP}}),Op=Mp))||Op);var Gp;!function(e){e[e.INTERPOLATION_MODE=1]="INTERPOLATION_MODE"}(Gp||(Gp={}));const Hp=1,kp=4,Vp=4,jp=4,Wp=1,qp=1,Xp=255,Yp=4;var Kp;let $p=e("ObjectCurve",Zc("cc.ObjectCurve")(Kp=class extends kl{evaluate(e){const t=this.searchKeyframe(e);if(t>=0)return this._values[t];const n=zn(~t-1,0,this._values.length-1);return this._values[n]}})||Kp);var Zp,Qp,Jp,ed,td;class nd{constructor(){this.time=0,this.value=0,this.inTangent=0,this.outTangent=0}}Et.fastDefine("cc.Keyframe",nd,{time:0,value:0,inTangent:0,outTangent:0});class id{constructor(){this.index=void 0,this.time=void 0,this.endTime=void 0,this.coefficient=void 0,this.index=-1,this.time=0,this.endTime=0,this.coefficient=new Float32Array(4)}evaluate(e){return t=e-this.time,n=this.coefficient,t*(t*(t*n[0]+n[1])+n[2])+n[3];var t,n}}let sd=Zc("cc.AnimationCurve")((td=ed=class{get _internalCurve(){return this._curve}get keyFrames(){return Array.from(this._curve.keyframes()).map((([e,t])=>{const n=new nd;return n.time=e,n.value=t.value,n.inTangent=t.leftTangent,n.outTangent=t.rightTangent,n}))}set keyFrames(e){this._curve.assignSorted(e.map((e=>[e.time,{interpolationMode:Ul.CUBIC,value:e.value,leftTangent:e.inTangent,rightTangent:e.outTangent}])))}get preWrapMode(){return od(this._curve.preExtrapolation)}set preWrapMode(e){this._curve.preExtrapolation=rd(e)}get postWrapMode(){return od(this._curve.postExtrapolation)}set postWrapMode(e){this._curve.postExtrapolation=rd(e)}constructor(e=null){if(Fc(this,"_curve",Jp,this),this.cachedKey=void 0,e instanceof tp)this._curve=e;else{const t=new tp;this._curve=t,t.preExtrapolation=Gl.LOOP,t.postExtrapolation=Gl.CLAMP,e?t.assignSorted(e.map((e=>[e.time,{interpolationMode:Ul.CUBIC,value:e.value,leftTangent:e.inTangent,rightTangent:e.outTangent}]))):t.assignSorted([[0,{interpolationMode:Ul.CUBIC,value:1}],[1,{interpolationMode:Ul.CUBIC,value:1}]])}this.cachedKey=new id}addKey(e){e?this._curve.addKeyFrame(e.time,{interpolationMode:Ul.CUBIC,value:e.value,leftTangent:e.inTangent,rightTangent:e.outTangent}):this._curve.clear()}evaluate_slow(e){return this._curve.evaluate(e)}evaluate(e){const{cachedKey:t,_curve:n}=this,i=n.keyFramesCount-1;let s=e;const r=e<0?n.preExtrapolation:n.postExtrapolation,o=n.getKeyframeTime(0),a=n.getKeyframeTime(i);switch(r){case Gl.LOOP:s=Yn(e-o,a-o)+o;break;case Gl.PING_PONG:s=Kn(e-o,a-o)+o;break;case Gl.CLAMP:default:s=zn(e,o,a)}if(s>=t.time&&s<t.endTime)return t.evaluate(s);const c=this.findIndex(t,s),l=Math.min(c+1,i);return this.calcOptimizedKey(t,c,l),t.evaluate(s)}calcOptimizedKey(e,t,n){const i=this._curve.getKeyframeTime(t),s=this._curve.getKeyframeTime(n),{value:r,leftTangent:o}=this._curve.getKeyframeValue(t),{value:a,rightTangent:c}=this._curve.getKeyframeValue(n);e.index=t,e.time=i,e.endTime=s;const l=s-i,h=a-r,_=1/(l*l),u=o*l,p=c*l;e.coefficient[0]=(u+p-h-h)*_/l,e.coefficient[1]=(h+h+h-u-u-p)*_,e.coefficient[2]=o,e.coefficient[3]=r}findIndex(e,t){const{_curve:n}=this,i=n.keyFramesCount,s=e.index;if(-1!==s)if(t>n.getKeyframeTime(s))for(let e=0;e<3;e++){const r=s+e;if(r+1<i&&n.getKeyframeTime(r+1)>t)return r}else for(let e=0;e<3;e++){const i=s-e;if(i>=0&&n.getKeyframeTime(i-1)<=t)return i-1}let r,o=0,a=i;for(;a-o>1;)r=Math.floor((o+a)/2),n.getKeyframeTime(r)>=t?a=r:o=r;return o}},ed.defaultKF=[{time:0,value:1,inTangent:0,outTangent:0},{time:1,value:1,inTangent:0,outTangent:0}],Jp=Bc((Qp=td).prototype,"_curve",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),Zp=Qp))||Zp;function rd(e){switch(e){default:case Uc.Default:case Uc.Normal:case Uc.Clamp:return Gl.CLAMP;case Uc.PingPong:return Gl.PING_PONG;case Uc.Loop:return Gl.LOOP}}function od(e){switch(e){default:case Gl.LINEAR:case Gl.CLAMP:return Uc.Clamp;case Gl.PING_PONG:return Uc.PingPong;case Gl.LOOP:return Uc.Loop}}function ad(){const e=new tp;return e.assignSorted([[0,{interpolationMode:Ul.CUBIC,value:1}],[1,{interpolationMode:Ul.CUBIC,value:1}]]),e}function cd(e,t){console.warn(`${e} is deprecated, please use ${t} instead.`)}Cn(Qa,"intersect",[{name:"ray_aabb",newName:"rayAABB"},{name:"ray_plane",newName:"rayPlane"},{name:"ray_triangle",newName:"rayTriangle"},{name:"ray_sphere",newName:"raySphere"},{name:"ray_obb",newName:"rayOBB"},{name:"ray_capsule",newName:"rayCapsule"},{name:"ray_subMesh",newName:"raySubMesh"},{name:"ray_mesh",newName:"rayMesh"},{name:"ray_model",newName:"rayModel"},{name:"line_plane",newName:"linePlane"},{name:"line_triangle",newName:"lineTriangle"},{name:"line_aabb",newName:"lineAABB"},{name:"line_obb",newName:"lineOBB"},{name:"line_sphere",newName:"lineSphere"},{name:"aabb_aabb",newName:"aabbWithAABB"},{name:"aabb_obb",newName:"aabbWithOBB"},{name:"aabb_plane",newName:"aabbPlane"},{name:"aabb_frustum",newName:"aabbFrustum"},{name:"aabbFrustum_accurate",newName:"aabbFrustumAccurate"},{name:"obb_point",newName:"obbPoint"},{name:"obb_plane",newName:"obbPlane"},{name:"obb_frustum",newName:"obbFrustum"},{name:"obbFrustum_accurate",newName:"obbFrustumAccurate"},{name:"obb_obb",newName:"obbWithOBB"},{name:"obb_capsule",newName:"obbCapsule"},{name:"sphere_plane",newName:"spherePlane"},{name:"sphere_frustum",newName:"sphereFrustum"},{name:"sphereFrustum_accurate",newName:"sphereFrustumAccurate"},{name:"sphere_sphere",newName:"sphereWithSphere"},{name:"sphere_aabb",newName:"sphereAABB"},{name:"sphere_obb",newName:"sphereOBB"},{name:"sphere_capsule",newName:"sphereCapsule"},{name:"capsule_capsule",newName:"capsuleWithCapsule"}]);var ld=Object.freeze({__proto__:null,distance:ys,enums:xs,intersect:Qa,Line:Ss,Plane:ic,Ray:Cs,Triangle:Is,Sphere:ws,AABB:Ac,OBB:Rc,Capsule:Dc,Frustum:zc,Keyframe:nd,AnimationCurve:sd,get ERaycastMode(){return da},line:class extends Ss{constructor(){super(),cd("line","Line")}},plane:class extends ic{constructor(){super(),cd("plane","Plane")}},ray:class extends Cs{constructor(){super(),cd("ray","Ray")}},triangle:class extends Is{constructor(){super(),cd("triangle","Triangle")}},sphere:class extends ws{constructor(){super(),cd("sphere","Sphere")}},aabb:class extends Ac{constructor(){super(),cd("aabb","AABB")}},obb:class extends Rc{constructor(){super(),cd("obb","OBB")}},capsule:class extends Dc{constructor(){super(),cd("capsule","Capsule")}},frustum:class extends zc{constructor(){super(),cd("frustum","Frustum")}}});e("geometry",ld);const hd={NONE:0,IGNORE_RAYCAST:1<<20,GIZMOS:1<<21,EDITOR:1<<22,UI_3D:1<<23,SCENE_GIZMO:1<<24,UI_2D:1<<25,PROFILER:1<<28,DEFAULT:1<<30,ALL:4294967295};class _d{static makeMaskInclude(e){let t=0;for(const n of e)t|=n;return t}static makeMaskExclude(e){return~_d.makeMaskInclude(e)}static addLayer(e,t){if(void 0===t)return void console.warn("bitNum can't be undefined");if(t>19||t<0)return void console.warn("maximum layers reached.");const n=1<<t;_d.Enum[e],I(2104,e),_d.Enum[e]=n,Ae.value(_d.Enum,String(n),e),_d.BitMask[e]=n,Ae.value(_d.BitMask,String(n),e)}static deleteLayer(e){if(e>19||e<0)return void console.warn("do not change buildin layers.");const t=1<<e;delete _d.Enum[_d.Enum[t]],delete _d.Enum[t],delete _d.BitMask[_d.BitMask[t]],delete _d.BitMask[t]}static nameToLayer(e){return void 0===e?(console.warn("name can't be undefined"),-1):gn(_d.Enum[e])}static layerToName(e){return e>31||e<0?(console.warn("Unable to access unknown layer."),""):_d.Enum[1<<e]}}let ud,pd;e("Layers",_d),_d.Enum=Ne(hd),_d.BitMask=Oe({...hd}),i.Layers=_d,function(e){e[e.DEFAULT=100]="DEFAULT",e[e.UI=200]="UI"}(ud||(ud={})),i.RenderPassStage=ud,function(e){e[e.MIN=0]="MIN",e[e.MAX=255]="MAX",e[e.DEFAULT=128]="DEFAULT"}(pd||(pd={}));const dd={bindings:[],layouts:{}},fd={bindings:[],layouts:{}};let md;!function(e){e[e.UBO_GLOBAL=0]="UBO_GLOBAL",e[e.UBO_CAMERA=1]="UBO_CAMERA",e[e.UBO_SHADOW=2]="UBO_SHADOW",e[e.SAMPLER_SHADOWMAP=3]="SAMPLER_SHADOWMAP",e[e.SAMPLER_ENVIRONMENT=4]="SAMPLER_ENVIRONMENT",e[e.SAMPLER_SPOT_LIGHTING_MAP=5]="SAMPLER_SPOT_LIGHTING_MAP",e[e.SAMPLER_DIFFUSEMAP=6]="SAMPLER_DIFFUSEMAP",e[e.COUNT=7]="COUNT"}(md||(md={}));const gd=md.SAMPLER_SHADOWMAP,vd=md.COUNT-gd;let yd;!function(e){e[e.UBO_LOCAL=0]="UBO_LOCAL",e[e.UBO_FORWARD_LIGHTS=1]="UBO_FORWARD_LIGHTS",e[e.UBO_SKINNING_ANIMATION=2]="UBO_SKINNING_ANIMATION",e[e.UBO_SKINNING_TEXTURE=3]="UBO_SKINNING_TEXTURE",e[e.UBO_MORPH=4]="UBO_MORPH",e[e.UBO_UI_LOCAL=5]="UBO_UI_LOCAL",e[e.SAMPLER_JOINTS=6]="SAMPLER_JOINTS",e[e.SAMPLER_MORPH_POSITION=7]="SAMPLER_MORPH_POSITION",e[e.SAMPLER_MORPH_NORMAL=8]="SAMPLER_MORPH_NORMAL",e[e.SAMPLER_MORPH_TANGENT=9]="SAMPLER_MORPH_TANGENT",e[e.SAMPLER_LIGHTMAP=10]="SAMPLER_LIGHTMAP",e[e.SAMPLER_SPRITE=11]="SAMPLER_SPRITE",e[e.SAMPLER_REFLECTION=12]="SAMPLER_REFLECTION",e[e.STORAGE_REFLECTION=13]="STORAGE_REFLECTION",e[e.COUNT=14]="COUNT"}(yd||(yd={}));const xd=yd.SAMPLER_JOINTS,Sd=yd.COUNT-xd;let Cd;!function(e){e[e.GLOBAL=0]="GLOBAL",e[e.MATERIAL=1]="MATERIAL",e[e.LOCAL=2]="LOCAL"}(Cd||(Cd={}));const Td=new Or;Td.bufferOffsets=[0,gd+xd,gd],Td.samplerOffsets=[-gd,vd+Sd,vd-xd],Td.flexibleSet=1;class bd{}bd.TIME_OFFSET=0,bd.NATIVE_SIZE_OFFSET=bd.TIME_OFFSET+4,bd.SCREEN_SIZE_OFFSET=bd.NATIVE_SIZE_OFFSET+4,bd.COUNT=bd.SCREEN_SIZE_OFFSET+4,bd.SIZE=4*bd.COUNT,bd.NAME="CCGlobal",bd.BINDING=md.UBO_GLOBAL,bd.DESCRIPTOR=new lo(bd.BINDING,dr.UNIFORM_BUFFER,1,tr.ALL),bd.LAYOUT=new jr(Cd.GLOBAL,bd.BINDING,bd.NAME,[new Vr("cc_time",Bs.FLOAT4,1),new Vr("cc_screenSize",Bs.FLOAT4,1),new Vr("cc_nativeSize",Bs.FLOAT4,1)],1),dd.layouts[bd.NAME]=bd.LAYOUT,dd.bindings[bd.BINDING]=bd.DESCRIPTOR;class Ed{}Ed.MAT_VIEW_OFFSET=0,Ed.MAT_VIEW_INV_OFFSET=Ed.MAT_VIEW_OFFSET+16,Ed.MAT_PROJ_OFFSET=Ed.MAT_VIEW_INV_OFFSET+16,Ed.MAT_PROJ_INV_OFFSET=Ed.MAT_PROJ_OFFSET+16,Ed.MAT_VIEW_PROJ_OFFSET=Ed.MAT_PROJ_INV_OFFSET+16,Ed.MAT_VIEW_PROJ_INV_OFFSET=Ed.MAT_VIEW_PROJ_OFFSET+16,Ed.CAMERA_POS_OFFSET=Ed.MAT_VIEW_PROJ_INV_OFFSET+16,Ed.SCREEN_SCALE_OFFSET=Ed.CAMERA_POS_OFFSET+4,Ed.EXPOSURE_OFFSET=Ed.SCREEN_SCALE_OFFSET+4,Ed.MAIN_LIT_DIR_OFFSET=Ed.EXPOSURE_OFFSET+4,Ed.MAIN_LIT_COLOR_OFFSET=Ed.MAIN_LIT_DIR_OFFSET+4,Ed.AMBIENT_SKY_OFFSET=Ed.MAIN_LIT_COLOR_OFFSET+4,Ed.AMBIENT_GROUND_OFFSET=Ed.AMBIENT_SKY_OFFSET+4,Ed.GLOBAL_FOG_COLOR_OFFSET=Ed.AMBIENT_GROUND_OFFSET+4,Ed.GLOBAL_FOG_BASE_OFFSET=Ed.GLOBAL_FOG_COLOR_OFFSET+4,Ed.GLOBAL_FOG_ADD_OFFSET=Ed.GLOBAL_FOG_BASE_OFFSET+4,Ed.NEAR_FAR_OFFSET=Ed.GLOBAL_FOG_ADD_OFFSET+4,Ed.VIEW_PORT_OFFSET=Ed.NEAR_FAR_OFFSET+4,Ed.COUNT=Ed.VIEW_PORT_OFFSET+4,Ed.SIZE=4*Ed.COUNT,Ed.NAME="CCCamera",Ed.BINDING=md.UBO_CAMERA,Ed.DESCRIPTOR=new lo(Ed.BINDING,dr.UNIFORM_BUFFER,1,tr.ALL),Ed.LAYOUT=new jr(Cd.GLOBAL,Ed.BINDING,Ed.NAME,[new Vr("cc_matView",Bs.MAT4,1),new Vr("cc_matViewInv",Bs.MAT4,1),new Vr("cc_matProj",Bs.MAT4,1),new Vr("cc_matProjInv",Bs.MAT4,1),new Vr("cc_matViewProj",Bs.MAT4,1),new Vr("cc_matViewProjInv",Bs.MAT4,1),new Vr("cc_cameraPos",Bs.FLOAT4,1),new Vr("cc_screenScale",Bs.FLOAT4,1),new Vr("cc_exposure",Bs.FLOAT4,1),new Vr("cc_mainLitDir",Bs.FLOAT4,1),new Vr("cc_mainLitColor",Bs.FLOAT4,1),new Vr("cc_ambientSky",Bs.FLOAT4,1),new Vr("cc_ambientGround",Bs.FLOAT4,1),new Vr("cc_fogColor",Bs.FLOAT4,1),new Vr("cc_fogBase",Bs.FLOAT4,1),new Vr("cc_fogAdd",Bs.FLOAT4,1),new Vr("cc_nearFar",Bs.FLOAT4,1),new Vr("cc_viewPort",Bs.FLOAT4,1)],1),dd.layouts[Ed.NAME]=Ed.LAYOUT,dd.bindings[Ed.BINDING]=Ed.DESCRIPTOR;class Ad{}Ad.MAT_LIGHT_PLANE_PROJ_OFFSET=0,Ad.MAT_LIGHT_VIEW_OFFSET=Ad.MAT_LIGHT_PLANE_PROJ_OFFSET+16,Ad.MAT_LIGHT_VIEW_PROJ_OFFSET=Ad.MAT_LIGHT_VIEW_OFFSET+16,Ad.SHADOW_INV_PROJ_DEPTH_INFO_OFFSET=Ad.MAT_LIGHT_VIEW_PROJ_OFFSET+16,Ad.SHADOW_PROJ_DEPTH_INFO_OFFSET=Ad.SHADOW_INV_PROJ_DEPTH_INFO_OFFSET+4,Ad.SHADOW_PROJ_INFO_OFFSET=Ad.SHADOW_PROJ_DEPTH_INFO_OFFSET+4,Ad.SHADOW_NEAR_FAR_LINEAR_SATURATION_INFO_OFFSET=Ad.SHADOW_PROJ_INFO_OFFSET+4,Ad.SHADOW_WIDTH_HEIGHT_PCF_BIAS_INFO_OFFSET=Ad.SHADOW_NEAR_FAR_LINEAR_SATURATION_INFO_OFFSET+4,Ad.SHADOW_LIGHT_PACKING_NBIAS_NULL_INFO_OFFSET=Ad.SHADOW_WIDTH_HEIGHT_PCF_BIAS_INFO_OFFSET+4,Ad.SHADOW_COLOR_OFFSET=Ad.SHADOW_LIGHT_PACKING_NBIAS_NULL_INFO_OFFSET+4,Ad.PLANAR_NORMAL_DISTANCE_INFO_OFFSET=Ad.SHADOW_COLOR_OFFSET+4,Ad.COUNT=Ad.PLANAR_NORMAL_DISTANCE_INFO_OFFSET+4,Ad.SIZE=4*Ad.COUNT,Ad.NAME="CCShadow",Ad.BINDING=md.UBO_SHADOW,Ad.DESCRIPTOR=new lo(Ad.BINDING,dr.UNIFORM_BUFFER,1,tr.ALL),Ad.LAYOUT=new jr(Cd.GLOBAL,Ad.BINDING,Ad.NAME,[new Vr("cc_matLightPlaneProj",Bs.MAT4,1),new Vr("cc_matLightView",Bs.MAT4,1),new Vr("cc_matLightViewProj",Bs.MAT4,1),new Vr("cc_shadowInvProjDepthInfo",Bs.FLOAT4,1),new Vr("cc_shadowProjDepthInfo",Bs.FLOAT4,1),new Vr("cc_shadowProjInfo",Bs.FLOAT4,1),new Vr("cc_shadowNFLSInfo",Bs.FLOAT4,1),new Vr("cc_shadowWHPBInfo",Bs.FLOAT4,1),new Vr("cc_shadowLPNNInfo",Bs.FLOAT4,1),new Vr("cc_shadowColor",Bs.FLOAT4,1),new Vr("cc_planarNDInfo",Bs.FLOAT4,1)],1),dd.layouts[Ad.NAME]=Ad.LAYOUT,dd.bindings[Ad.BINDING]=Ad.DESCRIPTOR;const Pd=md.SAMPLER_SHADOWMAP,wd=new lo(Pd,dr.SAMPLER_TEXTURE,1,tr.FRAGMENT),Id=new Wr(Cd.GLOBAL,Pd,"cc_shadowMap",Bs.SAMPLER2D,1);dd.layouts.cc_shadowMap=Id,dd.bindings[Pd]=wd;const Rd=md.SAMPLER_ENVIRONMENT,Dd=new lo(Rd,dr.SAMPLER_TEXTURE,1,tr.FRAGMENT),Od=new Wr(Cd.GLOBAL,Rd,"cc_environment",Bs.SAMPLER_CUBE,1);dd.layouts.cc_environment=Od,dd.bindings[Rd]=Dd;const Md=md.SAMPLER_DIFFUSEMAP,Nd=new lo(Md,dr.SAMPLER_TEXTURE,1,tr.FRAGMENT),Ld=new Wr(Cd.GLOBAL,Md,"cc_diffuseMap",Bs.SAMPLER_CUBE,1);dd.layouts.cc_diffuseMap=Ld,dd.bindings[Md]=Nd;const zd=md.SAMPLER_SPOT_LIGHTING_MAP,Fd=new lo(zd,dr.SAMPLER_TEXTURE,1,tr.FRAGMENT),Bd=new Wr(Cd.GLOBAL,zd,"cc_spotLightingMap",Bs.SAMPLER2D,1);dd.layouts.cc_spotLightingMap=Bd,dd.bindings[zd]=Fd;class Ud{}Ud.MAT_WORLD_OFFSET=0,Ud.MAT_WORLD_IT_OFFSET=Ud.MAT_WORLD_OFFSET+16,Ud.LIGHTINGMAP_UVPARAM=Ud.MAT_WORLD_IT_OFFSET+16,Ud.COUNT=Ud.LIGHTINGMAP_UVPARAM+4,Ud.SIZE=4*Ud.COUNT,Ud.NAME="CCLocal",Ud.BINDING=yd.UBO_LOCAL,Ud.DESCRIPTOR=new lo(Ud.BINDING,dr.UNIFORM_BUFFER,1,tr.VERTEX|tr.COMPUTE),Ud.LAYOUT=new jr(Cd.LOCAL,Ud.BINDING,Ud.NAME,[new Vr("cc_matWorld",Bs.MAT4,1),new Vr("cc_matWorldIT",Bs.MAT4,1),new Vr("cc_lightingMapUVParam",Bs.FLOAT4,1)],1),fd.layouts[Ud.NAME]=Ud.LAYOUT,fd.bindings[Ud.BINDING]=Ud.DESCRIPTOR;class Gd{}Gd.WORLD_BOUND_CENTER=0,Gd.WORLD_BOUND_HALF_EXTENTS=Gd.WORLD_BOUND_CENTER+4,Gd.COUNT=Gd.WORLD_BOUND_HALF_EXTENTS+4,Gd.SIZE=4*Gd.COUNT,Gd.NAME="CCWorldBound",Gd.BINDING=yd.UBO_LOCAL,Gd.DESCRIPTOR=new lo(Gd.BINDING,dr.UNIFORM_BUFFER,1,tr.VERTEX|tr.COMPUTE),Gd.LAYOUT=new jr(Cd.LOCAL,Gd.BINDING,Gd.NAME,[new Vr("cc_worldBoundCenter",Bs.FLOAT4,1),new Vr("cc_worldBoundHalfExtents",Bs.FLOAT4,1)],1),fd.layouts[Gd.NAME]=Gd.LAYOUT,fd.bindings[Gd.BINDING]=Gd.DESCRIPTOR;class Hd{}Hd.BATCHING_COUNT=10,Hd.MAT_WORLDS_OFFSET=0,Hd.COUNT=16*Hd.BATCHING_COUNT,Hd.SIZE=4*Hd.COUNT,Hd.NAME="CCLocalBatched",Hd.BINDING=yd.UBO_LOCAL,Hd.DESCRIPTOR=new lo(Hd.BINDING,dr.UNIFORM_BUFFER,1,tr.VERTEX|tr.COMPUTE),Hd.LAYOUT=new jr(Cd.LOCAL,Hd.BINDING,Hd.NAME,[new Vr("cc_matWorlds",Bs.MAT4,Hd.BATCHING_COUNT)],1),fd.layouts[Hd.NAME]=Hd.LAYOUT,fd.bindings[Hd.BINDING]=Hd.DESCRIPTOR;class kd{}kd.LIGHTS_PER_PASS=1,kd.LIGHT_POS_OFFSET=0,kd.LIGHT_COLOR_OFFSET=kd.LIGHT_POS_OFFSET+4*kd.LIGHTS_PER_PASS,kd.LIGHT_SIZE_RANGE_ANGLE_OFFSET=kd.LIGHT_COLOR_OFFSET+4*kd.LIGHTS_PER_PASS,kd.LIGHT_DIR_OFFSET=kd.LIGHT_SIZE_RANGE_ANGLE_OFFSET+4*kd.LIGHTS_PER_PASS,kd.COUNT=kd.LIGHT_DIR_OFFSET+4*kd.LIGHTS_PER_PASS,kd.SIZE=4*kd.COUNT,kd.NAME="CCForwardLight",kd.BINDING=yd.UBO_FORWARD_LIGHTS,kd.DESCRIPTOR=new lo(kd.BINDING,dr.DYNAMIC_UNIFORM_BUFFER,1,tr.FRAGMENT),kd.LAYOUT=new jr(Cd.LOCAL,kd.BINDING,kd.NAME,[new Vr("cc_lightPos",Bs.FLOAT4,kd.LIGHTS_PER_PASS),new Vr("cc_lightColor",Bs.FLOAT4,kd.LIGHTS_PER_PASS),new Vr("cc_lightSizeRangeAngle",Bs.FLOAT4,kd.LIGHTS_PER_PASS),new Vr("cc_lightDir",Bs.FLOAT4,kd.LIGHTS_PER_PASS)],1),fd.layouts[kd.NAME]=kd.LAYOUT,fd.bindings[kd.BINDING]=kd.DESCRIPTOR;class Vd{}Vd.JOINTS_TEXTURE_INFO_OFFSET=0,Vd.COUNT=Vd.JOINTS_TEXTURE_INFO_OFFSET+4,Vd.SIZE=4*Vd.COUNT,Vd.NAME="CCSkinningTexture",Vd.BINDING=yd.UBO_SKINNING_TEXTURE,Vd.DESCRIPTOR=new lo(Vd.BINDING,dr.UNIFORM_BUFFER,1,tr.VERTEX),Vd.LAYOUT=new jr(Cd.LOCAL,Vd.BINDING,Vd.NAME,[new Vr("cc_jointTextureInfo",Bs.FLOAT4,1)],1),fd.layouts[Vd.NAME]=Vd.LAYOUT,fd.bindings[Vd.BINDING]=Vd.DESCRIPTOR;class jd{}jd.JOINTS_ANIM_INFO_OFFSET=0,jd.COUNT=jd.JOINTS_ANIM_INFO_OFFSET+4,jd.SIZE=4*jd.COUNT,jd.NAME="CCSkinningAnimation",jd.BINDING=yd.UBO_SKINNING_ANIMATION,jd.DESCRIPTOR=new lo(jd.BINDING,dr.UNIFORM_BUFFER,1,tr.VERTEX),jd.LAYOUT=new jr(Cd.LOCAL,jd.BINDING,jd.NAME,[new Vr("cc_jointAnimInfo",Bs.FLOAT4,1)],1),fd.layouts[jd.NAME]=jd.LAYOUT,fd.bindings[jd.BINDING]=jd.DESCRIPTOR;class Wd{}Wd.JOINTS_OFFSET=0,Wd.COUNT=Wd.JOINTS_OFFSET+360,Wd.SIZE=4*Wd.COUNT,Wd.NAME="CCSkinning",Wd.BINDING=yd.UBO_SKINNING_TEXTURE,Wd.DESCRIPTOR=new lo(Wd.BINDING,dr.UNIFORM_BUFFER,1,tr.VERTEX),Wd.LAYOUT=new jr(Cd.LOCAL,Wd.BINDING,Wd.NAME,[new Vr("cc_joints",Bs.FLOAT4,90)],1),fd.layouts[Wd.NAME]=Wd.LAYOUT,fd.bindings[Wd.BINDING]=Wd.DESCRIPTOR;class qd{}qd.MAX_MORPH_TARGET_COUNT=60,qd.OFFSET_OF_WEIGHTS=0,qd.OFFSET_OF_DISPLACEMENT_TEXTURE_WIDTH=4*qd.MAX_MORPH_TARGET_COUNT,qd.OFFSET_OF_DISPLACEMENT_TEXTURE_HEIGHT=qd.OFFSET_OF_DISPLACEMENT_TEXTURE_WIDTH+4,qd.OFFSET_OF_VERTICES_COUNT=qd.OFFSET_OF_DISPLACEMENT_TEXTURE_HEIGHT+4,qd.COUNT_BASE_4_BYTES=4*Math.ceil(qd.MAX_MORPH_TARGET_COUNT/4)+4,qd.SIZE=4*qd.COUNT_BASE_4_BYTES,qd.NAME="CCMorph",qd.BINDING=yd.UBO_MORPH,qd.DESCRIPTOR=new lo(qd.BINDING,dr.UNIFORM_BUFFER,1,tr.VERTEX),qd.LAYOUT=new jr(Cd.LOCAL,qd.BINDING,qd.NAME,[new Vr("cc_displacementWeights",Bs.FLOAT4,qd.MAX_MORPH_TARGET_COUNT/4),new Vr("cc_displacementTextureInfo",Bs.FLOAT4,1)],1),fd.layouts[qd.NAME]=qd.LAYOUT,fd.bindings[qd.BINDING]=qd.DESCRIPTOR;class Xd{}Xd.NAME="CCUILocal",Xd.BINDING=yd.UBO_UI_LOCAL,Xd.DESCRIPTOR=new lo(Xd.BINDING,dr.DYNAMIC_UNIFORM_BUFFER,1,tr.VERTEX),Xd.LAYOUT=new jr(Cd.LOCAL,Xd.BINDING,Xd.NAME,[new Vr("cc_local_data",Bs.FLOAT4,1)],1),fd.layouts[Xd.NAME]=Xd.LAYOUT,fd.bindings[Xd.BINDING]=Xd.DESCRIPTOR;const Yd=yd.SAMPLER_JOINTS,Kd=new lo(Yd,dr.SAMPLER_TEXTURE,1,tr.VERTEX),$d=new Wr(Cd.LOCAL,Yd,"cc_jointTexture",Bs.SAMPLER2D,1);fd.layouts.cc_jointTexture=$d,fd.bindings[Yd]=Kd;const Zd=yd.SAMPLER_MORPH_POSITION,Qd=new lo(Zd,dr.SAMPLER_TEXTURE,1,tr.VERTEX),Jd=new Wr(Cd.LOCAL,Zd,"cc_PositionDisplacements",Bs.SAMPLER2D,1);fd.layouts.cc_PositionDisplacements=Jd,fd.bindings[Zd]=Qd;const ef=yd.SAMPLER_MORPH_NORMAL,tf=new lo(ef,dr.SAMPLER_TEXTURE,1,tr.VERTEX),nf=new Wr(Cd.LOCAL,ef,"cc_NormalDisplacements",Bs.SAMPLER2D,1);fd.layouts.cc_NormalDisplacements=nf,fd.bindings[ef]=tf;const sf=yd.SAMPLER_MORPH_TANGENT,rf=new lo(sf,dr.SAMPLER_TEXTURE,1,tr.VERTEX),of=new Wr(Cd.LOCAL,sf,"cc_TangentDisplacements",Bs.SAMPLER2D,1);fd.layouts.cc_TangentDisplacements=of,fd.bindings[sf]=rf;const af=yd.SAMPLER_LIGHTMAP,cf=new lo(af,dr.SAMPLER_TEXTURE,1,tr.FRAGMENT),lf=new Wr(Cd.LOCAL,af,"cc_lightingMap",Bs.SAMPLER2D,1);fd.layouts.cc_lightingMap=lf,fd.bindings[af]=cf;const hf=yd.SAMPLER_SPRITE,_f=new lo(hf,dr.SAMPLER_TEXTURE,1,tr.FRAGMENT),uf=new Wr(Cd.LOCAL,hf,"cc_spriteTexture",Bs.SAMPLER2D,1);fd.layouts.cc_spriteTexture=uf,fd.bindings[hf]=_f;const pf=yd.SAMPLER_REFLECTION,df=new lo(pf,dr.SAMPLER_TEXTURE,1,tr.FRAGMENT),ff=new Wr(Cd.LOCAL,pf,"cc_reflectionTexture",Bs.SAMPLER2D,1);fd.layouts.cc_reflectionTexture=ff,fd.bindings[pf]=df;const mf=yd.STORAGE_REFLECTION,gf=new lo(mf,dr.STORAGE_IMAGE,1,tr.COMPUTE),vf=new Yr(Cd.LOCAL,mf,"cc_reflectionStorage",Bs.IMAGE2D,1);fd.layouts.cc_reflectionStorage=vf,fd.bindings[mf]=gf;const yf=_d.makeMaskExclude([_d.BitMask.UI_2D,_d.BitMask.GIZMOS,_d.BitMask.EDITOR,_d.BitMask.SCENE_GIZMO,_d.BitMask.PROFILER]);function xf(e){return e.hasFeature(Ls.COLOR_FLOAT)&&e.hasFeature(Ls.TEXTURE_FLOAT)&&!(e.gfxAPI===Ms.WEBGL)}let Sf,Cf,Tf,bf,Ef;_d.makeMaskExclude([_d.BitMask.UI_2D,_d.BitMask.PROFILER]),_d.Enum.ALL,function(e){e[e.VERTICAL=0]="VERTICAL",e[e.HORIZONTAL=1]="HORIZONTAL"}(Sf||(Sf={})),function(e){e[e.ORTHO=0]="ORTHO",e[e.PERSPECTIVE=1]="PERSPECTIVE"}(Cf||(Cf={})),function(e){e[e.F1_8=0]="F1_8",e[e.F2_0=1]="F2_0",e[e.F2_2=2]="F2_2",e[e.F2_5=3]="F2_5",e[e.F2_8=4]="F2_8",e[e.F3_2=5]="F3_2",e[e.F3_5=6]="F3_5",e[e.F4_0=7]="F4_0",e[e.F4_5=8]="F4_5",e[e.F5_0=9]="F5_0",e[e.F5_6=10]="F5_6",e[e.F6_3=11]="F6_3",e[e.F7_1=12]="F7_1",e[e.F8_0=13]="F8_0",e[e.F9_0=14]="F9_0",e[e.F10_0=15]="F10_0",e[e.F11_0=16]="F11_0",e[e.F13_0=17]="F13_0",e[e.F14_0=18]="F14_0",e[e.F16_0=19]="F16_0",e[e.F18_0=20]="F18_0",e[e.F20_0=21]="F20_0",e[e.F22_0=22]="F22_0"}(Tf||(Tf={})),function(e){e[e.ISO100=0]="ISO100",e[e.ISO200=1]="ISO200",e[e.ISO400=2]="ISO400",e[e.ISO800=3]="ISO800"}(bf||(bf={})),function(e){e[e.D1=0]="D1",e[e.D2=1]="D2",e[e.D4=2]="D4",e[e.D8=3]="D8",e[e.D15=4]="D15",e[e.D30=5]="D30",e[e.D60=6]="D60",e[e.D125=7]="D125",e[e.D250=8]="D250",e[e.D500=9]="D500",e[e.D1000=10]="D1000",e[e.D2000=11]="D2000",e[e.D4000=12]="D4000"}(Ef||(Ef={}));const Af=[1.8,2,2.2,2.5,2.8,3.2,3.5,4,4.5,5,5.6,6.3,7.1,8,9,10,11,13,14,16,18,20,22],Pf=[1,.5,1/4,1/8,1/15,1/30,1/60,.008,.004,.002,.001,5e-4,1/4e3],wf=[100,200,400,800],If=new ri,Rf=new ri,Df=new xi,Of=vr.STENCIL<<1,Mf=[];class Nf{constructor(e){if(this.isWindowSize=!0,this.screenScale=void 0,this._device=void 0,this._scene=null,this._node=null,this._name=null,this._enabled=!1,this._proj=-1,this._aspect=void 0,this._orthoHeight=10,this._fovAxis=Sf.VERTICAL,this._fov=Un(45),this._nearClip=1,this._farClip=1e3,this._clearColor=new Dr(.2,.2,.2,1),this._viewport=new Mi(0,0,1,1),this._orientedViewport=new Mi(0,0,1,1),this._curTransform=Ns.IDENTITY,this._isProjDirty=!0,this._matView=new xi,this._matProj=new xi,this._matProjInv=new xi,this._matViewProj=new xi,this._matViewProjInv=new xi,this._frustum=new zc,this._forward=new ri,this._position=new ri,this._priority=0,this._aperture=Tf.F16_0,this._apertureValue=void 0,this._shutter=Ef.D125,this._shutterValue=0,this._iso=bf.ISO100,this._isoValue=0,this._ec=0,this._window=null,this._width=1,this._height=1,this._clearFlag=vr.NONE,this._clearDepth=1,this._visibility=yf,this._exposure=0,this._clearStencil=0,this._device=e,this._apertureValue=Af[this._aperture],this._shutterValue=Pf[this._shutter],this._isoValue=wf[this._iso],this._aspect=this.screenScale=1,this._frustum.accurate=!0,!Mf.length){const t=e.capabilities.clipSpaceSignY;Mf[Ns.IDENTITY]=new xi(1,0,0,0,0,t),Mf[Ns.ROTATE_90]=new xi(0,1,0,0,-t,0),Mf[Ns.ROTATE_180]=new xi(-1,0,0,0,0,-t),Mf[Ns.ROTATE_270]=new xi(0,-1,0,0,t,0)}}_setWidth(e){this._width=e,this._nativeObj.width=e}_setHeight(e){this._height=e,this._nativeObj.height=e}_setScene(e){this._scene=e,this._nativeObj.scene=e?e.native:null}_updateAspect(e=!0){if(this._aspect=this.window.width*this._viewport.width/(this.window.height*this._viewport.height),e){const e=this.window.swapchain;(e&&e.surfaceTransform||Ns.IDENTITY)%2&&(this._aspect=1/this._aspect)}this._isProjDirty=!0,this._nativeObj.aspect=this._aspect}_init(e){this._nativeObj=new $i,this._scene&&(this._nativeObj.scene=this._scene.native),this._nativeObj.frustum=this._frustum}static get standardExposureValue(){return 1/38400}static get standardLightMeterScale(){return 1e4}initialize(e){this._init(e),this.node=e.node,this._setWidth(1),this._setHeight(1),this.clearFlag=vr.NONE,this.clearDepth=1,this.visibility=yf,this._name=e.name,this._proj=e.projection,this._priority=e.priority||0,this._aspect=this.screenScale=1,this.updateExposure(),this.changeTargetWindow(e.window)}_destroy(){this._nativeObj=null}destroy(){this._window&&(this._window.detachCamera(this),this.window=null),this._name=null,this._destroy()}attachToScene(e){this._enabled=!0,this._setScene(e)}detachFromScene(){this._enabled=!1,this._setScene(null)}resize(e,t){this._window&&(this._setWidth(e),this._setHeight(t),this._updateAspect())}setFixedSize(e,t){this._setWidth(e),this._setHeight(t),this._updateAspect(!1),this.isWindowSize=!1}syncCameraEditor(e){}update(e=!1){var t;if(!this._node)return;let n=!1;(this._node.hasChangedFlags||e)&&(xi.invert(this._matView,this._node.worldMatrix),this._nativeObj.matView=this._matView,this._forward.x=-this._matView.m02,this._forward.y=-this._matView.m06,this._forward.z=-this._matView.m10,this._node.getWorldPosition(this._position),this._nativeObj.position=this._position,this._nativeObj.forward=this._forward,n=!0);const i=null===(t=this.window)||void 0===t?void 0:t.swapchain,s=i&&i.surfaceTransform||Ns.IDENTITY;if(this._isProjDirty||this._curTransform!==s){this._curTransform=s;const e=this._device.capabilities.clipSpaceSignY;if(this._proj===Cf.PERSPECTIVE)xi.perspective(this._matProj,this._fov,this._aspect,this._nearClip,this._farClip,this._fovAxis===Sf.VERTICAL,this._device.capabilities.clipSpaceMinZ,e,s);else{const t=this._orthoHeight*this._aspect,n=this._orthoHeight;xi.ortho(this._matProj,-t,t,-n,n,this._nearClip,this._farClip,this._device.capabilities.clipSpaceMinZ,e,s)}this._nativeObj.aspect=this._aspect,xi.invert(this._matProjInv,this._matProj),this._nativeObj.matProj=this._matProj,this._nativeObj.matProjInv=this._matProjInv,n=!0,this._isProjDirty=!1}n&&(xi.multiply(this._matViewProj,this._matProj,this._matView),xi.invert(this._matViewProjInv,this._matViewProj),this._frustum.update(this._matViewProj,this._matViewProjInv),this._nativeObj.matViewProj=this._matViewProj,this._nativeObj.matViewProjInv=this._matViewProjInv,this._nativeObj.frustum=this._frustum)}set node(e){this._node=e,this._nativeObj.node=this._node.native}get node(){return this._node}set enabled(e){this._enabled=e}get enabled(){return this._enabled}set orthoHeight(e){this._orthoHeight=e,this._isProjDirty=!0}get orthoHeight(){return this._orthoHeight}set projectionType(e){this._proj=e,this._isProjDirty=!0}get projectionType(){return this._proj}set fovAxis(e){this._fovAxis=e,this._isProjDirty=!0}get fovAxis(){return this._fovAxis}set fov(e){this._fov=e,this._nativeObj.fov=e,this._isProjDirty=!0}get fov(){return this._fov}set nearClip(e){this._nearClip=e,this._nativeObj.nearClip=this._nearClip,this._isProjDirty=!0}get nearClip(){return this._nearClip}set farClip(e){this._farClip=e,this._nativeObj.farClip=this._farClip,this._isProjDirty=!0}get farClip(){return this._farClip}set clearColor(e){this._clearColor.x=e.x,this._clearColor.y=e.y,this._clearColor.z=e.z,this._clearColor.w=e.w,this._nativeObj.clearColor=this._clearColor}get clearColor(){return this._clearColor}get viewport(){return this._viewport}set viewport(e){T(8302),this.setViewportInOrientedSpace(e)}setViewportInOrientedSpace(e){var t;const{x:n,width:i,height:s}=e,r=this._device.capabilities.screenSpaceSignY<0?1-e.y-s:e.y,o=null===(t=this.window)||void 0===t?void 0:t.swapchain;switch(o&&o.surfaceTransform||Ns.IDENTITY){case Ns.ROTATE_90:this._viewport.x=1-r-s,this._viewport.y=n,this._viewport.width=s,this._viewport.height=i;break;case Ns.ROTATE_180:this._viewport.x=1-n-i,this._viewport.y=1-r-s,this._viewport.width=i,this._viewport.height=s;break;case Ns.ROTATE_270:this._viewport.x=r,this._viewport.y=1-n-i,this._viewport.width=s,this._viewport.height=i;break;case Ns.IDENTITY:this._viewport.x=n,this._viewport.y=r,this._viewport.width=i,this._viewport.height=s}this._orientedViewport.x=n,this._orientedViewport.y=r,this._orientedViewport.width=i,this._orientedViewport.height=s,this._nativeObj.viewPort=this._viewport,this.resize(this.width,this.height)}get scene(){return this._scene}get name(){return this._name}get width(){return this._width}get height(){return this._height}get aspect(){return this._aspect}get matView(){return this._matView}get matProj(){return this._matProj}get matProjInv(){return this._matProjInv}get matViewProj(){return this._matViewProj}get matViewProjInv(){return this._matViewProjInv}set frustum(e){this._frustum=e,this._nativeObj.frustum=this._frustum}get frustum(){return this._frustum}set window(e){this._window=e,e&&(this._nativeObj.window=this._window.native)}get window(){return this._window}set forward(e){this._forward=e,this._nativeObj.forward=this._forward}get forward(){return this._forward}set position(e){this._position=e,this._nativeObj.position=this._position}get position(){return this._position}set visibility(e){this._visibility=e,this._nativeObj.visibility=this._visibility}get visibility(){return this._visibility}get priority(){return this._priority}set priority(e){this._priority=e}set aperture(e){this._aperture=e,this._apertureValue=Af[this._aperture],this.updateExposure()}get aperture(){return this._aperture}get apertureValue(){return this._apertureValue}set shutter(e){this._shutter=e,this._shutterValue=Pf[this._shutter],this.updateExposure()}get shutter(){return this._shutter}get shutterValue(){return this._shutterValue}set iso(e){this._iso=e,this._isoValue=wf[this._iso],this.updateExposure()}get iso(){return this._iso}get isoValue(){return this._isoValue}set ec(e){this._ec=e}get ec(){return this._ec}get exposure(){return this._exposure}get clearFlag(){return this._clearFlag}set clearFlag(e){this._clearFlag=e,this._nativeObj.clearFlag=e}get clearDepth(){return this._clearDepth}set clearDepth(e){this._clearDepth=e,this._nativeObj.clearDepth=e}get clearStencil(){return this._clearStencil}set clearStencil(e){this._clearStencil=e,this._nativeObj.clearStencil=e}get native(){return this._nativeObj}changeTargetWindow(e=null){this._window&&this._window.detachCamera(this);const t=e||i.director.root.mainWindow;if(t){t.attachCamera(this),this.window=t;const e=t.swapchain;(e&&e.surfaceTransform||Ns.IDENTITY)%2?this.resize(t.height,t.width):this.resize(t.width,t.height)}}detachCamera(){this._window&&this._window.detachCamera(this)}screenPointToRay(e,t,n){if(!this._node)return null;const i=this.width,s=this.height,r=this._orientedViewport.x*i,o=this._orientedViewport.y*s,a=this._orientedViewport.width*i,c=this._orientedViewport.height*s,l=this._proj===Cf.PERSPECTIVE,h=this._device.capabilities.clipSpaceSignY,_=yi[this._curTransform];ri.set(If,(t-r)/a*2-1,(n-o)/c*2-1,l?1:-1);const{x:u,y:p}=If;return If.x=u*_[0]+p*_[2]*h,If.y=u*_[1]+p*_[3]*h,ri.transformMat4(l?If:e.o,If,this._matViewProjInv),l?(this._node.getWorldPosition(Rf),Cs.fromPoints(e,Rf,If)):ri.transformQuat(e.d,ri.FORWARD,this._node.worldRotation),e}screenToWorld(e,t){const n=this.width,i=this.height,s=this._orientedViewport.x*n,r=this._orientedViewport.y*i,o=this._orientedViewport.width*n,a=this._orientedViewport.height*i,c=this._device.capabilities.clipSpaceSignY,l=yi[this._curTransform];if(this._proj===Cf.PERSPECTIVE){ri.set(e,(t.x-s)/o*2-1,(t.y-r)/a*2-1,1);const{x:n,y:i}=e;e.x=n*l[0]+i*l[2]*c,e.y=n*l[1]+i*l[3]*c,ri.transformMat4(e,e,this._matViewProjInv),this._node&&this._node.getWorldPosition(If),ri.lerp(e,If,e,Bn(this._nearClip/this._farClip,1,t.z))}else{ri.set(e,(t.x-s)/o*2-1,(t.y-r)/a*2-1,2*t.z-1);const{x:n,y:i}=e;e.x=n*l[0]+i*l[2]*c,e.y=n*l[1]+i*l[3]*c,ri.transformMat4(e,e,this._matViewProjInv)}return e}worldToScreen(e,t){const n=this._device.capabilities.clipSpaceSignY,i=yi[this._curTransform];ri.transformMat4(e,t,this._matViewProj);const{x:s,y:r}=e;e.x=s*i[0]+r*i[2]*n,e.y=s*i[1]+r*i[3]*n;const o=this.width,a=this.height,c=this._orientedViewport.x*o,l=this._orientedViewport.y*a,h=this._orientedViewport.width*o,_=this._orientedViewport.height*a;return e.x=c+.5*(e.x+1)*h,e.y=l+.5*(e.y+1)*_,e.z=.5*e.z+.5,e}worldMatrixToScreen(e,t,n,i){xi.multiply(e,this._matViewProj,t),xi.multiply(e,Mf[this._curTransform],e);const s=n/2,r=i/2;return xi.identity(Df),xi.transform(Df,Df,ri.set(If,s,r,0)),xi.scale(Df,Df,ri.set(If,s,r,1)),xi.multiply(e,Df,e),e}setExposure(e){this._exposure=.833333/2**e,this._nativeObj.exposure=this._exposure}updateExposure(){const e=Math.log2(this._apertureValue*this._apertureValue/this._shutterValue*100/this._isoValue);this.setExposure(e)}}let Lf,zf,Ff,Bf=1024;var Uf,Gf,Hf,kf;function Vf(e){return!!(i.sys.hasFeature(i.sys.Feature.IMAGE_BITMAP)&&e instanceof ImageBitmap)}!function(e){e[e.RGB565=zs.R5G6B5]="RGB565",e[e.RGB5A1=zs.RGB5A1]="RGB5A1",e[e.RGBA4444=zs.RGBA4]="RGBA4444",e[e.RGB888=zs.RGB8]="RGB888",e[e.RGB32F=zs.RGB32F]="RGB32F",e[e.RGBA8888=zs.RGBA8]="RGBA8888",e[e.RGBA32F=zs.RGBA32F]="RGBA32F",e[e.A8=zs.A8]="A8",e[e.I8=zs.L8]="I8",e[e.AI8=zs.LA8]="AI8",e[e.RGB_PVRTC_2BPPV1=zs.PVRTC_RGB2]="RGB_PVRTC_2BPPV1",e[e.RGBA_PVRTC_2BPPV1=zs.PVRTC_RGBA2]="RGBA_PVRTC_2BPPV1",e[e.RGB_A_PVRTC_2BPPV1=Bf++]="RGB_A_PVRTC_2BPPV1",e[e.RGB_PVRTC_4BPPV1=zs.PVRTC_RGB4]="RGB_PVRTC_4BPPV1",e[e.RGBA_PVRTC_4BPPV1=zs.PVRTC_RGBA4]="RGBA_PVRTC_4BPPV1",e[e.RGB_A_PVRTC_4BPPV1=Bf++]="RGB_A_PVRTC_4BPPV1",e[e.RGB_ETC1=zs.ETC_RGB8]="RGB_ETC1",e[e.RGBA_ETC1=Bf++]="RGBA_ETC1",e[e.RGB_ETC2=zs.ETC2_RGB8]="RGB_ETC2",e[e.RGBA_ETC2=zs.ETC2_RGBA8]="RGBA_ETC2",e[e.RGBA_ASTC_4x4=zs.ASTC_RGBA_4X4]="RGBA_ASTC_4x4",e[e.RGBA_ASTC_5x4=zs.ASTC_RGBA_5X4]="RGBA_ASTC_5x4",e[e.RGBA_ASTC_5x5=zs.ASTC_RGBA_5X5]="RGBA_ASTC_5x5",e[e.RGBA_ASTC_6x5=zs.ASTC_RGBA_6X5]="RGBA_ASTC_6x5",e[e.RGBA_ASTC_6x6=zs.ASTC_RGBA_6X6]="RGBA_ASTC_6x6",e[e.RGBA_ASTC_8x5=zs.ASTC_RGBA_8X5]="RGBA_ASTC_8x5",e[e.RGBA_ASTC_8x6=zs.ASTC_RGBA_8X6]="RGBA_ASTC_8x6",e[e.RGBA_ASTC_8x8=zs.ASTC_RGBA_8X8]="RGBA_ASTC_8x8",e[e.RGBA_ASTC_10x5=zs.ASTC_RGBA_10X5]="RGBA_ASTC_10x5",e[e.RGBA_ASTC_10x6=zs.ASTC_RGBA_10X6]="RGBA_ASTC_10x6",e[e.RGBA_ASTC_10x8=zs.ASTC_RGBA_10X8]="RGBA_ASTC_10x8",e[e.RGBA_ASTC_10x10=zs.ASTC_RGBA_10X10]="RGBA_ASTC_10x10",e[e.RGBA_ASTC_12x10=zs.ASTC_RGBA_12X10]="RGBA_ASTC_12x10",e[e.RGBA_ASTC_12x12=zs.ASTC_RGBA_12X12]="RGBA_ASTC_12x12"}(Lf||(Lf={})),function(e){e[e.REPEAT=Ks.WRAP]="REPEAT",e[e.CLAMP_TO_EDGE=Ks.CLAMP]="CLAMP_TO_EDGE",e[e.MIRRORED_REPEAT=Ks.MIRROR]="MIRRORED_REPEAT",e[e.CLAMP_TO_BORDER=Ks.BORDER]="CLAMP_TO_BORDER"}(zf||(zf={})),function(e){e[e.NONE=Ys.NONE]="NONE",e[e.LINEAR=Ys.LINEAR]="LINEAR",e[e.NEAREST=Ys.POINT]="NEAREST"}(Ff||(Ff={}));let jf=e("ImageAsset",Zc("cc.ImageAsset")((kf=Hf=class e extends bh{get _nativeAsset(){return this._nativeData}set _nativeAsset(e){e instanceof HTMLElement||Vf(e)||(e.format=e.format||this._format),this.reset(e)}get data(){return this._nativeData&&!0!==(e=this._nativeData)._compressed&&(e instanceof HTMLImageElement||e instanceof HTMLCanvasElement||Vf(e))?this._nativeData:this._nativeData&&this._nativeData._data;var e}get width(){return this._nativeData.width||this._width}get height(){return this._nativeData.height||this._height}get format(){return this._format}get isCompressed(){return this._format>=Lf.RGB_ETC1&&this._format<=Lf.RGBA_ASTC_12x12||this._format>=Lf.RGB_A_PVRTC_2BPPV1&&this._format<=Lf.RGBA_ETC1}get url(){return this.nativeUrl}constructor(e){super(),this._nativeData=void 0,this._exportedExts=void 0,this._format=Lf.RGBA8888,this._width=0,this._height=0,this._nativeData={_data:null,width:0,height:0,format:0,_compressed:!1},void 0!==e&&this.reset(e)}reset(e){Vf(e)||e instanceof HTMLElement?this._nativeData=e:(this._nativeData=e,this._format=e.format)}destroy(){return this.data&&this.data instanceof HTMLImageElement?(this.data.src="",this._setRawAsset(""),this.data.destroy()):Vf(this.data)&&this.data.close&&this.data.close(),super.destroy()}_serialize(){}_deserialize(t){let n="";"string"==typeof t?n=t:(this._width=t.w,this._height=t.h,n=t.fmt);const s=i.director.root?i.director.root.device:null,r=n.split("_");let o=Number.MAX_VALUE,a=this._format,c="";const l=i.macro.SUPPORT_TEXTURE_FORMATS;for(const t of r){const n=t.split("@"),r=parseInt(n[0],void 0),h=e.extnames[r]||n[0],_=l.indexOf(h);if(-1!==_&&_<o){const e=n[1]?parseInt(n[1]):this._format;if(!(".astc"!==h||s&&s.hasFeature(Ls.FORMAT_ASTC)))continue;if(!(".pvr"!==h||s&&s.hasFeature(Ls.FORMAT_PVRTC)))continue;if(!(e!==Lf.RGB_ETC1&&e!==Lf.RGBA_ETC1||s&&s.hasFeature(Ls.FORMAT_ETC1)))continue;if(!(e!==Lf.RGB_ETC2&&e!==Lf.RGBA_ETC2||s&&s.hasFeature(Ls.FORMAT_ETC2)))continue;if(".webp"===h&&!i.sys.hasFeature(i.sys.Feature.WEBP))continue;o=_,c=h,a=e}}c?(this._setRawAsset(c),this._format=a):T(3121)}initDefault(t){if(super.initDefault(t),e._sharedPlaceHolderCanvas)this.reset(e._sharedPlaceHolderCanvas);else{const t=document.createElement("canvas"),n=t.getContext("2d"),i=t.width=t.height=2;n.fillStyle="#ff00ff",n.fillRect(0,0,i,i),this.reset(t),e._sharedPlaceHolderCanvas=t}}validate(){return!!this.data}},Hf.extnames=[".png",".jpg",".jpeg",".bmp",".webp",".pvr",".pkm",".astc"],Hf._sharedPlaceHolderCanvas=null,Bc((Gf=kf).prototype,"_nativeAsset",[Ml],Object.getOwnPropertyDescriptor(Gf.prototype,"_nativeAsset"),Gf.prototype),Uf=Gf))||Uf);var Wf,qf,Xf,Yf,Kf,$f,Zf,Qf,Jf,em,tm,nm;i.ImageAsset=jf,Fe(zs);const im=new G("Tex");let sm=Zc("cc.TextureBase")((nm=tm=class extends bh{get isCompressed(){return this._format>=Lf.RGB_ETC1&&this._format<=Lf.RGBA_ASTC_12x12||this._format>=Lf.RGB_A_PVRTC_2BPPV1&&this._format<=Lf.RGBA_ETC1}get width(){return this._width}get height(){return this._height}constructor(){super(),Fc(this,"_format",Xf,this),Fc(this,"_minFilter",Yf,this),Fc(this,"_magFilter",Kf,this),Fc(this,"_mipFilter",$f,this),Fc(this,"_wrapS",Zf,this),Fc(this,"_wrapT",Qf,this),Fc(this,"_wrapR",Jf,this),Fc(this,"_anisotropy",em,this),this._width=1,this._height=1,this._id=void 0,this._samplerInfo=new kr,this._gfxSampler=null,this._gfxDevice=null,this._textureHash=0,this._id=im.getNewId(),this._gfxDevice=this._getGFXDevice(),this._textureHash=Ko(this._id,666)}getId(){return this._id}getPixelFormat(){return this._format}getAnisotropy(){return this._anisotropy}setWrapMode(e,t,n){void 0===n&&(n=e),this._wrapS=e,this._samplerInfo.addressU=e,this._wrapT=t,this._samplerInfo.addressV=t,this._wrapR=n,this._samplerInfo.addressW=n,this._gfxDevice&&(this._gfxSampler=this._gfxDevice.getSampler(this._samplerInfo))}setFilters(e,t){this._minFilter=e,this._samplerInfo.minFilter=e,this._magFilter=t,this._samplerInfo.magFilter=t,this._gfxDevice&&(this._gfxSampler=this._gfxDevice.getSampler(this._samplerInfo))}setMipFilter(e){this._mipFilter=e,this._samplerInfo.mipFilter=e,this._gfxDevice&&(this._gfxSampler=this._gfxDevice.getSampler(this._samplerInfo))}setAnisotropy(e){this._anisotropy=e,this._samplerInfo.maxAnisotropy=e,this._gfxDevice&&(this._gfxSampler=this._gfxDevice.getSampler(this._samplerInfo))}destroy(){var e;const t=super.destroy();return t&&(null===(e=i.director.root)||void 0===e?void 0:e.batcher2D)&&i.director.root.batcher2D._releaseDescriptorSetCache(this._textureHash),t}getHash(){return this._textureHash}getGFXTexture(){return null}getSamplerInfo(){return this._samplerInfo}getGFXSampler(){return this._gfxSampler||(this._gfxDevice?this._gfxSampler=this._gfxDevice.getSampler(this._samplerInfo):E(9302)),this._gfxSampler}_serialize(e){return""}_deserialize(e,t){const n=e.split(",");n.unshift(""),n.length>=5&&(this.setFilters(parseInt(n[1]),parseInt(n[2])),this.setWrapMode(parseInt(n[3]),parseInt(n[4]))),n.length>=7&&(this.setMipFilter(parseInt(n[5])),this.setAnisotropy(parseInt(n[6])))}_getGFXDevice(){return i.director.root?i.director.root.device:null}_getGFXFormat(){return this._getGFXPixelFormat(this._format)}_setGFXFormat(e){this._format=void 0===e?Lf.RGBA8888:e}_getGFXPixelFormat(e){return e===Lf.RGBA_ETC1?e=Lf.RGB_ETC1:e===Lf.RGB_A_PVRTC_4BPPV1?e=Lf.RGB_PVRTC_4BPPV1:e===Lf.RGB_A_PVRTC_2BPPV1&&(e=Lf.RGB_PVRTC_2BPPV1),e}},tm.PixelFormat=Lf,tm.WrapMode=zf,tm.Filter=Ff,Xf=Bc((qf=nm).prototype,"_format",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Lf.RGBA8888}}),Yf=Bc(qf.prototype,"_minFilter",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Ff.LINEAR}}),Kf=Bc(qf.prototype,"_magFilter",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Ff.LINEAR}}),$f=Bc(qf.prototype,"_mipFilter",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Ff.NONE}}),Zf=Bc(qf.prototype,"_wrapS",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return zf.REPEAT}}),Qf=Bc(qf.prototype,"_wrapT",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return zf.REPEAT}}),Jf=Bc(qf.prototype,"_wrapR",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return zf.REPEAT}}),em=Bc(qf.prototype,"_anisotropy",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Wf=qf))||Wf;i.TextureBase=sm;const rm=new WeakMap,om=new WeakSet,am=new WeakSet;function cm(e,t){let n;n=$h.safeFindClass;const i=f_.pool.get();let s;try{s=P_(e,i,{classFinder:n,customEnv:t})}catch(e){throw d(e),f_.pool.put(i),e}s._uuid=t.__uuid__||"";const r=i.uuidList,o=i.uuidObjList,a=i.uuidPropList,c=i.uuidTypeList||[],l=[];for(let e=0;e<r.length;e++){const t=r[e];l[e]={uuid:lh(t),owner:o[e],prop:a[e],type:Ae._getClassById(c[e])}}return rm.set(s,l),s._native&&om.add(s),f_.pool.put(i),s}var lm,hm=new class{constructor(){this._depends=new ql}init(){this._depends.clear()}getNativeDep(e){const t=this._depends.get(e);return t&&t.nativeDep?{...t.nativeDep}:null}getDeps(e){return this._depends.has(e)?this._depends.get(e).deps:[]}getDepsRecursively(e){const t=Object.create(null),n=[];return this._descend(e,t,n),n}remove(e){this._depends.remove(e)}parse(e,t){let n=null;if(Array.isArray(t)||t.__type__||t instanceof i_){if(this._depends.has(e))return this._depends.get(e);if(Array.isArray(t)&&!function(e){const t=e[5],n=t[t.length-1];return"number"==typeof n&&n<0}(t))n={deps:this._parseDepsFromJson(t)};else try{const i=cm(t,{__uuid__:e});n=this._parseDepsFromAsset(i),n.nativeDep&&(n.nativeDep.uuid=e),$l.add(`${e}@import`,i)}catch(t){Kl.remove(`${e}@import`),n={deps:[]}}}else{if(this._depends.has(e)&&(n=this._depends.get(e),n.parsedFromExistAsset))return n;n=this._parseDepsFromAsset(t)}return this._depends.add(e,n),n}_parseDepsFromAsset(e){const t={deps:[],parsedFromExistAsset:!0},n=rm.get(e);for(let e=0,i=n.length;e<i;e++)t.deps.push(n[e].uuid);return om.has(e)&&(t.nativeDep=e._nativeDep),t}_parseDepsFromJson(e){const t=function(e){const t=e[1];return e[10].map((e=>t[e]))}(e);return t.forEach(((e,n)=>t[n]=lh(e))),t}_descend(e,t,n){const i=this.getDeps(e);for(let e=0;e<i.length;e++){const s=i[e];t[s]||(t[s]=!0,n.push(s),this._descend(s,t,n))}}};const _m=[new Ir];function um(e){return e&&0==(e&e-1)}let pm=Zc("cc.SimpleTexture")(lm=class extends sm{constructor(...e){super(...e),this._gfxTexture=null,this._mipmapLevel=1,this._textureWidth=0,this._textureHeight=0}get mipmapLevel(){return this._mipmapLevel}getGFXTexture(){return this._gfxTexture}destroy(){return this._tryDestroyTexture(),super.destroy()}updateImage(){this.updateMipmaps(0)}updateMipmaps(e=0,t){}uploadData(e,t=0,n=0){if(!this._gfxTexture||this._mipmapLevel<=t)return;const i=this._getGFXDevice();if(!i)return;const s=_m[0];s.texExtent.width=this._textureWidth>>t,s.texExtent.height=this._textureHeight>>t,s.texSubres.mipLevel=t,s.texSubres.baseArrayLayer=n,ArrayBuffer.isView(e)?i.copyBuffersToTexture([e],this._gfxTexture,_m):i.copyTexImagesToTexture([e],this._gfxTexture,_m)}_assignImage(e,t,n){const i=e.data;if(i&&(this.uploadData(i,t,n),this._checkTextureLoaded(),Ue.CLEANUP_IMAGE_CACHE)){const t=hm.getDeps(this._uuid),n=t.indexOf(e._uuid);-1!==n&&(L(t,n),e.decRef())}}_checkTextureLoaded(){this._textureReady()}_textureReady(){this.loaded=!0,this.emit("load")}_setMipmapLevel(e){this._mipmapLevel=e<1?1:e}_getGfxTextureCreateInfo(e){return null}_tryReset(){if(this._tryDestroyTexture(),0===this._mipmapLevel)return;const e=this._getGFXDevice();e&&this._createTexture(e)}_createTexture(e){if(0===this._width||0===this._height)return;let t=Ws.NONE;this._mipFilter!==Ff.NONE&&function(e,t,n){return!(e.gfxAPI===Ms.WEBGL)||um(t)&&um(n)}(e,this._width,this._height)&&(this._mipmapLevel=function(e,t){let n=Math.max(e,t),i=0;for(;n;)n>>=1,i++;return i}(this._width,this._height),t=Ws.GEN_MIPMAP);const n=this._getGfxTextureCreateInfo({usage:js.SAMPLED|js.TRANSFER_DST,format:this._getGFXFormat(),levelCount:this._mipmapLevel,flags:t});if(!n)return;const i=e.createTexture(n);this._textureWidth=n.width,this._textureHeight=n.height,this._gfxTexture=i}_tryDestroyTexture(){this._gfxTexture&&(this._gfxTexture.destroy(),this._gfxTexture=null)}})||lm;var dm,fm,mm,gm,vm;i.SimpleTexture=pm;let ym=e("Texture2D",(dm=Zc("cc.Texture2D"),fm=Ol([jf]),dm((vm=Bc((gm=class extends pm{constructor(...e){super(...e),Fc(this,"_mipmaps",vm,this)}get mipmaps(){return this._mipmaps}set mipmaps(e){if(this._mipmaps=e,this._setMipmapLevel(this._mipmaps.length),this._mipmaps.length>0){const e=this._mipmaps[0];this.reset({width:e.width,height:e.height,format:e.format,mipmapLevel:this._mipmaps.length}),this._mipmaps.forEach(((e,t)=>{this._assignImage(e,t)}))}else this.reset({width:0,height:0,mipmapLevel:this._mipmaps.length})}get image(){return 0===this._mipmaps.length?null:this._mipmaps[0]}set image(e){this.mipmaps=e?[e]:[]}initialize(){this.mipmaps=this._mipmaps}onLoaded(){this.initialize()}reset(e){this._width=e.width,this._height=e.height,this._setGFXFormat(e.format),this._setMipmapLevel(e.mipmapLevel||1),this._tryReset()}create(e,t,n=Lf.RGBA8888,i=1){this.reset({width:e,height:t,format:n,mipmapLevel:i})}toString(){return 0!==this._mipmaps.length?this._mipmaps[0].url:""}updateMipmaps(e=0,t){if(e>=this._mipmaps.length)return;const n=Math.min(void 0===t?this._mipmaps.length:t,this._mipmaps.length-e);for(let t=0;t<n;++t){const n=e+t;this._assignImage(this._mipmaps[n],n)}}getHtmlElementObj(){return this._mipmaps[0]&&this._mipmaps[0].data instanceof HTMLElement?this._mipmaps[0].data:null}destroy(){return this._mipmaps=[],super.destroy()}description(){return`<cc.Texture2D | Name = ${this._mipmaps[0]?this._mipmaps[0].url:""} | Dimension = ${this.width} x ${this.height}>`}releaseTexture(){this.destroy()}_serialize(e){return null}_deserialize(e,t){const n=e;super._deserialize(n.base,t),this._mipmaps=new Array(n.mipmaps.length);for(let e=0;e<n.mipmaps.length;++e){if(this._mipmaps[e]=new jf,!n.mipmaps[e])continue;const i=n.mipmaps[e];t.result.push(this._mipmaps,`${e}`,i,Ae._getClassId(jf))}}_getGfxTextureCreateInfo(e){const t=new Gr(Vs.TEX2D);return t.width=this._width,t.height=this._height,Object.assign(t,e)}initDefault(e){super.initDefault(e);const t=new jf;t.initDefault(),this.image=t}validate(){return this.mipmaps&&0!==this.mipmaps.length}}).prototype,"_mipmaps",[fm],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),mm=gm))||mm));var xm,Sm,Cm,Tm,bm,Em,Am;i.Texture2D=ym,function(e){e[e.right=0]="right",e[e.left=1]="left",e[e.top=2]="top",e[e.bottom=3]="bottom",e[e.front=4]="front",e[e.back=5]="back"}(Am||(Am={}));let Pm=e("TextureCube",Zc("cc.TextureCube")((Em=bm=class e extends pm{constructor(...e){super(...e),Fc(this,"isRGBE",Cm,this),Fc(this,"_mipmaps",Tm,this)}get mipmaps(){return this._mipmaps}set mipmaps(e){if(this._mipmaps=e,this._setMipmapLevel(this._mipmaps.length),this._mipmaps.length>0){const e=this._mipmaps[0].front;this.reset({width:e.width,height:e.height,format:e.format,mipmapLevel:this._mipmaps.length}),this._mipmaps.forEach(((e,t)=>{wm(e,((e,n)=>{this._assignImage(e,t,n)}))}))}else this.reset({width:0,height:0,mipmapLevel:this._mipmaps.length})}get image(){return 0===this._mipmaps.length?null:this._mipmaps[0]}set image(e){this.mipmaps=e?[e]:[]}static fromTexture2DArray(t,n){const i=[],s=t.length/6;for(let e=0;e<s;e++){const n=6*e;i.push({front:t[n+Am.front].image,back:t[n+Am.back].image,left:t[n+Am.left].image,right:t[n+Am.right].image,top:t[n+Am.top].image,bottom:t[n+Am.bottom].image})}return(n=n||new e).mipmaps=i,n}onLoaded(){this.mipmaps=this._mipmaps}reset(e){this._width=e.width,this._height=e.height,this._setGFXFormat(e.format),this._setMipmapLevel(e.mipmapLevel||1),this._tryReset()}updateMipmaps(e=0,t){if(e>=this._mipmaps.length)return;const n=Math.min(void 0===t?this._mipmaps.length:t,this._mipmaps.length-e);for(let t=0;t<n;++t){const n=e+t;wm(this._mipmaps[n],((e,t)=>{this._assignImage(e,n,t)}))}}destroy(){return this._mipmaps=[],super.destroy()}releaseTexture(){this.mipmaps=[]}_serialize(e){return null}_deserialize(e,t){const n=e;super._deserialize(n.base,t),this.isRGBE=n.rgbe,this._mipmaps=new Array(n.mipmaps.length);for(let e=0;e<n.mipmaps.length;++e){this._mipmaps[e]={front:new jf,back:new jf,left:new jf,right:new jf,top:new jf,bottom:new jf};const i=n.mipmaps[e],s=Ae._getClassId(jf);t.result.push(this._mipmaps[e],"front",i.front,s),t.result.push(this._mipmaps[e],"back",i.back,s),t.result.push(this._mipmaps[e],"left",i.left,s),t.result.push(this._mipmaps[e],"right",i.right,s),t.result.push(this._mipmaps[e],"top",i.top,s),t.result.push(this._mipmaps[e],"bottom",i.bottom,s)}}_getGfxTextureCreateInfo(e){const t=new Gr(Vs.CUBE);return t.width=this._width,t.height=this._height,t.layerCount=6,Object.assign(t,e),t}initDefault(e){super.initDefault(e);const t=new jf;t.initDefault(),this.mipmaps=[{front:t,back:t,top:t,bottom:t,left:t,right:t}]}validate(){return 0!==this._mipmaps.length&&!this._mipmaps.find((e=>!(e.top&&e.bottom&&e.front&&e.back&&e.left&&e.right)))}},bm.FaceIndex=Am,Cm=Bc((Sm=Em).prototype,"isRGBE",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Tm=Bc(Sm.prototype,"_mipmaps",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),xm=Sm))||xm);function wm(e,t){t(e.front,Am.front),t(e.back,Am.back),t(e.left,Am.left),t(e.right,Am.right),t(e.top,Am.top),t(e.bottom,Am.bottom)}i.TextureCube=Pm;const Im=e("effects",[{name:"billboard",techniques:[{name:"add",passes:[{rasterizerState:{cullMode:0},blendState:{targets:[{blend:!0,blendSrc:2,blendDst:1,blendSrcAlpha:2,blendDstAlpha:1}]},program:"billboard|vert:vs_main|tinted-fs:add",depthStencilState:{depthTest:!0,depthWrite:!1},properties:{mainTexture:{value:"grey",type:28},mainTiling_Offset:{value:[1,1,0,0],type:16},tintColor:{value:[.5,.5,.5,.5],type:16}}}]}],shaders:[{name:"billboard|vert:vs_main|tinted-fs:add",hash:2909832090,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:53,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:40},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCLocal",defines:[]}],samplerTextures:[],buffers:[],images:[]}},defines:[],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_texCoord",defines:[],format:21,location:1},{name:"a_color",defines:[],format:44,location:2}],blocks:[{name:"Constants",defines:[],binding:0,stageFlags:1,members:[{name:"mainTiling_Offset",type:16,count:1},{name:"frameTile_velLenScale",type:16,count:1},{name:"scale",type:16,count:1},{name:"nodeRotation",type:16,count:1}]},{name:"builtin",defines:[],binding:1,stageFlags:1,members:[{name:"cc_size_rotation",type:16,count:1}]},{name:"FragConstants",defines:[],binding:2,stageFlags:16,members:[{name:"tintColor",type:16,count:1}]}],samplerTextures:[{name:"mainTexture",type:28,count:1,defines:[],stageFlags:16,binding:3}],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"clear-stencil",techniques:[{passes:[{blendState:{targets:[{blend:!0}]},rasterizerState:{cullMode:0},program:"clear-stencil|sprite-vs:vert|sprite-fs:frag",depthStencilState:{depthTest:!1,depthWrite:!1}}]}],shaders:[{name:"clear-stencil|sprite-vs:vert|sprite-fs:frag",hash:3507038093,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:0,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:0},globals:{blocks:[],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[],samplerTextures:[],buffers:[],images:[]}},defines:[],attributes:[{name:"a_position",defines:[],format:32,location:0}],blocks:[],samplerTextures:[],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"graphics",techniques:[{passes:[{blendState:{targets:[{blend:!0,blendSrc:1,blendDst:4,blendSrcAlpha:1,blendDstAlpha:4}]},rasterizerState:{cullMode:0},program:"graphics|vs:vert|fs:frag",depthStencilState:{depthTest:!1,depthWrite:!1}}]}],shaders:[{name:"graphics|vs:vert|fs:frag",hash:2610213142,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:48,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:0},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCLocal",defines:[]}],samplerTextures:[],buffers:[],images:[]}},defines:[],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_color",defines:[],format:44,location:1},{name:"a_dist",defines:[],format:11,location:2}],blocks:[],samplerTextures:[],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"occlusion-query",techniques:[{passes:[{rasterizerState:{cullMode:2},blendState:{targets:[{blendColorMask:0}]},program:"occlusion-query|occlusion-query-vs:vert|occlusion-query-fs:frag",depthStencilState:{depthTest:!0,depthWrite:!1}}]}],shaders:[{name:"occlusion-query|occlusion-query-vs:vert|occlusion-query-fs:frag",hash:1571978323,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:41,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:0},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCWorldBound",defines:[]}],samplerTextures:[],buffers:[],images:[]}},defines:[],attributes:[{name:"a_position",defines:[],format:32,location:0}],blocks:[],samplerTextures:[],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"particle-gpu",techniques:[{name:"add",passes:[{rasterizerState:{cullMode:0},blendState:{targets:[{blend:!0,blendSrc:2,blendDst:1,blendSrcAlpha:2,blendDstAlpha:1}]},program:"particle-gpu|particle-vs-gpu:gpvs_main|tinted-fs:add",depthStencilState:{depthTest:!0,depthWrite:!1},properties:{mainTexture:{value:"grey",type:28},mainTiling_Offset:{value:[1,1,0,0],type:16},tintColor:{value:[.5,.5,.5,.5],type:16}}}]}],shaders:[{name:"particle-gpu|particle-vs-gpu:gpvs_main|tinted-fs:add",hash:1250077034,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:63,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:40},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCLocal",defines:[]}],samplerTextures:[],buffers:[],images:[]}},defines:[{name:"CC_RENDER_MODE",type:"number",range:[0,4]},{name:"USE_VK_SHADER",type:"boolean"},{name:"COLOR_OVER_TIME_MODULE_ENABLE",type:"boolean"},{name:"ROTATION_OVER_TIME_MODULE_ENABLE",type:"boolean"},{name:"SIZE_OVER_TIME_MODULE_ENABLE",type:"boolean"},{name:"FORCE_OVER_TIME_MODULE_ENABLE",type:"boolean"},{name:"VELOCITY_OVER_TIME_MODULE_ENABLE",type:"boolean"},{name:"TEXTURE_ANIMATION_MODULE_ENABLE",type:"boolean"},{name:"CC_USE_WORLD_SPACE",type:"boolean"}],attributes:[{name:"a_position_starttime",defines:[],format:44,location:0},{name:"a_size_uv",defines:[],format:44,location:1},{name:"a_rotation_uv",defines:[],format:44,location:2},{name:"a_color",defines:[],format:44,location:3},{name:"a_dir_life",defines:[],format:44,location:4},{name:"a_rndSeed",defines:[],format:11,location:5},{name:"a_texCoord",defines:["CC_RENDER_MODE"],format:32,location:6},{name:"a_texCoord3",defines:["CC_RENDER_MODE"],format:32,location:7},{name:"a_normal",defines:["CC_RENDER_MODE"],format:32,location:8},{name:"a_color1",defines:["CC_RENDER_MODE"],format:44,location:9}],blocks:[{name:"Constants",defines:[],binding:0,stageFlags:1,members:[{name:"mainTiling_Offset",type:16,count:1},{name:"frameTile_velLenScale",type:16,count:1},{name:"scale",type:16,count:1},{name:"nodeRotation",type:16,count:1}]},{name:"SampleConstants",defines:[],binding:1,stageFlags:1,members:[{name:"u_sampleInfo",type:16,count:1}]},{name:"TickConstants",defines:[],binding:2,stageFlags:1,members:[{name:"u_worldRot",type:16,count:1},{name:"u_timeDelta",type:16,count:1}]},{name:"ColorConstant",defines:["COLOR_OVER_TIME_MODULE_ENABLE"],binding:3,stageFlags:1,members:[{name:"u_color_mode",type:5,count:1}]},{name:"RotationConstant",defines:["ROTATION_OVER_TIME_MODULE_ENABLE"],binding:4,stageFlags:1,members:[{name:"u_rotation_mode",type:5,count:1}]},{name:"SizeConstant",defines:["SIZE_OVER_TIME_MODULE_ENABLE"],binding:5,stageFlags:1,members:[{name:"u_size_mode",type:5,count:1}]},{name:"ForceConstant",defines:["FORCE_OVER_TIME_MODULE_ENABLE"],binding:6,stageFlags:1,members:[{name:"u_force_mode",type:5,count:1},{name:"u_force_space",type:5,count:1}]},{name:"VelocityConstant",defines:["VELOCITY_OVER_TIME_MODULE_ENABLE"],binding:7,stageFlags:1,members:[{name:"u_velocity_mode",type:5,count:1},{name:"u_velocity_space",type:5,count:1}]},{name:"AnimationConstant",defines:["TEXTURE_ANIMATION_MODULE_ENABLE"],binding:8,stageFlags:1,members:[{name:"u_anim_info",type:16,count:1}]},{name:"FragConstants",defines:[],binding:9,stageFlags:16,members:[{name:"tintColor",type:16,count:1}]}],samplerTextures:[{name:"color_over_time_tex0",type:28,count:1,defines:["COLOR_OVER_TIME_MODULE_ENABLE"],stageFlags:1,binding:10},{name:"rotation_over_time_tex0",type:28,count:1,defines:["ROTATION_OVER_TIME_MODULE_ENABLE"],stageFlags:1,binding:11},{name:"size_over_time_tex0",type:28,count:1,defines:["SIZE_OVER_TIME_MODULE_ENABLE"],stageFlags:1,binding:12},{name:"force_over_time_tex0",type:28,count:1,defines:["FORCE_OVER_TIME_MODULE_ENABLE"],stageFlags:1,binding:13},{name:"velocity_over_time_tex0",type:28,count:1,defines:["VELOCITY_OVER_TIME_MODULE_ENABLE"],stageFlags:1,binding:14},{name:"texture_animation_tex0",type:28,count:1,defines:["TEXTURE_ANIMATION_MODULE_ENABLE"],stageFlags:1,binding:15},{name:"mainTexture",type:28,count:1,defines:[],stageFlags:16,binding:16}],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"particle-trail",techniques:[{name:"add",passes:[{rasterizerState:{cullMode:0},blendState:{targets:[{blend:!0,blendSrc:2,blendDst:1,blendSrcAlpha:2,blendDstAlpha:1}]},program:"particle-trail|particle-trail:vs_main|tinted-fs:add",depthStencilState:{depthTest:!0,depthWrite:!1},properties:{mainTexture:{value:"grey",type:28},mainTiling_Offset:{value:[1,1,0,0],type:16},frameTile_velLenScale:{value:[1,1,0,0],type:16},tintColor:{value:[.5,.5,.5,.5],type:16}}}]}],shaders:[{name:"particle-trail|particle-trail:vs_main|tinted-fs:add",hash:1437790364,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:52,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:40},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCLocal",defines:[]}],samplerTextures:[],buffers:[],images:[]}},defines:[{name:"CC_RENDER_MODE",type:"number",range:[0,4]},{name:"CC_DRAW_WIRE_FRAME",type:"boolean"},{name:"CC_USE_WORLD_SPACE",type:"boolean"}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_texCoord",defines:[],format:44,location:1},{name:"a_texCoord1",defines:[],format:32,location:2},{name:"a_texCoord2",defines:[],format:32,location:3},{name:"a_color",defines:[],format:44,location:4}],blocks:[{name:"Constants",defines:[],binding:0,stageFlags:1,members:[{name:"mainTiling_Offset",type:16,count:1},{name:"frameTile_velLenScale",type:16,count:1},{name:"scale",type:16,count:1},{name:"nodeRotation",type:16,count:1}]},{name:"FragConstants",defines:[],binding:1,stageFlags:16,members:[{name:"tintColor",type:16,count:1}]}],samplerTextures:[{name:"mainTexture",type:28,count:1,defines:[],stageFlags:16,binding:2}],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"particle",techniques:[{name:"add",passes:[{rasterizerState:{cullMode:0},blendState:{targets:[{blend:!0,blendSrc:2,blendDst:1,blendSrcAlpha:2,blendDstAlpha:1}]},program:"particle|particle-vs-legacy:lpvs_main|tinted-fs:add",depthStencilState:{depthTest:!0,depthWrite:!1},properties:{mainTexture:{value:"grey",type:28},mainTiling_Offset:{value:[1,1,0,0],type:16},tintColor:{value:[.5,.5,.5,.5],type:16}}}]}],shaders:[{name:"particle|particle-vs-legacy:lpvs_main|tinted-fs:add",hash:2766437914,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:52,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:40},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCLocal",defines:[]}],samplerTextures:[],buffers:[],images:[]}},defines:[{name:"CC_RENDER_MODE",type:"number",range:[0,4]},{name:"CC_USE_WORLD_SPACE",type:"boolean"},{name:"ROTATION_OVER_TIME_MODULE_ENABLE",type:"boolean"}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_texCoord",defines:[],format:32,location:1},{name:"a_texCoord1",defines:[],format:32,location:2},{name:"a_texCoord2",defines:[],format:32,location:3},{name:"a_color",defines:[],format:44,location:4},{name:"a_color1",defines:["CC_RENDER_MODE"],format:32,location:8},{name:"a_texCoord3",defines:["CC_RENDER_MODE"],format:32,location:6},{name:"a_normal",defines:["CC_RENDER_MODE"],format:32,location:7}],blocks:[{name:"Constants",defines:[],binding:0,stageFlags:1,members:[{name:"mainTiling_Offset",type:16,count:1},{name:"frameTile_velLenScale",type:16,count:1},{name:"scale",type:16,count:1},{name:"nodeRotation",type:16,count:1}]},{name:"FragConstants",defines:[],binding:1,stageFlags:16,members:[{name:"tintColor",type:16,count:1}]}],samplerTextures:[{name:"mainTexture",type:28,count:1,defines:[],stageFlags:16,binding:2}],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"spine",techniques:[{passes:[{blendState:{targets:[{blend:!0,blendSrc:2,blendDst:4,blendDstAlpha:4}]},rasterizerState:{cullMode:0},program:"spine|sprite-vs:vert|sprite-fs:frag",depthStencilState:{depthTest:!1,depthWrite:!1},properties:{alphaThreshold:{value:[.5],type:13}}}]}],shaders:[{name:"spine|sprite-vs:vert|sprite-fs:frag",hash:3192452405,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:48,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:1},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCLocal",defines:["USE_LOCAL"]}],samplerTextures:[{name:"cc_spriteTexture",defines:[]}],buffers:[],images:[]}},defines:[{name:"USE_LOCAL",type:"boolean"},{name:"TWO_COLORED",type:"boolean"},{name:"USE_ALPHA_TEST",type:"boolean"}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_texCoord",defines:[],format:21,location:1},{name:"a_color",defines:[],format:44,location:2},{name:"a_color2",defines:["TWO_COLORED"],format:44,location:3}],blocks:[{name:"ALPHA_TEST_DATA",defines:["USE_ALPHA_TEST"],binding:0,stageFlags:16,members:[{name:"alphaThreshold",type:13,count:1}]}],samplerTextures:[],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"sprite-gpu",techniques:[{passes:[{blendState:{targets:[{blend:!0,blendSrc:2,blendDst:4,blendDstAlpha:4}]},rasterizerState:{cullMode:0},program:"sprite-gpu|sprite-vs-gpu:vert|sprite-fs-gpu:frag",depthStencilState:{depthTest:!1,depthWrite:!1}}]}],shaders:[{name:"sprite-gpu|sprite-vs-gpu:vert|sprite-fs-gpu:frag",hash:2450198964,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:39,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:0},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCUILocal",defines:[]}],samplerTextures:[{name:"cc_spriteTexture",defines:["USE_TEXTURE"]}],buffers:[],images:[]}},defines:[{name:"SAMPLE_FROM_RT",type:"boolean"},{name:"USE_PIXEL_ALIGNMENT",type:"boolean"},{name:"CC_USE_EMBEDDED_ALPHA",type:"boolean"},{name:"USE_TEXTURE",type:"boolean"},{name:"IS_GRAY",type:"boolean"}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_texCoord",defines:[],format:21,location:1},{name:"a_batch_id",defines:[],format:11,location:2}],blocks:[],samplerTextures:[],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"sprite",techniques:[{passes:[{blendState:{targets:[{blend:!0,blendSrc:2,blendDst:4,blendDstAlpha:4}]},rasterizerState:{cullMode:0},program:"sprite|sprite-vs:vert|sprite-fs:frag",depthStencilState:{depthTest:!1,depthWrite:!1},properties:{alphaThreshold:{value:[.5],type:13}}}]}],shaders:[{name:"sprite|sprite-vs:vert|sprite-fs:frag",hash:1770338543,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:48,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:1},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCLocal",defines:["USE_LOCAL"]}],samplerTextures:[{name:"cc_spriteTexture",defines:["USE_TEXTURE"]}],buffers:[],images:[]}},defines:[{name:"USE_LOCAL",type:"boolean"},{name:"SAMPLE_FROM_RT",type:"boolean"},{name:"USE_PIXEL_ALIGNMENT",type:"boolean"},{name:"CC_USE_EMBEDDED_ALPHA",type:"boolean"},{name:"USE_ALPHA_TEST",type:"boolean"},{name:"USE_TEXTURE",type:"boolean"},{name:"IS_GRAY",type:"boolean"}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_texCoord",defines:[],format:21,location:1},{name:"a_color",defines:[],format:44,location:2}],blocks:[{name:"ALPHA_TEST_DATA",defines:["USE_ALPHA_TEST"],binding:0,stageFlags:16,members:[{name:"alphaThreshold",type:13,count:1}]}],samplerTextures:[],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"standard",techniques:[{name:"opaque",passes:[{program:"standard|standard-vs|standard-fs",properties:{tilingOffset:{value:[1,1,0,0],type:16},mainColor:{value:[1,1,1,1],linear:!0,type:16,handleInfo:["albedo",0,16]},albedoScale:{value:[1,1,1],type:15,handleInfo:["albedoScaleAndCutoff",0,15]},alphaThreshold:{value:[.5],type:13,handleInfo:["albedoScaleAndCutoff",3,13]},occlusion:{value:[1],type:13,handleInfo:["pbrParams",0,13]},roughness:{value:[.8],type:13,handleInfo:["pbrParams",1,13]},metallic:{value:[.6],type:13,handleInfo:["pbrParams",2,13]},SpecularIntensity:{value:[.5],type:13,handleInfo:["pbrParams",3,13]},emissive:{value:[0,0,0,1],linear:!0,type:16},emissiveScale:{value:[1,1,1],type:15,handleInfo:["emissiveScaleParam",0,15]},normalStrenth:{value:[1],type:13,handleInfo:["emissiveScaleParam",3,13]},mainTexture:{value:"grey",type:28,handleInfo:["albedoMap",0,28]},normalMap:{value:"normal",type:28},pbrMap:{value:"grey",type:28},metallicRoughnessMap:{value:"grey",type:28},occlusionMap:{value:"white",type:28},emissiveMap:{value:"grey",type:28},albedo:{type:16,value:[1,1,1,1]},albedoScaleAndCutoff:{type:16,value:[1,1,1,.5]},pbrParams:{type:16,value:[1,.8,.6,.5]},emissiveScaleParam:{type:16,value:[1,1,1,1]},albedoMap:{type:28,value:"grey"}}},{phase:"forward-add",propertyIndex:0,embeddedMacros:{CC_FORWARD_ADD:!0},blendState:{targets:[{blend:!0,blendSrc:1,blendDst:1,blendSrcAlpha:0,blendDstAlpha:1}]},program:"standard|standard-vs|standard-fs",depthStencilState:{depthFunc:2,depthTest:!0,depthWrite:!1}},{phase:"shadow-caster",propertyIndex:0,rasterizerState:{cullMode:1},program:"standard|shadow-caster-vs:vert|shadow-caster-fs:frag",properties:{tilingOffset:{value:[1,1,0,0],type:16},mainColor:{value:[1,1,1,1],type:16,handleInfo:["albedo",0,16]},albedoScale:{value:[1,1,1],type:15,handleInfo:["albedoScaleAndCutoff",0,15]},alphaThreshold:{value:[.5],type:13,handleInfo:["albedoScaleAndCutoff",3,13]},mainTexture:{value:"grey",type:28,handleInfo:["albedoMap",0,28]},albedo:{type:16,value:[1,1,1,1]},albedoScaleAndCutoff:{type:16,value:[1,1,1,.5]},albedoMap:{type:28,value:"grey"}}}]}],shaders:[{name:"standard|standard-vs|standard-fs",hash:4038009253,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:222,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:65},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]},{name:"CCShadow",defines:[]}],samplerTextures:[{name:"cc_shadowMap",defines:["CC_RECEIVE_SHADOW"]},{name:"cc_spotLightingMap",defines:["CC_RECEIVE_SHADOW"]},{name:"cc_environment",defines:["CC_USE_IBL"]},{name:"cc_diffuseMap",defines:["CC_USE_IBL","CC_USE_DIFFUSEMAP"]}],buffers:[],images:[]},locals:{blocks:[{name:"CCMorph",defines:["CC_USE_MORPH"]},{name:"CCSkinningTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinningAnimation",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinning",defines:["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]},{name:"CCLocalBatched",defines:["!USE_INSTANCING","USE_BATCHING"]},{name:"CCLocal",defines:["!USE_INSTANCING","!USE_BATCHING"]},{name:"CCForwardLight",defines:["CC_FORWARD_ADD","CC_ENABLE_CLUSTERED_LIGHT_CULLING"]}],samplerTextures:[{name:"cc_PositionDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{name:"cc_NormalDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{name:"cc_TangentDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{name:"cc_jointTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"cc_lightingMap",defines:["USE_LIGHTMAP","!USE_BATCHING","!CC_FORWARD_ADD"]}],buffers:[],images:[]}},defines:[{name:"CC_USE_MORPH",type:"boolean"},{name:"CC_MORPH_TARGET_COUNT",type:"number",range:[2,8]},{name:"CC_MORPH_PRECOMPUTED",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_POSITION",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_NORMAL",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_TANGENT",type:"boolean"},{name:"CC_USE_SKINNING",type:"boolean"},{name:"CC_USE_BAKED_ANIMATION",type:"boolean"},{name:"USE_INSTANCING",type:"boolean"},{name:"USE_BATCHING",type:"boolean"},{name:"USE_LIGHTMAP",type:"boolean"},{name:"CC_USE_FOG",type:"number",range:[0,4]},{name:"CC_USE_ACCURATE_FOG",type:"boolean"},{name:"CC_RECEIVE_SHADOW",type:"boolean"},{name:"USE_VERTEX_COLOR",type:"boolean"},{name:"USE_NORMAL_MAP",type:"boolean"},{name:"HAS_SECOND_UV",type:"boolean"},{name:"CC_FORWARD_ADD",type:"boolean"},{name:"USE_TWOSIDE",type:"boolean"},{name:"SAMPLE_FROM_RT",type:"boolean"},{name:"CC_USE_IBL",type:"number",range:[0,2]},{name:"CC_USE_DIFFUSEMAP",type:"number",range:[0,2]},{name:"USE_REFLECTION_DENOISE",type:"boolean"},{name:"CC_USE_HDR",type:"boolean"},{name:"USE_ALBEDO_MAP",type:"boolean"},{name:"ALBEDO_UV",type:"string",options:["v_uv","v_uv1"]},{name:"NORMAL_UV",type:"string",options:["v_uv","v_uv1"]},{name:"PBR_UV",type:"string",options:["v_uv","v_uv1"]},{name:"USE_PBR_MAP",type:"boolean"},{name:"USE_METALLIC_ROUGHNESS_MAP",type:"boolean"},{name:"USE_OCCLUSION_MAP",type:"boolean"},{name:"USE_EMISSIVE_MAP",type:"boolean"},{name:"EMISSIVE_UV",type:"string",options:["v_uv","v_uv1"]},{name:"USE_ALPHA_TEST",type:"boolean"},{name:"ALPHA_TEST_CHANNEL",type:"string",options:["a","r"]},{name:"CC_PIPELINE_TYPE",type:"number",range:[0,1]},{name:"CC_FORCE_FORWARD_SHADING",type:"boolean"}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_normal",defines:[],format:32,location:1},{name:"a_texCoord",defines:[],format:21,location:2},{name:"a_tangent",defines:[],format:44,location:3},{name:"a_vertexId",defines:["CC_USE_MORPH"],format:11,location:6},{name:"a_joints",defines:["CC_USE_SKINNING"],location:4},{name:"a_weights",defines:["CC_USE_SKINNING"],format:44,location:5},{name:"a_jointAnimInfo",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION","USE_INSTANCING"],format:44,isInstanced:!0,location:7},{name:"a_matWorld0",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:8},{name:"a_matWorld1",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:9},{name:"a_matWorld2",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:10},{name:"a_lightingMapUVParam",defines:["USE_INSTANCING","USE_LIGHTMAP"],format:44,isInstanced:!0,location:11},{name:"a_dyn_batch_id",defines:["!USE_INSTANCING","USE_BATCHING"],format:11,location:12},{name:"a_color",defines:["USE_VERTEX_COLOR"],format:44,location:13},{name:"a_texCoord1",defines:[],format:21,location:14}],blocks:[{name:"Constants",defines:[],binding:0,stageFlags:17,members:[{name:"tilingOffset",type:16,count:1},{name:"albedo",type:16,count:1},{name:"albedoScaleAndCutoff",type:16,count:1},{name:"pbrParams",type:16,count:1},{name:"emissive",type:16,count:1},{name:"emissiveScaleParam",type:16,count:1}]}],samplerTextures:[{name:"albedoMap",type:28,count:1,defines:["USE_ALBEDO_MAP"],stageFlags:16,binding:1},{name:"normalMap",type:28,count:1,defines:["USE_NORMAL_MAP"],stageFlags:16,binding:2},{name:"pbrMap",type:28,count:1,defines:["USE_PBR_MAP"],stageFlags:16,binding:3},{name:"metallicRoughnessMap",type:28,count:1,defines:["USE_METALLIC_ROUGHNESS_MAP"],stageFlags:16,binding:4},{name:"occlusionMap",type:28,count:1,defines:["USE_OCCLUSION_MAP"],stageFlags:16,binding:5},{name:"emissiveMap",type:28,count:1,defines:["USE_EMISSIVE_MAP"],stageFlags:16,binding:6}],buffers:[{name:"b_ccLightsBuffer",memoryAccess:1,defines:["CC_FORWARD_ADD","CC_ENABLE_CLUSTERED_LIGHT_CULLING"],stageFlags:16,binding:7},{name:"b_clusterLightIndicesBuffer",memoryAccess:1,defines:["CC_FORWARD_ADD","CC_ENABLE_CLUSTERED_LIGHT_CULLING"],stageFlags:16,binding:8},{name:"b_clusterLightGridBuffer",memoryAccess:1,defines:["CC_FORWARD_ADD","CC_ENABLE_CLUSTERED_LIGHT_CULLING"],stageFlags:16,binding:9}],images:[],textures:[],samplers:[],subpassInputs:[]},{name:"standard|shadow-caster-vs:vert|shadow-caster-fs:frag",hash:210600745,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:183,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:65},globals:{blocks:[{name:"CCShadow",defines:[]},{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[{name:"cc_shadowMap",defines:["CC_RECEIVE_SHADOW"]},{name:"cc_spotLightingMap",defines:["CC_RECEIVE_SHADOW"]}],buffers:[],images:[]},locals:{blocks:[{name:"CCMorph",defines:["CC_USE_MORPH"]},{name:"CCSkinningTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinningAnimation",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinning",defines:["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]},{name:"CCLocalBatched",defines:["!USE_INSTANCING","USE_BATCHING"]},{name:"CCLocal",defines:["!USE_INSTANCING","!USE_BATCHING"]}],samplerTextures:[{name:"cc_PositionDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{name:"cc_NormalDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{name:"cc_TangentDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{name:"cc_jointTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]}],buffers:[],images:[]}},defines:[{name:"CC_USE_MORPH",type:"boolean"},{name:"CC_MORPH_TARGET_COUNT",type:"number",range:[2,8]},{name:"CC_MORPH_PRECOMPUTED",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_POSITION",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_NORMAL",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_TANGENT",type:"boolean"},{name:"CC_USE_SKINNING",type:"boolean"},{name:"CC_USE_BAKED_ANIMATION",type:"boolean"},{name:"USE_INSTANCING",type:"boolean"},{name:"USE_BATCHING",type:"boolean"},{name:"USE_LIGHTMAP",type:"boolean"},{name:"HAS_SECOND_UV",type:"boolean"},{name:"CC_RECEIVE_SHADOW",type:"boolean"},{name:"USE_ALBEDO_MAP",type:"boolean"},{name:"ALBEDO_UV",type:"string",options:["v_uv","v_uv1"]},{name:"USE_ALPHA_TEST",type:"boolean"},{name:"ALPHA_TEST_CHANNEL",type:"string",options:["a","r"]}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_normal",defines:[],format:32,location:1},{name:"a_texCoord",defines:[],format:21,location:2},{name:"a_tangent",defines:[],format:44,location:3},{name:"a_vertexId",defines:["CC_USE_MORPH"],format:11,location:6},{name:"a_joints",defines:["CC_USE_SKINNING"],location:4},{name:"a_weights",defines:["CC_USE_SKINNING"],format:44,location:5},{name:"a_jointAnimInfo",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION","USE_INSTANCING"],format:44,isInstanced:!0,location:7},{name:"a_matWorld0",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:8},{name:"a_matWorld1",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:9},{name:"a_matWorld2",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:10},{name:"a_lightingMapUVParam",defines:["USE_INSTANCING","USE_LIGHTMAP"],format:44,isInstanced:!0,location:11},{name:"a_dyn_batch_id",defines:["!USE_INSTANCING","USE_BATCHING"],format:11,location:12},{name:"a_texCoord1",defines:[],format:21,location:13}],blocks:[{name:"Constants",defines:[],binding:0,stageFlags:17,members:[{name:"tilingOffset",type:16,count:1},{name:"albedo",type:16,count:1},{name:"albedoScaleAndCutoff",type:16,count:1},{name:"pbrParams",type:16,count:1},{name:"emissive",type:16,count:1},{name:"emissiveScaleParam",type:16,count:1}]}],samplerTextures:[{name:"albedoMap",type:28,count:1,defines:["USE_ALBEDO_MAP"],stageFlags:16,binding:1}],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"terrain",techniques:[{name:"opaque",passes:[{program:"terrain|terrain-vs|terrain-fs",properties:{UVScale:{value:[1,1,1,1],type:16},lightMapUVParam:{value:[0,0,0,0],type:16},metallic:{value:[0,0,0,0],type:16},roughness:{value:[1,1,1,1],type:16},weightMap:{value:"black",type:28},detailMap0:{value:"grey",type:28},detailMap1:{value:"grey",type:28},detailMap2:{value:"grey",type:28},detailMap3:{value:"grey",type:28},normalMap0:{value:"normal",type:28},normalMap1:{value:"normal",type:28},normalMap2:{value:"normal",type:28},normalMap3:{value:"normal",type:28},lightMap:{value:"grey",type:28}}},{phase:"forward-add",propertyIndex:0,embeddedMacros:{CC_FORWARD_ADD:!0},blendState:{targets:[{blend:!0,blendSrc:1,blendDst:1,blendSrcAlpha:0,blendDstAlpha:1}]},program:"terrain|terrain-vs|terrain-fs",depthStencilState:{depthFunc:2,depthTest:!0,depthWrite:!1},properties:{UVScale:{value:[1,1,1,1],type:16},lightMapUVParam:{value:[0,0,0,0],type:16},metallic:{value:[0,0,0,0],type:16},roughness:{value:[1,1,1,1],type:16},weightMap:{value:"black",type:28},detailMap0:{value:"grey",type:28},detailMap1:{value:"grey",type:28},detailMap2:{value:"grey",type:28},detailMap3:{value:"grey",type:28},normalMap0:{value:"normal",type:28},normalMap1:{value:"normal",type:28},normalMap2:{value:"normal",type:28},normalMap3:{value:"normal",type:28},lightMap:{value:"grey",type:28}}},{phase:"shadow-add",propertyIndex:0,rasterizerState:{cullMode:2},program:"terrain|shadow-caster-vs:vert|shadow-caster-fs:frag"}]}],shaders:[{name:"terrain|terrain-vs|terrain-fs",hash:3916952624,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:70,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:61},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]},{name:"CCShadow",defines:[]}],samplerTextures:[{name:"cc_shadowMap",defines:["CC_RECEIVE_SHADOW"]},{name:"cc_spotLightingMap",defines:["CC_RECEIVE_SHADOW"]},{name:"cc_environment",defines:["CC_USE_IBL"]},{name:"cc_diffuseMap",defines:["CC_USE_IBL","CC_USE_DIFFUSEMAP"]}],buffers:[],images:[]},locals:{blocks:[{name:"CCLocal",defines:[]},{name:"CCForwardLight",defines:["CC_FORWARD_ADD","CC_ENABLE_CLUSTERED_LIGHT_CULLING"]}],samplerTextures:[{name:"cc_lightingMap",defines:["USE_LIGHTMAP","!USE_BATCHING","!CC_FORWARD_ADD"]}],buffers:[],images:[]}},defines:[{name:"CC_USE_FOG",type:"number",range:[0,4]},{name:"CC_USE_ACCURATE_FOG",type:"boolean"},{name:"CC_RECEIVE_SHADOW",type:"boolean"},{name:"USE_NORMALMAP",type:"boolean"},{name:"USE_LIGHTMAP",type:"boolean"},{name:"CC_USE_IBL",type:"number",range:[0,2]},{name:"CC_USE_DIFFUSEMAP",type:"number",range:[0,2]},{name:"USE_REFLECTION_DENOISE",type:"boolean"},{name:"USE_BATCHING",type:"boolean"},{name:"CC_FORWARD_ADD",type:"boolean"},{name:"CC_USE_HDR",type:"boolean"},{name:"LAYERS",type:"number",range:[0,4]},{name:"USE_PBR",type:"boolean"},{name:"CC_PIPELINE_TYPE",type:"number",range:[0,1]},{name:"CC_FORCE_FORWARD_SHADING",type:"boolean"}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_normal",defines:[],format:32,location:1},{name:"a_texCoord",defines:[],format:21,location:2}],blocks:[{name:"TexCoords",defines:[],binding:0,stageFlags:1,members:[{name:"UVScale",type:16,count:1},{name:"lightMapUVParam",type:16,count:1}]},{name:"PbrParams",defines:[],binding:1,stageFlags:16,members:[{name:"metallic",type:16,count:1},{name:"roughness",type:16,count:1}]}],samplerTextures:[{name:"weightMap",type:28,count:1,defines:[],stageFlags:16,binding:2},{name:"detailMap0",type:28,count:1,defines:[],stageFlags:16,binding:3},{name:"detailMap1",type:28,count:1,defines:[],stageFlags:16,binding:4},{name:"detailMap2",type:28,count:1,defines:[],stageFlags:16,binding:5},{name:"detailMap3",type:28,count:1,defines:[],stageFlags:16,binding:6},{name:"normalMap0",type:28,count:1,defines:[],stageFlags:16,binding:7},{name:"normalMap1",type:28,count:1,defines:[],stageFlags:16,binding:8},{name:"normalMap2",type:28,count:1,defines:[],stageFlags:16,binding:9},{name:"normalMap3",type:28,count:1,defines:[],stageFlags:16,binding:10},{name:"lightMap",type:28,count:1,defines:[],stageFlags:16,binding:11}],buffers:[{name:"b_ccLightsBuffer",memoryAccess:1,defines:["CC_FORWARD_ADD","CC_ENABLE_CLUSTERED_LIGHT_CULLING"],stageFlags:16,binding:12},{name:"b_clusterLightIndicesBuffer",memoryAccess:1,defines:["CC_FORWARD_ADD","CC_ENABLE_CLUSTERED_LIGHT_CULLING"],stageFlags:16,binding:13},{name:"b_clusterLightGridBuffer",memoryAccess:1,defines:["CC_FORWARD_ADD","CC_ENABLE_CLUSTERED_LIGHT_CULLING"],stageFlags:16,binding:14}],images:[],textures:[],samplers:[],subpassInputs:[]},{name:"terrain|shadow-caster-vs:vert|shadow-caster-fs:frag",hash:4270039829,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:68,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:0},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]},{name:"CCShadow",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCLocal",defines:[]}],samplerTextures:[],buffers:[],images:[]}},defines:[],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_normal",defines:[],format:32,location:1},{name:"a_texCoord",defines:[],format:21,location:2}],blocks:[],samplerTextures:[],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"unlit",techniques:[{name:"opaque",passes:[{program:"unlit|unlit-vs:vert|unlit-fs:frag",properties:{mainTexture:{value:"grey",type:28},tilingOffset:{value:[1,1,0,0],type:16},mainColor:{value:[1,1,1,1],linear:!0,type:16},colorScale:{value:[1,1,1],type:15,handleInfo:["colorScaleAndCutoff",0,15]},alphaThreshold:{value:[.5],type:13,handleInfo:["colorScaleAndCutoff",3,13]},color:{linear:!0,type:16,handleInfo:["mainColor",0,16]},colorScaleAndCutoff:{type:16,value:[1,1,1,.5]}}}]}],shaders:[{name:"unlit|unlit-vs:vert|unlit-fs:frag",hash:3319190198,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:197,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:41},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCMorph",defines:["CC_USE_MORPH"]},{name:"CCSkinningTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinningAnimation",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinning",defines:["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]},{name:"CCLocalBatched",defines:["!USE_INSTANCING","USE_BATCHING"]},{name:"CCLocal",defines:["!USE_INSTANCING","!USE_BATCHING"]}],samplerTextures:[{name:"cc_PositionDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{name:"cc_NormalDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{name:"cc_TangentDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{name:"cc_jointTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]}],buffers:[],images:[]}},defines:[{name:"CC_USE_MORPH",type:"boolean"},{name:"CC_MORPH_TARGET_COUNT",type:"number",range:[2,8]},{name:"CC_MORPH_PRECOMPUTED",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_POSITION",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_NORMAL",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_TANGENT",type:"boolean"},{name:"CC_USE_SKINNING",type:"boolean"},{name:"CC_USE_BAKED_ANIMATION",type:"boolean"},{name:"USE_INSTANCING",type:"boolean"},{name:"USE_BATCHING",type:"boolean"},{name:"USE_LIGHTMAP",type:"boolean"},{name:"CC_USE_FOG",type:"number",range:[0,4]},{name:"CC_USE_ACCURATE_FOG",type:"boolean"},{name:"USE_VERTEX_COLOR",type:"boolean"},{name:"USE_TEXTURE",type:"boolean"},{name:"SAMPLE_FROM_RT",type:"boolean"},{name:"CC_USE_HDR",type:"boolean"},{name:"USE_ALPHA_TEST",type:"boolean"},{name:"ALPHA_TEST_CHANNEL",type:"string",options:["a","r","g","b"]}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_normal",defines:[],format:32,location:1},{name:"a_texCoord",defines:[],format:21,location:2},{name:"a_tangent",defines:[],format:44,location:3},{name:"a_vertexId",defines:["CC_USE_MORPH"],format:11,location:6},{name:"a_joints",defines:["CC_USE_SKINNING"],location:4},{name:"a_weights",defines:["CC_USE_SKINNING"],format:44,location:5},{name:"a_jointAnimInfo",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION","USE_INSTANCING"],format:44,isInstanced:!0,location:7},{name:"a_matWorld0",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:8},{name:"a_matWorld1",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:9},{name:"a_matWorld2",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:10},{name:"a_lightingMapUVParam",defines:["USE_INSTANCING","USE_LIGHTMAP"],format:44,isInstanced:!0,location:11},{name:"a_dyn_batch_id",defines:["!USE_INSTANCING","USE_BATCHING"],format:11,location:12},{name:"a_color",defines:["USE_VERTEX_COLOR"],format:44,location:13}],blocks:[{name:"TexCoords",defines:["USE_TEXTURE"],binding:0,stageFlags:1,members:[{name:"tilingOffset",type:16,count:1}]},{name:"Constant",defines:[],binding:1,stageFlags:16,members:[{name:"mainColor",type:16,count:1},{name:"colorScaleAndCutoff",type:16,count:1}]}],samplerTextures:[{name:"mainTexture",type:28,count:1,defines:["USE_TEXTURE"],stageFlags:16,binding:2}],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"bloom",techniques:[{passes:[{phase:"bloom-prefilter",program:"bloom|bloom-vs|prefilter-fs",depthStencilState:{depthTest:!1,depthWrite:!1}},{phase:"bloom-downsample",program:"bloom|bloom-vs|downsample-fs",depthStencilState:{depthTest:!1,depthWrite:!1}},{phase:"bloom-downsample",program:"bloom|bloom-vs|downsample-fs",depthStencilState:{depthTest:!1,depthWrite:!1}},{phase:"bloom-downsample",program:"bloom|bloom-vs|downsample-fs",depthStencilState:{depthTest:!1,depthWrite:!1}},{phase:"bloom-downsample",program:"bloom|bloom-vs|downsample-fs",depthStencilState:{depthTest:!1,depthWrite:!1}},{phase:"bloom-downsample",program:"bloom|bloom-vs|downsample-fs",depthStencilState:{depthTest:!1,depthWrite:!1}},{phase:"bloom-downsample",program:"bloom|bloom-vs|downsample-fs",depthStencilState:{depthTest:!1,depthWrite:!1}},{phase:"bloom-upsample",program:"bloom|bloom-vs|upsample-fs",depthStencilState:{depthTest:!1,depthWrite:!1}},{phase:"bloom-upsample",program:"bloom|bloom-vs|upsample-fs",depthStencilState:{depthTest:!1,depthWrite:!1}},{phase:"bloom-upsample",program:"bloom|bloom-vs|upsample-fs",depthStencilState:{depthTest:!1,depthWrite:!1}},{phase:"bloom-upsample",program:"bloom|bloom-vs|upsample-fs",depthStencilState:{depthTest:!1,depthWrite:!1}},{phase:"bloom-upsample",program:"bloom|bloom-vs|upsample-fs",depthStencilState:{depthTest:!1,depthWrite:!1}},{phase:"bloom-upsample",program:"bloom|bloom-vs|upsample-fs",depthStencilState:{depthTest:!1,depthWrite:!1}},{phase:"bloom-combine",program:"bloom|bloom-vs|combine-fs",depthStencilState:{depthTest:!1,depthWrite:!1}}]}],shaders:[{name:"bloom|bloom-vs|prefilter-fs",hash:2185821616,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:147,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:40},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCMorph",defines:["CC_USE_MORPH"]},{name:"CCSkinningTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinningAnimation",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinning",defines:["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]}],samplerTextures:[{name:"cc_PositionDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{name:"cc_NormalDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{name:"cc_TangentDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{name:"cc_jointTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]}],buffers:[],images:[]}},defines:[{name:"CC_USE_MORPH",type:"boolean"},{name:"CC_MORPH_TARGET_COUNT",type:"number",range:[2,8]},{name:"CC_MORPH_PRECOMPUTED",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_POSITION",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_NORMAL",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_TANGENT",type:"boolean"},{name:"CC_USE_SKINNING",type:"boolean"},{name:"CC_USE_BAKED_ANIMATION",type:"boolean"},{name:"USE_INSTANCING",type:"boolean"}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_normal",defines:[],format:32,location:1},{name:"a_texCoord",defines:[],format:21,location:2},{name:"a_tangent",defines:[],format:44,location:3},{name:"a_vertexId",defines:["CC_USE_MORPH"],format:11,location:6},{name:"a_joints",defines:["CC_USE_SKINNING"],location:4},{name:"a_weights",defines:["CC_USE_SKINNING"],format:44,location:5},{name:"a_jointAnimInfo",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION","USE_INSTANCING"],format:44,isInstanced:!0,location:7}],blocks:[{name:"BloomUBO",defines:[],binding:0,stageFlags:16,members:[{name:"texSize",type:16,count:1}]}],samplerTextures:[{name:"outputResultMap",type:28,count:1,defines:[],stageFlags:16,binding:1}],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]},{name:"bloom|bloom-vs|downsample-fs",hash:1780231359,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:147,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:40},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCMorph",defines:["CC_USE_MORPH"]},{name:"CCSkinningTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinningAnimation",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinning",defines:["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]}],samplerTextures:[{name:"cc_PositionDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{name:"cc_NormalDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{name:"cc_TangentDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{name:"cc_jointTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]}],buffers:[],images:[]}},defines:[{name:"CC_USE_MORPH",type:"boolean"},{name:"CC_MORPH_TARGET_COUNT",type:"number",range:[2,8]},{name:"CC_MORPH_PRECOMPUTED",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_POSITION",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_NORMAL",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_TANGENT",type:"boolean"},{name:"CC_USE_SKINNING",type:"boolean"},{name:"CC_USE_BAKED_ANIMATION",type:"boolean"},{name:"USE_INSTANCING",type:"boolean"}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_normal",defines:[],format:32,location:1},{name:"a_texCoord",defines:[],format:21,location:2},{name:"a_tangent",defines:[],format:44,location:3},{name:"a_vertexId",defines:["CC_USE_MORPH"],format:11,location:6},{name:"a_joints",defines:["CC_USE_SKINNING"],location:4},{name:"a_weights",defines:["CC_USE_SKINNING"],format:44,location:5},{name:"a_jointAnimInfo",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION","USE_INSTANCING"],format:44,isInstanced:!0,location:7}],blocks:[{name:"BloomUBO",defines:[],binding:0,stageFlags:16,members:[{name:"texSize",type:16,count:1}]}],samplerTextures:[{name:"bloomTexture",type:28,count:1,defines:[],stageFlags:16,binding:1}],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]},{name:"bloom|bloom-vs|upsample-fs",hash:3580425335,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:147,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:40},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCMorph",defines:["CC_USE_MORPH"]},{name:"CCSkinningTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinningAnimation",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinning",defines:["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]}],samplerTextures:[{name:"cc_PositionDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{name:"cc_NormalDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{name:"cc_TangentDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{name:"cc_jointTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]}],buffers:[],images:[]}},defines:[{name:"CC_USE_MORPH",type:"boolean"},{name:"CC_MORPH_TARGET_COUNT",type:"number",range:[2,8]},{name:"CC_MORPH_PRECOMPUTED",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_POSITION",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_NORMAL",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_TANGENT",type:"boolean"},{name:"CC_USE_SKINNING",type:"boolean"},{name:"CC_USE_BAKED_ANIMATION",type:"boolean"},{name:"USE_INSTANCING",type:"boolean"}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_normal",defines:[],format:32,location:1},{name:"a_texCoord",defines:[],format:21,location:2},{name:"a_tangent",defines:[],format:44,location:3},{name:"a_vertexId",defines:["CC_USE_MORPH"],format:11,location:6},{name:"a_joints",defines:["CC_USE_SKINNING"],location:4},{name:"a_weights",defines:["CC_USE_SKINNING"],format:44,location:5},{name:"a_jointAnimInfo",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION","USE_INSTANCING"],format:44,isInstanced:!0,location:7}],blocks:[{name:"BloomUBO",defines:[],binding:0,stageFlags:16,members:[{name:"texSize",type:16,count:1}]}],samplerTextures:[{name:"bloomTexture",type:28,count:1,defines:[],stageFlags:16,binding:1}],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]},{name:"bloom|bloom-vs|combine-fs",hash:3457196798,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:147,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:40},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCMorph",defines:["CC_USE_MORPH"]},{name:"CCSkinningTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinningAnimation",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinning",defines:["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]}],samplerTextures:[{name:"cc_PositionDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{name:"cc_NormalDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{name:"cc_TangentDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{name:"cc_jointTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]}],buffers:[],images:[]}},defines:[{name:"CC_USE_MORPH",type:"boolean"},{name:"CC_MORPH_TARGET_COUNT",type:"number",range:[2,8]},{name:"CC_MORPH_PRECOMPUTED",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_POSITION",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_NORMAL",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_TANGENT",type:"boolean"},{name:"CC_USE_SKINNING",type:"boolean"},{name:"CC_USE_BAKED_ANIMATION",type:"boolean"},{name:"USE_INSTANCING",type:"boolean"}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_normal",defines:[],format:32,location:1},{name:"a_texCoord",defines:[],format:21,location:2},{name:"a_tangent",defines:[],format:44,location:3},{name:"a_vertexId",defines:["CC_USE_MORPH"],format:11,location:6},{name:"a_joints",defines:["CC_USE_SKINNING"],location:4},{name:"a_weights",defines:["CC_USE_SKINNING"],format:44,location:5},{name:"a_jointAnimInfo",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION","USE_INSTANCING"],format:44,isInstanced:!0,location:7}],blocks:[{name:"BloomUBO",defines:[],binding:0,stageFlags:16,members:[{name:"texSize",type:16,count:1}]}],samplerTextures:[{name:"outputResultMap",type:28,count:1,defines:[],stageFlags:16,binding:1},{name:"bloomTexture",type:28,count:1,defines:[],stageFlags:16,binding:2}],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"deferred-lighting",techniques:[{passes:[{phase:"deferred-lighting",program:"deferred-lighting|lighting-vs|lighting-fs",depthStencilState:{depthFunc:4,depthTest:!0,depthWrite:!1}}]}],shaders:[{name:"deferred-lighting|lighting-vs|lighting-fs",hash:3788484086,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:39,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:59},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]},{name:"CCShadow",defines:[]}],samplerTextures:[{name:"cc_shadowMap",defines:["CC_RECEIVE_SHADOW"]},{name:"cc_spotLightingMap",defines:["CC_RECEIVE_SHADOW"]},{name:"cc_environment",defines:["CC_USE_IBL"]},{name:"cc_diffuseMap",defines:["CC_USE_IBL","CC_USE_DIFFUSEMAP"]}],buffers:[],images:[]},locals:{blocks:[{name:"CCForwardLight",defines:["CC_ENABLE_CLUSTERED_LIGHT_CULLING"]}],samplerTextures:[],buffers:[],images:[]}},defines:[{name:"CC_RECEIVE_SHADOW",type:"boolean"},{name:"CC_USE_IBL",type:"number",range:[0,2]},{name:"CC_USE_DIFFUSEMAP",type:"number",range:[0,2]},{name:"USE_REFLECTION_DENOISE",type:"boolean"},{name:"USE_LIGHTMAP",type:"boolean"},{name:"USE_BATCHING",type:"boolean"},{name:"CC_FORWARD_ADD",type:"boolean"},{name:"CC_PIPELINE_TYPE",type:"number",range:[0,1]},{name:"CC_FORCE_FORWARD_SHADING",type:"boolean"},{name:"CC_USE_HDR",type:"boolean"},{name:"CC_USE_FOG",type:"number",range:[0,4]}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_normal",defines:[],format:32,location:1},{name:"a_texCoord",defines:[],format:21,location:2},{name:"a_tangent",defines:[],format:44,location:3}],blocks:[],samplerTextures:[{name:"depth_stencil",type:28,count:1,defines:[],stageFlags:16,binding:3}],buffers:[{name:"b_ccLightsBuffer",memoryAccess:1,defines:["CC_ENABLE_CLUSTERED_LIGHT_CULLING"],stageFlags:16,binding:4},{name:"b_clusterLightIndicesBuffer",memoryAccess:1,defines:["CC_ENABLE_CLUSTERED_LIGHT_CULLING"],stageFlags:16,binding:5},{name:"b_clusterLightGridBuffer",memoryAccess:1,defines:["CC_ENABLE_CLUSTERED_LIGHT_CULLING"],stageFlags:16,binding:6}],images:[],textures:[],samplers:[],subpassInputs:[{name:"gbuffer_albedoMap",count:1,defines:["CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT"],stageFlags:16,binding:0},{name:"gbuffer_normalMap",count:1,defines:["CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT"],stageFlags:16,binding:1},{name:"gbuffer_emissiveMap",count:1,defines:["CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT"],stageFlags:16,binding:2}]}]},{name:"planar-shadow",techniques:[{passes:[{phase:"planarShadow",blendState:{targets:[{blend:!0,blendSrc:2,blendDst:4,blendDstAlpha:4}]},program:"planar-shadow|planar-shadow-vs:vert|planar-shadow-fs:frag",depthStencilState:{depthTest:!0,depthWrite:!1,stencilTestFront:!0,stencilFuncFront:5,stencilPassOpFront:2,stencilRefBack:128,stencilRefFront:128,stencilReadMaskBack:128,stencilReadMaskFront:128,stencilWriteMaskBack:128,stencilWriteMaskFront:128}}]}],shaders:[{name:"planar-shadow|planar-shadow-vs:vert|planar-shadow-fs:frag",hash:2672216600,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:216,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:59},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]},{name:"CCShadow",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCMorph",defines:["CC_USE_MORPH"]},{name:"CCSkinningTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinningAnimation",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinning",defines:["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]},{name:"CCLocalBatched",defines:["!USE_INSTANCING","USE_BATCHING"]},{name:"CCLocal",defines:["!USE_INSTANCING","!USE_BATCHING"]}],samplerTextures:[{name:"cc_PositionDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{name:"cc_NormalDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{name:"cc_TangentDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{name:"cc_jointTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]}],buffers:[],images:[]}},defines:[{name:"CC_USE_MORPH",type:"boolean"},{name:"CC_MORPH_TARGET_COUNT",type:"number",range:[2,8]},{name:"CC_MORPH_PRECOMPUTED",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_POSITION",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_NORMAL",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_TANGENT",type:"boolean"},{name:"CC_USE_SKINNING",type:"boolean"},{name:"CC_USE_BAKED_ANIMATION",type:"boolean"},{name:"USE_INSTANCING",type:"boolean"},{name:"USE_BATCHING",type:"boolean"},{name:"USE_LIGHTMAP",type:"boolean"}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_normal",defines:[],format:32,location:1},{name:"a_texCoord",defines:[],format:21,location:2},{name:"a_tangent",defines:[],format:44,location:3},{name:"a_vertexId",defines:["CC_USE_MORPH"],format:11,location:6},{name:"a_joints",defines:["CC_USE_SKINNING"],location:4},{name:"a_weights",defines:["CC_USE_SKINNING"],format:44,location:5},{name:"a_jointAnimInfo",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION","USE_INSTANCING"],format:44,isInstanced:!0,location:7},{name:"a_matWorld0",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:8},{name:"a_matWorld1",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:9},{name:"a_matWorld2",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:10},{name:"a_lightingMapUVParam",defines:["USE_INSTANCING","USE_LIGHTMAP"],format:44,isInstanced:!0,location:11},{name:"a_dyn_batch_id",defines:["!USE_INSTANCING","USE_BATCHING"],format:11,location:12}],blocks:[],samplerTextures:[],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"post-process",techniques:[{passes:[{phase:"post-process",blendState:{targets:[{blend:!0,blendSrc:2,blendDst:4,blendSrcAlpha:2,blendDstAlpha:4}]},program:"post-process|post-process-vs|post-process-fs",depthStencilState:{depthTest:!1,depthWrite:!1}}]}],shaders:[{name:"post-process|post-process-vs|post-process-fs",hash:3237848814,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:147,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:39},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCMorph",defines:["CC_USE_MORPH"]},{name:"CCSkinningTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinningAnimation",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinning",defines:["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]}],samplerTextures:[{name:"cc_PositionDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{name:"cc_NormalDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{name:"cc_TangentDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{name:"cc_jointTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]}],buffers:[],images:[]}},defines:[{name:"CC_USE_MORPH",type:"boolean"},{name:"CC_MORPH_TARGET_COUNT",type:"number",range:[2,8]},{name:"CC_MORPH_PRECOMPUTED",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_POSITION",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_NORMAL",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_TANGENT",type:"boolean"},{name:"CC_USE_SKINNING",type:"boolean"},{name:"CC_USE_BAKED_ANIMATION",type:"boolean"},{name:"USE_INSTANCING",type:"boolean"},{name:"ANTIALIAS_TYPE",type:"number",range:[0,3]}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_normal",defines:[],format:32,location:1},{name:"a_texCoord",defines:[],format:21,location:2},{name:"a_tangent",defines:[],format:44,location:3},{name:"a_vertexId",defines:["CC_USE_MORPH"],format:11,location:6},{name:"a_joints",defines:["CC_USE_SKINNING"],location:4},{name:"a_weights",defines:["CC_USE_SKINNING"],format:44,location:5},{name:"a_jointAnimInfo",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION","USE_INSTANCING"],format:44,isInstanced:!0,location:7}],blocks:[],samplerTextures:[{name:"outputResultMap",type:28,count:1,defines:[],stageFlags:16,binding:0}],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"skybox",techniques:[{passes:[{rasterizerState:{cullMode:0},program:"skybox|sky-vs:vert|sky-fs:frag",priority:245,depthStencilState:{depthTest:!0,depthWrite:!1}}]}],shaders:[{name:"skybox|sky-vs:vert|sky-fs:frag",hash:3653711100,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:39,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:39},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[{name:"cc_environment",defines:[]}],buffers:[],images:[]},locals:{blocks:[],samplerTextures:[],buffers:[],images:[]}},defines:[{name:"CC_USE_IBL",type:"number",range:[0,2]},{name:"CC_USE_HDR",type:"boolean"},{name:"USE_RGBE_CUBEMAP",type:"boolean"}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_normal",defines:[],format:32,location:1},{name:"a_texCoord",defines:[],format:21,location:2},{name:"a_tangent",defines:[],format:44,location:3}],blocks:[],samplerTextures:[],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"profiler",techniques:[{passes:[{blendState:{targets:[{blend:!0,blendSrc:2,blendDst:4,blendDstAlpha:4}]},rasterizerState:{cullMode:0},program:"profiler|profiler-vs:vert|profiler-fs:frag",priority:255,depthStencilState:{depthTest:!1,depthWrite:!1}}]}],shaders:[{name:"profiler|profiler-vs:vert|profiler-fs:frag",hash:179162168,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:60,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:39},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[],samplerTextures:[],buffers:[],images:[]}},defines:[],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_color",defines:[],format:44,location:1}],blocks:[{name:"Constants",defines:[],binding:0,stageFlags:1,members:[{name:"offset",type:16,count:1}]},{name:"PerFrameInfo",defines:[],binding:1,stageFlags:1,members:[{name:"digits",type:16,count:20}]}],samplerTextures:[{name:"mainTexture",type:28,count:1,defines:[],stageFlags:16,binding:2}],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"splash-screen",techniques:[{name:"default",passes:[{blendState:{targets:[{blend:!0,blendSrc:2,blendDst:4,blendDstAlpha:4}]},rasterizerState:{cullMode:0},program:"splash-screen|splash-screen-vs:vert|splash-screen-fs:frag",depthStencilState:{depthTest:!1,depthWrite:!1},properties:{mainTexture:{value:"grey",type:28},resolution:{value:[640,960],type:14,handleInfo:["u_buffer0",0,14]},percent:{value:[.5],type:13,handleInfo:["u_percent",0,13]},scale:{value:[200,500],type:14,handleInfo:["u_buffer1",0,14]},translate:{value:[320,480],type:14,handleInfo:["u_buffer1",2,14]},u_buffer0:{type:16,value:[640,960,0,0]},u_percent:{type:13,value:[.5]},u_buffer1:{type:16,value:[200,500,320,480]}}}]}],shaders:[{name:"splash-screen|splash-screen-vs:vert|splash-screen-fs:frag",hash:3189094080,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:6,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:1},globals:{blocks:[],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[],samplerTextures:[],buffers:[],images:[]}},defines:[],attributes:[{name:"a_position",defines:[],format:21,location:0},{name:"a_texCoord",defines:[],format:21,location:1}],blocks:[{name:"Constant",defines:[],binding:0,stageFlags:1,members:[{name:"u_buffer0",type:16,count:1},{name:"u_buffer1",type:16,count:1},{name:"u_projection",type:25,count:1}]},{name:"Factor",defines:[],binding:1,stageFlags:16,members:[{name:"u_percent",type:13,count:1}]}],samplerTextures:[{name:"mainTexture",type:28,count:1,defines:[],stageFlags:16,binding:2}],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]}]),Rm=4227858432,Dm=66060288,Om=1044480,Mm=(e,t,n,i=0)=>t<<26&Rm|e<<20&Dm|n<<12&Om|4095&i,Nm=e=>(e&Rm)>>>26,Lm=e=>(e&Dm)>>>20,zm=e=>(e&Om)>>>12,Fm=e=>4095&e,Bm=(e,t)=>67108863&e|t<<26&Rm,Um={[Bs.UNKNOWN]:()=>console.warn("illegal uniform handle"),[Bs.INT]:(e,t,n=0)=>e[n],[Bs.INT2]:(e,t,n=0)=>bi.fromArray(t,e,n),[Bs.INT3]:(e,t,n=0)=>ri.fromArray(t,e,n),[Bs.INT4]:(e,t,n=0)=>wi.fromArray(t,e,n),[Bs.FLOAT]:(e,t,n=0)=>e[n],[Bs.FLOAT2]:(e,t,n=0)=>bi.fromArray(t,e,n),[Bs.FLOAT3]:(e,t,n=0)=>ri.fromArray(t,e,n),[Bs.FLOAT4]:(e,t,n=0)=>wi.fromArray(t,e,n),[Bs.MAT3]:(e,t,n=0)=>li.fromArray(t,e,n),[Bs.MAT4]:(e,t,n=0)=>xi.fromArray(t,e,n)},Gm={[Bs.UNKNOWN]:()=>console.warn("illegal uniform handle"),[Bs.INT]:(e,t,n=0)=>e[n]=t,[Bs.INT2]:(e,t,n=0)=>bi.toArray(e,t,n),[Bs.INT3]:(e,t,n=0)=>ri.toArray(e,t,n),[Bs.INT4]:(e,t,n=0)=>wi.toArray(e,t,n),[Bs.FLOAT]:(e,t,n=0)=>e[n]=t,[Bs.FLOAT2]:(e,t,n=0)=>bi.toArray(e,t,n),[Bs.FLOAT3]:(e,t,n=0)=>ri.toArray(e,t,n),[Bs.FLOAT4]:(e,t,n=0)=>wi.toArray(e,t,n),[Bs.MAT3]:(e,t,n=0)=>li.toArray(e,t,n),[Bs.MAT4]:(e,t,n=0)=>xi.toArray(e,t,n)},Hm=[Object.freeze([0]),Object.freeze([0,0]),Object.freeze([0,0,0,0]),Object.freeze([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])];function km(e){switch(e){case Bs.BOOL:case Bs.INT:case Bs.UINT:case Bs.FLOAT:return Hm[0];case Bs.BOOL2:case Bs.INT2:case Bs.UINT2:case Bs.FLOAT2:return Hm[1];case Bs.BOOL4:case Bs.INT4:case Bs.UINT4:case Bs.FLOAT4:return Hm[2];case Bs.MAT4:return Hm[3];case Bs.SAMPLER2D:return"default-texture";case Bs.SAMPLER_CUBE:return"default-cube-texture"}return Hm[0]}function Vm(e,t){const n=Object.entries(t);let i=!1;for(let t=0;t<n.length;t++)e[n[t][0]]!==n[t][1]&&(e[n[t][0]]=n[t][1],i=!0);return i}const jm=new ho;function Wm(e){return Math.ceil(Math.log2(Math.max(e,2)))}function qm(e,t){switch(e.type){case"boolean":return"number"==typeof t?t.toString():t?"1":"0";case"string":return void 0!==t?t:e.options[0];case"number":return void 0!==t?t.toString():e.range[0].toString();default:return console.warn(`unknown define type '${e.type}'`),"-1"}}function Xm(e,t,n,i,s){const r=e.builtins[i],o=[];for(let e=0;e<r.blocks.length;e++){const t=r.blocks[e],i=n.layouts[t.name],a=i&&n.bindings.find((e=>e.binding===i.binding));i&&a&&a.descriptorType&bo?(o.push(i),s&&!s.includes(a)&&s.push(a)):console.warn(`builtin UBO '${t.name}' not available!`)}Array.prototype.unshift.apply(t.shaderInfo.blocks,o);const a=[];for(let e=0;e<r.samplerTextures.length;e++){const t=r.samplerTextures[e],i=n.layouts[t.name],o=i&&n.bindings.find((e=>e.binding===i.binding));i&&o&&o.descriptorType&Eo?(a.push(i),s&&!s.includes(o)&&s.push(o)):console.warn(`builtin samplerTexture '${t.name}' not available!`)}Array.prototype.unshift.apply(t.shaderInfo.samplerTextures,a),s&&s.sort(((e,t)=>e.binding-t.binding))}function Ym(e){return e.members.reduce(((e,t)=>e+Oo(t.type)*t.count),0)}function Km(e,t){for(let n=0;n<e.length;n++){const i=e[n];if("!"===i[0]){if(t[i.slice(1)])return!1}else if(!t[i])return!1}return!0}function $m(e){switch(e.gfxAPI){case Ms.GLES2:case Ms.WEBGL:return"glsl1";case Ms.GLES3:case Ms.WEBGL2:return"glsl3";default:return"glsl4"}}const Zm=new class{constructor(){this._templates={},this._cache={},this._templateInfos={}}register(e){for(let t=0;t<e.shaders.length;t++)this.define(e.shaders[t]).effectName=e.name;for(let t=0;t<e.techniques.length;t++){const n=e.techniques[t];for(let e=0;e<n.passes.length;e++){const t=n.passes[e];void 0!==t.propertyIndex&&void 0===t.properties&&(t.properties=n.passes[t.propertyIndex].properties)}}}define(e){const t=this._templates[e.name];if(t&&t.hash===e.hash)return t;const n={...e};let i=0;for(let e=0;e<n.defines.length;e++){const t=n.defines[e];let s=1;if("number"===t.type){const e=t.range;s=Wm(e[1]-e[0]+1),t._map=t=>t-e[0]}else"string"===t.type?(s=Wm(t.options.length),t._map=e=>Math.max(0,t.options.findIndex((t=>t===e)))):"boolean"===t.type&&(t._map=e=>e?1:0);t._offset=i,i+=s}i>31&&(n.uber=!0),n.constantMacros="";for(const e in n.builtins.statistics)n.constantMacros+=`#define ${e} ${n.builtins.statistics[e]}\n`;if(this._templates[e.name]=n,!this._templateInfos[n.hash]){const e={};e.samplerStartBinding=n.blocks.length,e.shaderInfo=new Jr,e.blockSizes=[],e.bindings=[];for(let t=0;t<n.blocks.length;t++){const i=n.blocks[t];e.blockSizes.push(Ym(i)),e.bindings.push(new lo(i.binding,dr.UNIFORM_BUFFER,1,i.stageFlags)),e.shaderInfo.blocks.push(new jr(Cd.MATERIAL,i.binding,i.name,i.members.map((e=>new Vr(e.name,e.type,e.count))),1))}for(let t=0;t<n.samplerTextures.length;t++){const i=n.samplerTextures[t];e.bindings.push(new lo(i.binding,dr.SAMPLER_TEXTURE,i.count,i.stageFlags)),e.shaderInfo.samplerTextures.push(new Wr(Cd.MATERIAL,i.binding,i.name,i.type,i.count))}for(let t=0;t<n.samplers.length;t++){const i=n.samplers[t];e.bindings.push(new lo(i.binding,dr.SAMPLER,i.count,i.stageFlags)),e.shaderInfo.samplers.push(new qr(Cd.MATERIAL,i.binding,i.name,i.count))}for(let t=0;t<n.textures.length;t++){const i=n.textures[t];e.bindings.push(new lo(i.binding,dr.TEXTURE,i.count,i.stageFlags)),e.shaderInfo.textures.push(new Xr(Cd.MATERIAL,i.binding,i.name,i.type,i.count))}for(let t=0;t<n.buffers.length;t++){const i=n.buffers[t];e.bindings.push(new lo(i.binding,dr.STORAGE_BUFFER,1,i.stageFlags)),e.shaderInfo.buffers.push(new Kr(Cd.MATERIAL,i.binding,i.name,1,i.memoryAccess))}for(let t=0;t<n.images.length;t++){const i=n.images[t];e.bindings.push(new lo(i.binding,dr.STORAGE_IMAGE,i.count,i.stageFlags)),e.shaderInfo.images.push(new Yr(Cd.MATERIAL,i.binding,i.name,i.type,i.count,i.memoryAccess))}for(let t=0;t<n.subpassInputs.length;t++){const i=n.subpassInputs[t];e.bindings.push(new lo(i.binding,dr.INPUT_ATTACHMENT,i.count,i.stageFlags)),e.shaderInfo.subpassInputs.push(new $r(Cd.MATERIAL,i.binding,i.name,i.count))}e.gfxAttributes=[];for(let t=0;t<n.attributes.length;t++){const i=n.attributes[t];e.gfxAttributes.push(new Qr(i.name,i.format,i.isNormalized,0,i.isInstanced,i.location))}Xm(n,e,fd,"locals"),e.shaderInfo.stages.push(new Zr(tr.VERTEX,"")),e.shaderInfo.stages.push(new Zr(tr.FRAGMENT,"")),e.handleMap=function(e){const t={};for(let n=0;n<e.blocks.length;n++){const i=e.blocks[n],s=i.members;let r=0;for(let e=0;e<s.length;e++){const n=s[e];t[n.name]=Mm(i.binding,n.type,n.count,r),r+=(Oo(n.type)>>2)*n.count}}for(let n=0;n<e.samplerTextures.length;n++){const i=e.samplerTextures[n];t[i.name]=Mm(i.binding,i.type,i.count)}return t}(n),e.setLayouts=[],this._templateInfos[n.hash]=e}return n}getTemplate(e){return this._templates[e]}getTemplateInfo(e){const t=this._templates[e].hash;return this._templateInfos[t]}getDescriptorSetLayout(e,t,n=!1){const i=this._templates[t],s=this._templateInfos[i.hash];return s.setLayouts.length||(jm.bindings=s.bindings,s.setLayouts[Cd.MATERIAL]=e.createDescriptorSetLayout(jm),jm.bindings=fd.bindings,s.setLayouts[Cd.LOCAL]=e.createDescriptorSetLayout(jm)),s.setLayouts[n?Cd.LOCAL:Cd.MATERIAL]}hasProgram(e){return void 0!==this._templates[e]}getKey(e,t){const n=this._templates[e],i=n.defines;if(n.uber){let e="";for(let n=0;n<i.length;n++){const s=i[n],r=t[s.name];if(!r||!s._map)continue;const o=s._map(r);e+=`${s._offset}${o}|`}return`${e}${n.hash}`}let s=0;for(let e=0;e<i.length;e++){const n=i[e],r=t[n.name];r&&n._map&&(s|=n._map(r)<<n._offset)}return`${s.toString(16)}|${n.hash}`}destroyShaderByDefines(e){const t=Object.keys(e);if(!t.length)return;const n=t.map((t=>{let n=e[t];return"boolean"==typeof n&&(n=n?"1":"0"),new RegExp(`${t}${n}`)})),i=Object.keys(this._cache).filter((e=>n.every((t=>t.test(this._cache[e].name)))));for(let e=0;e<i.length;e++){const t=i[e],n=this._cache[t];m(`destroyed shader ${n.name}`),n.destroy(),delete this._cache[t]}}getGFXShader(e,t,n,i,s){Object.assign(n,i.macros),s||(s=this.getKey(t,n));const r=this._cache[s];if(r)return r;const o=this._templates[t],a=this._templateInfos[o.hash];a.pipelineLayout||(this.getDescriptorSetLayout(e,t),Xm(o,a,dd,"globals"),a.setLayouts[Cd.GLOBAL]=i.descriptorSetLayout,a.pipelineLayout=e.createPipelineLayout(new uo(a.setLayouts)));const c=function(e,t){const n=[];for(let i=0;i<t.length;i++){const s=t[i],r=s.name,o=e[r],a=qm(s,o),c=!o||"0"===o;n.push({name:r,value:a,isDefault:c})}return n}(n,o.defines),l=i.constantMacros+o.constantMacros+c.reduce(((e,t)=>`${e}#define ${t.name} ${t.value}\n`),"");let h=o.glsl3;const _=$m(e);return _?h=o[_]:console.error("Invalid GFX API!"),a.shaderInfo.stages[0].source=l+h.vert,a.shaderInfo.stages[1].source=l+h.frag,a.shaderInfo.attributes=function(e,t,n){const i=[],s=e.attributes,r=t.gfxAttributes;for(let e=0;e<s.length;e++)Km(s[e].defines,n)&&i.push(r[e]);return i}(o,a,n),a.shaderInfo.name=function(e,t){return e+t.reduce(((e,t)=>t.isDefault?e:`${e}|${t.name}${t.value}`),"")}(t,c),this._cache[s]=e.createShader(a.shaderInfo)}};i.programLib=Zm;const Qm={glsl1:[[{vert:"\nprecision mediump float;\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matViewInv;\nuniform highp mat4 cc_matViewProj;\nuniform highp mat4 cc_matWorld;\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\nmat3 m = mat3(xAxis,yAxis,zAxis);\nfloat trace = m[0][0] + m[1][1] + m[2][2];\nvec4 quat;\nif (trace > 0.) {\nfloat s = 0.5 / sqrt(trace + 1.0);\nquat.w = 0.25 / s;\nquat.x = (m[2][1] - m[1][2]) * s;\nquat.y = (m[0][2] - m[2][0]) * s;\nquat.z = (m[1][0] - m[0][1]) * s;\n} else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\nfloat s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\nquat.w = (m[2][1] - m[1][2]) / s;\nquat.x = 0.25 * s;\nquat.y = (m[0][1] + m[1][0]) / s;\nquat.z = (m[0][2] + m[2][0]) / s;\n} else if (m[1][1] > m[2][2]) {\nfloat s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\nquat.w = (m[0][2] - m[2][0]) / s;\nquat.x = (m[0][1] + m[1][0]) / s;\nquat.y = 0.25 * s;\nquat.z = (m[1][2] + m[2][1]) / s;\n} else {\nfloat s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\nquat.w = (m[1][0] - m[0][1]) / s;\nquat.x = (m[0][2] + m[2][0]) / s;\nquat.y = (m[1][2] + m[2][1]) / s;\nquat.z = 0.25 * s;\n}\nfloat len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\nif (len > 0.) {\nlen = 1. / sqrt(len);\nquat.x = quat.x * len;\nquat.y = quat.y * len;\nquat.z = quat.z * len;\nquat.w = quat.w * len;\n}\nreturn quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\nfloat x = angle.x / 2.;\nfloat y = angle.y / 2.;\nfloat z = angle.z / 2.;\nfloat sx = sin(x);\nfloat cx = cos(x);\nfloat sy = sin(y);\nfloat cy = cos(y);\nfloat sz = sin(z);\nfloat cz = cos(z);\nvec4 quat = vec4(0);\nquat.x = sx * cy * cz + cx * sy * sz;\nquat.y = cx * sy * cz + sx * cy * sz;\nquat.z = cx * cy * sz - sx * sy * cz;\nquat.w = cx * cy * cz - sx * sy * sz;\nreturn quat;\n}\nvec4 quatMultiply (vec4 a, vec4 b){\nvec4 quat;\nquat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\nquat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\nquat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\nquat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\nreturn quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\nfloat ix = q.w * v.x + q.y * v.z - q.z * v.y;\nfloat iy = q.w * v.y + q.z * v.x - q.x * v.z;\nfloat iz = q.w * v.z + q.x * v.y - q.y * v.x;\nfloat iw = -q.x * v.x - q.y * v.y - q.z * v.z;\nv.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\nv.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\nv.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\nvec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\nvec4 rotQuat = quatMultiply(viewQuat, q);\nrotateVecFromQuat(pos, rotQuat);\nreturn pos;\n}\nvarying mediump vec2 uv;\nvarying mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n, mat4 viewInv\n) {\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\nvec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\nvec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n}\nattribute vec3 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nuniform vec4 cc_size_rotation;\nvec4 vs_main() {\nvec4 pos = vec4(a_position, 1);\npos = cc_matWorld * pos;\nvec2 vertOffset = a_texCoord.xy - 0.5;\ncomputeVertPos(pos, vertOffset, quaternionFromEuler(vec3(0., 0., cc_size_rotation.z)), vec3(cc_size_rotation.xy, 0.), cc_matViewInv);\npos = cc_matViewProj * pos;\nuv = a_texCoord.xy;\ncolor = a_color;\nreturn pos;\n}\nvoid main() { gl_Position = vs_main(); }",frag:"\nprecision mediump float;\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nvarying vec2 uv;\nvarying vec4 color;\nuniform sampler2D mainTexture;\nuniform vec4 tintColor;\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture2D(mainTexture, uv);\nreturn CCFragOutput(col);\n}\nvoid main() { gl_FragColor = add(); }"}],[{vert:"\nprecision highp float;\nattribute vec3 a_position;\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec4 frag () {\nvec4 o = vec4(1.0);\nreturn o;\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nuniform highp mat4 cc_matViewProj;\nuniform highp mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\nattribute float a_dist;\nvarying float v_dist;\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\npos = cc_matViewProj * cc_matWorld * pos;\nv_color = a_color;\nv_dist = a_dist;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\n#ifdef GL_OES_standard_derivatives\n#extension GL_OES_standard_derivatives: enable\n#endif\nprecision highp float;\nvarying vec4 v_color;\nvarying float v_dist;\nvec4 frag () {\nvec4 o = v_color;\n#ifdef GL_OES_standard_derivatives\nfloat aa = fwidth(v_dist);\n#else\nfloat aa = 0.05;\n#endif\nfloat alpha = 1. - smoothstep(-aa, 0., abs(v_dist) - 1.0);\no.rgb *= o.a;\no *= alpha;\nreturn o;\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nuniform highp mat4 cc_matViewProj;\nuniform highp vec4 cc_worldBoundCenter;\nuniform highp vec4 cc_worldBoundHalfExtents;\nattribute vec3 a_position;\nvec4 vert () {\nvec4 position;\nposition = vec4(a_position, 1.0);\nposition *= cc_worldBoundHalfExtents;\nposition += cc_worldBoundCenter;\nposition = cc_matViewProj * position;\nreturn position;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nvec4 frag () {\nreturn vec4(1, 0, 0, 1);\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\nmat3 m = mat3(xAxis,yAxis,zAxis);\nfloat trace = m[0][0] + m[1][1] + m[2][2];\nvec4 quat;\nif (trace > 0.) {\nfloat s = 0.5 / sqrt(trace + 1.0);\nquat.w = 0.25 / s;\nquat.x = (m[2][1] - m[1][2]) * s;\nquat.y = (m[0][2] - m[2][0]) * s;\nquat.z = (m[1][0] - m[0][1]) * s;\n} else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\nfloat s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\nquat.w = (m[2][1] - m[1][2]) / s;\nquat.x = 0.25 * s;\nquat.y = (m[0][1] + m[1][0]) / s;\nquat.z = (m[0][2] + m[2][0]) / s;\n} else if (m[1][1] > m[2][2]) {\nfloat s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\nquat.w = (m[0][2] - m[2][0]) / s;\nquat.x = (m[0][1] + m[1][0]) / s;\nquat.y = 0.25 * s;\nquat.z = (m[1][2] + m[2][1]) / s;\n} else {\nfloat s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\nquat.w = (m[1][0] - m[0][1]) / s;\nquat.x = (m[0][2] + m[2][0]) / s;\nquat.y = (m[1][2] + m[2][1]) / s;\nquat.z = 0.25 * s;\n}\nfloat len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\nif (len > 0.) {\nlen = 1. / sqrt(len);\nquat.x = quat.x * len;\nquat.y = quat.y * len;\nquat.z = quat.z * len;\nquat.w = quat.w * len;\n}\nreturn quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\nfloat x = angle.x / 2.;\nfloat y = angle.y / 2.;\nfloat z = angle.z / 2.;\nfloat sx = sin(x);\nfloat cx = cos(x);\nfloat sy = sin(y);\nfloat cy = cos(y);\nfloat sz = sin(z);\nfloat cz = cos(z);\nvec4 quat = vec4(0);\nquat.x = sx * cy * cz + cx * sy * sz;\nquat.y = cx * sy * cz + sx * cy * sz;\nquat.z = cx * cy * sz - sx * sy * cz;\nquat.w = cx * cy * cz - sx * sy * sz;\nreturn quat;\n}\nmat4 matrixFromRT (vec4 q, vec3 p){\nfloat x2 = q.x + q.x;\nfloat y2 = q.y + q.y;\nfloat z2 = q.z + q.z;\nfloat xx = q.x * x2;\nfloat xy = q.x * y2;\nfloat xz = q.x * z2;\nfloat yy = q.y * y2;\nfloat yz = q.y * z2;\nfloat zz = q.z * z2;\nfloat wx = q.w * x2;\nfloat wy = q.w * y2;\nfloat wz = q.w * z2;\nreturn mat4(\n1. - (yy + zz), xy + wz, xz - wy, 0,\nxy - wz, 1. - (xx + zz), yz + wx, 0,\nxz + wy, yz - wx, 1. - (xx + yy), 0,\np.x, p.y, p.z, 1\n);\n}\nmat4 matFromRTS (vec4 q, vec3 t, vec3 s){\nfloat x = q.x, y = q.y, z = q.z, w = q.w;\nfloat x2 = x + x;\nfloat y2 = y + y;\nfloat z2 = z + z;\nfloat xx = x * x2;\nfloat xy = x * y2;\nfloat xz = x * z2;\nfloat yy = y * y2;\nfloat yz = y * z2;\nfloat zz = z * z2;\nfloat wx = w * x2;\nfloat wy = w * y2;\nfloat wz = w * z2;\nfloat sx = s.x;\nfloat sy = s.y;\nfloat sz = s.z;\nreturn mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n(xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n(xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\nt.x, t.y, t.z, 1);\n}\nvec4 quatMultiply (vec4 a, vec4 b){\nvec4 quat;\nquat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\nquat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\nquat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\nquat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\nreturn quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\nfloat ix = q.w * v.x + q.y * v.z - q.z * v.y;\nfloat iy = q.w * v.y + q.z * v.x - q.x * v.z;\nfloat iz = q.w * v.z + q.x * v.y - q.y * v.x;\nfloat iw = -q.x * v.x - q.y * v.y - q.z * v.z;\nv.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\nv.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\nv.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\nvec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\nvec4 rotQuat = quatMultiply(viewQuat, q);\nrotateVecFromQuat(pos, rotQuat);\nreturn pos;\n}\nmat3 quatToMat3(vec4 q) {\nvec3 m0 = vec3(\n1.0 - 2.0 * q.y * q.y - 2.0 * q.z * q.z,\n2.0 * q.x * q.y + 2.0 * q.w * q.z,\n2.0 * q.x * q.z - 2.0 * q.w * q.y);\nvec3 m1 = vec3(\n2.0 * q.x * q.y - 2.0 * q.w * q.z,\n1.0 - 2.0 * q.x * q.x - 2.0 * q.z * q.z,\n2.0 * q.y * q.z + 2.0 * q.w * q.x);\nvec3 m2 = vec3(\n2.0 * q.x * q.z + 2.0 * q.w * q.y,\n2.0 * q.y * q.z - 2.0 * q.w * q.x,\n1.0 - 2.0 * q.x * q.x - 2.0 * q.y * q.y);\nreturn mat3(m0, m1, m2);\n}\nvec4 mat3ToQuat(mat3 mat) {\nfloat tr = mat[0][0] + mat[1][1] + mat[2][2];\nfloat qw, qx, qy, qz;\nif (tr > 0.0) {\nfloat S = sqrt(tr + 1.0) * 2.0;\nfloat invS = 1.0 / S;\nqw = 0.25 * S;\nqx = (mat[1][2] - mat[2][1]) * invS;\nqy = (mat[2][0] - mat[0][2]) * invS;\nqz = (mat[0][1] - mat[1][0]) * invS;\n} else if ((mat[0][0] > mat[1][1])&&(mat[0][0] > mat[2][2])) {\nfloat S = sqrt(1.0 + mat[0][0] - mat[1][1] - mat[2][2]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[1][2] - mat[2][1]) * invS;\nqx = 0.25 * S;\nqy = (mat[1][0] + mat[0][1]) * invS;\nqz = (mat[2][0] + mat[0][2]) * invS;\n} else if (mat[1][1] > mat[2][2]) {\nfloat S = sqrt(1.0 + mat[1][1] - mat[0][0] - mat[2][2]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[2][0] - mat[0][2]) * invS;\nqx = (mat[1][0] + mat[0][1]) * invS;\nqy = 0.25 * S;\nqz = (mat[2][1] + mat[1][2]) * invS;\n} else {\nfloat S = sqrt(1.0 + mat[2][2] - mat[0][0] - mat[1][1]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[0][1] - mat[1][0]) * invS;\nqx = (mat[2][0] + mat[0][2]) * invS;\nqy = (mat[2][1] + mat[1][2]) * invS;\nqz = 0.25 * S;\n}\nreturn vec4(qx, qy, qz, qw);\n}\nvec4 eulerToQuat(vec3 euler) {\nvec3 er = euler * 0.5;\nfloat x = er.x, y = er.y, z = er.z;\nfloat sx = sin(x);\nfloat cx = cos(x);\nfloat sy = sin(y);\nfloat cy = cos(y);\nfloat sz = sin(z);\nfloat cz = cos(z);\nvec4 quat;\nquat.x = sx * cy * cz + cx * sy * sz;\nquat.y = cx * sy * cz + sx * cy * sz;\nquat.z = cx * cy * sz - sx * sy * cz;\nquat.w = cx * cy * cz - sx * sy * sz;\nreturn quat;\n}\nuniform vec4 mainTiling_Offset;\nuniform vec4 frameTile_velLenScale;\nuniform vec4 scale;\nuniform vec4 nodeRotation;\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matViewInv;\nuniform highp mat4 cc_matViewProj;\nuniform highp vec4 cc_cameraPos;\nuniform highp mat4 cc_matWorld;\nvarying mediump vec2 uv;\nvarying mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n, mat4 viewInv\n#endif\n#if CC_RENDER_MODE == 1\n, vec3 eye\n, vec4 velocity\n, float velocityScale\n, float lengthScale\n, float xIndex\n#endif\n) {\n#if CC_RENDER_MODE == 0\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\nvec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\nvec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_RENDER_MODE == 1\nvec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\nvec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\npos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_RENDER_MODE == 2\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = vec3(1, 0, 0);\nvec3 camY = vec3(0, 0, -1);\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_RENDER_MODE == 3\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nrotateVecFromQuat(viewSpaceVert, q);\nvec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\nvec3 camY = vec3(0, 1, 0);\nvec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\npos.xyz += offset;\n#else\npos.x += vertOffset.x;\npos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV (float frameIndex, vec2 vertIndex, vec2 frameTile){\nvec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\naniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if CC_RENDER_MODE != 4\nvertIndex.y = 1. - vertIndex.y;\n#endif\nreturn (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nuniform vec4 u_sampleInfo;\nuniform vec4 u_worldRot;\nuniform vec4 u_timeDelta;\nattribute vec4 a_position_starttime;\nattribute vec4 a_size_uv;\nattribute vec4 a_rotation_uv;\nattribute vec4 a_color;\nattribute vec4 a_dir_life;\nattribute float a_rndSeed;\n#if CC_RENDER_MODE == 4\nattribute vec3 a_texCoord;\nattribute vec3 a_texCoord3;\nattribute vec3 a_normal;\nattribute vec4 a_color1;\n#endif\nvec3 unpackCurveData (sampler2D tex, vec2 coord) {\nvec4 a = texture2D(tex, coord);\nvec4 b = texture2D(tex, coord + u_sampleInfo.y);\nfloat c = fract(coord.x * u_sampleInfo.x);\nreturn mix(a.xyz, b.xyz, c);\n}\nvec3 unpackCurveData (sampler2D tex, vec2 coord, out float w) {\nvec4 a = texture2D(tex, coord);\nvec4 b = texture2D(tex, coord + u_sampleInfo.y);\nfloat c = fract(coord.x * u_sampleInfo.x);\nw = mix(a.w, b.w, c);\nreturn mix(a.xyz, b.xyz, c);\n}\nfloat pseudoRandom(float x) {\n#if USE_VK_SHADER\nfloat o = x;\nx = mod(x - 1.0, 2.0) - 1.0;\nfloat freqVar = 10.16640753482;\nfloat y = sin(freqVar * floor(o * 0.5 - 0.5));\nfloat v = max(0.0, 1.0-abs(x));\nv *= 0.7071067812;\nv = y < 0.0 ? -v : v;\nreturn v;\n#else\nfloat seed = mod(x, 233280.);\nfloat q = (seed * 9301. + 49297.) / 233280.;\nreturn fract(q);\n#endif\n}\n#if COLOR_OVER_TIME_MODULE_ENABLE\nuniform sampler2D color_over_time_tex0;\nuniform int u_color_mode;\n#endif\n#if ROTATION_OVER_TIME_MODULE_ENABLE\nuniform sampler2D rotation_over_time_tex0;\nuniform int u_rotation_mode;\n#endif\n#if SIZE_OVER_TIME_MODULE_ENABLE\nuniform sampler2D size_over_time_tex0;\nuniform int u_size_mode;\n#endif\n#if FORCE_OVER_TIME_MODULE_ENABLE\nuniform sampler2D force_over_time_tex0;\nuniform int u_force_mode;\nuniform int u_force_space;\n#endif\n#if VELOCITY_OVER_TIME_MODULE_ENABLE\nuniform sampler2D velocity_over_time_tex0;\nuniform int u_velocity_mode;\nuniform int u_velocity_space;\n#endif\n#if TEXTURE_ANIMATION_MODULE_ENABLE\nuniform sampler2D texture_animation_tex0;\nuniform vec4 u_anim_info;\n#endif\nfloat repeat (float t, float length) {\nreturn t - floor(t / length) * length;\n}\nvec4 rotateQuat (vec4 p, vec4 q) {\nvec3 iv = cross(q.xyz, p.xyz) + q.w * p.xyz;\nvec3 res = p.xyz + 2.0 * cross(q.xyz, iv);\nreturn vec4(res.xyz, p.w);\n}\nvec4 gpvs_main () {\nfloat activeTime = u_timeDelta.x - a_position_starttime.w;\nfloat normalizedTime = clamp(activeTime / a_dir_life.w, 0.0, 1.0);\nvec2 timeCoord0 = vec2(normalizedTime, 0.);\nvec2 timeCoord1 = vec2(normalizedTime, 1.);\n#if CC_RENDER_MODE == 4\nvec2 vertIdx = vec2(a_texCoord.x, a_texCoord.y);\n#else\nvec2 vertIdx = vec2(a_size_uv.w, a_rotation_uv.w);\n#endif\nvec4 velocity = vec4(a_dir_life.xyz, 0.);\nvec4 pos = vec4(a_position_starttime.xyz, 1.);\nvec3 size = a_size_uv.xyz;\n#if SIZE_OVER_TIME_MODULE_ENABLE\nif (u_size_mode == 1) {\nsize *= unpackCurveData(size_over_time_tex0, timeCoord0);\n} else {\nvec3 size_0 = unpackCurveData(size_over_time_tex0, timeCoord0);\nvec3 size_1 = unpackCurveData(size_over_time_tex0, timeCoord1);\nfloat factor_s = pseudoRandom(a_rndSeed + 39825.);\nsize *= mix(size_0, size_1, factor_s);\n}\n#endif\nvec3 compScale = scale.xyz * size;\n#if FORCE_OVER_TIME_MODULE_ENABLE\nvec3 forceAnim = vec3(0.);\nif (u_force_mode == 1) {\nforceAnim = unpackCurveData(force_over_time_tex0, timeCoord0);\n} else {\nvec3 force_0 = unpackCurveData(force_over_time_tex0, timeCoord0);\nvec3 force_1 = unpackCurveData(force_over_time_tex0, timeCoord1);\nfloat factor_f =  pseudoRandom(a_rndSeed + 212165.);\nforceAnim = mix(force_0, force_1, factor_f);\n}\nvec4 forceTrack = vec4(forceAnim, 0.);\nif (u_force_space == 0) {\nforceTrack = rotateQuat(forceTrack, u_worldRot);\n}\nvelocity.xyz += forceTrack.xyz;\n#endif\n#if VELOCITY_OVER_TIME_MODULE_ENABLE\nfloat speedModifier0 = 1.;\nfloat speedModifier1 = 1.;\nvec3 velocityAnim = vec3(0.);\nif (u_velocity_mode == 1) {\nvelocityAnim = unpackCurveData(velocity_over_time_tex0, timeCoord0, speedModifier0);\n} else {\nvec3 vectory_0 = unpackCurveData(velocity_over_time_tex0, timeCoord0, speedModifier0);\nvec3 vectory_1 = unpackCurveData(velocity_over_time_tex0, timeCoord1, speedModifier1);\nfloat factor_v = pseudoRandom(a_rndSeed + 197866.);\nvelocityAnim = mix(vectory_0, vectory_1, factor_v);\nspeedModifier0 = mix(speedModifier0, speedModifier1, factor_v);\n}\nvec4 velocityTrack = vec4(velocityAnim, 0.);\nif (u_velocity_space == 0) {\nvelocityTrack = rotateQuat(velocityTrack, u_worldRot);\n}\nvelocity.xyz += velocityTrack.xyz;\nvelocity.xyz *= speedModifier0;\n#endif\npos.xyz += velocity.xyz * normalizedTime * a_dir_life.w;\n#if !CC_USE_WORLD_SPACE\npos = cc_matWorld * pos;\n#if CC_RENDER_MODE == 1\nvelocity = rotateQuat(velocity, u_worldRot);\n#endif\n#endif\nvec3 startRotation = a_rotation_uv.xyz;\n#if CC_RENDER_MODE != 4\n#if CC_RENDER_MODE == 0\nvec3 rotEuler = startRotation.xyz;\n#elif CC_RENDER_MODE == 1\nvec3 rotEuler = vec3(0.);\n#else\nvec3 rotEuler = vec3(0., 0., startRotation.z);\n#endif\nvec4 rot = quaternionFromEuler(rotEuler);\n#else\nvec4 rot = quaternionFromEuler(startRotation);\n#endif\n#if ROTATION_OVER_TIME_MODULE_ENABLE\nif (u_rotation_mode == 1) {\nvec3 euler = unpackCurveData(rotation_over_time_tex0, timeCoord0) * normalizedTime * a_dir_life.w;\nvec4 quat = eulerToQuat(euler);\nmat3 mLocal = quatToMat3(quat);\nmat3 mStart = quatToMat3(rot);\nrot = mat3ToQuat(mStart * mLocal);\n} else {\nvec3 rotation_0 = unpackCurveData(rotation_over_time_tex0, timeCoord0);\nvec3 rotation_1 = unpackCurveData(rotation_over_time_tex0, timeCoord1);\nfloat factor_r = pseudoRandom(a_rndSeed + 125292.);\nvec3 euler = mix(rotation_0, rotation_1, factor_r) * normalizedTime * a_dir_life.w;\n#if CC_RENDER_MODE == 3 || CC_RENDER_MODE == 2\neuler = vec3(0.0, 0.0, euler.z);\n#endif\nvec4 quat = eulerToQuat(euler);\nmat3 mLocal = quatToMat3(quat);\nmat3 mStart = quatToMat3(rot);\nrot = mat3ToQuat(mStart * mLocal);\n}\n#endif\n#if COLOR_OVER_TIME_MODULE_ENABLE\nif (u_color_mode == 1) {\ncolor = a_color * texture2D(color_over_time_tex0, timeCoord0);\n} else {\nvec4 color_0 = texture2D(color_over_time_tex0, timeCoord0);\nvec4 color_1 = texture2D(color_over_time_tex0, timeCoord1);\nfloat factor_c = pseudoRandom(a_rndSeed + 91041.);\ncolor = a_color * mix(color_0, color_1, factor_c);\n}\n#else\ncolor = a_color;\n#endif\n#if CC_RENDER_MODE != 4\nvec2 cornerOffset = vec2((vertIdx - 0.5));\n#if CC_RENDER_MODE == 1\nrot = vec4(0.0, 0.0, 0.0, 1.0);\n#endif\ncomputeVertPos(pos, cornerOffset, rot, compScale\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n, cc_matViewInv\n#endif\n#if CC_RENDER_MODE == 1\n, cc_cameraPos.xyz\n, velocity\n, frameTile_velLenScale.z\n, frameTile_velLenScale.w\n, a_size_uv.w\n#endif\n);\n#else\nmat3 rotMat = quatToMat3(rot);\nmat3 nodeMat = quatToMat3(nodeRotation);\nrotMat = nodeMat * rotMat;\nrot = mat3ToQuat(rotMat);\nmat4 xformNoScale = matrixFromRT(rot, pos.xyz);\nmat4 xform = matFromRTS(rot, pos.xyz, compScale);\npos = xform * vec4(a_texCoord3, 1);\nvec4 normal = xformNoScale * vec4(a_normal, 0);\ncolor *= a_color1;\n#endif\npos = cc_matViewProj * pos;\nfloat frameIndex = 0.;\n#if TEXTURE_ANIMATION_MODULE_ENABLE\nfloat startFrame = 0.;\nvec3 frameInfo = vec3(0.);\nif (int(u_anim_info.x) == 1) {\nframeInfo = unpackCurveData(texture_animation_tex0, timeCoord0);\n} else {\nvec3 frameInfo0 = unpackCurveData(texture_animation_tex0, timeCoord0);\nvec3 frameInfo1 = unpackCurveData(texture_animation_tex0, timeCoord1);\nfloat factor_t = pseudoRandom(a_rndSeed + 90794.);\nframeInfo = mix(frameInfo0, frameInfo1, factor_t);\n}\nstartFrame = frameInfo.x / u_anim_info.y;\nframeIndex = repeat(u_anim_info.z * (frameInfo.y + startFrame), 1.);\n#endif\nuv = computeUV(frameIndex, vertIdx, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\nreturn pos;\n}\nvoid main() { gl_Position = gpvs_main(); }",frag:"\nprecision mediump float;\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nvarying vec2 uv;\nvarying vec4 color;\nuniform sampler2D mainTexture;\nuniform vec4 tintColor;\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture2D(mainTexture, uv);\nreturn CCFragOutput(col);\n}\nvoid main() { gl_FragColor = add(); }"}],[{vert:"\nprecision mediump float;\nuniform vec4 mainTiling_Offset;\nuniform highp mat4 cc_matViewProj;\nuniform highp vec4 cc_cameraPos;\nuniform highp mat4 cc_matWorld;\nvarying mediump vec2 uv;\nvarying mediump vec4 color;\nattribute vec3 a_position;\nattribute vec4 a_texCoord;\nattribute vec3 a_texCoord1;\nattribute vec3 a_texCoord2;\nattribute vec4 a_color;\n#if CC_DRAW_WIRE_FRAME\nvarying vec3 vBarycentric;\n#endif\nvec4 vs_main() {\nhighp vec4 pos = vec4(a_position, 1);\nvec4 velocity = vec4(a_texCoord1.xyz, 0);\n#if !CC_USE_WORLD_SPACE\npos = cc_matWorld * pos;\nvelocity = cc_matWorld * velocity;\n#endif\nfloat vertOffset = (a_texCoord.x - 0.5) * a_texCoord.y;\nvec3 camUp = normalize(cross(pos.xyz - cc_cameraPos.xyz, velocity.xyz));\npos.xyz += camUp * vertOffset;\npos = cc_matViewProj * pos;\nuv = a_texCoord.zw * mainTiling_Offset.xy + mainTiling_Offset.zw;;\ncolor = a_color;\n#if CC_DRAW_WIRE_FRAME\nvBarycentric = a_texCoord2;\n#endif\nreturn pos;\n}\nvoid main() { gl_Position = vs_main(); }",frag:"\nprecision mediump float;\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nvarying vec2 uv;\nvarying vec4 color;\n#if CC_DRAW_WIRE_FRAME\nvarying vec3 vBarycentric;\n#endif\nuniform sampler2D mainTexture;\nuniform vec4 tintColor;\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture2D(mainTexture, uv);\n#if CC_DRAW_WIRE_FRAME\nif (any(lessThan(vBarycentric, vec3(0.02)))) {\ncol = vec4(0., 1., 1., 1.);\n}\n#endif\nreturn CCFragOutput(col);\n}\nvoid main() { gl_FragColor = add(); }"}],[{vert:"\nprecision highp float;\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\nmat3 m = mat3(xAxis,yAxis,zAxis);\nfloat trace = m[0][0] + m[1][1] + m[2][2];\nvec4 quat;\nif (trace > 0.) {\nfloat s = 0.5 / sqrt(trace + 1.0);\nquat.w = 0.25 / s;\nquat.x = (m[2][1] - m[1][2]) * s;\nquat.y = (m[0][2] - m[2][0]) * s;\nquat.z = (m[1][0] - m[0][1]) * s;\n} else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\nfloat s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\nquat.w = (m[2][1] - m[1][2]) / s;\nquat.x = 0.25 * s;\nquat.y = (m[0][1] + m[1][0]) / s;\nquat.z = (m[0][2] + m[2][0]) / s;\n} else if (m[1][1] > m[2][2]) {\nfloat s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\nquat.w = (m[0][2] - m[2][0]) / s;\nquat.x = (m[0][1] + m[1][0]) / s;\nquat.y = 0.25 * s;\nquat.z = (m[1][2] + m[2][1]) / s;\n} else {\nfloat s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\nquat.w = (m[1][0] - m[0][1]) / s;\nquat.x = (m[0][2] + m[2][0]) / s;\nquat.y = (m[1][2] + m[2][1]) / s;\nquat.z = 0.25 * s;\n}\nfloat len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\nif (len > 0.) {\nlen = 1. / sqrt(len);\nquat.x = quat.x * len;\nquat.y = quat.y * len;\nquat.z = quat.z * len;\nquat.w = quat.w * len;\n}\nreturn quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\nfloat x = angle.x / 2.;\nfloat y = angle.y / 2.;\nfloat z = angle.z / 2.;\nfloat sx = sin(x);\nfloat cx = cos(x);\nfloat sy = sin(y);\nfloat cy = cos(y);\nfloat sz = sin(z);\nfloat cz = cos(z);\nvec4 quat = vec4(0);\nquat.x = sx * cy * cz + cx * sy * sz;\nquat.y = cx * sy * cz + sx * cy * sz;\nquat.z = cx * cy * sz - sx * sy * cz;\nquat.w = cx * cy * cz - sx * sy * sz;\nreturn quat;\n}\nmat4 matrixFromRT (vec4 q, vec3 p){\nfloat x2 = q.x + q.x;\nfloat y2 = q.y + q.y;\nfloat z2 = q.z + q.z;\nfloat xx = q.x * x2;\nfloat xy = q.x * y2;\nfloat xz = q.x * z2;\nfloat yy = q.y * y2;\nfloat yz = q.y * z2;\nfloat zz = q.z * z2;\nfloat wx = q.w * x2;\nfloat wy = q.w * y2;\nfloat wz = q.w * z2;\nreturn mat4(\n1. - (yy + zz), xy + wz, xz - wy, 0,\nxy - wz, 1. - (xx + zz), yz + wx, 0,\nxz + wy, yz - wx, 1. - (xx + yy), 0,\np.x, p.y, p.z, 1\n);\n}\nmat4 matFromRTS (vec4 q, vec3 t, vec3 s){\nfloat x = q.x, y = q.y, z = q.z, w = q.w;\nfloat x2 = x + x;\nfloat y2 = y + y;\nfloat z2 = z + z;\nfloat xx = x * x2;\nfloat xy = x * y2;\nfloat xz = x * z2;\nfloat yy = y * y2;\nfloat yz = y * z2;\nfloat zz = z * z2;\nfloat wx = w * x2;\nfloat wy = w * y2;\nfloat wz = w * z2;\nfloat sx = s.x;\nfloat sy = s.y;\nfloat sz = s.z;\nreturn mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n(xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n(xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\nt.x, t.y, t.z, 1);\n}\nvec4 quatMultiply (vec4 a, vec4 b){\nvec4 quat;\nquat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\nquat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\nquat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\nquat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\nreturn quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\nfloat ix = q.w * v.x + q.y * v.z - q.z * v.y;\nfloat iy = q.w * v.y + q.z * v.x - q.x * v.z;\nfloat iz = q.w * v.z + q.x * v.y - q.y * v.x;\nfloat iw = -q.x * v.x - q.y * v.y - q.z * v.z;\nv.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\nv.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\nv.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\nvec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\nvec4 rotQuat = quatMultiply(viewQuat, q);\nrotateVecFromQuat(pos, rotQuat);\nreturn pos;\n}\nmat3 quatToMat3(vec4 q) {\nvec3 m0 = vec3(\n1.0 - 2.0 * q.y * q.y - 2.0 * q.z * q.z,\n2.0 * q.x * q.y + 2.0 * q.w * q.z,\n2.0 * q.x * q.z - 2.0 * q.w * q.y);\nvec3 m1 = vec3(\n2.0 * q.x * q.y - 2.0 * q.w * q.z,\n1.0 - 2.0 * q.x * q.x - 2.0 * q.z * q.z,\n2.0 * q.y * q.z + 2.0 * q.w * q.x);\nvec3 m2 = vec3(\n2.0 * q.x * q.z + 2.0 * q.w * q.y,\n2.0 * q.y * q.z - 2.0 * q.w * q.x,\n1.0 - 2.0 * q.x * q.x - 2.0 * q.y * q.y);\nreturn mat3(m0, m1, m2);\n}\nvec4 mat3ToQuat(mat3 mat) {\nfloat tr = mat[0][0] + mat[1][1] + mat[2][2];\nfloat qw, qx, qy, qz;\nif (tr > 0.0) {\nfloat S = sqrt(tr + 1.0) * 2.0;\nfloat invS = 1.0 / S;\nqw = 0.25 * S;\nqx = (mat[1][2] - mat[2][1]) * invS;\nqy = (mat[2][0] - mat[0][2]) * invS;\nqz = (mat[0][1] - mat[1][0]) * invS;\n} else if ((mat[0][0] > mat[1][1])&&(mat[0][0] > mat[2][2])) {\nfloat S = sqrt(1.0 + mat[0][0] - mat[1][1] - mat[2][2]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[1][2] - mat[2][1]) * invS;\nqx = 0.25 * S;\nqy = (mat[1][0] + mat[0][1]) * invS;\nqz = (mat[2][0] + mat[0][2]) * invS;\n} else if (mat[1][1] > mat[2][2]) {\nfloat S = sqrt(1.0 + mat[1][1] - mat[0][0] - mat[2][2]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[2][0] - mat[0][2]) * invS;\nqx = (mat[1][0] + mat[0][1]) * invS;\nqy = 0.25 * S;\nqz = (mat[2][1] + mat[1][2]) * invS;\n} else {\nfloat S = sqrt(1.0 + mat[2][2] - mat[0][0] - mat[1][1]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[0][1] - mat[1][0]) * invS;\nqx = (mat[2][0] + mat[0][2]) * invS;\nqy = (mat[2][1] + mat[1][2]) * invS;\nqz = 0.25 * S;\n}\nreturn vec4(qx, qy, qz, qw);\n}\nuniform vec4 mainTiling_Offset;\nuniform vec4 frameTile_velLenScale;\nuniform vec4 scale;\nuniform vec4 nodeRotation;\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matViewInv;\nuniform highp mat4 cc_matViewProj;\nuniform highp vec4 cc_cameraPos;\nuniform highp mat4 cc_matWorld;\nvarying mediump vec2 uv;\nvarying mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n, mat4 viewInv\n#endif\n#if CC_RENDER_MODE == 1\n, vec3 eye\n, vec4 velocity\n, float velocityScale\n, float lengthScale\n, float xIndex\n#endif\n) {\n#if CC_RENDER_MODE == 0\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\nvec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\nvec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_RENDER_MODE == 1\nvec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\nvec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\npos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_RENDER_MODE == 2\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = vec3(1, 0, 0);\nvec3 camY = vec3(0, 0, -1);\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_RENDER_MODE == 3\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nrotateVecFromQuat(viewSpaceVert, q);\nvec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\nvec3 camY = vec3(0, 1, 0);\nvec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\npos.xyz += offset;\n#else\npos.x += vertOffset.x;\npos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV (float frameIndex, vec2 vertIndex, vec2 frameTile){\nvec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\naniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if CC_RENDER_MODE != 4\nvertIndex.y = 1. - vertIndex.y;\n#endif\nreturn (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nattribute vec3 a_position;\nattribute vec3 a_texCoord;\nattribute vec3 a_texCoord1;\nattribute vec3 a_texCoord2;\nattribute vec4 a_color;\n#if CC_RENDER_MODE == 1\nattribute vec3 a_color1;\n#endif\n#if CC_RENDER_MODE == 4\nattribute vec3 a_texCoord3;\nattribute vec3 a_normal;\nattribute vec4 a_color1;\n#endif\nvec4 lpvs_main () {\nvec3 compScale = scale.xyz * a_texCoord1;\nvec4 pos = vec4(a_position, 1);\n#if CC_RENDER_MODE == 1\nvec4 velocity = vec4(a_color1.xyz, 0);\n#endif\n#if !CC_USE_WORLD_SPACE\npos = cc_matWorld * pos;\n#if CC_RENDER_MODE == 1\nvelocity = cc_matWorld * velocity;\n#endif\n#endif\n#if ROTATION_OVER_TIME_MODULE_ENABLE\nvec3 rotTmp = a_texCoord2;\nfloat mulFactor = 1.0;\nif (rotTmp.x > 10.0 * 0.5) {\nrotTmp.x -= 10.0;\nmulFactor = -1.0;\n}\nvec4 rot = vec4(rotTmp, 0.0);\nrot.w = mulFactor * sqrt(1.0 - rot.x * rot.x - rot.y * rot.y - rot.z * rot.z);\n#else\n#if CC_RENDER_MODE != 4\n#if CC_RENDER_MODE == 0\nvec3 rotEuler = a_texCoord2;\n#elif CC_RENDER_MODE == 1\nvec3 rotEuler = vec3(0.);\n#else\nvec3 rotEuler = vec3(0., 0., a_texCoord2.z);\n#endif\nvec4 rot = quaternionFromEuler(rotEuler);\n#else\nvec4 rot = quaternionFromEuler(a_texCoord2);\n#endif\n#endif\n#if CC_RENDER_MODE != 4\nvec2 cornerOffset = vec2((a_texCoord.xy - 0.5));\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\ncomputeVertPos(pos, cornerOffset, rot, compScale, cc_matViewInv);\n#elif CC_RENDER_MODE == 1\ncomputeVertPos(pos, cornerOffset, rot, compScale, cc_cameraPos.xyz, velocity, frameTile_velLenScale.z, frameTile_velLenScale.w, a_texCoord.x);\n#elif 2\ncomputeVertPos(pos, cornerOffset, rot, compScale);\n#endif\ncolor = a_color;\n#else\nmat3 rotMat = quatToMat3(rot);\nmat3 nodeMat = quatToMat3(nodeRotation);\nrotMat = nodeMat * rotMat;\nrot = mat3ToQuat(rotMat);\nmat4 xformNoScale = matrixFromRT(rot, pos.xyz);\nmat4 xform = matFromRTS(rot, pos.xyz, compScale);\npos = xform * vec4(a_texCoord3, 1);\nvec4 normal = xformNoScale * vec4(a_normal, 0);\ncolor = a_color * a_color1;\n#endif\nuv = computeUV(a_texCoord.z, a_texCoord.xy, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\npos = cc_matViewProj * pos;\nreturn pos;\n}\nvoid main() { gl_Position = lpvs_main(); }",frag:"\nprecision mediump float;\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nvarying vec2 uv;\nvarying vec4 color;\nuniform sampler2D mainTexture;\nuniform vec4 tintColor;\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture2D(mainTexture, uv);\nreturn CCFragOutput(col);\n}\nvoid main() { gl_FragColor = add(); }"}],[{vert:"\nprecision highp float;\nuniform highp mat4 cc_matViewProj;\n#if USE_LOCAL\nuniform highp mat4 cc_matWorld;\n#endif\nattribute vec3 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nvarying vec4 v_light;\nvarying vec2 uv0;\n#if TWO_COLORED\nattribute vec4 a_color2;\nvarying vec4 v_dark;\n#endif\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\n#if USE_LOCAL\npos = cc_matWorld * pos;\n#endif\npos = cc_matViewProj * pos;\nuv0 = a_texCoord;\nv_light = a_color;\n#if TWO_COLORED\nv_dark = a_color2;\n#endif\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\n#if USE_ALPHA_TEST\nuniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n#if USE_ALPHA_TEST\nif (color.a < alphaThreshold) discard;\n#endif\n}\nvoid ALPHA_TEST (in float alpha) {\n#if USE_ALPHA_TEST\nif (alpha < alphaThreshold) discard;\n#endif\n}\nvarying vec4 v_light;\n#if TWO_COLORED\nvarying vec4 v_dark;\n#endif\nvarying vec2 uv0;\nuniform sampler2D cc_spriteTexture;\nvec4 frag () {\nvec4 o = vec4(1, 1, 1, 1);\n#if TWO_COLORED\nvec4 texColor = vec4(1, 1, 1, 1);\ntexColor *= texture2D(cc_spriteTexture, uv0);\no.a = texColor.a * v_light.a;\no.rgb = ((texColor.a - 1.0) * v_dark.a + 1.0 - texColor.rgb) * v_dark.rgb + texColor.rgb * v_light.rgb;\n#else\no *= texture2D(cc_spriteTexture, uv0);\no *= v_light;\n#endif\nALPHA_TEST(o);\nreturn o;\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nstruct SpriteVertexData {\nvec4 position;\nvec4 color;\n};\nstruct SpriteFragmentData {\nvec2 uv;\n};\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matProj;\nuniform highp mat4 cc_matViewProj;\nuniform highp vec4 cc_cameraPos;\nattribute vec3 a_position;\nattribute vec2 a_texCoord;\nattribute float a_batch_id;\nvarying vec2 v_uv0;\nvarying float v_uvMode;\nvarying vec4 v_uvSizeOffset;\nvarying vec4 v_uvParams0;\nvarying vec4 v_uvParams1;\nstruct SpriteVertexInternalData {\nvec4 rotation;\nvec3 translation;\nvec3 scale;\nvec4 uvSizeOffset;\nfloat uvMode;\nvec4 uvParams;\nfloat filltype;\n};\nuniform vec4 cc_local_data[(CC_DEVICE_MAX_VERTEX_UNIFORM_VECTORS - CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS) / 5 * 5];\nvec3 VectorTransformQuat (vec3 v, vec4 q) {\nreturn v + 2.0 * cross(q.xyz, cross(q.xyz, v) + q.w * v);\n}\nvoid CCSpriteInput(out SpriteVertexData i0) {\nvec4 data0 = cc_local_data[int(a_batch_id) * 5];\nvec4 data1 = cc_local_data[int(a_batch_id) * 5 + 1];\nvec4 data2 = cc_local_data[int(a_batch_id) * 5 + 2];\nvec4 data3 = cc_local_data[int(a_batch_id) * 5 + 3];\nvec4 data4 = cc_local_data[int(a_batch_id) * 5 + 4];\nfloat rg = data0.w;\nfloat r = floor(rg);\nfloat ba = data2.z;\nfloat b = floor(ba);\nSpriteVertexInternalData i1;\ni1.rotation = data1;\ni1.translation = data0.xyz;\ni1.scale = vec3(data2.xy, 1.0);\ni1.uvSizeOffset = data3;\ni1.filltype = fract(data2.w) * 10.0;\ni1.uvMode = data2.w;\ni1.uvParams = data4;\ni0.position = vec4(VectorTransformQuat(a_position * i1.scale, i1.rotation) + i1.translation, 1.0);\ni0.color = vec4(r * (1.0 / 255.0), rg - r, b * (1.0 / 255.0), ba - b);\nvec2 uvWithRotation;\nif (i1.uvSizeOffset.x < 0.0) {\ni1.uvSizeOffset.x = abs(i1.uvSizeOffset.x);\nuvWithRotation = vec2(1.0 - a_texCoord.y, a_texCoord.x);\n} else {\nuvWithRotation = a_texCoord;\n}\nif (i1.uvMode >= 3.0) {\nv_uv0 = uvWithRotation;\nv_uvSizeOffset = i1.uvSizeOffset;\nv_uvParams0 = vec4(i1.uvParams.xy, i1.filltype, 0);\nif (i1.filltype >= 2.0) {\nv_uvParams1 = i1.uvParams;\n} else if (i1.filltype >= 1.0) {\nv_uvParams0 = vec4(1.0 - v_uvParams0.y, 1.0 - v_uvParams0.x, v_uvParams0.zw);\n}\n} else if (i1.uvMode >= 2.0) {\nv_uv0 = uvWithRotation * i1.uvParams.xy;\nv_uv0.y -= fract(i1.uvParams.y);\nv_uvSizeOffset = i1.uvSizeOffset;\n} else if (i1.uvMode >= 1.0) {\nv_uv0 = uvWithRotation;\nv_uvSizeOffset = i1.uvSizeOffset;\nvec4 params0 = fract(i1.uvParams);\nvec4 params1 = floor(i1.uvParams) / 2048.0;\nv_uvParams0 = vec4(params0.xy, params1.xy);\nv_uvParams1 = vec4(params0.zw, params1.zw);\n} else {\nv_uv0 = uvWithRotation * i1.uvSizeOffset.xy + i1.uvSizeOffset.zw;\n}\nv_uvMode = i1.uvMode;\n#if SAMPLE_FROM_RT\nv_uv0 = cc_cameraPos.w > 1.0 ? vec2(v_uv0.x, 1.0 - v_uv0.y) : v_uv0;\n#endif\n}\nvarying vec4 v_color;\nvec4 vert () {\nSpriteVertexData i;\nCCSpriteInput(i);\nv_color = i.color;\nvec4 pos = i.position;\n#if USE_PIXEL_ALIGNMENT\npos = cc_matView * pos;\npos.xyz = floor(pos.xyz);\npos = cc_matProj * pos;\n#else\npos = cc_matViewProj * pos;\n#endif\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nstruct SpriteVertexData {\nvec4 position;\nvec4 color;\n};\nstruct SpriteFragmentData {\nvec2 uv;\n};\nvec4 CCSampleWithAlphaSeparated(sampler2D tex, vec2 uv) {\n#if CC_USE_EMBEDDED_ALPHA\nreturn vec4(texture2D(tex, uv).rgb, texture2D(tex, uv + vec2(0.0, 0.5)).r);\n#else\nreturn texture2D(tex, uv);\n#endif\n}\nvarying vec2 v_uv0;\nvarying float v_uvMode;\nvarying vec4 v_uvSizeOffset;\nvarying vec4 v_uvParams0;\nvarying vec4 v_uvParams1;\nvec2 evalSlicedUV(vec2 uv) {\nvec4 p0 = mix(vec4(0.0), v_uvParams0, step(v_uvParams0.xyxy, uv.xyxy));\np0 = mix(       p0, v_uvParams1, step(v_uvParams1.xyxy, uv.xyxy));\nvec4 p1 = mix(vec4(1.0), v_uvParams1, step(uv.xyxy, v_uvParams1.xyxy));\np1 = mix(       p1, v_uvParams0, step(uv.xyxy, v_uvParams0.xyxy));\nvec2 k = (p1.zw - p0.zw) / (p1.xy - p0.xy);\nvec2 b = (p1.xy * p0.zw - p0.xy * p1.zw) / (p1.xy - p0.xy);\nreturn k * uv + b;\n}\nfloat evalFilledUV(vec2 uv, float mode) {\nfloat alpha = 1.0;\nif (mode >= 2.0) {\nfloat start = v_uvParams1.x;\nfloat range = v_uvParams1.y;\nvec2 dir = uv - v_uvParams1.zw;\nfloat angle = -atan(dir.y, dir.x) * 0.3183098861838;\nif (range < 0.0) {\nangle += mix(0.0, -2.0, step(start, angle));\nalpha = step(start + range, angle);\n} else {\nangle += mix(0.0, 2.0, step(angle, start));\nalpha = step(angle, start + range);\n}\n} else if (mode >= 1.0) {\nif (uv.y >= v_uvParams0.x && uv.y <= v_uvParams0.y) {\nalpha = 1.0;\n} else {\nalpha = 0.0;\n}\n} else {\nif (uv.x >= v_uvParams0.x && uv.x <= v_uvParams0.y) {\nalpha = 1.0;\n} else {\nalpha = 0.0;\n}\n}\nreturn alpha;\n}\nvoid CCSpriteInput(out SpriteFragmentData i) {\n#if USE_TEXTURE\nif(v_uvMode >= 3.0) {\ni.uv = v_uv0 * v_uvSizeOffset.xy + v_uvSizeOffset.zw;\n} else if (v_uvMode >= 2.0) {\ni.uv = fract(v_uv0) * v_uvSizeOffset.xy + v_uvSizeOffset.zw;\n} else if (v_uvMode >= 1.0) {\ni.uv = evalSlicedUV(v_uv0) * v_uvSizeOffset.xy + v_uvSizeOffset.zw;\n} else {\ni.uv = v_uv0;\n}\n#endif\n}\nvec4 CCSpriteSample(sampler2D tex, vec2 uv) {\nvec4 o = CCSampleWithAlphaSeparated(tex, uv);\nif (v_uvMode >= 3.0) {\no.a *= evalFilledUV(v_uv0, v_uvParams0.z);\n}\nreturn o;\n}\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvarying vec4 v_color;\n#if USE_TEXTURE\nuniform sampler2D cc_spriteTexture;\n#endif\nvec4 frag () {\nSpriteFragmentData i;\nCCSpriteInput(i);\n#if USE_TEXTURE\nvec4 color = v_color * CCSpriteSample(cc_spriteTexture, i.uv);\n#else\nvec4 color = v_color;\n#endif\n#if IS_GRAY\ncolor.rgb = SRGBToLinear(color.rgb);\ncolor.rgb = vec3(dot(color.rgb, vec3(0.2126, 0.7152, 0.0722)));\ncolor.rgb = sqrt(color.rgb);\n#endif\nreturn color;\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matProj;\nuniform highp mat4 cc_matViewProj;\nuniform highp vec4 cc_cameraPos;\n#if USE_LOCAL\nuniform highp mat4 cc_matWorld;\n#endif\n#if SAMPLE_FROM_RT\n#endif\nattribute vec3 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nvarying vec4 color;\nvarying vec2 uv0;\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\n#if USE_LOCAL\npos = cc_matWorld * pos;\n#endif\n#if USE_PIXEL_ALIGNMENT\npos = cc_matView * pos;\npos.xyz = floor(pos.xyz);\npos = cc_matProj * pos;\n#else\npos = cc_matViewProj * pos;\n#endif\nuv0 = a_texCoord;\n#if SAMPLE_FROM_RT\nuv0 = cc_cameraPos.w > 1.0 ? vec2(uv0.x, 1.0 - uv0.y) : uv0;\n#endif\ncolor = a_color;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec4 CCSampleWithAlphaSeparated(sampler2D tex, vec2 uv) {\n#if CC_USE_EMBEDDED_ALPHA\nreturn vec4(texture2D(tex, uv).rgb, texture2D(tex, uv + vec2(0.0, 0.5)).r);\n#else\nreturn texture2D(tex, uv);\n#endif\n}\n#if USE_ALPHA_TEST\nuniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n#if USE_ALPHA_TEST\nif (color.a < alphaThreshold) discard;\n#endif\n}\nvoid ALPHA_TEST (in float alpha) {\n#if USE_ALPHA_TEST\nif (alpha < alphaThreshold) discard;\n#endif\n}\nvarying vec4 color;\n#if USE_TEXTURE\nvarying vec2 uv0;\nuniform sampler2D cc_spriteTexture;\n#endif\nvec4 frag () {\nvec4 o = vec4(1, 1, 1, 1);\n#if USE_TEXTURE\no *= CCSampleWithAlphaSeparated(cc_spriteTexture, uv0);\n#if IS_GRAY\nfloat gray  = 0.2126 * o.r + 0.7152 * o.g + 0.0722 * o.b;\no.r = o.g = o.b = gray;\n#endif\n#endif\no *= color;\nALPHA_TEST(o);\nreturn o;\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_MORPH\nattribute float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nuniform vec4 cc_displacementWeights[15];\nuniform vec4 cc_displacementTextureInfo;\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\nreturn texture2D(tex, uv);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture2D(tex, x)),\ndecode32(texture2D(tex, y)),\ndecode32(texture2D(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nattribute vec4 a_joints;\nattribute vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nattribute highp vec4 a_jointAnimInfo;\n#endif\nuniform highp vec4 cc_jointTextureInfo;\nuniform highp vec4 cc_jointAnimInfo;\nuniform highp sampler2D cc_jointTexture;\n#else\nuniform highp vec4 cc_joints[90];\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matProj;\nuniform highp vec4 cc_cameraPos;\nuniform mediump vec4 cc_fogBase;\nuniform mediump vec4 cc_fogAdd;\n#if USE_INSTANCING\nattribute vec4 a_matWorld0;\nattribute vec4 a_matWorld1;\nattribute vec4 a_matWorld2;\n#if USE_LIGHTMAP\nattribute vec4 a_lightingMapUVParam;\n#endif\n#elif USE_BATCHING\nattribute float a_dyn_batch_id;\nuniform highp mat4 cc_matWorlds[10];\n#else\nuniform highp mat4 cc_matWorld;\nuniform highp mat4 cc_matWorldIT;\nuniform highp vec4 cc_lightingMapUVParam;\n#endif\nuniform vec4 tilingOffset;\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\n#if !CC_USE_ACCURATE_FOG\nvarying float v_fog_factor;\n#endif\nvoid CC_TRANSFER_FOG(vec4 pos) {\n#if !CC_USE_ACCURATE_FOG\nCC_TRANSFER_FOG_BASE(pos, v_fog_factor);\n#endif\n}\nvarying highp vec4 v_shadowPos;\nuniform highp mat4 cc_matLightViewProj;\n#if CC_RECEIVE_SHADOW\nuniform highp sampler2D cc_shadowMap;\nuniform highp sampler2D cc_spotLightingMap;\n#endif\n#if USE_VERTEX_COLOR\nattribute vec4 a_color;\nvarying vec4 v_color;\n#endif\nvarying vec3 v_position;\nvarying vec3 v_normal;\nvarying vec2 v_uv;\nvarying vec2 v_uv1;\n#if USE_NORMAL_MAP\nvarying vec3 v_tangent;\nvarying vec3 v_bitangent;\n#endif\n#if HAS_SECOND_UV || USE_LIGHTMAP\nattribute vec2 a_texCoord1;\n#endif\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nvarying vec3 v_luv;\nvoid CCLightingMapCaclUV()\n{\n#if !USE_INSTANCING\nv_luv.xy = cc_lightingMapUVParam.xy + a_texCoord1 * cc_lightingMapUVParam.zw;\nv_luv.z = cc_lightingMapUVParam.z;\n#else\nv_luv.xy = a_lightingMapUVParam.xy + a_texCoord1 * a_lightingMapUVParam.zw;\nv_luv.z = a_lightingMapUVParam.z;\n#endif\n}\n#endif\nvoid main () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nmat4 matWorld, matWorldIT;\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\nmatWorldIT = matWorld;\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\nmatWorldIT = matWorld;\n#else\nmatWorld = cc_matWorld;\nmatWorldIT = cc_matWorldIT;\n#endif\nvec4 pos = matWorld * In.position;\nv_position = pos.xyz;\nv_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);\n#if USE_TWOSIDE\nvec3 viewDirect = normalize(cc_cameraPos.xyz - v_position);\nv_normal *= dot(v_normal, viewDirect) < 0.0 ? -1.0 : 1.0;\n#endif\n#if USE_NORMAL_MAP\nv_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);\nv_bitangent = cross(v_normal, v_tangent) * In.tangent.w;\n#endif\nv_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n#if SAMPLE_FROM_RT\nv_uv = cc_cameraPos.w > 1.0 ? vec2(v_uv.x, 1.0 - v_uv.y) : v_uv;\n#endif\n#if HAS_SECOND_UV\nv_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n#if SAMPLE_FROM_RT\nv_uv1 = cc_cameraPos.w > 1.0 ? vec2(v_uv1.x, 1.0 - v_uv1.y) : v_uv1;\n#endif\n#endif\n#if USE_VERTEX_COLOR\nv_color = a_color;\n#endif\nCC_TRANSFER_FOG(pos);\nv_shadowPos = cc_matLightViewProj * pos;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nCCLightingMapCaclUV();\n#endif\ngl_Position = cc_matProj * (cc_matView * matWorld) * In.position;\n}",frag:"\n#ifdef GL_EXT_draw_buffers\n#extension GL_EXT_draw_buffers: enable\n#endif\n#ifdef GL_OES_standard_derivatives\n#extension GL_OES_standard_derivatives: enable\n#endif\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod: enable\n#endif\nprecision highp float;\nuniform highp mat4 cc_matView;\nuniform highp vec4 cc_cameraPos;\nuniform mediump vec4 cc_mainLitDir;\nuniform mediump vec4 cc_mainLitColor;\nuniform mediump vec4 cc_ambientSky;\nuniform mediump vec4 cc_ambientGround;\nuniform mediump vec4 cc_fogColor;\nuniform mediump vec4 cc_fogBase;\nuniform mediump vec4 cc_fogAdd;\nuniform mediump vec4 cc_nearFar;\nuniform mediump vec4 cc_viewPort;\nuniform vec4 albedo;\nuniform vec4 albedoScaleAndCutoff;\nuniform vec4 pbrParams;\nuniform vec4 emissive;\nuniform vec4 emissiveScaleParam;\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\nvoid CC_APPLY_FOG_BASE(inout vec4 color, float factor) {\ncolor = vec4(mix(cc_fogColor.rgb, color.rgb, factor), color.a);\n}\n#if !CC_USE_ACCURATE_FOG\nvarying float v_fog_factor;\n#endif\nvoid CC_APPLY_FOG(inout vec4 color) {\n#if !CC_USE_ACCURATE_FOG\nCC_APPLY_FOG_BASE(color, v_fog_factor);\n#endif\n}\nvoid CC_APPLY_FOG(inout vec4 color, vec3 worldPos) {\n#if CC_USE_ACCURATE_FOG\nfloat factor;\nCC_TRANSFER_FOG_BASE(vec4(worldPos, 1.0), factor);\n#else\nfloat factor = v_fog_factor;\n#endif\nCC_APPLY_FOG_BASE(color, factor);\n}\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nuniform highp mat4 cc_matLightView;\nuniform highp vec4 cc_shadowInvProjDepthInfo;\nuniform highp vec4 cc_shadowProjDepthInfo;\nuniform highp vec4 cc_shadowProjInfo;\nuniform mediump vec4 cc_shadowNFLSInfo;\nuniform mediump vec4 cc_shadowWHPBInfo;\nuniform mediump vec4 cc_shadowLPNNInfo;\nhighp float unpackHighpData (float mainPart, float modPart) {\nhighp float data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out float mainPart, out float modPart, highp float data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp float unpackHighpData (float mainPart, float modPart, const float modValue) {\nhighp float data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out float mainPart, out float modPart, highp float data, const float modValue) {\nhighp float divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec2 unpackHighpData (vec2 mainPart, vec2 modPart) {\nhighp vec2 data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out vec2 mainPart, out vec2 modPart, highp vec2 data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp vec2 unpackHighpData (vec2 mainPart, vec2 modPart, const float modValue) {\nhighp vec2 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out vec2 mainPart, out vec2 modPart, highp vec2 data, const float modValue) {\nhighp vec2 divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec3 unpackHighpData (vec3 mainPart, vec3 modPart) {\nhighp vec3 data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out vec3 mainPart, out vec3 modPart, highp vec3 data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp vec3 unpackHighpData (vec3 mainPart, vec3 modPart, const float modValue) {\nhighp vec3 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out vec3 mainPart, out vec3 modPart, highp vec3 data, const float modValue) {\nhighp vec3 divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec4 unpackHighpData (vec4 mainPart, vec4 modPart) {\nhighp vec4 data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out vec4 mainPart, out vec4 modPart, highp vec4 data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp vec4 unpackHighpData (vec4 mainPart, vec4 modPart, const float modValue) {\nhighp vec4 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out vec4 mainPart, out vec4 modPart, highp vec4 data, const float modValue) {\nhighp vec4 divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\nfloat dist = length(viewPos);\nreturn (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\nvec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\nreturn CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\nuniform highp sampler2D cc_shadowMap;\nuniform highp sampler2D cc_spotLightingMap;\nvec4 ApplyShadowDepthBias_FaceNormal(vec4 shadowPos, vec3 worldNormal)\n{\nvec4 newShadowPos = shadowPos;\nif(cc_shadowLPNNInfo.z > 0.0001)\n{\nvec4 viewNormal = cc_matLightView * vec4(worldNormal, 0.0);\nif(viewNormal.z < 0.1)\nnewShadowPos.xy += viewNormal.xy * cc_shadowProjInfo.xy * cc_shadowLPNNInfo.z * clamp(viewNormal.z, 0.001, 0.1);\n}\nreturn newShadowPos;\n}\nvec4 ApplyShadowDepthBias_Perspective(vec4 shadowPos, float viewspaceDepthBias)\n{\nvec3 viewSpacePos;\nviewSpacePos.xy = shadowPos.xy * cc_shadowProjInfo.zw;\nviewSpacePos.z = shadowPos.z * cc_shadowInvProjDepthInfo.x + shadowPos.w * cc_shadowInvProjDepthInfo.y;\nviewSpacePos.xyz += cc_shadowProjDepthInfo.z * normalize(viewSpacePos.xyz) * viewspaceDepthBias;\nvec4 clipSpacePos;\nclipSpacePos.xy = viewSpacePos.xy * cc_shadowProjInfo.xy;\nclipSpacePos.zw = viewSpacePos.z * cc_shadowProjDepthInfo.xz + vec2(cc_shadowProjDepthInfo.y, 0.0);\nif (cc_shadowNFLSInfo.z > 0.000001) {\nclipSpacePos.z = CCGetLinearDepthFromViewSpace(viewSpacePos.xyz);\nclipSpacePos.z = (clipSpacePos.z * 2.0 - 1.0) * clipSpacePos.w;\n}\nreturn clipSpacePos;\n}\nvec4 ApplyShadowDepthBias_Orthographic(vec4 shadowPos, float viewspaceDepthBias)\n{\nfloat coeffA = cc_shadowProjDepthInfo.x;\nfloat coeffB = cc_shadowProjDepthInfo.y;\nfloat viewSpacePos_z = (shadowPos.z - coeffB) / coeffA;\nviewSpacePos_z += viewspaceDepthBias;\nvec4 result = shadowPos;\nresult.z = viewSpacePos_z * coeffA + coeffB;\nreturn result;\n}\nfloat CCGetShadowFactorHard (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture2D(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture2D(cc_shadowMap, clipPos.xy).x;\n}\nshadow = step(clipPos.z, closestDepth);\nreturn shadow;\n}\nfloat CCGetShadowFactorSoft (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * mapSize.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetShadowFactorSoft2X (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\nfloat CCGetSpotLightShadowFactorHard (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nfloat depth = clipPos.z;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture2D(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture2D(cc_spotLightingMap, clipPos.xy).x;\n}\nshadow = step(depth, closestDepth);\nreturn shadow;\n}\nfloat CCGetSpotLightShadowFactorSoft (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nfloat bias = cc_shadowWHPBInfo.w;\nvec2 oneTap = 1.0 / cc_shadowWHPBInfo.xy;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * cc_shadowWHPBInfo.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * cc_shadowWHPBInfo.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetSpotLightShadowFactorSoft2X (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nfloat bias = cc_shadowWHPBInfo.w;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\n#endif\n#if CC_USE_IBL\nuniform samplerCube cc_environment;\nvec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\n#ifdef GL_EXT_shader_texture_lod\nreturn texture2DLodEXT(tex, coord, lod);\n#else\nreturn texture2D(tex, coord, lod);\n#endif\n}\nvec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\n#ifdef GL_EXT_shader_texture_lod\nreturn textureCubeLodEXT(tex, coord, lod);\n#else\nreturn textureCube(tex, coord, lod);\n#endif\n}\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n}\n#if CC_USE_DIFFUSEMAP\nuniform samplerCube cc_diffuseMap;\n#endif\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\nvec3 NxH = cross(N, H);\nfloat OneMinusNoHSqr = dot(NxH, NxH);\nfloat a = roughness * roughness;\nfloat n = NoH * a;\nfloat p = a / (OneMinusNoHSqr + n * n);\nreturn p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\nreturn (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\nconst vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\nconst vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\nvec4 r = roughness * c0 + c1;\nfloat a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\nvec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\nAB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\nreturn specular * AB.x + AB.y;\n}\n#if USE_REFLECTION_DENOISE\nvec3 GetEnvReflectionWithMipFiltering(vec3 R, float roughness, float mipCount, float denoiseIntensity) {\n#if CC_USE_IBL\nfloat mip = roughness * mipCount;\nfloat delta = (dot(dFdx(R), dFdy(R))) * 1000.0;\nfloat mipBias = mix(0.0, 5.0, clamp(delta, 0.0, 1.0));\nvec4 biased = fragTextureLod(cc_environment, R, mip + mipBias);\nvec4 filtered = textureCube(cc_environment, R);\n#if CC_USE_IBL == 2\nbiased.rgb = unpackRGBE(biased);\nfiltered.rgb = unpackRGBE(filtered);\n#else\nbiased.rgb = SRGBToLinear(biased.rgb);\nfiltered.rgb = SRGBToLinear(filtered.rgb);\n#endif\nreturn mix(biased.rgb, filtered.rgb, denoiseIntensity);\n#else\nreturn vec3(0.0, 0.0, 0.0);\n#endif\n}\n#endif\nstruct StandardSurface {\nvec4 albedo;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nvec3 position, position_fract_part;\n#else\nvec3 position;\n#endif\nvec3 normal;\nvec3 emissive;\nvec3 lightmap;\nfloat lightmap_test;\nfloat roughness;\nfloat metallic;\nfloat occlusion;\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 L = normalize(-cc_mainLitDir.xyz);\nvec3 H = normalize(L + V);\nfloat NH = max(dot(N, H), 0.0);\nfloat NL = max(dot(N, L), 0.0);\nvec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\nvec3 diffuseContrib = diffuse;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nif (s.lightmap_test > 0.0001) {\nfinalColor = s.lightmap.rgb;\n}\n#else\ndiffuseContrib /= 3.14159265359;\n#endif\nvec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\nvec3 dirlightContrib = (diffuseContrib + specularContrib);\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (NL > 0.0 && cc_mainLitDir.w > 0.0) {\n{\nvec4 pos = ApplyShadowDepthBias_FaceNormal(shadowPos, N);\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetShadowFactorSoft2X(pos);\nelse if (pcf > 0.9) shadow = CCGetShadowFactorSoft(pos);\nelse shadow = CCGetShadowFactorHard(pos);\nshadow = mix(shadow, 1.0, cc_shadowNFLSInfo.w);\n}\n}\n#endif\ndirlightContrib *= shadow;\nfinalColor *= dirlightContrib;\nfloat fAmb = 0.5 - N.y * 0.5;\nvec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb);\n#if CC_USE_IBL\n#if CC_USE_DIFFUSEMAP\nvec4 diffuseMap = textureCube(cc_diffuseMap, N);\n#if CC_USE_DIFFUSEMAP == 2\nambDiff = unpackRGBE(diffuseMap);\n#else\nambDiff = SRGBToLinear(diffuseMap.rgb);\n#endif\n#endif\nvec3 R = normalize(reflect(-V, N));\n#if USE_REFLECTION_DENOISE\nvec3 env = GetEnvReflectionWithMipFiltering(R, s.roughness, cc_ambientGround.w, 0.6);\n#else\nvec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n#if CC_USE_IBL == 2\nvec3 env = unpackRGBE(envmap);\n#else\nvec3 env = SRGBToLinear(envmap.rgb);\n#endif\n#endif\nfinalColor += env * cc_ambientSky.w * specular * s.occlusion;\n#endif\nfinalColor += ambDiff.rgb * cc_ambientSky.w * diffuse * s.occlusion;\nfinalColor += s.emissive;\nreturn vec4(finalColor, s.albedo.a);\n}\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = ACESToneMap(color.rgb);\n#endif\ncolor.rgb = sqrt(color.rgb);\nreturn color;\n}\nvarying highp vec4 v_shadowPos;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nvarying vec3 v_luv;\nuniform sampler2D cc_lightingMap;\nvec3 UnpackLightingmap(vec4 color) {\nvec3 c;\nfloat e = 1.0 + color.a * (8.0 - 1.0);\nc.r = color.r * e;\nc.g = color.g * e;\nc.b = color.b * e;\nreturn c;\n}\n#endif\nvarying vec3 v_position;\nvarying vec2 v_uv;\nvarying vec2 v_uv1;\nvarying vec3 v_normal;\n#if USE_VERTEX_COLOR\nvarying vec4 v_color;\n#endif\n#if USE_ALBEDO_MAP\nuniform sampler2D albedoMap;\n#endif\n#if USE_NORMAL_MAP\nvarying vec3 v_tangent;\nvarying vec3 v_bitangent;\nuniform sampler2D normalMap;\n#endif\n#if USE_PBR_MAP\nuniform sampler2D pbrMap;\n#endif\n#if USE_METALLIC_ROUGHNESS_MAP\nuniform sampler2D metallicRoughnessMap;\n#endif\n#if USE_OCCLUSION_MAP\nuniform sampler2D occlusionMap;\n#endif\n#if USE_EMISSIVE_MAP\nuniform sampler2D emissiveMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvoid surf (out StandardSurface s) {\nvec4 baseColor = albedo;\n#if USE_VERTEX_COLOR\nbaseColor.rgb *= SRGBToLinear(v_color.rgb);\nbaseColor.a *= v_color.a;\n#endif\n#if USE_ALBEDO_MAP\nvec4 texColor = texture2D(albedoMap, ALBEDO_UV);\ntexColor.rgb = SRGBToLinear(texColor.rgb);\nbaseColor *= texColor;\n#endif\ns.albedo = baseColor;\ns.albedo.rgb *= albedoScaleAndCutoff.xyz;\n#if USE_ALPHA_TEST\nif (s.albedo.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n#endif\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nvec4 lightColor = texture2D(cc_lightingMap, v_luv.xy);\ns.lightmap = UnpackLightingmap(lightColor);\ns.lightmap_test = v_luv.z;\n#endif\ns.normal = v_normal;\n#if USE_NORMAL_MAP\nvec3 nmmp = texture2D(normalMap, NORMAL_UV).xyz - vec3(0.5);\ns.normal =\n(nmmp.x * emissiveScaleParam.w) * normalize(v_tangent) +\n(nmmp.y * emissiveScaleParam.w) * normalize(v_bitangent) +\nnmmp.z * normalize(s.normal);\n#endif\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\npackHighpData(s.position, s.position_fract_part, v_position);\n#else\ns.position = v_position;\n#endif\nvec4 pbr = pbrParams;\n#if USE_PBR_MAP\nvec4 res = texture2D(pbrMap, PBR_UV);\npbr.x *= res.r;\npbr.y *= res.g;\npbr.z *= res.b;\npbr.w *= res.a;\n#endif\n#if USE_METALLIC_ROUGHNESS_MAP\nvec4 metallicRoughness = texture2D(metallicRoughnessMap, PBR_UV);\npbr.z *= metallicRoughness.b;\npbr.y *= metallicRoughness.g;\n#endif\n#if USE_OCCLUSION_MAP\npbr.x *= texture2D(occlusionMap, PBR_UV).r;\n#endif\ns.occlusion = pbr.x;\ns.roughness = pbr.y;\ns.metallic = pbr.z;\ns.emissive = emissive.rgb * emissiveScaleParam.xyz;\n#if USE_EMISSIVE_MAP\ns.emissive *= SRGBToLinear(texture2D(emissiveMap, EMISSIVE_UV).rgb);\n#endif\n}\n#if CC_FORWARD_ADD\n#if CC_PIPELINE_TYPE == 0\n# define LIGHTS_PER_PASS 1\n#else\n# define LIGHTS_PER_PASS 10\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nuniform highp vec4 cc_lightPos[LIGHTS_PER_PASS];\nuniform vec4 cc_lightColor[LIGHTS_PER_PASS];\nuniform vec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\nuniform vec4 cc_lightDir[LIGHTS_PER_PASS];\n#endif\nfloat SmoothDistAtt (float distSqr, float invSqrAttRadius) {\nfloat factor = distSqr * invSqrAttRadius;\nfloat smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\nreturn smoothFactor * smoothFactor;\n}\nfloat GetDistAtt (float distSqr, float invSqrAttRadius) {\nfloat attenuation = 1.0 / max(distSqr, 0.01*0.01);\nattenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\nreturn attenuation;\n}\nfloat GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\nfloat cd = dot(litDir, L);\nfloat attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\nreturn (attenuation * attenuation);\n}\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nvec4 CCStandardShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / 3.14159265359;\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nint numLights = CC_PIPELINE_TYPE == 0 ? LIGHTS_PER_PASS : int(cc_lightDir[0].w);\nfor (int i = 0; i < LIGHTS_PER_PASS; i++) {\nif (i >= numLights) break;\nvec3 SLU = cc_lightPos[i].xyz - position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.0);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = cc_lightSizeRangeAngle[i].x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (cc_lightPos[i].w > 0.0) {\nfloat cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\nfloat cosOuter = cc_lightSizeRangeAngle[i].z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = cc_lightColor[i].rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (cc_lightPos[i].w > 0.0 && cc_lightSizeRangeAngle[i].w > 0.0) {\n{\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetSpotLightShadowFactorSoft2X(shadowPos, position);\nelse if (pcf > 0.9) shadow = CCGetSpotLightShadowFactorSoft(shadowPos, position);\nelse shadow = CCGetSpotLightShadowFactorHard(shadowPos, position);\n}\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nreadonly buffer b_ccLightsBuffer { vec4 b_ccLights[]; };\nreadonly buffer b_clusterLightIndicesBuffer { uint b_clusterLightIndices[]; };\nreadonly buffer b_clusterLightGridBuffer { uvec4 b_clusterLightGrid[]; };\nstruct CCLight\n{\nvec4 cc_lightPos;\nvec4 cc_lightColor;\nvec4 cc_lightSizeRangeAngle;\nvec4 cc_lightDir;\n};\nstruct Cluster\n{\nvec3 minBounds;\nvec3 maxBounds;\n};\nstruct LightGrid\n{\nuint offset;\nuint ccLights;\n};\nCCLight getCCLight(uint i)\n{\nCCLight light;\nlight.cc_lightPos = b_ccLights[4u * i + 0u];\nlight.cc_lightColor = b_ccLights[4u * i + 1u];\nlight.cc_lightSizeRangeAngle = b_ccLights[4u * i + 2u];\nlight.cc_lightDir = b_ccLights[4u * i + 3u];\nreturn light;\n}\nLightGrid getLightGrid(uint cluster)\n{\nuvec4 gridvec = b_clusterLightGrid[cluster];\nLightGrid grid;\ngrid.offset = gridvec.x;\ngrid.ccLights = gridvec.y;\nreturn grid;\n}\nuint getGridLightIndex(uint start, uint offset)\n{\nreturn b_clusterLightIndices[start + offset];\n}\nuint getClusterZIndex(vec4 worldPos)\n{\nfloat scale = float(24) / log(cc_nearFar.y / cc_nearFar.x);\nfloat bias = -(float(24) * log(cc_nearFar.x) / log(cc_nearFar.y / cc_nearFar.x));\nfloat eyeDepth = -(cc_matView * worldPos).z;\nuint zIndex = uint(max(log(eyeDepth) * scale + bias, 0.0));\nreturn zIndex;\n}\nuint getClusterIndex(vec4 fragCoord, vec4 worldPos)\n{\nuint zIndex = getClusterZIndex(worldPos);\nfloat clusterSizeX = ceil(cc_viewPort.z / float(16));\nfloat clusterSizeY = ceil(cc_viewPort.w / float(8));\nuvec3 indices = uvec3(uvec2(fragCoord.xy / vec2(clusterSizeX, clusterSizeY)), zIndex);\nuint cluster = (16u * 8u) * indices.z + 16u * indices.y + indices.x;\nreturn cluster;\n}\nvec4 CCClusterShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / 3.14159265359;\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.001);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nuint cluster = getClusterIndex(gl_FragCoord, vec4(position, 1.0));\nLightGrid grid = getLightGrid(cluster);\nuint numLights = grid.ccLights;\nfor (uint i = 0u; i < 100u; i++) {\nif (i >= numLights) break;\nuint lightIndex = getGridLightIndex(grid.offset, i);\nCCLight light = getCCLight(lightIndex);\nvec3 SLU = light.cc_lightPos.xyz - position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.001);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = light.cc_lightSizeRangeAngle.x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(light.cc_lightSizeRangeAngle.y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (light.cc_lightPos.w > 0.0) {\nfloat cosInner = max(dot(-light.cc_lightDir.xyz, SL), 0.01);\nfloat cosOuter = light.cc_lightSizeRangeAngle.z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -light.cc_lightDir.xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = light.cc_lightColor.rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (light.cc_lightPos.w > 0.0) {\n{\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetSpotLightShadowFactorSoft2X(shadowPos, position);\nelse if (pcf > 0.9) shadow = CCGetSpotLightShadowFactorSoft(shadowPos, position);\nelse shadow = CCGetSpotLightShadowFactorHard(shadowPos, position);\n}\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * light.cc_lightColor.w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\nvoid main () {\nStandardSurface s; surf(s);\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nvec4 color = CCClusterShadingAdditive(s, v_shadowPos);\n#else\nvec4 color = CCStandardShadingAdditive(s, v_shadowPos);\n#endif\nCC_APPLY_FOG(color, s.position.xyz);\ngl_FragData[0] = CCFragOutput(color);\n}\n#elif (CC_PIPELINE_TYPE == 0 || CC_FORCE_FORWARD_SHADING)\nvoid main () {\nStandardSurface s; surf(s);\nvec4 color = CCStandardShadingBase(s, v_shadowPos);\nCC_APPLY_FOG(color, s.position.xyz);\ngl_FragData[0] = CCFragOutput(color);\n}\n#elif CC_PIPELINE_TYPE == 1\nvec2 signNotZero(vec2 v) {\nreturn vec2((v.x >= 0.0) ? +1.0 : -1.0, (v.y >= 0.0) ? +1.0 : -1.0);\n}\nvec2 float32x3_to_oct(in vec3 v) {\nvec2 p = v.xy * (1.0 / (abs(v.x) + abs(v.y) + abs(v.z)));\nreturn (v.z <= 0.0) ? ((1.0 - abs(p.yx)) * signNotZero(p)) : p;\n}\nvoid main () {\nStandardSurface s; surf(s);\ngl_FragData[0] = s.albedo;\ngl_FragData[1] = vec4(float32x3_to_oct(s.normal), s.roughness, s.metallic);\ngl_FragData[2] = vec4(s.emissive, s.occlusion);\n}\n#endif"},{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_MORPH\nattribute float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nuniform vec4 cc_displacementWeights[15];\nuniform vec4 cc_displacementTextureInfo;\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\nreturn texture2D(tex, uv);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture2D(tex, x)),\ndecode32(texture2D(tex, y)),\ndecode32(texture2D(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nattribute vec4 a_joints;\nattribute vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nattribute highp vec4 a_jointAnimInfo;\n#endif\nuniform highp vec4 cc_jointTextureInfo;\nuniform highp vec4 cc_jointAnimInfo;\nuniform highp sampler2D cc_jointTexture;\n#else\nuniform highp vec4 cc_joints[90];\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\n#if USE_INSTANCING\nattribute vec4 a_matWorld0;\nattribute vec4 a_matWorld1;\nattribute vec4 a_matWorld2;\n#if USE_LIGHTMAP\nattribute vec4 a_lightingMapUVParam;\n#endif\n#elif USE_BATCHING\nattribute float a_dyn_batch_id;\nuniform highp mat4 cc_matWorlds[10];\n#else\nuniform highp mat4 cc_matWorld;\nuniform highp mat4 cc_matWorldIT;\n#endif\nuniform vec4 tilingOffset;\nuniform highp mat4 cc_matLightViewProj;\n#if HAS_SECOND_UV || USE_LIGHTMAP\nattribute vec2 a_texCoord1;\n#endif\nvarying vec2 v_uv;\nvarying vec2 v_uv1;\nvarying vec4 v_worldPos;\nvarying float v_clip_depth;\nvec4 vert () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nmat4 matWorld, matWorldIT;\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\nmatWorldIT = matWorld;\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\nmatWorldIT = matWorld;\n#else\nmatWorld = cc_matWorld;\nmatWorldIT = cc_matWorldIT;\n#endif\nv_worldPos = matWorld * In.position;\nvec4 clipPos = cc_matLightViewProj * v_worldPos;\nv_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n#if HAS_SECOND_UV\nv_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n#endif\nv_clip_depth = clipPos.z / clipPos.w * 0.5 + 0.5;\nreturn clipPos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nuniform vec4 albedo;\nuniform vec4 albedoScaleAndCutoff;\nvec4 packDepthToRGBA (float depth) {\nvec4 ret = vec4(1.0, 255.0, 65025.0, 16581375.0) * depth;\nret = fract(ret);\nret -= vec4(ret.yzw, 0.0) / 255.0;\nreturn ret;\n}\nuniform highp mat4 cc_matLightView;\nuniform mediump vec4 cc_shadowNFLSInfo;\nuniform mediump vec4 cc_shadowLPNNInfo;\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\nfloat dist = length(viewPos);\nreturn (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\nvec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\nreturn CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\nuniform highp sampler2D cc_shadowMap;\nuniform highp sampler2D cc_spotLightingMap;\n#endif\nvarying vec2 v_uv;\nvarying vec2 v_uv1;\nvarying vec4 v_worldPos;\nvarying float v_clip_depth;\n#if USE_ALBEDO_MAP\nuniform sampler2D albedoMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvec4 frag () {\nvec4 baseColor = albedo;\n#if USE_ALBEDO_MAP\nbaseColor *= texture2D(albedoMap, ALBEDO_UV);\n#endif\n#if USE_ALPHA_TEST\nif (baseColor.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n#endif\nif(cc_shadowLPNNInfo.x > 0.000001 && cc_shadowLPNNInfo.x < 1.999999) {\nif (cc_shadowNFLSInfo.z > 0.000001) {\nreturn vec4(CCGetLinearDepth(v_worldPos.xyz), 1.0, 1.0, 1.0);\n}\n}\nif (cc_shadowLPNNInfo.y > 0.000001) {\nreturn packDepthToRGBA(v_clip_depth);\n}\nreturn vec4(v_clip_depth, 1.0, 1.0, 1.0);\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nuniform highp mat4 cc_matViewProj;\nuniform highp vec4 cc_cameraPos;\nuniform mediump vec4 cc_fogBase;\nuniform mediump vec4 cc_fogAdd;\nuniform highp mat4 cc_matWorld;\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\n#if !CC_USE_ACCURATE_FOG\nvarying float v_fog_factor;\n#endif\nvoid CC_TRANSFER_FOG(vec4 pos) {\n#if !CC_USE_ACCURATE_FOG\nCC_TRANSFER_FOG_BASE(pos, v_fog_factor);\n#endif\n}\nvarying highp vec4 v_shadowPos;\nuniform highp mat4 cc_matLightViewProj;\n#if CC_RECEIVE_SHADOW\nuniform highp sampler2D cc_shadowMap;\nuniform highp sampler2D cc_spotLightingMap;\n#endif\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nvarying highp vec3 v_position;\nvarying mediump vec3 v_normal;\n#if USE_NORMALMAP\nvarying mediump vec3 v_tangent;\nvarying mediump vec3 v_binormal;\n#endif\nvarying mediump vec2 uvw;\nvarying mediump vec2 uv0;\nvarying mediump vec2 uv1;\nvarying mediump vec2 uv2;\nvarying mediump vec2 uv3;\nvarying mediump vec3 luv;\nvarying mediump vec3 diffuse;\nuniform vec4 UVScale;\nuniform vec4 lightMapUVParam;\nvoid main () {\nvec3 worldPos;\nworldPos.x = cc_matWorld[3][0] + a_position.x;\nworldPos.y = cc_matWorld[3][1] + a_position.y;\nworldPos.z = cc_matWorld[3][2] + a_position.z;\nvec4 pos = vec4(worldPos, 1.0);\npos = cc_matViewProj * pos;\nuvw = a_texCoord;\nuv0 = a_position.xz * UVScale.x;\nuv1 = a_position.xz * UVScale.y;\nuv2 = a_position.xz * UVScale.z;\nuv3 = a_position.xz * UVScale.w;\n#if USE_LIGHTMAP\nluv.xy = lightMapUVParam.xy + a_texCoord * lightMapUVParam.zw;\nluv.z = lightMapUVParam.z;\n#endif\nv_position = worldPos;\nv_normal = a_normal;\nCC_TRANSFER_FOG(vec4(worldPos, 1.0));\n#if USE_NORMALMAP\nv_tangent = vec3(1.0, 0.0, 0.0);\nv_binormal = vec3(0.0, 0.0, 1.0);\nv_binormal = cross(v_tangent, a_normal);\nv_tangent = cross(a_normal, v_binormal);\n#endif\nv_shadowPos = cc_matLightViewProj * vec4(worldPos, 1.0);\ngl_Position = pos;\n}",frag:"\n#ifdef GL_EXT_draw_buffers\n#extension GL_EXT_draw_buffers: enable\n#endif\n#ifdef GL_OES_standard_derivatives\n#extension GL_OES_standard_derivatives: enable\n#endif\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod: enable\n#endif\nprecision highp float;\nuniform highp mat4 cc_matView;\nuniform highp vec4 cc_cameraPos;\nuniform mediump vec4 cc_mainLitDir;\nuniform mediump vec4 cc_mainLitColor;\nuniform mediump vec4 cc_ambientSky;\nuniform mediump vec4 cc_ambientGround;\nuniform mediump vec4 cc_fogColor;\nuniform mediump vec4 cc_fogBase;\nuniform mediump vec4 cc_fogAdd;\nuniform mediump vec4 cc_nearFar;\nuniform mediump vec4 cc_viewPort;\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nuniform highp mat4 cc_matLightView;\nuniform highp vec4 cc_shadowInvProjDepthInfo;\nuniform highp vec4 cc_shadowProjDepthInfo;\nuniform highp vec4 cc_shadowProjInfo;\nuniform mediump vec4 cc_shadowNFLSInfo;\nuniform mediump vec4 cc_shadowWHPBInfo;\nuniform mediump vec4 cc_shadowLPNNInfo;\nhighp float unpackHighpData (float mainPart, float modPart) {\nhighp float data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out float mainPart, out float modPart, highp float data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp float unpackHighpData (float mainPart, float modPart, const float modValue) {\nhighp float data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out float mainPart, out float modPart, highp float data, const float modValue) {\nhighp float divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec2 unpackHighpData (vec2 mainPart, vec2 modPart) {\nhighp vec2 data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out vec2 mainPart, out vec2 modPart, highp vec2 data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp vec2 unpackHighpData (vec2 mainPart, vec2 modPart, const float modValue) {\nhighp vec2 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out vec2 mainPart, out vec2 modPart, highp vec2 data, const float modValue) {\nhighp vec2 divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec3 unpackHighpData (vec3 mainPart, vec3 modPart) {\nhighp vec3 data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out vec3 mainPart, out vec3 modPart, highp vec3 data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp vec3 unpackHighpData (vec3 mainPart, vec3 modPart, const float modValue) {\nhighp vec3 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out vec3 mainPart, out vec3 modPart, highp vec3 data, const float modValue) {\nhighp vec3 divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec4 unpackHighpData (vec4 mainPart, vec4 modPart) {\nhighp vec4 data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out vec4 mainPart, out vec4 modPart, highp vec4 data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp vec4 unpackHighpData (vec4 mainPart, vec4 modPart, const float modValue) {\nhighp vec4 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out vec4 mainPart, out vec4 modPart, highp vec4 data, const float modValue) {\nhighp vec4 divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\nfloat dist = length(viewPos);\nreturn (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\nvec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\nreturn CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\nuniform highp sampler2D cc_shadowMap;\nuniform highp sampler2D cc_spotLightingMap;\nvec4 ApplyShadowDepthBias_FaceNormal(vec4 shadowPos, vec3 worldNormal)\n{\nvec4 newShadowPos = shadowPos;\nif(cc_shadowLPNNInfo.z > 0.0001)\n{\nvec4 viewNormal = cc_matLightView * vec4(worldNormal, 0.0);\nif(viewNormal.z < 0.1)\nnewShadowPos.xy += viewNormal.xy * cc_shadowProjInfo.xy * cc_shadowLPNNInfo.z * clamp(viewNormal.z, 0.001, 0.1);\n}\nreturn newShadowPos;\n}\nvec4 ApplyShadowDepthBias_Perspective(vec4 shadowPos, float viewspaceDepthBias)\n{\nvec3 viewSpacePos;\nviewSpacePos.xy = shadowPos.xy * cc_shadowProjInfo.zw;\nviewSpacePos.z = shadowPos.z * cc_shadowInvProjDepthInfo.x + shadowPos.w * cc_shadowInvProjDepthInfo.y;\nviewSpacePos.xyz += cc_shadowProjDepthInfo.z * normalize(viewSpacePos.xyz) * viewspaceDepthBias;\nvec4 clipSpacePos;\nclipSpacePos.xy = viewSpacePos.xy * cc_shadowProjInfo.xy;\nclipSpacePos.zw = viewSpacePos.z * cc_shadowProjDepthInfo.xz + vec2(cc_shadowProjDepthInfo.y, 0.0);\nif (cc_shadowNFLSInfo.z > 0.000001) {\nclipSpacePos.z = CCGetLinearDepthFromViewSpace(viewSpacePos.xyz);\nclipSpacePos.z = (clipSpacePos.z * 2.0 - 1.0) * clipSpacePos.w;\n}\nreturn clipSpacePos;\n}\nvec4 ApplyShadowDepthBias_Orthographic(vec4 shadowPos, float viewspaceDepthBias)\n{\nfloat coeffA = cc_shadowProjDepthInfo.x;\nfloat coeffB = cc_shadowProjDepthInfo.y;\nfloat viewSpacePos_z = (shadowPos.z - coeffB) / coeffA;\nviewSpacePos_z += viewspaceDepthBias;\nvec4 result = shadowPos;\nresult.z = viewSpacePos_z * coeffA + coeffB;\nreturn result;\n}\nfloat CCGetShadowFactorHard (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture2D(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture2D(cc_shadowMap, clipPos.xy).x;\n}\nshadow = step(clipPos.z, closestDepth);\nreturn shadow;\n}\nfloat CCGetShadowFactorSoft (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * mapSize.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetShadowFactorSoft2X (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\nfloat CCGetSpotLightShadowFactorHard (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nfloat depth = clipPos.z;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture2D(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture2D(cc_spotLightingMap, clipPos.xy).x;\n}\nshadow = step(depth, closestDepth);\nreturn shadow;\n}\nfloat CCGetSpotLightShadowFactorSoft (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nfloat bias = cc_shadowWHPBInfo.w;\nvec2 oneTap = 1.0 / cc_shadowWHPBInfo.xy;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * cc_shadowWHPBInfo.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * cc_shadowWHPBInfo.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetSpotLightShadowFactorSoft2X (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nfloat bias = cc_shadowWHPBInfo.w;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\n#endif\n#if CC_USE_IBL\nuniform samplerCube cc_environment;\nvec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\n#ifdef GL_EXT_shader_texture_lod\nreturn texture2DLodEXT(tex, coord, lod);\n#else\nreturn texture2D(tex, coord, lod);\n#endif\n}\nvec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\n#ifdef GL_EXT_shader_texture_lod\nreturn textureCubeLodEXT(tex, coord, lod);\n#else\nreturn textureCube(tex, coord, lod);\n#endif\n}\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n}\n#if CC_USE_DIFFUSEMAP\nuniform samplerCube cc_diffuseMap;\n#endif\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\nvec3 NxH = cross(N, H);\nfloat OneMinusNoHSqr = dot(NxH, NxH);\nfloat a = roughness * roughness;\nfloat n = NoH * a;\nfloat p = a / (OneMinusNoHSqr + n * n);\nreturn p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\nreturn (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\nconst vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\nconst vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\nvec4 r = roughness * c0 + c1;\nfloat a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\nvec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\nAB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\nreturn specular * AB.x + AB.y;\n}\n#if USE_REFLECTION_DENOISE\nvec3 GetEnvReflectionWithMipFiltering(vec3 R, float roughness, float mipCount, float denoiseIntensity) {\n#if CC_USE_IBL\nfloat mip = roughness * mipCount;\nfloat delta = (dot(dFdx(R), dFdy(R))) * 1000.0;\nfloat mipBias = mix(0.0, 5.0, clamp(delta, 0.0, 1.0));\nvec4 biased = fragTextureLod(cc_environment, R, mip + mipBias);\nvec4 filtered = textureCube(cc_environment, R);\n#if CC_USE_IBL == 2\nbiased.rgb = unpackRGBE(biased);\nfiltered.rgb = unpackRGBE(filtered);\n#else\nbiased.rgb = SRGBToLinear(biased.rgb);\nfiltered.rgb = SRGBToLinear(filtered.rgb);\n#endif\nreturn mix(biased.rgb, filtered.rgb, denoiseIntensity);\n#else\nreturn vec3(0.0, 0.0, 0.0);\n#endif\n}\n#endif\nstruct StandardSurface {\nvec4 albedo;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nvec3 position, position_fract_part;\n#else\nvec3 position;\n#endif\nvec3 normal;\nvec3 emissive;\nvec3 lightmap;\nfloat lightmap_test;\nfloat roughness;\nfloat metallic;\nfloat occlusion;\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 L = normalize(-cc_mainLitDir.xyz);\nvec3 H = normalize(L + V);\nfloat NH = max(dot(N, H), 0.0);\nfloat NL = max(dot(N, L), 0.0);\nvec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\nvec3 diffuseContrib = diffuse;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nif (s.lightmap_test > 0.0001) {\nfinalColor = s.lightmap.rgb;\n}\n#else\ndiffuseContrib /= 3.14159265359;\n#endif\nvec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\nvec3 dirlightContrib = (diffuseContrib + specularContrib);\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (NL > 0.0 && cc_mainLitDir.w > 0.0) {\n{\nvec4 pos = ApplyShadowDepthBias_FaceNormal(shadowPos, N);\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetShadowFactorSoft2X(pos);\nelse if (pcf > 0.9) shadow = CCGetShadowFactorSoft(pos);\nelse shadow = CCGetShadowFactorHard(pos);\nshadow = mix(shadow, 1.0, cc_shadowNFLSInfo.w);\n}\n}\n#endif\ndirlightContrib *= shadow;\nfinalColor *= dirlightContrib;\nfloat fAmb = 0.5 - N.y * 0.5;\nvec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb);\n#if CC_USE_IBL\n#if CC_USE_DIFFUSEMAP\nvec4 diffuseMap = textureCube(cc_diffuseMap, N);\n#if CC_USE_DIFFUSEMAP == 2\nambDiff = unpackRGBE(diffuseMap);\n#else\nambDiff = SRGBToLinear(diffuseMap.rgb);\n#endif\n#endif\nvec3 R = normalize(reflect(-V, N));\n#if USE_REFLECTION_DENOISE\nvec3 env = GetEnvReflectionWithMipFiltering(R, s.roughness, cc_ambientGround.w, 0.6);\n#else\nvec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n#if CC_USE_IBL == 2\nvec3 env = unpackRGBE(envmap);\n#else\nvec3 env = SRGBToLinear(envmap.rgb);\n#endif\n#endif\nfinalColor += env * cc_ambientSky.w * specular * s.occlusion;\n#endif\nfinalColor += ambDiff.rgb * cc_ambientSky.w * diffuse * s.occlusion;\nfinalColor += s.emissive;\nreturn vec4(finalColor, s.albedo.a);\n}\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = ACESToneMap(color.rgb);\n#endif\ncolor.rgb = sqrt(color.rgb);\nreturn color;\n}\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\nvoid CC_APPLY_FOG_BASE(inout vec4 color, float factor) {\ncolor = vec4(mix(cc_fogColor.rgb, color.rgb, factor), color.a);\n}\n#if !CC_USE_ACCURATE_FOG\nvarying float v_fog_factor;\n#endif\nvoid CC_APPLY_FOG(inout vec4 color) {\n#if !CC_USE_ACCURATE_FOG\nCC_APPLY_FOG_BASE(color, v_fog_factor);\n#endif\n}\nvoid CC_APPLY_FOG(inout vec4 color, vec3 worldPos) {\n#if CC_USE_ACCURATE_FOG\nfloat factor;\nCC_TRANSFER_FOG_BASE(vec4(worldPos, 1.0), factor);\n#else\nfloat factor = v_fog_factor;\n#endif\nCC_APPLY_FOG_BASE(color, factor);\n}\nvarying highp vec4 v_shadowPos;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nvarying vec3 v_luv;\nuniform sampler2D cc_lightingMap;\nvec3 UnpackLightingmap(vec4 color) {\nvec3 c;\nfloat e = 1.0 + color.a * (8.0 - 1.0);\nc.r = color.r * e;\nc.g = color.g * e;\nc.b = color.b * e;\nreturn c;\n}\n#endif\nvarying highp vec3 v_position;\nvarying mediump vec3 v_normal;\n#if USE_NORMALMAP\nvarying mediump vec3 v_tangent;\nvarying mediump vec3 v_binormal;\n#endif\nvarying mediump vec2 uvw;\nvarying mediump vec2 uv0;\nvarying mediump vec2 uv1;\nvarying mediump vec2 uv2;\nvarying mediump vec2 uv3;\nvarying mediump vec3 diffuse;\nvarying mediump vec3 luv;\nuniform vec4 metallic;\nuniform vec4 roughness;\nuniform sampler2D weightMap;\nuniform sampler2D detailMap0;\nuniform sampler2D detailMap1;\nuniform sampler2D detailMap2;\nuniform sampler2D detailMap3;\nuniform sampler2D normalMap0;\nuniform sampler2D normalMap1;\nuniform sampler2D normalMap2;\nuniform sampler2D normalMap3;\nuniform sampler2D lightMap;\nvoid surf (out StandardSurface s) {\n#if LAYERS > 1\nvec4 w = texture2D(weightMap, uvw);\n#endif\nvec4 baseColor = vec4(0, 0, 0, 0);\n#if LAYERS == 1\nbaseColor = texture2D(detailMap0, uv0);\n#elif LAYERS == 2\nbaseColor += texture2D(detailMap0, uv0) * w.r;\nbaseColor += texture2D(detailMap1, uv1) * w.g;\n#elif LAYERS == 3\nbaseColor += texture2D(detailMap0, uv0) * w.r;\nbaseColor += texture2D(detailMap1, uv1) * w.g;\nbaseColor += texture2D(detailMap2, uv2) * w.b;\n#elif LAYERS == 4\nbaseColor += texture2D(detailMap0, uv0) * w.r;\nbaseColor += texture2D(detailMap1, uv1) * w.g;\nbaseColor += texture2D(detailMap2, uv2) * w.b;\nbaseColor += texture2D(detailMap3, uv3) * w.a;\n#else\nbaseColor = texture2D(detailMap0, uv0);\n#endif\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\npackHighpData(s.position, s.position_fract_part, v_position);\n#else\ns.position = v_position;\n#endif\n#if USE_NORMALMAP\nvec4 baseNormal = vec4(0, 0, 0, 0);\n#if LAYERS == 1\nbaseNormal = texture2D(normalMap0, uv0);\n#elif LAYERS == 2\nbaseNormal += texture2D(normalMap0, uv0) * w.r;\nbaseNormal += texture2D(normalMap1, uv1) * w.g;\n#elif LAYERS == 3\nbaseNormal += texture2D(normalMap0, uv0) * w.r;\nbaseNormal += texture2D(normalMap1, uv1) * w.g;\nbaseNormal += texture2D(normalMap2, uv2) * w.b;\n#elif LAYERS == 4\nbaseNormal += texture2D(normalMap0, uv0) * w.r;\nbaseNormal += texture2D(normalMap1, uv1) * w.g;\nbaseNormal += texture2D(normalMap2, uv2) * w.b;\nbaseNormal += texture2D(normalMap3, uv3) * w.a;\n#else\nbaseNormal = texture2D(normalMap0, uv0);\n#endif\nvec3 nmmp = baseNormal.xyz - vec3(0.5);\ns.normal =\nnmmp.x * normalize(v_tangent) +\nnmmp.y * normalize(v_binormal) +\nnmmp.z * normalize(v_normal);\n#else\ns.normal = v_normal;\n#endif\ns.albedo = vec4(SRGBToLinear(baseColor.rgb), 1.0);\ns.occlusion = 1.0;\n#if USE_PBR\ns.roughness = 0.0;\n#if LAYERS == 1\ns.roughness = roughness.x;\n#elif LAYERS == 2\ns.roughness += roughness.x * w.r;\ns.roughness += roughness.y * w.g;\n#elif LAYERS == 3\ns.roughness += roughness.x * w.r;\ns.roughness += roughness.y * w.g;\ns.roughness += roughness.z * w.b;\n#elif LAYERS == 4\ns.roughness += roughness.x * w.r;\ns.roughness += roughness.y * w.g;\ns.roughness += roughness.z * w.b;\ns.roughness += roughness.w * w.a;\n#else\ns.roughness = 1.0;\n#endif\ns.metallic = 0.0;\n#if LAYERS == 1\ns.metallic = metallic.x;\n#elif LAYERS == 2\ns.metallic += metallic.x * w.r;\ns.metallic += metallic.y * w.g;\n#elif LAYERS == 3\ns.metallic += metallic.x * w.r;\ns.metallic += metallic.y * w.g;\ns.metallic += metallic.z * w.b;\n#elif LAYERS == 4\ns.metallic += metallic.x * w.r;\ns.metallic += metallic.y * w.g;\ns.metallic += metallic.z * w.b;\ns.metallic += metallic.w * w.a;\n#else\ns.metallic = 0.0;\n#endif\n#else\ns.roughness = 1.0;\ns.metallic = 0.0;\n#endif\ns.emissive = vec3(0.0, 0.0, 0.0);\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nvec4 lightColor = texture2D(lightMap, luv.xy);\ns.lightmap = UnpackLightingmap(lightColor);\ns.lightmap_test = luv.z;\n#endif\n}\n#if CC_FORWARD_ADD\n#if CC_PIPELINE_TYPE == 0\n# define LIGHTS_PER_PASS 1\n#else\n# define LIGHTS_PER_PASS 10\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nuniform highp vec4 cc_lightPos[LIGHTS_PER_PASS];\nuniform vec4 cc_lightColor[LIGHTS_PER_PASS];\nuniform vec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\nuniform vec4 cc_lightDir[LIGHTS_PER_PASS];\n#endif\nfloat SmoothDistAtt (float distSqr, float invSqrAttRadius) {\nfloat factor = distSqr * invSqrAttRadius;\nfloat smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\nreturn smoothFactor * smoothFactor;\n}\nfloat GetDistAtt (float distSqr, float invSqrAttRadius) {\nfloat attenuation = 1.0 / max(distSqr, 0.01*0.01);\nattenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\nreturn attenuation;\n}\nfloat GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\nfloat cd = dot(litDir, L);\nfloat attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\nreturn (attenuation * attenuation);\n}\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nvec4 CCStandardShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / 3.14159265359;\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nint numLights = CC_PIPELINE_TYPE == 0 ? LIGHTS_PER_PASS : int(cc_lightDir[0].w);\nfor (int i = 0; i < LIGHTS_PER_PASS; i++) {\nif (i >= numLights) break;\nvec3 SLU = cc_lightPos[i].xyz - position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.0);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = cc_lightSizeRangeAngle[i].x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (cc_lightPos[i].w > 0.0) {\nfloat cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\nfloat cosOuter = cc_lightSizeRangeAngle[i].z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = cc_lightColor[i].rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (cc_lightPos[i].w > 0.0 && cc_lightSizeRangeAngle[i].w > 0.0) {\n{\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetSpotLightShadowFactorSoft2X(shadowPos, position);\nelse if (pcf > 0.9) shadow = CCGetSpotLightShadowFactorSoft(shadowPos, position);\nelse shadow = CCGetSpotLightShadowFactorHard(shadowPos, position);\n}\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nreadonly buffer b_ccLightsBuffer { vec4 b_ccLights[]; };\nreadonly buffer b_clusterLightIndicesBuffer { uint b_clusterLightIndices[]; };\nreadonly buffer b_clusterLightGridBuffer { uvec4 b_clusterLightGrid[]; };\nstruct CCLight\n{\nvec4 cc_lightPos;\nvec4 cc_lightColor;\nvec4 cc_lightSizeRangeAngle;\nvec4 cc_lightDir;\n};\nstruct Cluster\n{\nvec3 minBounds;\nvec3 maxBounds;\n};\nstruct LightGrid\n{\nuint offset;\nuint ccLights;\n};\nCCLight getCCLight(uint i)\n{\nCCLight light;\nlight.cc_lightPos = b_ccLights[4u * i + 0u];\nlight.cc_lightColor = b_ccLights[4u * i + 1u];\nlight.cc_lightSizeRangeAngle = b_ccLights[4u * i + 2u];\nlight.cc_lightDir = b_ccLights[4u * i + 3u];\nreturn light;\n}\nLightGrid getLightGrid(uint cluster)\n{\nuvec4 gridvec = b_clusterLightGrid[cluster];\nLightGrid grid;\ngrid.offset = gridvec.x;\ngrid.ccLights = gridvec.y;\nreturn grid;\n}\nuint getGridLightIndex(uint start, uint offset)\n{\nreturn b_clusterLightIndices[start + offset];\n}\nuint getClusterZIndex(vec4 worldPos)\n{\nfloat scale = float(24) / log(cc_nearFar.y / cc_nearFar.x);\nfloat bias = -(float(24) * log(cc_nearFar.x) / log(cc_nearFar.y / cc_nearFar.x));\nfloat eyeDepth = -(cc_matView * worldPos).z;\nuint zIndex = uint(max(log(eyeDepth) * scale + bias, 0.0));\nreturn zIndex;\n}\nuint getClusterIndex(vec4 fragCoord, vec4 worldPos)\n{\nuint zIndex = getClusterZIndex(worldPos);\nfloat clusterSizeX = ceil(cc_viewPort.z / float(16));\nfloat clusterSizeY = ceil(cc_viewPort.w / float(8));\nuvec3 indices = uvec3(uvec2(fragCoord.xy / vec2(clusterSizeX, clusterSizeY)), zIndex);\nuint cluster = (16u * 8u) * indices.z + 16u * indices.y + indices.x;\nreturn cluster;\n}\nvec4 CCClusterShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / 3.14159265359;\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.001);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nuint cluster = getClusterIndex(gl_FragCoord, vec4(position, 1.0));\nLightGrid grid = getLightGrid(cluster);\nuint numLights = grid.ccLights;\nfor (uint i = 0u; i < 100u; i++) {\nif (i >= numLights) break;\nuint lightIndex = getGridLightIndex(grid.offset, i);\nCCLight light = getCCLight(lightIndex);\nvec3 SLU = light.cc_lightPos.xyz - position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.001);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = light.cc_lightSizeRangeAngle.x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(light.cc_lightSizeRangeAngle.y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (light.cc_lightPos.w > 0.0) {\nfloat cosInner = max(dot(-light.cc_lightDir.xyz, SL), 0.01);\nfloat cosOuter = light.cc_lightSizeRangeAngle.z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -light.cc_lightDir.xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = light.cc_lightColor.rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (light.cc_lightPos.w > 0.0) {\n{\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetSpotLightShadowFactorSoft2X(shadowPos, position);\nelse if (pcf > 0.9) shadow = CCGetSpotLightShadowFactorSoft(shadowPos, position);\nelse shadow = CCGetSpotLightShadowFactorHard(shadowPos, position);\n}\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * light.cc_lightColor.w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\nvoid main () {\nStandardSurface s; surf(s);\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nvec4 color = CCClusterShadingAdditive(s, v_shadowPos);\n#else\nvec4 color = CCStandardShadingAdditive(s, v_shadowPos);\n#endif\nCC_APPLY_FOG(color, s.position.xyz);\ngl_FragData[0] = CCFragOutput(color);\n}\n#elif (CC_PIPELINE_TYPE == 0 || CC_FORCE_FORWARD_SHADING)\nvoid main () {\nStandardSurface s; surf(s);\nvec4 color = CCStandardShadingBase(s, v_shadowPos);\nCC_APPLY_FOG(color, s.position.xyz);\ngl_FragData[0] = CCFragOutput(color);\n}\n#elif CC_PIPELINE_TYPE == 1\nvec2 signNotZero(vec2 v) {\nreturn vec2((v.x >= 0.0) ? +1.0 : -1.0, (v.y >= 0.0) ? +1.0 : -1.0);\n}\nvec2 float32x3_to_oct(in vec3 v) {\nvec2 p = v.xy * (1.0 / (abs(v.x) + abs(v.y) + abs(v.z)));\nreturn (v.z <= 0.0) ? ((1.0 - abs(p.yx)) * signNotZero(p)) : p;\n}\nvoid main () {\nStandardSurface s; surf(s);\ngl_FragData[0] = s.albedo;\ngl_FragData[1] = vec4(float32x3_to_oct(s.normal), s.roughness, s.metallic);\ngl_FragData[2] = vec4(s.emissive, s.occlusion);\n}\n#endif"},{vert:"\nprecision highp float;\nuniform highp mat4 cc_matWorld;\nuniform highp mat4 cc_matLightViewProj;\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nvarying vec2 v_clip_depth;\nvec4 vert () {\nvec4 worldPos;\nworldPos.x = cc_matWorld[3][0] + a_position.x;\nworldPos.y = cc_matWorld[3][1] + a_position.y;\nworldPos.z = cc_matWorld[3][2] + a_position.z;\nworldPos.w = 1.0;\nvec4 clipPos = cc_matLightViewProj * worldPos;\nv_clip_depth = clipPos.zw;\nreturn clipPos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec4 packDepthToRGBA (float depth) {\nvec4 ret = vec4(1.0, 255.0, 65025.0, 16581375.0) * depth;\nret = fract(ret);\nret -= vec4(ret.yzw, 0.0) / 255.0;\nreturn ret;\n}\nvarying vec2 v_clip_depth;\nvec4 frag () {\nreturn packDepthToRGBA(v_clip_depth.x / v_clip_depth.y * 0.5 + 0.5);\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_MORPH\nattribute float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nuniform vec4 cc_displacementWeights[15];\nuniform vec4 cc_displacementTextureInfo;\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\nreturn texture2D(tex, uv);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture2D(tex, x)),\ndecode32(texture2D(tex, y)),\ndecode32(texture2D(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nattribute vec4 a_joints;\nattribute vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nattribute highp vec4 a_jointAnimInfo;\n#endif\nuniform highp vec4 cc_jointTextureInfo;\nuniform highp vec4 cc_jointAnimInfo;\nuniform highp sampler2D cc_jointTexture;\n#else\nuniform highp vec4 cc_joints[90];\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matProj;\nuniform highp vec4 cc_cameraPos;\nuniform mediump vec4 cc_fogBase;\nuniform mediump vec4 cc_fogAdd;\n#if USE_INSTANCING\nattribute vec4 a_matWorld0;\nattribute vec4 a_matWorld1;\nattribute vec4 a_matWorld2;\n#if USE_LIGHTMAP\nattribute vec4 a_lightingMapUVParam;\n#endif\n#elif USE_BATCHING\nattribute float a_dyn_batch_id;\nuniform highp mat4 cc_matWorlds[10];\n#else\nuniform highp mat4 cc_matWorld;\n#endif\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\n#if !CC_USE_ACCURATE_FOG\nvarying float v_fog_factor;\n#endif\nvoid CC_TRANSFER_FOG(vec4 pos) {\n#if !CC_USE_ACCURATE_FOG\nCC_TRANSFER_FOG_BASE(pos, v_fog_factor);\n#endif\n}\n#if USE_VERTEX_COLOR\nattribute lowp vec4 a_color;\nvarying lowp vec4 v_color;\n#endif\n#if USE_TEXTURE\nvarying vec2 v_uv;\nuniform vec4 tilingOffset;\n#endif\nvec4 vert () {\nvec4 position;\nposition = vec4(a_position, 1.0);\n#if CC_USE_MORPH\napplyMorph(position);\n#endif\n#if CC_USE_SKINNING\nCCSkin(position);\n#endif\nmat4 matWorld;\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\n#else\nmatWorld = cc_matWorld;\n#endif\n#if USE_TEXTURE\nv_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n#if SAMPLE_FROM_RT\nv_uv = cc_cameraPos.w > 1.0 ? vec2(v_uv.x, 1.0 - v_uv.y) : v_uv;\n#endif\n#endif\n#if USE_VERTEX_COLOR\nv_color = a_color;\n#endif\nCC_TRANSFER_FOG(matWorld * position);\nreturn cc_matProj * (cc_matView * matWorld) * position;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = ACESToneMap(color.rgb);\n#endif\ncolor.rgb = sqrt(color.rgb);\nreturn color;\n}\nuniform highp vec4 cc_cameraPos;\nuniform mediump vec4 cc_fogColor;\nuniform mediump vec4 cc_fogBase;\nuniform mediump vec4 cc_fogAdd;\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\nvoid CC_APPLY_FOG_BASE(inout vec4 color, float factor) {\ncolor = vec4(mix(cc_fogColor.rgb, color.rgb, factor), color.a);\n}\n#if !CC_USE_ACCURATE_FOG\nvarying float v_fog_factor;\n#endif\nvoid CC_APPLY_FOG(inout vec4 color) {\n#if !CC_USE_ACCURATE_FOG\nCC_APPLY_FOG_BASE(color, v_fog_factor);\n#endif\n}\nvoid CC_APPLY_FOG(inout vec4 color, vec3 worldPos) {\n#if CC_USE_ACCURATE_FOG\nfloat factor;\nCC_TRANSFER_FOG_BASE(vec4(worldPos, 1.0), factor);\n#else\nfloat factor = v_fog_factor;\n#endif\nCC_APPLY_FOG_BASE(color, factor);\n}\n#if USE_ALPHA_TEST\n#endif\n#if USE_TEXTURE\nvarying vec2 v_uv;\nuniform sampler2D mainTexture;\n#endif\nuniform vec4 mainColor;\nuniform vec4 colorScaleAndCutoff;\n#if USE_VERTEX_COLOR\nvarying lowp vec4 v_color;\n#endif\nvec4 frag () {\nvec4 o = mainColor;\no.rgb *= colorScaleAndCutoff.xyz;\n#if USE_VERTEX_COLOR\no.rgb *= SRGBToLinear(v_color.rgb);\no.a *= v_color.a;\n#endif\n#if USE_TEXTURE\nvec4 texColor = texture2D(mainTexture, v_uv);\ntexColor.rgb = SRGBToLinear(texColor.rgb);\no *= texColor;\n#endif\n#if USE_ALPHA_TEST\nif (o.ALPHA_TEST_CHANNEL < colorScaleAndCutoff.w) discard;\n#endif\nCC_APPLY_FOG(o);\nreturn CCFragOutput(o);\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_MORPH\nattribute float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nuniform vec4 cc_displacementWeights[15];\nuniform vec4 cc_displacementTextureInfo;\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\nreturn texture2D(tex, uv);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture2D(tex, x)),\ndecode32(texture2D(tex, y)),\ndecode32(texture2D(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nattribute vec4 a_joints;\nattribute vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nattribute highp vec4 a_jointAnimInfo;\n#endif\nuniform highp vec4 cc_jointTextureInfo;\nuniform highp vec4 cc_jointAnimInfo;\nuniform highp sampler2D cc_jointTexture;\n#else\nuniform highp vec4 cc_joints[90];\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nuniform highp vec4 cc_cameraPos;\nvarying vec2 v_uv;\nvoid main () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nIn.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\ngl_Position = In.position;\ngl_Position.y = gl_Position.y;\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvarying vec2 v_uv;\nuniform mediump vec4 texSize;\nuniform sampler2D outputResultMap;\nfloat luminance(vec3 color) {\nreturn dot(color, vec3(0.2126, 0.7152, 0.0722));\n}\nvoid main() {\nvec3 color = texture2D(outputResultMap, v_uv).xyz;\nif (luminance(SRGBToLinear(color)) > texSize.z) {\ngl_FragColor = vec4(color, 1.0);\n} else {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n}\n}"},{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_MORPH\nattribute float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nuniform vec4 cc_displacementWeights[15];\nuniform vec4 cc_displacementTextureInfo;\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\nreturn texture2D(tex, uv);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture2D(tex, x)),\ndecode32(texture2D(tex, y)),\ndecode32(texture2D(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nattribute vec4 a_joints;\nattribute vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nattribute highp vec4 a_jointAnimInfo;\n#endif\nuniform highp vec4 cc_jointTextureInfo;\nuniform highp vec4 cc_jointAnimInfo;\nuniform highp sampler2D cc_jointTexture;\n#else\nuniform highp vec4 cc_joints[90];\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nuniform highp vec4 cc_cameraPos;\nvarying vec2 v_uv;\nvoid main () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nIn.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\ngl_Position = In.position;\ngl_Position.y = gl_Position.y;\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nvarying vec2 v_uv;\nuniform mediump vec4 texSize;\nuniform sampler2D bloomTexture;\nvec3 downsample4taps(vec2 uv, vec2 halfpixel) {\nvec3 sum = texture2D(bloomTexture, uv + vec2(-halfpixel.x, halfpixel.y)).xyz;\nsum += texture2D(bloomTexture, uv + vec2(halfpixel.x, halfpixel.y)).xyz;\nsum += texture2D(bloomTexture, uv + vec2(halfpixel.x, -halfpixel.y)).xyz;\nsum += texture2D(bloomTexture, uv + vec2(-halfpixel.x, -halfpixel.y)).xyz;\nreturn sum / 4.0;\n}\nvoid main()\n{\nvec3 result = downsample4taps(v_uv, 1.0 / texSize.xy).rgb;\ngl_FragColor = vec4(result, 1.0);\n}"},{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_MORPH\nattribute float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nuniform vec4 cc_displacementWeights[15];\nuniform vec4 cc_displacementTextureInfo;\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\nreturn texture2D(tex, uv);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture2D(tex, x)),\ndecode32(texture2D(tex, y)),\ndecode32(texture2D(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nattribute vec4 a_joints;\nattribute vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nattribute highp vec4 a_jointAnimInfo;\n#endif\nuniform highp vec4 cc_jointTextureInfo;\nuniform highp vec4 cc_jointAnimInfo;\nuniform highp sampler2D cc_jointTexture;\n#else\nuniform highp vec4 cc_joints[90];\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nuniform highp vec4 cc_cameraPos;\nvarying vec2 v_uv;\nvoid main () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nIn.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\ngl_Position = In.position;\ngl_Position.y = gl_Position.y;\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nvarying vec2 v_uv;\nuniform mediump vec4 texSize;\nuniform sampler2D bloomTexture;\nvec3 upsample4taps(vec2 uv, vec2 halfpixel) {\nvec3 sum = texture2D(bloomTexture, uv + vec2(-halfpixel.x, halfpixel.y)).xyz;\nsum += texture2D(bloomTexture, uv + vec2(halfpixel.x, halfpixel.y)).xyz;\nsum += texture2D(bloomTexture, uv + vec2(halfpixel.x, -halfpixel.y)).xyz;\nsum += texture2D(bloomTexture, uv + vec2(-halfpixel.x, -halfpixel.y)).xyz;\nreturn sum / 4.0;\n}\nvoid main() {\nvec3 result = upsample4taps(v_uv, 0.5 / texSize.xy).rgb;\ngl_FragColor = vec4(result, 1.0);\n}"},{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_MORPH\nattribute float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nuniform vec4 cc_displacementWeights[15];\nuniform vec4 cc_displacementTextureInfo;\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\nreturn texture2D(tex, uv);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture2D(tex, x)),\ndecode32(texture2D(tex, y)),\ndecode32(texture2D(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nattribute vec4 a_joints;\nattribute vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nattribute highp vec4 a_jointAnimInfo;\n#endif\nuniform highp vec4 cc_jointTextureInfo;\nuniform highp vec4 cc_jointAnimInfo;\nuniform highp sampler2D cc_jointTexture;\n#else\nuniform highp vec4 cc_joints[90];\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nuniform highp vec4 cc_cameraPos;\nvarying vec2 v_uv;\nvoid main () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nIn.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\ngl_Position = In.position;\ngl_Position.y = gl_Position.y;\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nvarying vec2 v_uv;\nuniform mediump vec4 texSize;\nuniform sampler2D outputResultMap;\nuniform sampler2D bloomTexture;\nvoid main() {\nvec4 hdrColor = texture2D(outputResultMap, v_uv);\nvec3 bloomColor = texture2D(bloomTexture, v_uv).rgb;\nvec3 result = hdrColor.rgb + bloomColor * texSize.w * hdrColor.a;\ngl_FragColor = vec4(result, hdrColor.a);\n}"}],[{vert:"\nprecision highp float;\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\nuniform highp vec4 cc_cameraPos;\nvarying vec2 v_uv;\nvoid main () {\nvec4 position;\nposition = vec4(a_position, 1.0);\nposition.xy = cc_cameraPos.w == 0.0 ? vec2(position.xy.x, -position.xy.y) : position.xy;\ngl_Position = vec4(position.x, position.y, 1.0, 1.0);\nv_uv = a_texCoord;\n}",frag:"\n#ifdef GL_EXT_shader_framebuffer_fetch\n#extension GL_EXT_shader_framebuffer_fetch: enable\n#endif\n#ifdef GL_OES_standard_derivatives\n#extension GL_OES_standard_derivatives: enable\n#endif\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod: enable\n#endif\nprecision highp float;\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matViewProjInv;\nuniform highp vec4 cc_cameraPos;\nuniform mediump vec4 cc_mainLitDir;\nuniform mediump vec4 cc_mainLitColor;\nuniform mediump vec4 cc_ambientSky;\nuniform mediump vec4 cc_ambientGround;\nuniform mediump vec4 cc_fogColor;\nuniform mediump vec4 cc_fogBase;\nuniform mediump vec4 cc_fogAdd;\nuniform mediump vec4 cc_nearFar;\nuniform mediump vec4 cc_viewPort;\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nuniform highp mat4 cc_matLightView;\nuniform highp mat4 cc_matLightViewProj;\nuniform highp vec4 cc_shadowInvProjDepthInfo;\nuniform highp vec4 cc_shadowProjDepthInfo;\nuniform highp vec4 cc_shadowProjInfo;\nuniform mediump vec4 cc_shadowNFLSInfo;\nuniform mediump vec4 cc_shadowWHPBInfo;\nuniform mediump vec4 cc_shadowLPNNInfo;\nhighp float unpackHighpData (float mainPart, float modPart) {\nhighp float data = mainPart;\nreturn data + modPart;\n}\nhighp float unpackHighpData (float mainPart, float modPart, const float modValue) {\nhighp float data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nhighp vec2 unpackHighpData (vec2 mainPart, vec2 modPart) {\nhighp vec2 data = mainPart;\nreturn data + modPart;\n}\nhighp vec2 unpackHighpData (vec2 mainPart, vec2 modPart, const float modValue) {\nhighp vec2 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nhighp vec3 unpackHighpData (vec3 mainPart, vec3 modPart) {\nhighp vec3 data = mainPart;\nreturn data + modPart;\n}\nhighp vec3 unpackHighpData (vec3 mainPart, vec3 modPart, const float modValue) {\nhighp vec3 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nhighp vec4 unpackHighpData (vec4 mainPart, vec4 modPart) {\nhighp vec4 data = mainPart;\nreturn data + modPart;\n}\nhighp vec4 unpackHighpData (vec4 mainPart, vec4 modPart, const float modValue) {\nhighp vec4 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\nfloat dist = length(viewPos);\nreturn (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\nvec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\nreturn CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\nuniform highp sampler2D cc_shadowMap;\nuniform highp sampler2D cc_spotLightingMap;\nvec4 ApplyShadowDepthBias_FaceNormal(vec4 shadowPos, vec3 worldNormal)\n{\nvec4 newShadowPos = shadowPos;\nif(cc_shadowLPNNInfo.z > 0.0001)\n{\nvec4 viewNormal = cc_matLightView * vec4(worldNormal, 0.0);\nif(viewNormal.z < 0.1)\nnewShadowPos.xy += viewNormal.xy * cc_shadowProjInfo.xy * cc_shadowLPNNInfo.z * clamp(viewNormal.z, 0.001, 0.1);\n}\nreturn newShadowPos;\n}\nvec4 ApplyShadowDepthBias_Perspective(vec4 shadowPos, float viewspaceDepthBias)\n{\nvec3 viewSpacePos;\nviewSpacePos.xy = shadowPos.xy * cc_shadowProjInfo.zw;\nviewSpacePos.z = shadowPos.z * cc_shadowInvProjDepthInfo.x + shadowPos.w * cc_shadowInvProjDepthInfo.y;\nviewSpacePos.xyz += cc_shadowProjDepthInfo.z * normalize(viewSpacePos.xyz) * viewspaceDepthBias;\nvec4 clipSpacePos;\nclipSpacePos.xy = viewSpacePos.xy * cc_shadowProjInfo.xy;\nclipSpacePos.zw = viewSpacePos.z * cc_shadowProjDepthInfo.xz + vec2(cc_shadowProjDepthInfo.y, 0.0);\nif (cc_shadowNFLSInfo.z > 0.000001) {\nclipSpacePos.z = CCGetLinearDepthFromViewSpace(viewSpacePos.xyz);\nclipSpacePos.z = (clipSpacePos.z * 2.0 - 1.0) * clipSpacePos.w;\n}\nreturn clipSpacePos;\n}\nvec4 ApplyShadowDepthBias_Orthographic(vec4 shadowPos, float viewspaceDepthBias)\n{\nfloat coeffA = cc_shadowProjDepthInfo.x;\nfloat coeffB = cc_shadowProjDepthInfo.y;\nfloat viewSpacePos_z = (shadowPos.z - coeffB) / coeffA;\nviewSpacePos_z += viewspaceDepthBias;\nvec4 result = shadowPos;\nresult.z = viewSpacePos_z * coeffA + coeffB;\nreturn result;\n}\nfloat CCGetShadowFactorHard (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture2D(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture2D(cc_shadowMap, clipPos.xy).x;\n}\nshadow = step(clipPos.z, closestDepth);\nreturn shadow;\n}\nfloat CCGetShadowFactorSoft (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * mapSize.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetShadowFactorSoft2X (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\nfloat CCGetSpotLightShadowFactorHard (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nfloat depth = clipPos.z;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture2D(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture2D(cc_spotLightingMap, clipPos.xy).x;\n}\nshadow = step(depth, closestDepth);\nreturn shadow;\n}\nfloat CCGetSpotLightShadowFactorSoft (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nfloat bias = cc_shadowWHPBInfo.w;\nvec2 oneTap = 1.0 / cc_shadowWHPBInfo.xy;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * cc_shadowWHPBInfo.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * cc_shadowWHPBInfo.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetSpotLightShadowFactorSoft2X (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nfloat bias = cc_shadowWHPBInfo.w;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\n#endif\n#if CC_USE_IBL\nuniform samplerCube cc_environment;\nvec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\n#ifdef GL_EXT_shader_texture_lod\nreturn texture2DLodEXT(tex, coord, lod);\n#else\nreturn texture2D(tex, coord, lod);\n#endif\n}\nvec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\n#ifdef GL_EXT_shader_texture_lod\nreturn textureCubeLodEXT(tex, coord, lod);\n#else\nreturn textureCube(tex, coord, lod);\n#endif\n}\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n}\n#if CC_USE_DIFFUSEMAP\nuniform samplerCube cc_diffuseMap;\n#endif\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\nvec3 NxH = cross(N, H);\nfloat OneMinusNoHSqr = dot(NxH, NxH);\nfloat a = roughness * roughness;\nfloat n = NoH * a;\nfloat p = a / (OneMinusNoHSqr + n * n);\nreturn p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\nreturn (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\nconst vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\nconst vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\nvec4 r = roughness * c0 + c1;\nfloat a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\nvec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\nAB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\nreturn specular * AB.x + AB.y;\n}\n#if USE_REFLECTION_DENOISE\nvec3 GetEnvReflectionWithMipFiltering(vec3 R, float roughness, float mipCount, float denoiseIntensity) {\n#if CC_USE_IBL\nfloat mip = roughness * mipCount;\nfloat delta = (dot(dFdx(R), dFdy(R))) * 1000.0;\nfloat mipBias = mix(0.0, 5.0, clamp(delta, 0.0, 1.0));\nvec4 biased = fragTextureLod(cc_environment, R, mip + mipBias);\nvec4 filtered = textureCube(cc_environment, R);\n#if CC_USE_IBL == 2\nbiased.rgb = unpackRGBE(biased);\nfiltered.rgb = unpackRGBE(filtered);\n#else\nbiased.rgb = SRGBToLinear(biased.rgb);\nfiltered.rgb = SRGBToLinear(filtered.rgb);\n#endif\nreturn mix(biased.rgb, filtered.rgb, denoiseIntensity);\n#else\nreturn vec3(0.0, 0.0, 0.0);\n#endif\n}\n#endif\nstruct StandardSurface {\nvec4 albedo;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nvec3 position, position_fract_part;\n#else\nvec3 position;\n#endif\nvec3 normal;\nvec3 emissive;\nvec3 lightmap;\nfloat lightmap_test;\nfloat roughness;\nfloat metallic;\nfloat occlusion;\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 L = normalize(-cc_mainLitDir.xyz);\nvec3 H = normalize(L + V);\nfloat NH = max(dot(N, H), 0.0);\nfloat NL = max(dot(N, L), 0.0);\nvec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\nvec3 diffuseContrib = diffuse;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nif (s.lightmap_test > 0.0001) {\nfinalColor = s.lightmap.rgb;\n}\n#else\ndiffuseContrib /= 3.14159265359;\n#endif\nvec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\nvec3 dirlightContrib = (diffuseContrib + specularContrib);\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (NL > 0.0 && cc_mainLitDir.w > 0.0) {\n{\nvec4 pos = ApplyShadowDepthBias_FaceNormal(shadowPos, N);\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetShadowFactorSoft2X(pos);\nelse if (pcf > 0.9) shadow = CCGetShadowFactorSoft(pos);\nelse shadow = CCGetShadowFactorHard(pos);\nshadow = mix(shadow, 1.0, cc_shadowNFLSInfo.w);\n}\n}\n#endif\ndirlightContrib *= shadow;\nfinalColor *= dirlightContrib;\nfloat fAmb = 0.5 - N.y * 0.5;\nvec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb);\n#if CC_USE_IBL\n#if CC_USE_DIFFUSEMAP\nvec4 diffuseMap = textureCube(cc_diffuseMap, N);\n#if CC_USE_DIFFUSEMAP == 2\nambDiff = unpackRGBE(diffuseMap);\n#else\nambDiff = SRGBToLinear(diffuseMap.rgb);\n#endif\n#endif\nvec3 R = normalize(reflect(-V, N));\n#if USE_REFLECTION_DENOISE\nvec3 env = GetEnvReflectionWithMipFiltering(R, s.roughness, cc_ambientGround.w, 0.6);\n#else\nvec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n#if CC_USE_IBL == 2\nvec3 env = unpackRGBE(envmap);\n#else\nvec3 env = SRGBToLinear(envmap.rgb);\n#endif\n#endif\nfinalColor += env * cc_ambientSky.w * specular * s.occlusion;\n#endif\nfinalColor += ambDiff.rgb * cc_ambientSky.w * diffuse * s.occlusion;\nfinalColor += s.emissive;\nreturn vec4(finalColor, s.albedo.a);\n}\n#if CC_PIPELINE_TYPE == 0\n# define LIGHTS_PER_PASS 1\n#else\n# define LIGHTS_PER_PASS 10\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nuniform highp vec4 cc_lightPos[LIGHTS_PER_PASS];\nuniform vec4 cc_lightColor[LIGHTS_PER_PASS];\nuniform vec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\nuniform vec4 cc_lightDir[LIGHTS_PER_PASS];\n#endif\nfloat SmoothDistAtt (float distSqr, float invSqrAttRadius) {\nfloat factor = distSqr * invSqrAttRadius;\nfloat smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\nreturn smoothFactor * smoothFactor;\n}\nfloat GetDistAtt (float distSqr, float invSqrAttRadius) {\nfloat attenuation = 1.0 / max(distSqr, 0.01*0.01);\nattenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\nreturn attenuation;\n}\nfloat GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\nfloat cd = dot(litDir, L);\nfloat attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\nreturn (attenuation * attenuation);\n}\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nvec4 CCStandardShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / 3.14159265359;\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nint numLights = CC_PIPELINE_TYPE == 0 ? LIGHTS_PER_PASS : int(cc_lightDir[0].w);\nfor (int i = 0; i < LIGHTS_PER_PASS; i++) {\nif (i >= numLights) break;\nvec3 SLU = cc_lightPos[i].xyz - position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.0);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = cc_lightSizeRangeAngle[i].x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (cc_lightPos[i].w > 0.0) {\nfloat cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\nfloat cosOuter = cc_lightSizeRangeAngle[i].z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = cc_lightColor[i].rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (cc_lightPos[i].w > 0.0 && cc_lightSizeRangeAngle[i].w > 0.0) {\n{\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetSpotLightShadowFactorSoft2X(shadowPos, position);\nelse if (pcf > 0.9) shadow = CCGetSpotLightShadowFactorSoft(shadowPos, position);\nelse shadow = CCGetSpotLightShadowFactorHard(shadowPos, position);\n}\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nreadonly buffer b_ccLightsBuffer { vec4 b_ccLights[]; };\nreadonly buffer b_clusterLightIndicesBuffer { uint b_clusterLightIndices[]; };\nreadonly buffer b_clusterLightGridBuffer { uvec4 b_clusterLightGrid[]; };\nstruct CCLight\n{\nvec4 cc_lightPos;\nvec4 cc_lightColor;\nvec4 cc_lightSizeRangeAngle;\nvec4 cc_lightDir;\n};\nstruct Cluster\n{\nvec3 minBounds;\nvec3 maxBounds;\n};\nstruct LightGrid\n{\nuint offset;\nuint ccLights;\n};\nCCLight getCCLight(uint i)\n{\nCCLight light;\nlight.cc_lightPos = b_ccLights[4u * i + 0u];\nlight.cc_lightColor = b_ccLights[4u * i + 1u];\nlight.cc_lightSizeRangeAngle = b_ccLights[4u * i + 2u];\nlight.cc_lightDir = b_ccLights[4u * i + 3u];\nreturn light;\n}\nLightGrid getLightGrid(uint cluster)\n{\nuvec4 gridvec = b_clusterLightGrid[cluster];\nLightGrid grid;\ngrid.offset = gridvec.x;\ngrid.ccLights = gridvec.y;\nreturn grid;\n}\nuint getGridLightIndex(uint start, uint offset)\n{\nreturn b_clusterLightIndices[start + offset];\n}\nuint getClusterZIndex(vec4 worldPos)\n{\nfloat scale = float(24) / log(cc_nearFar.y / cc_nearFar.x);\nfloat bias = -(float(24) * log(cc_nearFar.x) / log(cc_nearFar.y / cc_nearFar.x));\nfloat eyeDepth = -(cc_matView * worldPos).z;\nuint zIndex = uint(max(log(eyeDepth) * scale + bias, 0.0));\nreturn zIndex;\n}\nuint getClusterIndex(vec4 fragCoord, vec4 worldPos)\n{\nuint zIndex = getClusterZIndex(worldPos);\nfloat clusterSizeX = ceil(cc_viewPort.z / float(16));\nfloat clusterSizeY = ceil(cc_viewPort.w / float(8));\nuvec3 indices = uvec3(uvec2(fragCoord.xy / vec2(clusterSizeX, clusterSizeY)), zIndex);\nuint cluster = (16u * 8u) * indices.z + 16u * indices.y + indices.x;\nreturn cluster;\n}\nvec4 CCClusterShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / 3.14159265359;\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.001);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nuint cluster = getClusterIndex(gl_FragCoord, vec4(position, 1.0));\nLightGrid grid = getLightGrid(cluster);\nuint numLights = grid.ccLights;\nfor (uint i = 0u; i < 100u; i++) {\nif (i >= numLights) break;\nuint lightIndex = getGridLightIndex(grid.offset, i);\nCCLight light = getCCLight(lightIndex);\nvec3 SLU = light.cc_lightPos.xyz - position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.001);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = light.cc_lightSizeRangeAngle.x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(light.cc_lightSizeRangeAngle.y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (light.cc_lightPos.w > 0.0) {\nfloat cosInner = max(dot(-light.cc_lightDir.xyz, SL), 0.01);\nfloat cosOuter = light.cc_lightSizeRangeAngle.z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -light.cc_lightDir.xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = light.cc_lightColor.rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (light.cc_lightPos.w > 0.0) {\n{\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetSpotLightShadowFactorSoft2X(shadowPos, position);\nelse if (pcf > 0.9) shadow = CCGetSpotLightShadowFactorSoft(shadowPos, position);\nelse shadow = CCGetSpotLightShadowFactorHard(shadowPos, position);\n}\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * light.cc_lightColor.w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = ACESToneMap(color.rgb);\n#endif\ncolor.rgb = sqrt(color.rgb);\nreturn color;\n}\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\nvoid CC_APPLY_FOG_BASE(inout vec4 color, float factor) {\ncolor = vec4(mix(cc_fogColor.rgb, color.rgb, factor), color.a);\n}\nvec2 signNotZero(vec2 v) {\nreturn vec2((v.x >= 0.0) ? +1.0 : -1.0, (v.y >= 0.0) ? +1.0 : -1.0);\n}\nvec3 oct_to_float32x3(vec2 e) {\nvec3 v = vec3(e.xy, 1.0 - abs(e.x) - abs(e.y));\nif (v.z < 0.0) v.xy = (1.0 - abs(v.yx)) * signNotZero(v.xy);\nreturn normalize(v);\n}\nvec4 screen2WS(vec3 coord) {\nvec3 ndc = vec3(\n2.0 * (coord.x - cc_viewPort.x) / cc_viewPort.z - 1.0,\n2.0 * (coord.y - cc_viewPort.y) / cc_viewPort.w - 1.0,\n2.0 * coord.z - 1.0);\nvec4 world = ((cc_matViewProjInv) * (vec4(ndc, 1.0)));\nworld      = world / world.w;\nreturn world;\n}\nvarying vec2 v_uv;\n#if CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT\n#else\nuniform sampler2D gbuffer_albedoMap;\nuniform sampler2D gbuffer_normalMap;\nuniform sampler2D gbuffer_emissiveMap;\n#endif\nuniform sampler2D depth_stencil;\n#if !CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT || __VERSION__ >= 450\n#endif\nvoid main () {\nStandardSurface s;\n#if CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT\nvec4 albedoMap = gl_LastFragData[0];\nvec4 normalMap = gl_LastFragData[1];\nvec4 emissiveMap = gl_LastFragDat[2];\n#else\nvec4 albedoMap = texture2D(gbuffer_albedoMap,v_uv);\nvec4 normalMap = texture2D(gbuffer_normalMap,v_uv);\nvec4 emissiveMap = texture2D(gbuffer_emissiveMap,v_uv);\n#endif\nfloat depth = texture2D(depth_stencil, v_uv).x;\ns.albedo = albedoMap;\nvec3 position = screen2WS(vec3(gl_FragCoord.xy, depth)).xyz;\ns.position = position;\ns.roughness = normalMap.z;\ns.normal = oct_to_float32x3(normalMap.xy);\ns.metallic = normalMap.w;\ns.emissive = emissiveMap.xyz;\ns.occlusion = emissiveMap.w;\nfloat fogFactor;\nCC_TRANSFER_FOG_BASE(vec4(position, 1), fogFactor);\nvec4 shadowPos;\nshadowPos = cc_matLightViewProj * vec4(position, 1);\nvec4 color = CCStandardShadingBase(s, shadowPos) +\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nCCClusterShadingAdditive(s, shadowPos);\n#else\nCCStandardShadingAdditive(s, shadowPos);\n#endif\nCC_APPLY_FOG_BASE(color, fogFactor);\ncolor = CCFragOutput(color);\n#if CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT\ngl_FragData[2] = color;\n#else\ngl_FragColor = color;\n#endif\n}"}],[{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_MORPH\nattribute float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nuniform vec4 cc_displacementWeights[15];\nuniform vec4 cc_displacementTextureInfo;\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\nreturn texture2D(tex, uv);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture2D(tex, x)),\ndecode32(texture2D(tex, y)),\ndecode32(texture2D(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nattribute vec4 a_joints;\nattribute vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nattribute highp vec4 a_jointAnimInfo;\n#endif\nuniform highp vec4 cc_jointTextureInfo;\nuniform highp vec4 cc_jointAnimInfo;\nuniform highp sampler2D cc_jointTexture;\n#else\nuniform highp vec4 cc_joints[90];\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matProj;\nuniform highp vec4 cc_cameraPos;\nuniform mediump vec4 cc_mainLitDir;\n#if USE_INSTANCING\nattribute vec4 a_matWorld0;\nattribute vec4 a_matWorld1;\nattribute vec4 a_matWorld2;\n#if USE_LIGHTMAP\nattribute vec4 a_lightingMapUVParam;\n#endif\n#elif USE_BATCHING\nattribute float a_dyn_batch_id;\nuniform highp mat4 cc_matWorlds[10];\n#else\nuniform highp mat4 cc_matWorld;\n#endif\nuniform mediump vec4 cc_planarNDInfo;\nvarying float v_dist;\nvec4 vert () {\nvec4 position;\nposition = vec4(a_position, 1.0);\n#if CC_USE_MORPH\napplyMorph(position);\n#endif\n#if CC_USE_SKINNING\nCCSkin(position);\n#endif\nmat4 matWorld;\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\n#else\nmatWorld = cc_matWorld;\n#endif\nvec3 P = (matWorld * position).xyz;\nvec3 L = cc_mainLitDir.xyz;\nvec3 N = cc_planarNDInfo.xyz;\nfloat d = cc_planarNDInfo.w + 0.001;\nfloat dist = (-d - dot(P, N)) / (dot(L, N) + 0.0001);\nvec3 shadowPos = P + L * dist;\nvec3 view = normalize(cc_cameraPos.xyz - shadowPos);\nfloat viewLength = length(cc_cameraPos.xyz - shadowPos);\nshadowPos += view * max(0.02, 0.001 * viewLength);\nposition = cc_matProj * cc_matView * vec4(shadowPos, 1.0);\nv_dist = dist;\nreturn position;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nuniform lowp vec4 cc_shadowColor;\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nvarying float v_dist;\nvec4 frag () {\nif(v_dist < 0.02)\ndiscard;\nreturn CCFragOutput(cc_shadowColor);\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_MORPH\nattribute float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nuniform vec4 cc_displacementWeights[15];\nuniform vec4 cc_displacementTextureInfo;\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\nreturn texture2D(tex, uv);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture2D(tex, x)),\ndecode32(texture2D(tex, y)),\ndecode32(texture2D(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nattribute vec4 a_joints;\nattribute vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nattribute highp vec4 a_jointAnimInfo;\n#endif\nuniform highp vec4 cc_jointTextureInfo;\nuniform highp vec4 cc_jointAnimInfo;\nuniform highp sampler2D cc_jointTexture;\n#else\nuniform highp vec4 cc_joints[90];\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nuniform highp vec4 cc_cameraPos;\nvarying vec2 v_uv;\nvoid main () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nIn.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\ngl_Position = In.position;\ngl_Position.y = gl_Position.y;\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nuniform mediump vec4 cc_screenSize;\n#if ANTIALIAS_TYPE == 1\nvec4 fxaa(sampler2D tex, vec2 fragCoord, vec2 resolution,\nvec2 v_rgbNW, vec2 v_rgbNE,\nvec2 v_rgbSW, vec2 v_rgbSE,\nvec2 v_rgbM) {\nvec4 color;\nmediump vec2 inverseVP = vec2(1.0 / resolution.x, 1.0 / resolution.y);\nvec3 rgbNW = texture2D(tex, v_rgbNW).xyz;\nvec3 rgbNE = texture2D(tex, v_rgbNE).xyz;\nvec3 rgbSW = texture2D(tex, v_rgbSW).xyz;\nvec3 rgbSE = texture2D(tex, v_rgbSE).xyz;\nvec4 texColor = texture2D(tex, v_rgbM);\nvec3 rgbM  = texColor.xyz;\nvec3 luma = vec3(0.299, 0.587, 0.114);\nfloat lumaNW = dot(rgbNW, luma);\nfloat lumaNE = dot(rgbNE, luma);\nfloat lumaSW = dot(rgbSW, luma);\nfloat lumaSE = dot(rgbSE, luma);\nfloat lumaM  = dot(rgbM,  luma);\nfloat lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\nfloat lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\nmediump vec2 dir;\ndir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\ndir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\nfloat dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) *\n(0.25 * (1.0 / 8.0)), (1.0/ 128.0));\nfloat rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);\ndir = min(vec2(8.0, 8.0),\nmax(vec2(-8.0, -8.0),\ndir * rcpDirMin)) * inverseVP;\nvec3 rgbA = 0.5 * (\ntexture2D(tex, fragCoord * inverseVP + dir * (1.0 / 3.0 - 0.5)).xyz +\ntexture2D(tex, fragCoord * inverseVP + dir * (2.0 / 3.0 - 0.5)).xyz);\nvec3 rgbB = rgbA * 0.5 + 0.25 * (\ntexture2D(tex, fragCoord * inverseVP + dir * -0.5).xyz +\ntexture2D(tex, fragCoord * inverseVP + dir * 0.5).xyz);\nfloat lumaB = dot(rgbB, luma);\nif ((lumaB < lumaMin) || (lumaB > lumaMax))\ncolor = vec4(rgbA, texColor.a);\nelse\ncolor = vec4(rgbB, texColor.a);\nreturn color;\n}\n#endif\nvarying vec2 v_uv;\nuniform sampler2D outputResultMap;\nvoid texcoords(vec2 fragCoord, vec2 resolution,\nout vec2 v_rgbNW, out vec2 v_rgbNE,\nout vec2 v_rgbSW, out vec2 v_rgbSE,\nout vec2 v_rgbM) {\nvec2 inverseVP = 1.0 / resolution.xy;\nv_rgbNW = (fragCoord + vec2(-1.0, -1.0)) * inverseVP;\nv_rgbNE = (fragCoord + vec2(1.0, -1.0)) * inverseVP;\nv_rgbSW = (fragCoord + vec2(-1.0, 1.0)) * inverseVP;\nv_rgbSE = (fragCoord + vec2(1.0, 1.0)) * inverseVP;\nv_rgbM = vec2(fragCoord * inverseVP);\n}\nvoid main () {\nmediump vec2 v_rgbNW;\nmediump vec2 v_rgbNE;\nmediump vec2 v_rgbSW;\nmediump vec2 v_rgbSE;\nmediump vec2 v_rgbM;\n#if ANTIALIAS_TYPE == 1\nvec2 resolution = cc_screenSize.xy;\nvec2 fragCoord = v_uv * resolution;\ntexcoords(fragCoord, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\ngl_FragColor = fxaa(outputResultMap, fragCoord, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\n#else\ngl_FragColor = texture2D(outputResultMap, v_uv);\n#endif\n}"}],[{vert:"\nprecision highp float;\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matProj;\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\nvarying mediump vec4 viewDir;\nvec4 vert () {\nviewDir = vec4(a_position, 1.0);\nmat4 matViewRotOnly = mat4(mat3(cc_matView));\nvec4 pos = matViewRotOnly * viewDir;\nif (cc_matProj[3].w > 0.0) {\nmat4 matProj = cc_matProj;\nvec2 scale = vec2(48.0, 24.0);\nmatProj[0].xy *= scale;\nmatProj[1].xy *= scale;\nmatProj[2].zw = vec2(-1.0);\nmatProj[3].zw = vec2(0.0);\npos = matProj * pos;\n} else {\npos = cc_matProj * pos;\n}\npos.z = 0.99999 * pos.w;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nuniform mediump vec4 cc_ambientSky;\nuniform samplerCube cc_environment;\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n}\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = ACESToneMap(color.rgb);\n#endif\ncolor.rgb = sqrt(color.rgb);\nreturn color;\n}\nvarying mediump vec4 viewDir;\nvec4 frag () {\n#if USE_RGBE_CUBEMAP\nvec3 c = unpackRGBE(textureCube(cc_environment, viewDir.xyz));\n#else\nvec3 c = SRGBToLinear(textureCube(cc_environment, viewDir.xyz).rgb);\n#endif\nreturn CCFragOutput(vec4(c * cc_ambientSky.w, 1.0));\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nuniform highp mat4 cc_matProj;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec2 v_uv;\nuniform vec4 offset;\nuniform vec4 digits[20];\nfloat getComponent(vec4 v, float i) {\nif (i < 1.0) { return v.x; }\nelse if (i < 2.0) { return v.y; }\nelse if (i < 3.0) { return v.z; }\nelse { return v.w; }\n}\nvec4 vert () {\nmat2 proj = mat2(cc_matProj[0].xy, cc_matProj[1].xy);\nproj /= abs(proj[1].x + proj[1].y);\nvec2 position = proj * a_position.xy + offset.xy;\nv_uv = a_color.xy;\nif (a_color.z >= 0.0) {\nfloat n = getComponent(digits[int(a_color.z)], a_color.w);\nv_uv += vec2(offset.z * n, 0.0);\n}\nreturn vec4(position, 0.0, 1.0);\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nvarying vec2 v_uv;\nuniform sampler2D mainTexture;\nvec4 frag () {\nreturn CCFragOutput(texture2D(mainTexture, v_uv));\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nattribute vec2 a_position;\nattribute vec2 a_texCoord;\nvarying vec2 v_uv;\nuniform vec4 u_buffer0;\nuniform vec4 u_buffer1;\nuniform mat4 u_projection;\nvec4 vert () {\nvec2 worldPos = a_position * u_buffer1.xy + u_buffer1.zw;\nvec2 clipSpace = worldPos / u_buffer0.xy * 2.0 - 1.0;\nvec4 screenPos = u_projection * vec4(clipSpace, 0.0, 1.0);\nv_uv = a_texCoord;\nreturn screenPos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nvarying vec2 v_uv;\nuniform float u_percent;\nuniform sampler2D mainTexture;\nvec4 frag () {\nvec4 color = texture2D(mainTexture, v_uv);\nfloat percent = clamp(u_percent, 0.0, 1.0);\ncolor.xyz *= percent;\nreturn color;\n}\nvoid main() { gl_FragColor = frag(); }"}]],glsl3:[[{vert:"\nprecision mediump float;\nlayout(std140) uniform Constants {\nvec4 mainTiling_Offset;\nvec4 frameTile_velLenScale;\nvec4 scale;\nvec4 nodeRotation;\n};\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\nmat3 m = mat3(xAxis,yAxis,zAxis);\nfloat trace = m[0][0] + m[1][1] + m[2][2];\nvec4 quat;\nif (trace > 0.) {\nfloat s = 0.5 / sqrt(trace + 1.0);\nquat.w = 0.25 / s;\nquat.x = (m[2][1] - m[1][2]) * s;\nquat.y = (m[0][2] - m[2][0]) * s;\nquat.z = (m[1][0] - m[0][1]) * s;\n} else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\nfloat s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\nquat.w = (m[2][1] - m[1][2]) / s;\nquat.x = 0.25 * s;\nquat.y = (m[0][1] + m[1][0]) / s;\nquat.z = (m[0][2] + m[2][0]) / s;\n} else if (m[1][1] > m[2][2]) {\nfloat s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\nquat.w = (m[0][2] - m[2][0]) / s;\nquat.x = (m[0][1] + m[1][0]) / s;\nquat.y = 0.25 * s;\nquat.z = (m[1][2] + m[2][1]) / s;\n} else {\nfloat s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\nquat.w = (m[1][0] - m[0][1]) / s;\nquat.x = (m[0][2] + m[2][0]) / s;\nquat.y = (m[1][2] + m[2][1]) / s;\nquat.z = 0.25 * s;\n}\nfloat len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\nif (len > 0.) {\nlen = 1. / sqrt(len);\nquat.x = quat.x * len;\nquat.y = quat.y * len;\nquat.z = quat.z * len;\nquat.w = quat.w * len;\n}\nreturn quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\nfloat x = angle.x / 2.;\nfloat y = angle.y / 2.;\nfloat z = angle.z / 2.;\nfloat sx = sin(x);\nfloat cx = cos(x);\nfloat sy = sin(y);\nfloat cy = cos(y);\nfloat sz = sin(z);\nfloat cz = cos(z);\nvec4 quat = vec4(0);\nquat.x = sx * cy * cz + cx * sy * sz;\nquat.y = cx * sy * cz + sx * cy * sz;\nquat.z = cx * cy * sz - sx * sy * cz;\nquat.w = cx * cy * cz - sx * sy * sz;\nreturn quat;\n}\nvec4 quatMultiply (vec4 a, vec4 b){\nvec4 quat;\nquat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\nquat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\nquat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\nquat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\nreturn quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\nfloat ix = q.w * v.x + q.y * v.z - q.z * v.y;\nfloat iy = q.w * v.y + q.z * v.x - q.x * v.z;\nfloat iz = q.w * v.z + q.x * v.y - q.y * v.x;\nfloat iw = -q.x * v.x - q.y * v.y - q.z * v.z;\nv.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\nv.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\nv.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\nvec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\nvec4 rotQuat = quatMultiply(viewQuat, q);\nrotateVecFromQuat(pos, rotQuat);\nreturn pos;\n}\nout mediump vec2 uv;\nout mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n, mat4 viewInv\n) {\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\nvec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\nvec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n}\nin vec3 a_position;\nin vec2 a_texCoord;\nin vec4 a_color;\nlayout(std140) uniform builtin {\nvec4 cc_size_rotation;\n};\nvec4 vs_main() {\nvec4 pos = vec4(a_position, 1);\npos = cc_matWorld * pos;\nvec2 vertOffset = a_texCoord.xy - 0.5;\ncomputeVertPos(pos, vertOffset, quaternionFromEuler(vec3(0., 0., cc_size_rotation.z)), vec3(cc_size_rotation.xy, 0.), cc_matViewInv);\npos = cc_matViewProj * pos;\nuv = a_texCoord.xy;\ncolor = a_color;\nreturn pos;\n}\nvoid main() { gl_Position = vs_main(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nin vec2 uv;\nin vec4 color;\nuniform sampler2D mainTexture;\nlayout(std140) uniform FragConstants {\nvec4 tintColor;\n};\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture(mainTexture, uv);\nreturn CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = add(); }"}],[{vert:"\nprecision highp float;\nin vec3 a_position;\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec4 frag () {\nvec4 o = vec4(1.0);\nreturn o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\nin float a_dist;\nout float v_dist;\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\npos = cc_matViewProj * cc_matWorld * pos;\nv_color = a_color;\nv_dist = a_dist;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nin vec4 v_color;\nin float v_dist;\nvec4 frag () {\nvec4 o = v_color;\nfloat aa = fwidth(v_dist);\nfloat alpha = 1. - smoothstep(-aa, 0., abs(v_dist) - 1.0);\no.rgb *= o.a;\no *= alpha;\nreturn o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(std140) uniform CCWorldBound {\nhighp vec4 cc_worldBoundCenter;\nhighp vec4 cc_worldBoundHalfExtents;\n};\nin vec3 a_position;\nvec4 vert () {\nvec4 position;\nposition = vec4(a_position, 1.0);\nposition *= cc_worldBoundHalfExtents;\nposition += cc_worldBoundCenter;\nposition = cc_matViewProj * position;\nreturn position;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nvec4 frag () {\nreturn vec4(1, 0, 0, 1);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\nmat3 m = mat3(xAxis,yAxis,zAxis);\nfloat trace = m[0][0] + m[1][1] + m[2][2];\nvec4 quat;\nif (trace > 0.) {\nfloat s = 0.5 / sqrt(trace + 1.0);\nquat.w = 0.25 / s;\nquat.x = (m[2][1] - m[1][2]) * s;\nquat.y = (m[0][2] - m[2][0]) * s;\nquat.z = (m[1][0] - m[0][1]) * s;\n} else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\nfloat s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\nquat.w = (m[2][1] - m[1][2]) / s;\nquat.x = 0.25 * s;\nquat.y = (m[0][1] + m[1][0]) / s;\nquat.z = (m[0][2] + m[2][0]) / s;\n} else if (m[1][1] > m[2][2]) {\nfloat s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\nquat.w = (m[0][2] - m[2][0]) / s;\nquat.x = (m[0][1] + m[1][0]) / s;\nquat.y = 0.25 * s;\nquat.z = (m[1][2] + m[2][1]) / s;\n} else {\nfloat s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\nquat.w = (m[1][0] - m[0][1]) / s;\nquat.x = (m[0][2] + m[2][0]) / s;\nquat.y = (m[1][2] + m[2][1]) / s;\nquat.z = 0.25 * s;\n}\nfloat len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\nif (len > 0.) {\nlen = 1. / sqrt(len);\nquat.x = quat.x * len;\nquat.y = quat.y * len;\nquat.z = quat.z * len;\nquat.w = quat.w * len;\n}\nreturn quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\nfloat x = angle.x / 2.;\nfloat y = angle.y / 2.;\nfloat z = angle.z / 2.;\nfloat sx = sin(x);\nfloat cx = cos(x);\nfloat sy = sin(y);\nfloat cy = cos(y);\nfloat sz = sin(z);\nfloat cz = cos(z);\nvec4 quat = vec4(0);\nquat.x = sx * cy * cz + cx * sy * sz;\nquat.y = cx * sy * cz + sx * cy * sz;\nquat.z = cx * cy * sz - sx * sy * cz;\nquat.w = cx * cy * cz - sx * sy * sz;\nreturn quat;\n}\nmat4 matrixFromRT (vec4 q, vec3 p){\nfloat x2 = q.x + q.x;\nfloat y2 = q.y + q.y;\nfloat z2 = q.z + q.z;\nfloat xx = q.x * x2;\nfloat xy = q.x * y2;\nfloat xz = q.x * z2;\nfloat yy = q.y * y2;\nfloat yz = q.y * z2;\nfloat zz = q.z * z2;\nfloat wx = q.w * x2;\nfloat wy = q.w * y2;\nfloat wz = q.w * z2;\nreturn mat4(\n1. - (yy + zz), xy + wz, xz - wy, 0,\nxy - wz, 1. - (xx + zz), yz + wx, 0,\nxz + wy, yz - wx, 1. - (xx + yy), 0,\np.x, p.y, p.z, 1\n);\n}\nmat4 matFromRTS (vec4 q, vec3 t, vec3 s){\nfloat x = q.x, y = q.y, z = q.z, w = q.w;\nfloat x2 = x + x;\nfloat y2 = y + y;\nfloat z2 = z + z;\nfloat xx = x * x2;\nfloat xy = x * y2;\nfloat xz = x * z2;\nfloat yy = y * y2;\nfloat yz = y * z2;\nfloat zz = z * z2;\nfloat wx = w * x2;\nfloat wy = w * y2;\nfloat wz = w * z2;\nfloat sx = s.x;\nfloat sy = s.y;\nfloat sz = s.z;\nreturn mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n(xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n(xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\nt.x, t.y, t.z, 1);\n}\nvec4 quatMultiply (vec4 a, vec4 b){\nvec4 quat;\nquat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\nquat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\nquat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\nquat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\nreturn quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\nfloat ix = q.w * v.x + q.y * v.z - q.z * v.y;\nfloat iy = q.w * v.y + q.z * v.x - q.x * v.z;\nfloat iz = q.w * v.z + q.x * v.y - q.y * v.x;\nfloat iw = -q.x * v.x - q.y * v.y - q.z * v.z;\nv.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\nv.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\nv.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\nvec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\nvec4 rotQuat = quatMultiply(viewQuat, q);\nrotateVecFromQuat(pos, rotQuat);\nreturn pos;\n}\nmat3 quatToMat3(vec4 q) {\nvec3 m0 = vec3(\n1.0 - 2.0 * q.y * q.y - 2.0 * q.z * q.z,\n2.0 * q.x * q.y + 2.0 * q.w * q.z,\n2.0 * q.x * q.z - 2.0 * q.w * q.y);\nvec3 m1 = vec3(\n2.0 * q.x * q.y - 2.0 * q.w * q.z,\n1.0 - 2.0 * q.x * q.x - 2.0 * q.z * q.z,\n2.0 * q.y * q.z + 2.0 * q.w * q.x);\nvec3 m2 = vec3(\n2.0 * q.x * q.z + 2.0 * q.w * q.y,\n2.0 * q.y * q.z - 2.0 * q.w * q.x,\n1.0 - 2.0 * q.x * q.x - 2.0 * q.y * q.y);\nreturn mat3(m0, m1, m2);\n}\nvec4 mat3ToQuat(mat3 mat) {\nfloat tr = mat[0][0] + mat[1][1] + mat[2][2];\nfloat qw, qx, qy, qz;\nif (tr > 0.0) {\nfloat S = sqrt(tr + 1.0) * 2.0;\nfloat invS = 1.0 / S;\nqw = 0.25 * S;\nqx = (mat[1][2] - mat[2][1]) * invS;\nqy = (mat[2][0] - mat[0][2]) * invS;\nqz = (mat[0][1] - mat[1][0]) * invS;\n} else if ((mat[0][0] > mat[1][1])&&(mat[0][0] > mat[2][2])) {\nfloat S = sqrt(1.0 + mat[0][0] - mat[1][1] - mat[2][2]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[1][2] - mat[2][1]) * invS;\nqx = 0.25 * S;\nqy = (mat[1][0] + mat[0][1]) * invS;\nqz = (mat[2][0] + mat[0][2]) * invS;\n} else if (mat[1][1] > mat[2][2]) {\nfloat S = sqrt(1.0 + mat[1][1] - mat[0][0] - mat[2][2]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[2][0] - mat[0][2]) * invS;\nqx = (mat[1][0] + mat[0][1]) * invS;\nqy = 0.25 * S;\nqz = (mat[2][1] + mat[1][2]) * invS;\n} else {\nfloat S = sqrt(1.0 + mat[2][2] - mat[0][0] - mat[1][1]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[0][1] - mat[1][0]) * invS;\nqx = (mat[2][0] + mat[0][2]) * invS;\nqy = (mat[2][1] + mat[1][2]) * invS;\nqz = 0.25 * S;\n}\nreturn vec4(qx, qy, qz, qw);\n}\nvec4 eulerToQuat(vec3 euler) {\nvec3 er = euler * 0.5;\nfloat x = er.x, y = er.y, z = er.z;\nfloat sx = sin(x);\nfloat cx = cos(x);\nfloat sy = sin(y);\nfloat cy = cos(y);\nfloat sz = sin(z);\nfloat cz = cos(z);\nvec4 quat;\nquat.x = sx * cy * cz + cx * sy * sz;\nquat.y = cx * sy * cz + sx * cy * sz;\nquat.z = cx * cy * sz - sx * sy * cz;\nquat.w = cx * cy * cz - sx * sy * sz;\nreturn quat;\n}\nlayout(std140) uniform Constants {\nvec4 mainTiling_Offset;\nvec4 frameTile_velLenScale;\nvec4 scale;\nvec4 nodeRotation;\n};\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\nout mediump vec2 uv;\nout mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n, mat4 viewInv\n#endif\n#if CC_RENDER_MODE == 1\n, vec3 eye\n, vec4 velocity\n, float velocityScale\n, float lengthScale\n, float xIndex\n#endif\n) {\n#if CC_RENDER_MODE == 0\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\nvec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\nvec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_RENDER_MODE == 1\nvec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\nvec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\npos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_RENDER_MODE == 2\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = vec3(1, 0, 0);\nvec3 camY = vec3(0, 0, -1);\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_RENDER_MODE == 3\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nrotateVecFromQuat(viewSpaceVert, q);\nvec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\nvec3 camY = vec3(0, 1, 0);\nvec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\npos.xyz += offset;\n#else\npos.x += vertOffset.x;\npos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV (float frameIndex, vec2 vertIndex, vec2 frameTile){\nvec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\naniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if CC_RENDER_MODE != 4\nvertIndex.y = 1. - vertIndex.y;\n#endif\nreturn (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nlayout(std140) uniform SampleConstants {\nvec4 u_sampleInfo;\n};\nlayout(std140) uniform TickConstants {\nvec4 u_worldRot;\nvec4 u_timeDelta;\n};\nin vec4 a_position_starttime;\nin vec4 a_size_uv;\nin vec4 a_rotation_uv;\nin vec4 a_color;\nin vec4 a_dir_life;\nin float a_rndSeed;\n#if CC_RENDER_MODE == 4\nin vec3 a_texCoord;\nin vec3 a_texCoord3;\nin vec3 a_normal;\nin vec4 a_color1;\n#endif\nvec3 unpackCurveData (sampler2D tex, vec2 coord) {\nvec4 a = texture(tex, coord);\nvec4 b = texture(tex, coord + u_sampleInfo.y);\nfloat c = fract(coord.x * u_sampleInfo.x);\nreturn mix(a.xyz, b.xyz, c);\n}\nvec3 unpackCurveData (sampler2D tex, vec2 coord, out float w) {\nvec4 a = texture(tex, coord);\nvec4 b = texture(tex, coord + u_sampleInfo.y);\nfloat c = fract(coord.x * u_sampleInfo.x);\nw = mix(a.w, b.w, c);\nreturn mix(a.xyz, b.xyz, c);\n}\nfloat pseudoRandom(float x) {\n#if USE_VK_SHADER\nfloat o = x;\nx = mod(x - 1.0, 2.0) - 1.0;\nfloat freqVar = 10.16640753482;\nfloat y = sin(freqVar * floor(o * 0.5 - 0.5));\nfloat v = max(0.0, 1.0-abs(x));\nv *= 0.7071067812;\nv = y < 0.0 ? -v : v;\nreturn v;\n#else\nfloat seed = mod(x, 233280.);\nfloat q = (seed * 9301. + 49297.) / 233280.;\nreturn fract(q);\n#endif\n}\n#if COLOR_OVER_TIME_MODULE_ENABLE\nuniform sampler2D color_over_time_tex0;\nlayout(std140) uniform ColorConstant {\nint u_color_mode;\n};\n#endif\n#if ROTATION_OVER_TIME_MODULE_ENABLE\nuniform sampler2D rotation_over_time_tex0;\nlayout(std140) uniform RotationConstant {\nint u_rotation_mode;\n};\n#endif\n#if SIZE_OVER_TIME_MODULE_ENABLE\nuniform sampler2D size_over_time_tex0;\nlayout(std140) uniform SizeConstant {\nint u_size_mode;\n};\n#endif\n#if FORCE_OVER_TIME_MODULE_ENABLE\nuniform sampler2D force_over_time_tex0;\nlayout(std140) uniform ForceConstant {\nint u_force_mode;\nint u_force_space;\n};\n#endif\n#if VELOCITY_OVER_TIME_MODULE_ENABLE\nuniform sampler2D velocity_over_time_tex0;\nlayout(std140) uniform VelocityConstant {\nint u_velocity_mode;\nint u_velocity_space;\n};\n#endif\n#if TEXTURE_ANIMATION_MODULE_ENABLE\nuniform sampler2D texture_animation_tex0;\nlayout(std140) uniform AnimationConstant {\nvec4 u_anim_info;\n};\n#endif\nfloat repeat (float t, float length) {\nreturn t - floor(t / length) * length;\n}\nvec4 rotateQuat (vec4 p, vec4 q) {\nvec3 iv = cross(q.xyz, p.xyz) + q.w * p.xyz;\nvec3 res = p.xyz + 2.0 * cross(q.xyz, iv);\nreturn vec4(res.xyz, p.w);\n}\nvec4 gpvs_main () {\nfloat activeTime = u_timeDelta.x - a_position_starttime.w;\nfloat normalizedTime = clamp(activeTime / a_dir_life.w, 0.0, 1.0);\nvec2 timeCoord0 = vec2(normalizedTime, 0.);\nvec2 timeCoord1 = vec2(normalizedTime, 1.);\n#if CC_RENDER_MODE == 4\nvec2 vertIdx = vec2(a_texCoord.x, a_texCoord.y);\n#else\nvec2 vertIdx = vec2(a_size_uv.w, a_rotation_uv.w);\n#endif\nvec4 velocity = vec4(a_dir_life.xyz, 0.);\nvec4 pos = vec4(a_position_starttime.xyz, 1.);\nvec3 size = a_size_uv.xyz;\n#if SIZE_OVER_TIME_MODULE_ENABLE\nif (u_size_mode == 1) {\nsize *= unpackCurveData(size_over_time_tex0, timeCoord0);\n} else {\nvec3 size_0 = unpackCurveData(size_over_time_tex0, timeCoord0);\nvec3 size_1 = unpackCurveData(size_over_time_tex0, timeCoord1);\nfloat factor_s = pseudoRandom(a_rndSeed + 39825.);\nsize *= mix(size_0, size_1, factor_s);\n}\n#endif\nvec3 compScale = scale.xyz * size;\n#if FORCE_OVER_TIME_MODULE_ENABLE\nvec3 forceAnim = vec3(0.);\nif (u_force_mode == 1) {\nforceAnim = unpackCurveData(force_over_time_tex0, timeCoord0);\n} else {\nvec3 force_0 = unpackCurveData(force_over_time_tex0, timeCoord0);\nvec3 force_1 = unpackCurveData(force_over_time_tex0, timeCoord1);\nfloat factor_f =  pseudoRandom(a_rndSeed + 212165.);\nforceAnim = mix(force_0, force_1, factor_f);\n}\nvec4 forceTrack = vec4(forceAnim, 0.);\nif (u_force_space == 0) {\nforceTrack = rotateQuat(forceTrack, u_worldRot);\n}\nvelocity.xyz += forceTrack.xyz;\n#endif\n#if VELOCITY_OVER_TIME_MODULE_ENABLE\nfloat speedModifier0 = 1.;\nfloat speedModifier1 = 1.;\nvec3 velocityAnim = vec3(0.);\nif (u_velocity_mode == 1) {\nvelocityAnim = unpackCurveData(velocity_over_time_tex0, timeCoord0, speedModifier0);\n} else {\nvec3 vectory_0 = unpackCurveData(velocity_over_time_tex0, timeCoord0, speedModifier0);\nvec3 vectory_1 = unpackCurveData(velocity_over_time_tex0, timeCoord1, speedModifier1);\nfloat factor_v = pseudoRandom(a_rndSeed + 197866.);\nvelocityAnim = mix(vectory_0, vectory_1, factor_v);\nspeedModifier0 = mix(speedModifier0, speedModifier1, factor_v);\n}\nvec4 velocityTrack = vec4(velocityAnim, 0.);\nif (u_velocity_space == 0) {\nvelocityTrack = rotateQuat(velocityTrack, u_worldRot);\n}\nvelocity.xyz += velocityTrack.xyz;\nvelocity.xyz *= speedModifier0;\n#endif\npos.xyz += velocity.xyz * normalizedTime * a_dir_life.w;\n#if !CC_USE_WORLD_SPACE\npos = cc_matWorld * pos;\n#if CC_RENDER_MODE == 1\nvelocity = rotateQuat(velocity, u_worldRot);\n#endif\n#endif\nvec3 startRotation = a_rotation_uv.xyz;\n#if CC_RENDER_MODE != 4\n#if CC_RENDER_MODE == 0\nvec3 rotEuler = startRotation.xyz;\n#elif CC_RENDER_MODE == 1\nvec3 rotEuler = vec3(0.);\n#else\nvec3 rotEuler = vec3(0., 0., startRotation.z);\n#endif\nvec4 rot = quaternionFromEuler(rotEuler);\n#else\nvec4 rot = quaternionFromEuler(startRotation);\n#endif\n#if ROTATION_OVER_TIME_MODULE_ENABLE\nif (u_rotation_mode == 1) {\nvec3 euler = unpackCurveData(rotation_over_time_tex0, timeCoord0) * normalizedTime * a_dir_life.w;\nvec4 quat = eulerToQuat(euler);\nmat3 mLocal = quatToMat3(quat);\nmat3 mStart = quatToMat3(rot);\nrot = mat3ToQuat(mStart * mLocal);\n} else {\nvec3 rotation_0 = unpackCurveData(rotation_over_time_tex0, timeCoord0);\nvec3 rotation_1 = unpackCurveData(rotation_over_time_tex0, timeCoord1);\nfloat factor_r = pseudoRandom(a_rndSeed + 125292.);\nvec3 euler = mix(rotation_0, rotation_1, factor_r) * normalizedTime * a_dir_life.w;\n#if CC_RENDER_MODE == 3 || CC_RENDER_MODE == 2\neuler = vec3(0.0, 0.0, euler.z);\n#endif\nvec4 quat = eulerToQuat(euler);\nmat3 mLocal = quatToMat3(quat);\nmat3 mStart = quatToMat3(rot);\nrot = mat3ToQuat(mStart * mLocal);\n}\n#endif\n#if COLOR_OVER_TIME_MODULE_ENABLE\nif (u_color_mode == 1) {\ncolor = a_color * texture(color_over_time_tex0, timeCoord0);\n} else {\nvec4 color_0 = texture(color_over_time_tex0, timeCoord0);\nvec4 color_1 = texture(color_over_time_tex0, timeCoord1);\nfloat factor_c = pseudoRandom(a_rndSeed + 91041.);\ncolor = a_color * mix(color_0, color_1, factor_c);\n}\n#else\ncolor = a_color;\n#endif\n#if CC_RENDER_MODE != 4\nvec2 cornerOffset = vec2((vertIdx - 0.5));\n#if CC_RENDER_MODE == 1\nrot = vec4(0.0, 0.0, 0.0, 1.0);\n#endif\ncomputeVertPos(pos, cornerOffset, rot, compScale\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n, cc_matViewInv\n#endif\n#if CC_RENDER_MODE == 1\n, cc_cameraPos.xyz\n, velocity\n, frameTile_velLenScale.z\n, frameTile_velLenScale.w\n, a_size_uv.w\n#endif\n);\n#else\nmat3 rotMat = quatToMat3(rot);\nmat3 nodeMat = quatToMat3(nodeRotation);\nrotMat = nodeMat * rotMat;\nrot = mat3ToQuat(rotMat);\nmat4 xformNoScale = matrixFromRT(rot, pos.xyz);\nmat4 xform = matFromRTS(rot, pos.xyz, compScale);\npos = xform * vec4(a_texCoord3, 1);\nvec4 normal = xformNoScale * vec4(a_normal, 0);\ncolor *= a_color1;\n#endif\npos = cc_matViewProj * pos;\nfloat frameIndex = 0.;\n#if TEXTURE_ANIMATION_MODULE_ENABLE\nfloat startFrame = 0.;\nvec3 frameInfo = vec3(0.);\nif (int(u_anim_info.x) == 1) {\nframeInfo = unpackCurveData(texture_animation_tex0, timeCoord0);\n} else {\nvec3 frameInfo0 = unpackCurveData(texture_animation_tex0, timeCoord0);\nvec3 frameInfo1 = unpackCurveData(texture_animation_tex0, timeCoord1);\nfloat factor_t = pseudoRandom(a_rndSeed + 90794.);\nframeInfo = mix(frameInfo0, frameInfo1, factor_t);\n}\nstartFrame = frameInfo.x / u_anim_info.y;\nframeIndex = repeat(u_anim_info.z * (frameInfo.y + startFrame), 1.);\n#endif\nuv = computeUV(frameIndex, vertIdx, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\nreturn pos;\n}\nvoid main() { gl_Position = gpvs_main(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nin vec2 uv;\nin vec4 color;\nuniform sampler2D mainTexture;\nlayout(std140) uniform FragConstants {\nvec4 tintColor;\n};\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture(mainTexture, uv);\nreturn CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = add(); }"}],[{vert:"\nprecision mediump float;\nlayout(std140) uniform Constants {\nvec4 mainTiling_Offset;\nvec4 frameTile_velLenScale;\nvec4 scale;\nvec4 nodeRotation;\n};\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\nout mediump vec2 uv;\nout mediump vec4 color;\nin vec3 a_position;\nin vec4 a_texCoord;\nin vec3 a_texCoord1;\nin vec3 a_texCoord2;\nin vec4 a_color;\n#if CC_DRAW_WIRE_FRAME\nout vec3 vBarycentric;\n#endif\nvec4 vs_main() {\nhighp vec4 pos = vec4(a_position, 1);\nvec4 velocity = vec4(a_texCoord1.xyz, 0);\n#if !CC_USE_WORLD_SPACE\npos = cc_matWorld * pos;\nvelocity = cc_matWorld * velocity;\n#endif\nfloat vertOffset = (a_texCoord.x - 0.5) * a_texCoord.y;\nvec3 camUp = normalize(cross(pos.xyz - cc_cameraPos.xyz, velocity.xyz));\npos.xyz += camUp * vertOffset;\npos = cc_matViewProj * pos;\nuv = a_texCoord.zw * mainTiling_Offset.xy + mainTiling_Offset.zw;;\ncolor = a_color;\n#if CC_DRAW_WIRE_FRAME\nvBarycentric = a_texCoord2;\n#endif\nreturn pos;\n}\nvoid main() { gl_Position = vs_main(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nin vec2 uv;\nin vec4 color;\n#if CC_DRAW_WIRE_FRAME\nin vec3 vBarycentric;\n#endif\nuniform sampler2D mainTexture;\nlayout(std140) uniform FragConstants {\nvec4 tintColor;\n};\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture(mainTexture, uv);\n#if CC_DRAW_WIRE_FRAME\nif (any(lessThan(vBarycentric, vec3(0.02)))) {\ncol = vec4(0., 1., 1., 1.);\n}\n#endif\nreturn CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = add(); }"}],[{vert:"\nprecision highp float;\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\nmat3 m = mat3(xAxis,yAxis,zAxis);\nfloat trace = m[0][0] + m[1][1] + m[2][2];\nvec4 quat;\nif (trace > 0.) {\nfloat s = 0.5 / sqrt(trace + 1.0);\nquat.w = 0.25 / s;\nquat.x = (m[2][1] - m[1][2]) * s;\nquat.y = (m[0][2] - m[2][0]) * s;\nquat.z = (m[1][0] - m[0][1]) * s;\n} else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\nfloat s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\nquat.w = (m[2][1] - m[1][2]) / s;\nquat.x = 0.25 * s;\nquat.y = (m[0][1] + m[1][0]) / s;\nquat.z = (m[0][2] + m[2][0]) / s;\n} else if (m[1][1] > m[2][2]) {\nfloat s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\nquat.w = (m[0][2] - m[2][0]) / s;\nquat.x = (m[0][1] + m[1][0]) / s;\nquat.y = 0.25 * s;\nquat.z = (m[1][2] + m[2][1]) / s;\n} else {\nfloat s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\nquat.w = (m[1][0] - m[0][1]) / s;\nquat.x = (m[0][2] + m[2][0]) / s;\nquat.y = (m[1][2] + m[2][1]) / s;\nquat.z = 0.25 * s;\n}\nfloat len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\nif (len > 0.) {\nlen = 1. / sqrt(len);\nquat.x = quat.x * len;\nquat.y = quat.y * len;\nquat.z = quat.z * len;\nquat.w = quat.w * len;\n}\nreturn quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\nfloat x = angle.x / 2.;\nfloat y = angle.y / 2.;\nfloat z = angle.z / 2.;\nfloat sx = sin(x);\nfloat cx = cos(x);\nfloat sy = sin(y);\nfloat cy = cos(y);\nfloat sz = sin(z);\nfloat cz = cos(z);\nvec4 quat = vec4(0);\nquat.x = sx * cy * cz + cx * sy * sz;\nquat.y = cx * sy * cz + sx * cy * sz;\nquat.z = cx * cy * sz - sx * sy * cz;\nquat.w = cx * cy * cz - sx * sy * sz;\nreturn quat;\n}\nmat4 matrixFromRT (vec4 q, vec3 p){\nfloat x2 = q.x + q.x;\nfloat y2 = q.y + q.y;\nfloat z2 = q.z + q.z;\nfloat xx = q.x * x2;\nfloat xy = q.x * y2;\nfloat xz = q.x * z2;\nfloat yy = q.y * y2;\nfloat yz = q.y * z2;\nfloat zz = q.z * z2;\nfloat wx = q.w * x2;\nfloat wy = q.w * y2;\nfloat wz = q.w * z2;\nreturn mat4(\n1. - (yy + zz), xy + wz, xz - wy, 0,\nxy - wz, 1. - (xx + zz), yz + wx, 0,\nxz + wy, yz - wx, 1. - (xx + yy), 0,\np.x, p.y, p.z, 1\n);\n}\nmat4 matFromRTS (vec4 q, vec3 t, vec3 s){\nfloat x = q.x, y = q.y, z = q.z, w = q.w;\nfloat x2 = x + x;\nfloat y2 = y + y;\nfloat z2 = z + z;\nfloat xx = x * x2;\nfloat xy = x * y2;\nfloat xz = x * z2;\nfloat yy = y * y2;\nfloat yz = y * z2;\nfloat zz = z * z2;\nfloat wx = w * x2;\nfloat wy = w * y2;\nfloat wz = w * z2;\nfloat sx = s.x;\nfloat sy = s.y;\nfloat sz = s.z;\nreturn mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n(xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n(xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\nt.x, t.y, t.z, 1);\n}\nvec4 quatMultiply (vec4 a, vec4 b){\nvec4 quat;\nquat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\nquat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\nquat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\nquat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\nreturn quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\nfloat ix = q.w * v.x + q.y * v.z - q.z * v.y;\nfloat iy = q.w * v.y + q.z * v.x - q.x * v.z;\nfloat iz = q.w * v.z + q.x * v.y - q.y * v.x;\nfloat iw = -q.x * v.x - q.y * v.y - q.z * v.z;\nv.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\nv.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\nv.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\nvec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\nvec4 rotQuat = quatMultiply(viewQuat, q);\nrotateVecFromQuat(pos, rotQuat);\nreturn pos;\n}\nmat3 quatToMat3(vec4 q) {\nvec3 m0 = vec3(\n1.0 - 2.0 * q.y * q.y - 2.0 * q.z * q.z,\n2.0 * q.x * q.y + 2.0 * q.w * q.z,\n2.0 * q.x * q.z - 2.0 * q.w * q.y);\nvec3 m1 = vec3(\n2.0 * q.x * q.y - 2.0 * q.w * q.z,\n1.0 - 2.0 * q.x * q.x - 2.0 * q.z * q.z,\n2.0 * q.y * q.z + 2.0 * q.w * q.x);\nvec3 m2 = vec3(\n2.0 * q.x * q.z + 2.0 * q.w * q.y,\n2.0 * q.y * q.z - 2.0 * q.w * q.x,\n1.0 - 2.0 * q.x * q.x - 2.0 * q.y * q.y);\nreturn mat3(m0, m1, m2);\n}\nvec4 mat3ToQuat(mat3 mat) {\nfloat tr = mat[0][0] + mat[1][1] + mat[2][2];\nfloat qw, qx, qy, qz;\nif (tr > 0.0) {\nfloat S = sqrt(tr + 1.0) * 2.0;\nfloat invS = 1.0 / S;\nqw = 0.25 * S;\nqx = (mat[1][2] - mat[2][1]) * invS;\nqy = (mat[2][0] - mat[0][2]) * invS;\nqz = (mat[0][1] - mat[1][0]) * invS;\n} else if ((mat[0][0] > mat[1][1])&&(mat[0][0] > mat[2][2])) {\nfloat S = sqrt(1.0 + mat[0][0] - mat[1][1] - mat[2][2]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[1][2] - mat[2][1]) * invS;\nqx = 0.25 * S;\nqy = (mat[1][0] + mat[0][1]) * invS;\nqz = (mat[2][0] + mat[0][2]) * invS;\n} else if (mat[1][1] > mat[2][2]) {\nfloat S = sqrt(1.0 + mat[1][1] - mat[0][0] - mat[2][2]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[2][0] - mat[0][2]) * invS;\nqx = (mat[1][0] + mat[0][1]) * invS;\nqy = 0.25 * S;\nqz = (mat[2][1] + mat[1][2]) * invS;\n} else {\nfloat S = sqrt(1.0 + mat[2][2] - mat[0][0] - mat[1][1]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[0][1] - mat[1][0]) * invS;\nqx = (mat[2][0] + mat[0][2]) * invS;\nqy = (mat[2][1] + mat[1][2]) * invS;\nqz = 0.25 * S;\n}\nreturn vec4(qx, qy, qz, qw);\n}\nlayout(std140) uniform Constants {\nvec4 mainTiling_Offset;\nvec4 frameTile_velLenScale;\nvec4 scale;\nvec4 nodeRotation;\n};\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\nout mediump vec2 uv;\nout mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n, mat4 viewInv\n#endif\n#if CC_RENDER_MODE == 1\n, vec3 eye\n, vec4 velocity\n, float velocityScale\n, float lengthScale\n, float xIndex\n#endif\n) {\n#if CC_RENDER_MODE == 0\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\nvec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\nvec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_RENDER_MODE == 1\nvec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\nvec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\npos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_RENDER_MODE == 2\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = vec3(1, 0, 0);\nvec3 camY = vec3(0, 0, -1);\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_RENDER_MODE == 3\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nrotateVecFromQuat(viewSpaceVert, q);\nvec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\nvec3 camY = vec3(0, 1, 0);\nvec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\npos.xyz += offset;\n#else\npos.x += vertOffset.x;\npos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV (float frameIndex, vec2 vertIndex, vec2 frameTile){\nvec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\naniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if CC_RENDER_MODE != 4\nvertIndex.y = 1. - vertIndex.y;\n#endif\nreturn (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nin vec3 a_position;\nin vec3 a_texCoord;\nin vec3 a_texCoord1;\nin vec3 a_texCoord2;\nin vec4 a_color;\n#if CC_RENDER_MODE == 1\nin vec3 a_color1;\n#endif\n#if CC_RENDER_MODE == 4\nin vec3 a_texCoord3;\nin vec3 a_normal;\nin vec4 a_color1;\n#endif\nvec4 lpvs_main () {\nvec3 compScale = scale.xyz * a_texCoord1;\nvec4 pos = vec4(a_position, 1);\n#if CC_RENDER_MODE == 1\nvec4 velocity = vec4(a_color1.xyz, 0);\n#endif\n#if !CC_USE_WORLD_SPACE\npos = cc_matWorld * pos;\n#if CC_RENDER_MODE == 1\nvelocity = cc_matWorld * velocity;\n#endif\n#endif\n#if ROTATION_OVER_TIME_MODULE_ENABLE\nvec3 rotTmp = a_texCoord2;\nfloat mulFactor = 1.0;\nif (rotTmp.x > 10.0 * 0.5) {\nrotTmp.x -= 10.0;\nmulFactor = -1.0;\n}\nvec4 rot = vec4(rotTmp, 0.0);\nrot.w = mulFactor * sqrt(1.0 - rot.x * rot.x - rot.y * rot.y - rot.z * rot.z);\n#else\n#if CC_RENDER_MODE != 4\n#if CC_RENDER_MODE == 0\nvec3 rotEuler = a_texCoord2;\n#elif CC_RENDER_MODE == 1\nvec3 rotEuler = vec3(0.);\n#else\nvec3 rotEuler = vec3(0., 0., a_texCoord2.z);\n#endif\nvec4 rot = quaternionFromEuler(rotEuler);\n#else\nvec4 rot = quaternionFromEuler(a_texCoord2);\n#endif\n#endif\n#if CC_RENDER_MODE != 4\nvec2 cornerOffset = vec2((a_texCoord.xy - 0.5));\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\ncomputeVertPos(pos, cornerOffset, rot, compScale, cc_matViewInv);\n#elif CC_RENDER_MODE == 1\ncomputeVertPos(pos, cornerOffset, rot, compScale, cc_cameraPos.xyz, velocity, frameTile_velLenScale.z, frameTile_velLenScale.w, a_texCoord.x);\n#elif 2\ncomputeVertPos(pos, cornerOffset, rot, compScale);\n#endif\ncolor = a_color;\n#else\nmat3 rotMat = quatToMat3(rot);\nmat3 nodeMat = quatToMat3(nodeRotation);\nrotMat = nodeMat * rotMat;\nrot = mat3ToQuat(rotMat);\nmat4 xformNoScale = matrixFromRT(rot, pos.xyz);\nmat4 xform = matFromRTS(rot, pos.xyz, compScale);\npos = xform * vec4(a_texCoord3, 1);\nvec4 normal = xformNoScale * vec4(a_normal, 0);\ncolor = a_color * a_color1;\n#endif\nuv = computeUV(a_texCoord.z, a_texCoord.xy, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\npos = cc_matViewProj * pos;\nreturn pos;\n}\nvoid main() { gl_Position = lpvs_main(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nin vec2 uv;\nin vec4 color;\nuniform sampler2D mainTexture;\nlayout(std140) uniform FragConstants {\nvec4 tintColor;\n};\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture(mainTexture, uv);\nreturn CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = add(); }"}],[{vert:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\n#if USE_LOCAL\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\n#endif\nin vec3 a_position;\nin vec2 a_texCoord;\nin vec4 a_color;\nout vec4 v_light;\nout vec2 uv0;\n#if TWO_COLORED\nin vec4 a_color2;\nout vec4 v_dark;\n#endif\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\n#if USE_LOCAL\npos = cc_matWorld * pos;\n#endif\npos = cc_matViewProj * pos;\nuv0 = a_texCoord;\nv_light = a_color;\n#if TWO_COLORED\nv_dark = a_color2;\n#endif\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\n#if USE_ALPHA_TEST\nlayout(std140) uniform ALPHA_TEST_DATA {\nfloat alphaThreshold;\n};\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n#if USE_ALPHA_TEST\nif (color.a < alphaThreshold) discard;\n#endif\n}\nvoid ALPHA_TEST (in float alpha) {\n#if USE_ALPHA_TEST\nif (alpha < alphaThreshold) discard;\n#endif\n}\nin vec4 v_light;\n#if TWO_COLORED\nin vec4 v_dark;\n#endif\nin vec2 uv0;\nuniform sampler2D cc_spriteTexture;\nvec4 frag () {\nvec4 o = vec4(1, 1, 1, 1);\n#if TWO_COLORED\nvec4 texColor = vec4(1, 1, 1, 1);\ntexColor *= texture(cc_spriteTexture, uv0);\no.a = texColor.a * v_light.a;\no.rgb = ((texColor.a - 1.0) * v_dark.a + 1.0 - texColor.rgb) * v_dark.rgb + texColor.rgb * v_light.rgb;\n#else\no *= texture(cc_spriteTexture, uv0);\no *= v_light;\n#endif\nALPHA_TEST(o);\nreturn o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nstruct SpriteVertexData {\nvec4 position;\nvec4 color;\n};\nstruct SpriteFragmentData {\nvec2 uv;\n};\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nin vec3 a_position;\nin vec2 a_texCoord;\nin float a_batch_id;\nout vec2 v_uv0;\nout float v_uvMode;\nout vec4 v_uvSizeOffset;\nout vec4 v_uvParams0;\nout vec4 v_uvParams1;\nstruct SpriteVertexInternalData {\nvec4 rotation;\nvec3 translation;\nvec3 scale;\nvec4 uvSizeOffset;\nfloat uvMode;\nvec4 uvParams;\nfloat filltype;\n};\nlayout(std140) uniform CCUILocal {\nvec4 cc_local_data[(CC_DEVICE_MAX_VERTEX_UNIFORM_VECTORS - CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS) / 5 * 5];\n};\nvec3 VectorTransformQuat (vec3 v, vec4 q) {\nreturn v + 2.0 * cross(q.xyz, cross(q.xyz, v) + q.w * v);\n}\nvoid CCSpriteInput(out SpriteVertexData i0) {\nvec4 data0 = cc_local_data[int(a_batch_id) * 5];\nvec4 data1 = cc_local_data[int(a_batch_id) * 5 + 1];\nvec4 data2 = cc_local_data[int(a_batch_id) * 5 + 2];\nvec4 data3 = cc_local_data[int(a_batch_id) * 5 + 3];\nvec4 data4 = cc_local_data[int(a_batch_id) * 5 + 4];\nfloat rg = data0.w;\nfloat r = floor(rg);\nfloat ba = data2.z;\nfloat b = floor(ba);\nSpriteVertexInternalData i1;\ni1.rotation = data1;\ni1.translation = data0.xyz;\ni1.scale = vec3(data2.xy, 1.0);\ni1.uvSizeOffset = data3;\ni1.filltype = fract(data2.w) * 10.0;\ni1.uvMode = data2.w;\ni1.uvParams = data4;\ni0.position = vec4(VectorTransformQuat(a_position * i1.scale, i1.rotation) + i1.translation, 1.0);\ni0.color = vec4(r * (1.0 / 255.0), rg - r, b * (1.0 / 255.0), ba - b);\nvec2 uvWithRotation;\nif (i1.uvSizeOffset.x < 0.0) {\ni1.uvSizeOffset.x = abs(i1.uvSizeOffset.x);\nuvWithRotation = vec2(1.0 - a_texCoord.y, a_texCoord.x);\n} else {\nuvWithRotation = a_texCoord;\n}\nif (i1.uvMode >= 3.0) {\nv_uv0 = uvWithRotation;\nv_uvSizeOffset = i1.uvSizeOffset;\nv_uvParams0 = vec4(i1.uvParams.xy, i1.filltype, 0);\nif (i1.filltype >= 2.0) {\nv_uvParams1 = i1.uvParams;\n} else if (i1.filltype >= 1.0) {\nv_uvParams0 = vec4(1.0 - v_uvParams0.y, 1.0 - v_uvParams0.x, v_uvParams0.zw);\n}\n} else if (i1.uvMode >= 2.0) {\nv_uv0 = uvWithRotation * i1.uvParams.xy;\nv_uv0.y -= fract(i1.uvParams.y);\nv_uvSizeOffset = i1.uvSizeOffset;\n} else if (i1.uvMode >= 1.0) {\nv_uv0 = uvWithRotation;\nv_uvSizeOffset = i1.uvSizeOffset;\nvec4 params0 = fract(i1.uvParams);\nvec4 params1 = floor(i1.uvParams) / 2048.0;\nv_uvParams0 = vec4(params0.xy, params1.xy);\nv_uvParams1 = vec4(params0.zw, params1.zw);\n} else {\nv_uv0 = uvWithRotation * i1.uvSizeOffset.xy + i1.uvSizeOffset.zw;\n}\nv_uvMode = i1.uvMode;\n#if SAMPLE_FROM_RT\nv_uv0 = cc_cameraPos.w > 1.0 ? vec2(v_uv0.x, 1.0 - v_uv0.y) : v_uv0;\n#endif\n}\nout vec4 v_color;\nvec4 vert () {\nSpriteVertexData i;\nCCSpriteInput(i);\nv_color = i.color;\nvec4 pos = i.position;\n#if USE_PIXEL_ALIGNMENT\npos = cc_matView * pos;\npos.xyz = floor(pos.xyz);\npos = cc_matProj * pos;\n#else\npos = cc_matViewProj * pos;\n#endif\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nstruct SpriteVertexData {\nvec4 position;\nvec4 color;\n};\nstruct SpriteFragmentData {\nvec2 uv;\n};\nvec4 CCSampleWithAlphaSeparated(sampler2D tex, vec2 uv) {\n#if CC_USE_EMBEDDED_ALPHA\nreturn vec4(texture(tex, uv).rgb, texture(tex, uv + vec2(0.0, 0.5)).r);\n#else\nreturn texture(tex, uv);\n#endif\n}\nin vec2 v_uv0;\nin float v_uvMode;\nin vec4 v_uvSizeOffset;\nin vec4 v_uvParams0;\nin vec4 v_uvParams1;\nvec2 evalSlicedUV(vec2 uv) {\nvec4 p0 = mix(vec4(0.0), v_uvParams0, step(v_uvParams0.xyxy, uv.xyxy));\np0 = mix(       p0, v_uvParams1, step(v_uvParams1.xyxy, uv.xyxy));\nvec4 p1 = mix(vec4(1.0), v_uvParams1, step(uv.xyxy, v_uvParams1.xyxy));\np1 = mix(       p1, v_uvParams0, step(uv.xyxy, v_uvParams0.xyxy));\nvec2 k = (p1.zw - p0.zw) / (p1.xy - p0.xy);\nvec2 b = (p1.xy * p0.zw - p0.xy * p1.zw) / (p1.xy - p0.xy);\nreturn k * uv + b;\n}\nfloat evalFilledUV(vec2 uv, float mode) {\nfloat alpha = 1.0;\nif (mode >= 2.0) {\nfloat start = v_uvParams1.x;\nfloat range = v_uvParams1.y;\nvec2 dir = uv - v_uvParams1.zw;\nfloat angle = -atan(dir.y, dir.x) * 0.3183098861838;\nif (range < 0.0) {\nangle += mix(0.0, -2.0, step(start, angle));\nalpha = step(start + range, angle);\n} else {\nangle += mix(0.0, 2.0, step(angle, start));\nalpha = step(angle, start + range);\n}\n} else if (mode >= 1.0) {\nif (uv.y >= v_uvParams0.x && uv.y <= v_uvParams0.y) {\nalpha = 1.0;\n} else {\nalpha = 0.0;\n}\n} else {\nif (uv.x >= v_uvParams0.x && uv.x <= v_uvParams0.y) {\nalpha = 1.0;\n} else {\nalpha = 0.0;\n}\n}\nreturn alpha;\n}\nvoid CCSpriteInput(out SpriteFragmentData i) {\n#if USE_TEXTURE\nif(v_uvMode >= 3.0) {\ni.uv = v_uv0 * v_uvSizeOffset.xy + v_uvSizeOffset.zw;\n} else if (v_uvMode >= 2.0) {\ni.uv = fract(v_uv0) * v_uvSizeOffset.xy + v_uvSizeOffset.zw;\n} else if (v_uvMode >= 1.0) {\ni.uv = evalSlicedUV(v_uv0) * v_uvSizeOffset.xy + v_uvSizeOffset.zw;\n} else {\ni.uv = v_uv0;\n}\n#endif\n}\nvec4 CCSpriteSample(sampler2D tex, vec2 uv) {\nvec4 o = CCSampleWithAlphaSeparated(tex, uv);\nif (v_uvMode >= 3.0) {\no.a *= evalFilledUV(v_uv0, v_uvParams0.z);\n}\nreturn o;\n}\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nin vec4 v_color;\n#if USE_TEXTURE\nuniform sampler2D cc_spriteTexture;\n#endif\nvec4 frag () {\nSpriteFragmentData i;\nCCSpriteInput(i);\n#if USE_TEXTURE\nvec4 color = v_color * CCSpriteSample(cc_spriteTexture, i.uv);\n#else\nvec4 color = v_color;\n#endif\n#if IS_GRAY\ncolor.rgb = SRGBToLinear(color.rgb);\ncolor.rgb = vec3(dot(color.rgb, vec3(0.2126, 0.7152, 0.0722)));\ncolor.rgb = sqrt(color.rgb);\n#endif\nreturn color;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\n#if USE_LOCAL\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\n#endif\n#if SAMPLE_FROM_RT\n#endif\nin vec3 a_position;\nin vec2 a_texCoord;\nin vec4 a_color;\nout vec4 color;\nout vec2 uv0;\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\n#if USE_LOCAL\npos = cc_matWorld * pos;\n#endif\n#if USE_PIXEL_ALIGNMENT\npos = cc_matView * pos;\npos.xyz = floor(pos.xyz);\npos = cc_matProj * pos;\n#else\npos = cc_matViewProj * pos;\n#endif\nuv0 = a_texCoord;\n#if SAMPLE_FROM_RT\nuv0 = cc_cameraPos.w > 1.0 ? vec2(uv0.x, 1.0 - uv0.y) : uv0;\n#endif\ncolor = a_color;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec4 CCSampleWithAlphaSeparated(sampler2D tex, vec2 uv) {\n#if CC_USE_EMBEDDED_ALPHA\nreturn vec4(texture(tex, uv).rgb, texture(tex, uv + vec2(0.0, 0.5)).r);\n#else\nreturn texture(tex, uv);\n#endif\n}\n#if USE_ALPHA_TEST\nlayout(std140) uniform ALPHA_TEST_DATA {\nfloat alphaThreshold;\n};\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n#if USE_ALPHA_TEST\nif (color.a < alphaThreshold) discard;\n#endif\n}\nvoid ALPHA_TEST (in float alpha) {\n#if USE_ALPHA_TEST\nif (alpha < alphaThreshold) discard;\n#endif\n}\nin vec4 color;\n#if USE_TEXTURE\nin vec2 uv0;\nuniform sampler2D cc_spriteTexture;\n#endif\nvec4 frag () {\nvec4 o = vec4(1, 1, 1, 1);\n#if USE_TEXTURE\no *= CCSampleWithAlphaSeparated(cc_spriteTexture, uv0);\n#if IS_GRAY\nfloat gray  = 0.2126 * o.r + 0.7152 * o.g + 0.0722 * o.b;\no.r = o.g = o.b = gray;\n#endif\n#endif\no *= color;\nALPHA_TEST(o);\nreturn o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_MORPH\nin float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nlayout(std140) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nin vec4 a_joints;\nin vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nin highp vec4 a_jointAnimInfo;\n#endif\nlayout(std140) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(std140) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nuniform highp sampler2D cc_jointTexture;\n#else\nlayout(std140) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\n#if USE_INSTANCING\nin vec4 a_matWorld0;\nin vec4 a_matWorld1;\nin vec4 a_matWorld2;\n#if USE_LIGHTMAP\nin vec4 a_lightingMapUVParam;\n#endif\n#elif USE_BATCHING\nin float a_dyn_batch_id;\nlayout(std140) uniform CCLocalBatched {\nhighp mat4 cc_matWorlds[10];\n};\n#else\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\n#endif\nlayout(std140) uniform Constants {\nvec4 tilingOffset;\nvec4 albedo;\nvec4 albedoScaleAndCutoff;\nvec4 pbrParams;\nvec4 emissive;\nvec4 emissiveScaleParam;\n};\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\n#if !CC_USE_ACCURATE_FOG\nout float v_fog_factor;\n#endif\nvoid CC_TRANSFER_FOG(vec4 pos) {\n#if !CC_USE_ACCURATE_FOG\nCC_TRANSFER_FOG_BASE(pos, v_fog_factor);\n#endif\n}\nout highp vec4 v_shadowPos;\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nmediump vec4 cc_shadowNFLSInfo;\nmediump vec4 cc_shadowWHPBInfo;\nmediump vec4 cc_shadowLPNNInfo;\nlowp vec4 cc_shadowColor;\nmediump vec4 cc_planarNDInfo;\n};\n#if CC_RECEIVE_SHADOW\nuniform highp sampler2D cc_shadowMap;\nuniform highp sampler2D cc_spotLightingMap;\n#endif\n#if USE_VERTEX_COLOR\nin vec4 a_color;\nout vec4 v_color;\n#endif\nout vec3 v_position;\nout vec3 v_normal;\nout vec2 v_uv;\nout vec2 v_uv1;\n#if USE_NORMAL_MAP\nout vec3 v_tangent;\nout vec3 v_bitangent;\n#endif\n#if HAS_SECOND_UV || USE_LIGHTMAP\nin vec2 a_texCoord1;\n#endif\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nout vec3 v_luv;\nvoid CCLightingMapCaclUV()\n{\n#if !USE_INSTANCING\nv_luv.xy = cc_lightingMapUVParam.xy + a_texCoord1 * cc_lightingMapUVParam.zw;\nv_luv.z = cc_lightingMapUVParam.z;\n#else\nv_luv.xy = a_lightingMapUVParam.xy + a_texCoord1 * a_lightingMapUVParam.zw;\nv_luv.z = a_lightingMapUVParam.z;\n#endif\n}\n#endif\nvoid main () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nmat4 matWorld, matWorldIT;\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\nmatWorldIT = matWorld;\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\nmatWorldIT = matWorld;\n#else\nmatWorld = cc_matWorld;\nmatWorldIT = cc_matWorldIT;\n#endif\nvec4 pos = matWorld * In.position;\nv_position = pos.xyz;\nv_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);\n#if USE_TWOSIDE\nvec3 viewDirect = normalize(cc_cameraPos.xyz - v_position);\nv_normal *= dot(v_normal, viewDirect) < 0.0 ? -1.0 : 1.0;\n#endif\n#if USE_NORMAL_MAP\nv_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);\nv_bitangent = cross(v_normal, v_tangent) * In.tangent.w;\n#endif\nv_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n#if SAMPLE_FROM_RT\nv_uv = cc_cameraPos.w > 1.0 ? vec2(v_uv.x, 1.0 - v_uv.y) : v_uv;\n#endif\n#if HAS_SECOND_UV\nv_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n#if SAMPLE_FROM_RT\nv_uv1 = cc_cameraPos.w > 1.0 ? vec2(v_uv1.x, 1.0 - v_uv1.y) : v_uv1;\n#endif\n#endif\n#if USE_VERTEX_COLOR\nv_color = a_color;\n#endif\nCC_TRANSFER_FOG(pos);\nv_shadowPos = cc_matLightViewProj * pos;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nCCLightingMapCaclUV();\n#endif\ngl_Position = cc_matProj * (cc_matView * matWorld) * In.position;\n}",frag:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(std140) uniform Constants {\nvec4 tilingOffset;\nvec4 albedo;\nvec4 albedoScaleAndCutoff;\nvec4 pbrParams;\nvec4 emissive;\nvec4 emissiveScaleParam;\n};\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\nvoid CC_APPLY_FOG_BASE(inout vec4 color, float factor) {\ncolor = vec4(mix(cc_fogColor.rgb, color.rgb, factor), color.a);\n}\n#if !CC_USE_ACCURATE_FOG\nin float v_fog_factor;\n#endif\nvoid CC_APPLY_FOG(inout vec4 color) {\n#if !CC_USE_ACCURATE_FOG\nCC_APPLY_FOG_BASE(color, v_fog_factor);\n#endif\n}\nvoid CC_APPLY_FOG(inout vec4 color, vec3 worldPos) {\n#if CC_USE_ACCURATE_FOG\nfloat factor;\nCC_TRANSFER_FOG_BASE(vec4(worldPos, 1.0), factor);\n#else\nfloat factor = v_fog_factor;\n#endif\nCC_APPLY_FOG_BASE(color, factor);\n}\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nmediump vec4 cc_shadowNFLSInfo;\nmediump vec4 cc_shadowWHPBInfo;\nmediump vec4 cc_shadowLPNNInfo;\nlowp vec4 cc_shadowColor;\nmediump vec4 cc_planarNDInfo;\n};\nhighp float unpackHighpData (float mainPart, float modPart) {\nhighp float data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out float mainPart, out float modPart, highp float data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp float unpackHighpData (float mainPart, float modPart, const float modValue) {\nhighp float data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out float mainPart, out float modPart, highp float data, const float modValue) {\nhighp float divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec2 unpackHighpData (vec2 mainPart, vec2 modPart) {\nhighp vec2 data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out vec2 mainPart, out vec2 modPart, highp vec2 data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp vec2 unpackHighpData (vec2 mainPart, vec2 modPart, const float modValue) {\nhighp vec2 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out vec2 mainPart, out vec2 modPart, highp vec2 data, const float modValue) {\nhighp vec2 divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec3 unpackHighpData (vec3 mainPart, vec3 modPart) {\nhighp vec3 data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out vec3 mainPart, out vec3 modPart, highp vec3 data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp vec3 unpackHighpData (vec3 mainPart, vec3 modPart, const float modValue) {\nhighp vec3 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out vec3 mainPart, out vec3 modPart, highp vec3 data, const float modValue) {\nhighp vec3 divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec4 unpackHighpData (vec4 mainPart, vec4 modPart) {\nhighp vec4 data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out vec4 mainPart, out vec4 modPart, highp vec4 data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp vec4 unpackHighpData (vec4 mainPart, vec4 modPart, const float modValue) {\nhighp vec4 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out vec4 mainPart, out vec4 modPart, highp vec4 data, const float modValue) {\nhighp vec4 divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\nfloat dist = length(viewPos);\nreturn (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\nvec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\nreturn CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\nuniform highp sampler2D cc_shadowMap;\nuniform highp sampler2D cc_spotLightingMap;\nvec4 ApplyShadowDepthBias_FaceNormal(vec4 shadowPos, vec3 worldNormal)\n{\nvec4 newShadowPos = shadowPos;\nif(cc_shadowLPNNInfo.z > 0.0001)\n{\nvec4 viewNormal = cc_matLightView * vec4(worldNormal, 0.0);\nif(viewNormal.z < 0.1)\nnewShadowPos.xy += viewNormal.xy * cc_shadowProjInfo.xy * cc_shadowLPNNInfo.z * clamp(viewNormal.z, 0.001, 0.1);\n}\nreturn newShadowPos;\n}\nvec4 ApplyShadowDepthBias_Perspective(vec4 shadowPos, float viewspaceDepthBias)\n{\nvec3 viewSpacePos;\nviewSpacePos.xy = shadowPos.xy * cc_shadowProjInfo.zw;\nviewSpacePos.z = shadowPos.z * cc_shadowInvProjDepthInfo.x + shadowPos.w * cc_shadowInvProjDepthInfo.y;\nviewSpacePos.xyz += cc_shadowProjDepthInfo.z * normalize(viewSpacePos.xyz) * viewspaceDepthBias;\nvec4 clipSpacePos;\nclipSpacePos.xy = viewSpacePos.xy * cc_shadowProjInfo.xy;\nclipSpacePos.zw = viewSpacePos.z * cc_shadowProjDepthInfo.xz + vec2(cc_shadowProjDepthInfo.y, 0.0);\nif (cc_shadowNFLSInfo.z > 0.000001) {\nclipSpacePos.z = CCGetLinearDepthFromViewSpace(viewSpacePos.xyz);\nclipSpacePos.z = (clipSpacePos.z * 2.0 - 1.0) * clipSpacePos.w;\n}\nreturn clipSpacePos;\n}\nvec4 ApplyShadowDepthBias_Orthographic(vec4 shadowPos, float viewspaceDepthBias)\n{\nfloat coeffA = cc_shadowProjDepthInfo.x;\nfloat coeffB = cc_shadowProjDepthInfo.y;\nfloat viewSpacePos_z = (shadowPos.z - coeffB) / coeffA;\nviewSpacePos_z += viewspaceDepthBias;\nvec4 result = shadowPos;\nresult.z = viewSpacePos_z * coeffA + coeffB;\nreturn result;\n}\nfloat CCGetShadowFactorHard (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture(cc_shadowMap, clipPos.xy).x;\n}\nshadow = step(clipPos.z, closestDepth);\nreturn shadow;\n}\nfloat CCGetShadowFactorSoft (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * mapSize.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetShadowFactorSoft2X (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\nfloat CCGetSpotLightShadowFactorHard (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nfloat depth = clipPos.z;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture(cc_spotLightingMap, clipPos.xy).x;\n}\nshadow = step(depth, closestDepth);\nreturn shadow;\n}\nfloat CCGetSpotLightShadowFactorSoft (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nfloat bias = cc_shadowWHPBInfo.w;\nvec2 oneTap = 1.0 / cc_shadowWHPBInfo.xy;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * cc_shadowWHPBInfo.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * cc_shadowWHPBInfo.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetSpotLightShadowFactorSoft2X (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nfloat bias = cc_shadowWHPBInfo.w;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\n#endif\n#if CC_USE_IBL\nuniform samplerCube cc_environment;\nvec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\nreturn textureLod(tex, coord, lod);\n}\nvec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\nreturn textureLod(tex, coord, lod);\n}\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n}\n#if CC_USE_DIFFUSEMAP\nuniform samplerCube cc_diffuseMap;\n#endif\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\nvec3 NxH = cross(N, H);\nfloat OneMinusNoHSqr = dot(NxH, NxH);\nfloat a = roughness * roughness;\nfloat n = NoH * a;\nfloat p = a / (OneMinusNoHSqr + n * n);\nreturn p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\nreturn (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\nconst vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\nconst vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\nvec4 r = roughness * c0 + c1;\nfloat a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\nvec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\nAB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\nreturn specular * AB.x + AB.y;\n}\n#if USE_REFLECTION_DENOISE\nvec3 GetEnvReflectionWithMipFiltering(vec3 R, float roughness, float mipCount, float denoiseIntensity) {\n#if CC_USE_IBL\nfloat mip = roughness * mipCount;\nfloat delta = (dot(dFdx(R), dFdy(R))) * 1000.0;\nfloat mipBias = mix(0.0, 5.0, clamp(delta, 0.0, 1.0));\nvec4 biased = fragTextureLod(cc_environment, R, mip + mipBias);\nvec4 filtered = texture(cc_environment, R);\n#if CC_USE_IBL == 2\nbiased.rgb = unpackRGBE(biased);\nfiltered.rgb = unpackRGBE(filtered);\n#else\nbiased.rgb = SRGBToLinear(biased.rgb);\nfiltered.rgb = SRGBToLinear(filtered.rgb);\n#endif\nreturn mix(biased.rgb, filtered.rgb, denoiseIntensity);\n#else\nreturn vec3(0.0, 0.0, 0.0);\n#endif\n}\n#endif\nstruct StandardSurface {\nvec4 albedo;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nvec3 position, position_fract_part;\n#else\nvec3 position;\n#endif\nvec3 normal;\nvec3 emissive;\nvec3 lightmap;\nfloat lightmap_test;\nfloat roughness;\nfloat metallic;\nfloat occlusion;\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 L = normalize(-cc_mainLitDir.xyz);\nvec3 H = normalize(L + V);\nfloat NH = max(dot(N, H), 0.0);\nfloat NL = max(dot(N, L), 0.0);\nvec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\nvec3 diffuseContrib = diffuse;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nif (s.lightmap_test > 0.0001) {\nfinalColor = s.lightmap.rgb;\n}\n#else\ndiffuseContrib /= 3.14159265359;\n#endif\nvec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\nvec3 dirlightContrib = (diffuseContrib + specularContrib);\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (NL > 0.0 && cc_mainLitDir.w > 0.0) {\n{\nvec4 pos = ApplyShadowDepthBias_FaceNormal(shadowPos, N);\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetShadowFactorSoft2X(pos);\nelse if (pcf > 0.9) shadow = CCGetShadowFactorSoft(pos);\nelse shadow = CCGetShadowFactorHard(pos);\nshadow = mix(shadow, 1.0, cc_shadowNFLSInfo.w);\n}\n}\n#endif\ndirlightContrib *= shadow;\nfinalColor *= dirlightContrib;\nfloat fAmb = 0.5 - N.y * 0.5;\nvec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb);\n#if CC_USE_IBL\n#if CC_USE_DIFFUSEMAP\nvec4 diffuseMap = texture(cc_diffuseMap, N);\n#if CC_USE_DIFFUSEMAP == 2\nambDiff = unpackRGBE(diffuseMap);\n#else\nambDiff = SRGBToLinear(diffuseMap.rgb);\n#endif\n#endif\nvec3 R = normalize(reflect(-V, N));\n#if USE_REFLECTION_DENOISE\nvec3 env = GetEnvReflectionWithMipFiltering(R, s.roughness, cc_ambientGround.w, 0.6);\n#else\nvec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n#if CC_USE_IBL == 2\nvec3 env = unpackRGBE(envmap);\n#else\nvec3 env = SRGBToLinear(envmap.rgb);\n#endif\n#endif\nfinalColor += env * cc_ambientSky.w * specular * s.occlusion;\n#endif\nfinalColor += ambDiff.rgb * cc_ambientSky.w * diffuse * s.occlusion;\nfinalColor += s.emissive;\nreturn vec4(finalColor, s.albedo.a);\n}\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = ACESToneMap(color.rgb);\n#endif\ncolor.rgb = sqrt(color.rgb);\nreturn color;\n}\nin highp vec4 v_shadowPos;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nin vec3 v_luv;\nuniform sampler2D cc_lightingMap;\nvec3 UnpackLightingmap(vec4 color) {\nvec3 c;\nfloat e = 1.0 + color.a * (8.0 - 1.0);\nc.r = color.r * e;\nc.g = color.g * e;\nc.b = color.b * e;\nreturn c;\n}\n#endif\nin vec3 v_position;\nin vec2 v_uv;\nin vec2 v_uv1;\nin vec3 v_normal;\n#if USE_VERTEX_COLOR\nin vec4 v_color;\n#endif\n#if USE_ALBEDO_MAP\nuniform sampler2D albedoMap;\n#endif\n#if USE_NORMAL_MAP\nin vec3 v_tangent;\nin vec3 v_bitangent;\nuniform sampler2D normalMap;\n#endif\n#if USE_PBR_MAP\nuniform sampler2D pbrMap;\n#endif\n#if USE_METALLIC_ROUGHNESS_MAP\nuniform sampler2D metallicRoughnessMap;\n#endif\n#if USE_OCCLUSION_MAP\nuniform sampler2D occlusionMap;\n#endif\n#if USE_EMISSIVE_MAP\nuniform sampler2D emissiveMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvoid surf (out StandardSurface s) {\nvec4 baseColor = albedo;\n#if USE_VERTEX_COLOR\nbaseColor.rgb *= SRGBToLinear(v_color.rgb);\nbaseColor.a *= v_color.a;\n#endif\n#if USE_ALBEDO_MAP\nvec4 texColor = texture(albedoMap, ALBEDO_UV);\ntexColor.rgb = SRGBToLinear(texColor.rgb);\nbaseColor *= texColor;\n#endif\ns.albedo = baseColor;\ns.albedo.rgb *= albedoScaleAndCutoff.xyz;\n#if USE_ALPHA_TEST\nif (s.albedo.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n#endif\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nvec4 lightColor = texture(cc_lightingMap, v_luv.xy);\ns.lightmap = UnpackLightingmap(lightColor);\ns.lightmap_test = v_luv.z;\n#endif\ns.normal = v_normal;\n#if USE_NORMAL_MAP\nvec3 nmmp = texture(normalMap, NORMAL_UV).xyz - vec3(0.5);\ns.normal =\n(nmmp.x * emissiveScaleParam.w) * normalize(v_tangent) +\n(nmmp.y * emissiveScaleParam.w) * normalize(v_bitangent) +\nnmmp.z * normalize(s.normal);\n#endif\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\npackHighpData(s.position, s.position_fract_part, v_position);\n#else\ns.position = v_position;\n#endif\nvec4 pbr = pbrParams;\n#if USE_PBR_MAP\nvec4 res = texture(pbrMap, PBR_UV);\npbr.x *= res.r;\npbr.y *= res.g;\npbr.z *= res.b;\npbr.w *= res.a;\n#endif\n#if USE_METALLIC_ROUGHNESS_MAP\nvec4 metallicRoughness = texture(metallicRoughnessMap, PBR_UV);\npbr.z *= metallicRoughness.b;\npbr.y *= metallicRoughness.g;\n#endif\n#if USE_OCCLUSION_MAP\npbr.x *= texture(occlusionMap, PBR_UV).r;\n#endif\ns.occlusion = pbr.x;\ns.roughness = pbr.y;\ns.metallic = pbr.z;\ns.emissive = emissive.rgb * emissiveScaleParam.xyz;\n#if USE_EMISSIVE_MAP\ns.emissive *= SRGBToLinear(texture(emissiveMap, EMISSIVE_UV).rgb);\n#endif\n}\n#if CC_FORWARD_ADD\n#if CC_PIPELINE_TYPE == 0\n# define LIGHTS_PER_PASS 1\n#else\n# define LIGHTS_PER_PASS 10\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nlayout(std140) uniform CCForwardLight {\nhighp vec4 cc_lightPos[LIGHTS_PER_PASS];\nvec4 cc_lightColor[LIGHTS_PER_PASS];\nvec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\nvec4 cc_lightDir[LIGHTS_PER_PASS];\n};\n#endif\nfloat SmoothDistAtt (float distSqr, float invSqrAttRadius) {\nfloat factor = distSqr * invSqrAttRadius;\nfloat smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\nreturn smoothFactor * smoothFactor;\n}\nfloat GetDistAtt (float distSqr, float invSqrAttRadius) {\nfloat attenuation = 1.0 / max(distSqr, 0.01*0.01);\nattenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\nreturn attenuation;\n}\nfloat GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\nfloat cd = dot(litDir, L);\nfloat attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\nreturn (attenuation * attenuation);\n}\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nvec4 CCStandardShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / 3.14159265359;\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nint numLights = CC_PIPELINE_TYPE == 0 ? LIGHTS_PER_PASS : int(cc_lightDir[0].w);\nfor (int i = 0; i < LIGHTS_PER_PASS; i++) {\nif (i >= numLights) break;\nvec3 SLU = cc_lightPos[i].xyz - position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.0);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = cc_lightSizeRangeAngle[i].x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (cc_lightPos[i].w > 0.0) {\nfloat cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\nfloat cosOuter = cc_lightSizeRangeAngle[i].z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = cc_lightColor[i].rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (cc_lightPos[i].w > 0.0 && cc_lightSizeRangeAngle[i].w > 0.0) {\n{\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetSpotLightShadowFactorSoft2X(shadowPos, position);\nelse if (pcf > 0.9) shadow = CCGetSpotLightShadowFactorSoft(shadowPos, position);\nelse shadow = CCGetSpotLightShadowFactorHard(shadowPos, position);\n}\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nlayout(std430, binding = 4) readonly buffer b_ccLightsBuffer { vec4 b_ccLights[]; };\nlayout(std430, binding = 5) readonly buffer b_clusterLightIndicesBuffer { uint b_clusterLightIndices[]; };\nlayout(std430, binding = 6) readonly buffer b_clusterLightGridBuffer { uvec4 b_clusterLightGrid[]; };\nstruct CCLight\n{\nvec4 cc_lightPos;\nvec4 cc_lightColor;\nvec4 cc_lightSizeRangeAngle;\nvec4 cc_lightDir;\n};\nstruct Cluster\n{\nvec3 minBounds;\nvec3 maxBounds;\n};\nstruct LightGrid\n{\nuint offset;\nuint ccLights;\n};\nCCLight getCCLight(uint i)\n{\nCCLight light;\nlight.cc_lightPos = b_ccLights[4u * i + 0u];\nlight.cc_lightColor = b_ccLights[4u * i + 1u];\nlight.cc_lightSizeRangeAngle = b_ccLights[4u * i + 2u];\nlight.cc_lightDir = b_ccLights[4u * i + 3u];\nreturn light;\n}\nLightGrid getLightGrid(uint cluster)\n{\nuvec4 gridvec = b_clusterLightGrid[cluster];\nLightGrid grid;\ngrid.offset = gridvec.x;\ngrid.ccLights = gridvec.y;\nreturn grid;\n}\nuint getGridLightIndex(uint start, uint offset)\n{\nreturn b_clusterLightIndices[start + offset];\n}\nuint getClusterZIndex(vec4 worldPos)\n{\nfloat scale = float(24) / log(cc_nearFar.y / cc_nearFar.x);\nfloat bias = -(float(24) * log(cc_nearFar.x) / log(cc_nearFar.y / cc_nearFar.x));\nfloat eyeDepth = -(cc_matView * worldPos).z;\nuint zIndex = uint(max(log(eyeDepth) * scale + bias, 0.0));\nreturn zIndex;\n}\nuint getClusterIndex(vec4 fragCoord, vec4 worldPos)\n{\nuint zIndex = getClusterZIndex(worldPos);\nfloat clusterSizeX = ceil(cc_viewPort.z / float(16));\nfloat clusterSizeY = ceil(cc_viewPort.w / float(8));\nuvec3 indices = uvec3(uvec2(fragCoord.xy / vec2(clusterSizeX, clusterSizeY)), zIndex);\nuint cluster = (16u * 8u) * indices.z + 16u * indices.y + indices.x;\nreturn cluster;\n}\nvec4 CCClusterShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / 3.14159265359;\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.001);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nuint cluster = getClusterIndex(gl_FragCoord, vec4(position, 1.0));\nLightGrid grid = getLightGrid(cluster);\nuint numLights = grid.ccLights;\nfor (uint i = 0u; i < 100u; i++) {\nif (i >= numLights) break;\nuint lightIndex = getGridLightIndex(grid.offset, i);\nCCLight light = getCCLight(lightIndex);\nvec3 SLU = light.cc_lightPos.xyz - position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.001);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = light.cc_lightSizeRangeAngle.x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(light.cc_lightSizeRangeAngle.y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (light.cc_lightPos.w > 0.0) {\nfloat cosInner = max(dot(-light.cc_lightDir.xyz, SL), 0.01);\nfloat cosOuter = light.cc_lightSizeRangeAngle.z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -light.cc_lightDir.xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = light.cc_lightColor.rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (light.cc_lightPos.w > 0.0) {\n{\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetSpotLightShadowFactorSoft2X(shadowPos, position);\nelse if (pcf > 0.9) shadow = CCGetSpotLightShadowFactorSoft(shadowPos, position);\nelse shadow = CCGetSpotLightShadowFactorHard(shadowPos, position);\n}\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * light.cc_lightColor.w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\nlayout(location = 0) out vec4 fragColorX;\nvoid main () {\nStandardSurface s; surf(s);\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nvec4 color = CCClusterShadingAdditive(s, v_shadowPos);\n#else\nvec4 color = CCStandardShadingAdditive(s, v_shadowPos);\n#endif\nCC_APPLY_FOG(color, s.position.xyz);\nfragColorX = CCFragOutput(color);\n}\n#elif (CC_PIPELINE_TYPE == 0 || CC_FORCE_FORWARD_SHADING)\nlayout(location = 0) out vec4 fragColorX;\nvoid main () {\nStandardSurface s; surf(s);\nvec4 color = CCStandardShadingBase(s, v_shadowPos);\nCC_APPLY_FOG(color, s.position.xyz);\nfragColorX = CCFragOutput(color);\n}\n#elif CC_PIPELINE_TYPE == 1\nvec2 signNotZero(vec2 v) {\nreturn vec2((v.x >= 0.0) ? +1.0 : -1.0, (v.y >= 0.0) ? +1.0 : -1.0);\n}\nvec2 float32x3_to_oct(in vec3 v) {\nvec2 p = v.xy * (1.0 / (abs(v.x) + abs(v.y) + abs(v.z)));\nreturn (v.z <= 0.0) ? ((1.0 - abs(p.yx)) * signNotZero(p)) : p;\n}\nlayout(location = 0) out vec4 fragColor0;\nlayout(location = 1) out vec4 fragColor1;\nlayout(location = 2) out vec4 fragColor2;\nvoid main () {\nStandardSurface s; surf(s);\nfragColor0 = s.albedo;\nfragColor1 = vec4(float32x3_to_oct(s.normal), s.roughness, s.metallic);\nfragColor2 = vec4(s.emissive, s.occlusion);\n}\n#endif"},{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_MORPH\nin float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nlayout(std140) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nin vec4 a_joints;\nin vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nin highp vec4 a_jointAnimInfo;\n#endif\nlayout(std140) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(std140) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nuniform highp sampler2D cc_jointTexture;\n#else\nlayout(std140) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\n#if USE_INSTANCING\nin vec4 a_matWorld0;\nin vec4 a_matWorld1;\nin vec4 a_matWorld2;\n#if USE_LIGHTMAP\nin vec4 a_lightingMapUVParam;\n#endif\n#elif USE_BATCHING\nin float a_dyn_batch_id;\nlayout(std140) uniform CCLocalBatched {\nhighp mat4 cc_matWorlds[10];\n};\n#else\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\n#endif\nlayout(std140) uniform Constants {\nvec4 tilingOffset;\nvec4 albedo;\nvec4 albedoScaleAndCutoff;\nvec4 pbrParams;\nvec4 emissive;\nvec4 emissiveScaleParam;\n};\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nmediump vec4 cc_shadowNFLSInfo;\nmediump vec4 cc_shadowWHPBInfo;\nmediump vec4 cc_shadowLPNNInfo;\nlowp vec4 cc_shadowColor;\nmediump vec4 cc_planarNDInfo;\n};\n#if HAS_SECOND_UV || USE_LIGHTMAP\nin vec2 a_texCoord1;\n#endif\nout vec2 v_uv;\nout vec2 v_uv1;\nout vec4 v_worldPos;\nout float v_clip_depth;\nvec4 vert () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nmat4 matWorld, matWorldIT;\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\nmatWorldIT = matWorld;\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\nmatWorldIT = matWorld;\n#else\nmatWorld = cc_matWorld;\nmatWorldIT = cc_matWorldIT;\n#endif\nv_worldPos = matWorld * In.position;\nvec4 clipPos = cc_matLightViewProj * v_worldPos;\nv_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n#if HAS_SECOND_UV\nv_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n#endif\nv_clip_depth = clipPos.z / clipPos.w * 0.5 + 0.5;\nreturn clipPos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nlayout(std140) uniform Constants {\nvec4 tilingOffset;\nvec4 albedo;\nvec4 albedoScaleAndCutoff;\nvec4 pbrParams;\nvec4 emissive;\nvec4 emissiveScaleParam;\n};\nvec4 packDepthToRGBA (float depth) {\nvec4 ret = vec4(1.0, 255.0, 65025.0, 16581375.0) * depth;\nret = fract(ret);\nret -= vec4(ret.yzw, 0.0) / 255.0;\nreturn ret;\n}\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nmediump vec4 cc_shadowNFLSInfo;\nmediump vec4 cc_shadowWHPBInfo;\nmediump vec4 cc_shadowLPNNInfo;\nlowp vec4 cc_shadowColor;\nmediump vec4 cc_planarNDInfo;\n};\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\nfloat dist = length(viewPos);\nreturn (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\nvec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\nreturn CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\nuniform highp sampler2D cc_shadowMap;\nuniform highp sampler2D cc_spotLightingMap;\n#endif\nin vec2 v_uv;\nin vec2 v_uv1;\nin vec4 v_worldPos;\nin float v_clip_depth;\n#if USE_ALBEDO_MAP\nuniform sampler2D albedoMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvec4 frag () {\nvec4 baseColor = albedo;\n#if USE_ALBEDO_MAP\nbaseColor *= texture(albedoMap, ALBEDO_UV);\n#endif\n#if USE_ALPHA_TEST\nif (baseColor.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n#endif\nif(cc_shadowLPNNInfo.x > 0.000001 && cc_shadowLPNNInfo.x < 1.999999) {\nif (cc_shadowNFLSInfo.z > 0.000001) {\nreturn vec4(CCGetLinearDepth(v_worldPos.xyz), 1.0, 1.0, 1.0);\n}\n}\nif (cc_shadowLPNNInfo.y > 0.000001) {\nreturn packDepthToRGBA(v_clip_depth);\n}\nreturn vec4(v_clip_depth, 1.0, 1.0, 1.0);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\n#if !CC_USE_ACCURATE_FOG\nout float v_fog_factor;\n#endif\nvoid CC_TRANSFER_FOG(vec4 pos) {\n#if !CC_USE_ACCURATE_FOG\nCC_TRANSFER_FOG_BASE(pos, v_fog_factor);\n#endif\n}\nout highp vec4 v_shadowPos;\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nmediump vec4 cc_shadowNFLSInfo;\nmediump vec4 cc_shadowWHPBInfo;\nmediump vec4 cc_shadowLPNNInfo;\nlowp vec4 cc_shadowColor;\nmediump vec4 cc_planarNDInfo;\n};\n#if CC_RECEIVE_SHADOW\nuniform highp sampler2D cc_shadowMap;\nuniform highp sampler2D cc_spotLightingMap;\n#endif\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nout highp vec3 v_position;\nout mediump vec3 v_normal;\n#if USE_NORMALMAP\nout mediump vec3 v_tangent;\nout mediump vec3 v_binormal;\n#endif\nout mediump vec2 uvw;\nout mediump vec2 uv0;\nout mediump vec2 uv1;\nout mediump vec2 uv2;\nout mediump vec2 uv3;\nout mediump vec3 luv;\nout mediump vec3 diffuse;\nlayout(std140) uniform TexCoords {\nvec4 UVScale;\nvec4 lightMapUVParam;\n};\nvoid main () {\nvec3 worldPos;\nworldPos.x = cc_matWorld[3][0] + a_position.x;\nworldPos.y = cc_matWorld[3][1] + a_position.y;\nworldPos.z = cc_matWorld[3][2] + a_position.z;\nvec4 pos = vec4(worldPos, 1.0);\npos = cc_matViewProj * pos;\nuvw = a_texCoord;\nuv0 = a_position.xz * UVScale.x;\nuv1 = a_position.xz * UVScale.y;\nuv2 = a_position.xz * UVScale.z;\nuv3 = a_position.xz * UVScale.w;\n#if USE_LIGHTMAP\nluv.xy = lightMapUVParam.xy + a_texCoord * lightMapUVParam.zw;\nluv.z = lightMapUVParam.z;\n#endif\nv_position = worldPos;\nv_normal = a_normal;\nCC_TRANSFER_FOG(vec4(worldPos, 1.0));\n#if USE_NORMALMAP\nv_tangent = vec3(1.0, 0.0, 0.0);\nv_binormal = vec3(0.0, 0.0, 1.0);\nv_binormal = cross(v_tangent, a_normal);\nv_tangent = cross(a_normal, v_binormal);\n#endif\nv_shadowPos = cc_matLightViewProj * vec4(worldPos, 1.0);\ngl_Position = pos;\n}",frag:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nmediump vec4 cc_shadowNFLSInfo;\nmediump vec4 cc_shadowWHPBInfo;\nmediump vec4 cc_shadowLPNNInfo;\nlowp vec4 cc_shadowColor;\nmediump vec4 cc_planarNDInfo;\n};\nhighp float unpackHighpData (float mainPart, float modPart) {\nhighp float data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out float mainPart, out float modPart, highp float data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp float unpackHighpData (float mainPart, float modPart, const float modValue) {\nhighp float data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out float mainPart, out float modPart, highp float data, const float modValue) {\nhighp float divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec2 unpackHighpData (vec2 mainPart, vec2 modPart) {\nhighp vec2 data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out vec2 mainPart, out vec2 modPart, highp vec2 data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp vec2 unpackHighpData (vec2 mainPart, vec2 modPart, const float modValue) {\nhighp vec2 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out vec2 mainPart, out vec2 modPart, highp vec2 data, const float modValue) {\nhighp vec2 divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec3 unpackHighpData (vec3 mainPart, vec3 modPart) {\nhighp vec3 data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out vec3 mainPart, out vec3 modPart, highp vec3 data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp vec3 unpackHighpData (vec3 mainPart, vec3 modPart, const float modValue) {\nhighp vec3 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out vec3 mainPart, out vec3 modPart, highp vec3 data, const float modValue) {\nhighp vec3 divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec4 unpackHighpData (vec4 mainPart, vec4 modPart) {\nhighp vec4 data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out vec4 mainPart, out vec4 modPart, highp vec4 data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp vec4 unpackHighpData (vec4 mainPart, vec4 modPart, const float modValue) {\nhighp vec4 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out vec4 mainPart, out vec4 modPart, highp vec4 data, const float modValue) {\nhighp vec4 divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\nfloat dist = length(viewPos);\nreturn (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\nvec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\nreturn CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\nuniform highp sampler2D cc_shadowMap;\nuniform highp sampler2D cc_spotLightingMap;\nvec4 ApplyShadowDepthBias_FaceNormal(vec4 shadowPos, vec3 worldNormal)\n{\nvec4 newShadowPos = shadowPos;\nif(cc_shadowLPNNInfo.z > 0.0001)\n{\nvec4 viewNormal = cc_matLightView * vec4(worldNormal, 0.0);\nif(viewNormal.z < 0.1)\nnewShadowPos.xy += viewNormal.xy * cc_shadowProjInfo.xy * cc_shadowLPNNInfo.z * clamp(viewNormal.z, 0.001, 0.1);\n}\nreturn newShadowPos;\n}\nvec4 ApplyShadowDepthBias_Perspective(vec4 shadowPos, float viewspaceDepthBias)\n{\nvec3 viewSpacePos;\nviewSpacePos.xy = shadowPos.xy * cc_shadowProjInfo.zw;\nviewSpacePos.z = shadowPos.z * cc_shadowInvProjDepthInfo.x + shadowPos.w * cc_shadowInvProjDepthInfo.y;\nviewSpacePos.xyz += cc_shadowProjDepthInfo.z * normalize(viewSpacePos.xyz) * viewspaceDepthBias;\nvec4 clipSpacePos;\nclipSpacePos.xy = viewSpacePos.xy * cc_shadowProjInfo.xy;\nclipSpacePos.zw = viewSpacePos.z * cc_shadowProjDepthInfo.xz + vec2(cc_shadowProjDepthInfo.y, 0.0);\nif (cc_shadowNFLSInfo.z > 0.000001) {\nclipSpacePos.z = CCGetLinearDepthFromViewSpace(viewSpacePos.xyz);\nclipSpacePos.z = (clipSpacePos.z * 2.0 - 1.0) * clipSpacePos.w;\n}\nreturn clipSpacePos;\n}\nvec4 ApplyShadowDepthBias_Orthographic(vec4 shadowPos, float viewspaceDepthBias)\n{\nfloat coeffA = cc_shadowProjDepthInfo.x;\nfloat coeffB = cc_shadowProjDepthInfo.y;\nfloat viewSpacePos_z = (shadowPos.z - coeffB) / coeffA;\nviewSpacePos_z += viewspaceDepthBias;\nvec4 result = shadowPos;\nresult.z = viewSpacePos_z * coeffA + coeffB;\nreturn result;\n}\nfloat CCGetShadowFactorHard (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture(cc_shadowMap, clipPos.xy).x;\n}\nshadow = step(clipPos.z, closestDepth);\nreturn shadow;\n}\nfloat CCGetShadowFactorSoft (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * mapSize.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetShadowFactorSoft2X (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\nfloat CCGetSpotLightShadowFactorHard (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nfloat depth = clipPos.z;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture(cc_spotLightingMap, clipPos.xy).x;\n}\nshadow = step(depth, closestDepth);\nreturn shadow;\n}\nfloat CCGetSpotLightShadowFactorSoft (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nfloat bias = cc_shadowWHPBInfo.w;\nvec2 oneTap = 1.0 / cc_shadowWHPBInfo.xy;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * cc_shadowWHPBInfo.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * cc_shadowWHPBInfo.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetSpotLightShadowFactorSoft2X (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nfloat bias = cc_shadowWHPBInfo.w;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\n#endif\n#if CC_USE_IBL\nuniform samplerCube cc_environment;\nvec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\nreturn textureLod(tex, coord, lod);\n}\nvec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\nreturn textureLod(tex, coord, lod);\n}\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n}\n#if CC_USE_DIFFUSEMAP\nuniform samplerCube cc_diffuseMap;\n#endif\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\nvec3 NxH = cross(N, H);\nfloat OneMinusNoHSqr = dot(NxH, NxH);\nfloat a = roughness * roughness;\nfloat n = NoH * a;\nfloat p = a / (OneMinusNoHSqr + n * n);\nreturn p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\nreturn (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\nconst vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\nconst vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\nvec4 r = roughness * c0 + c1;\nfloat a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\nvec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\nAB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\nreturn specular * AB.x + AB.y;\n}\n#if USE_REFLECTION_DENOISE\nvec3 GetEnvReflectionWithMipFiltering(vec3 R, float roughness, float mipCount, float denoiseIntensity) {\n#if CC_USE_IBL\nfloat mip = roughness * mipCount;\nfloat delta = (dot(dFdx(R), dFdy(R))) * 1000.0;\nfloat mipBias = mix(0.0, 5.0, clamp(delta, 0.0, 1.0));\nvec4 biased = fragTextureLod(cc_environment, R, mip + mipBias);\nvec4 filtered = texture(cc_environment, R);\n#if CC_USE_IBL == 2\nbiased.rgb = unpackRGBE(biased);\nfiltered.rgb = unpackRGBE(filtered);\n#else\nbiased.rgb = SRGBToLinear(biased.rgb);\nfiltered.rgb = SRGBToLinear(filtered.rgb);\n#endif\nreturn mix(biased.rgb, filtered.rgb, denoiseIntensity);\n#else\nreturn vec3(0.0, 0.0, 0.0);\n#endif\n}\n#endif\nstruct StandardSurface {\nvec4 albedo;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nvec3 position, position_fract_part;\n#else\nvec3 position;\n#endif\nvec3 normal;\nvec3 emissive;\nvec3 lightmap;\nfloat lightmap_test;\nfloat roughness;\nfloat metallic;\nfloat occlusion;\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 L = normalize(-cc_mainLitDir.xyz);\nvec3 H = normalize(L + V);\nfloat NH = max(dot(N, H), 0.0);\nfloat NL = max(dot(N, L), 0.0);\nvec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\nvec3 diffuseContrib = diffuse;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nif (s.lightmap_test > 0.0001) {\nfinalColor = s.lightmap.rgb;\n}\n#else\ndiffuseContrib /= 3.14159265359;\n#endif\nvec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\nvec3 dirlightContrib = (diffuseContrib + specularContrib);\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (NL > 0.0 && cc_mainLitDir.w > 0.0) {\n{\nvec4 pos = ApplyShadowDepthBias_FaceNormal(shadowPos, N);\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetShadowFactorSoft2X(pos);\nelse if (pcf > 0.9) shadow = CCGetShadowFactorSoft(pos);\nelse shadow = CCGetShadowFactorHard(pos);\nshadow = mix(shadow, 1.0, cc_shadowNFLSInfo.w);\n}\n}\n#endif\ndirlightContrib *= shadow;\nfinalColor *= dirlightContrib;\nfloat fAmb = 0.5 - N.y * 0.5;\nvec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb);\n#if CC_USE_IBL\n#if CC_USE_DIFFUSEMAP\nvec4 diffuseMap = texture(cc_diffuseMap, N);\n#if CC_USE_DIFFUSEMAP == 2\nambDiff = unpackRGBE(diffuseMap);\n#else\nambDiff = SRGBToLinear(diffuseMap.rgb);\n#endif\n#endif\nvec3 R = normalize(reflect(-V, N));\n#if USE_REFLECTION_DENOISE\nvec3 env = GetEnvReflectionWithMipFiltering(R, s.roughness, cc_ambientGround.w, 0.6);\n#else\nvec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n#if CC_USE_IBL == 2\nvec3 env = unpackRGBE(envmap);\n#else\nvec3 env = SRGBToLinear(envmap.rgb);\n#endif\n#endif\nfinalColor += env * cc_ambientSky.w * specular * s.occlusion;\n#endif\nfinalColor += ambDiff.rgb * cc_ambientSky.w * diffuse * s.occlusion;\nfinalColor += s.emissive;\nreturn vec4(finalColor, s.albedo.a);\n}\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = ACESToneMap(color.rgb);\n#endif\ncolor.rgb = sqrt(color.rgb);\nreturn color;\n}\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\nvoid CC_APPLY_FOG_BASE(inout vec4 color, float factor) {\ncolor = vec4(mix(cc_fogColor.rgb, color.rgb, factor), color.a);\n}\n#if !CC_USE_ACCURATE_FOG\nin float v_fog_factor;\n#endif\nvoid CC_APPLY_FOG(inout vec4 color) {\n#if !CC_USE_ACCURATE_FOG\nCC_APPLY_FOG_BASE(color, v_fog_factor);\n#endif\n}\nvoid CC_APPLY_FOG(inout vec4 color, vec3 worldPos) {\n#if CC_USE_ACCURATE_FOG\nfloat factor;\nCC_TRANSFER_FOG_BASE(vec4(worldPos, 1.0), factor);\n#else\nfloat factor = v_fog_factor;\n#endif\nCC_APPLY_FOG_BASE(color, factor);\n}\nin highp vec4 v_shadowPos;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nin vec3 v_luv;\nuniform sampler2D cc_lightingMap;\nvec3 UnpackLightingmap(vec4 color) {\nvec3 c;\nfloat e = 1.0 + color.a * (8.0 - 1.0);\nc.r = color.r * e;\nc.g = color.g * e;\nc.b = color.b * e;\nreturn c;\n}\n#endif\nin highp vec3 v_position;\nin mediump vec3 v_normal;\n#if USE_NORMALMAP\nin mediump vec3 v_tangent;\nin mediump vec3 v_binormal;\n#endif\nin mediump vec2 uvw;\nin mediump vec2 uv0;\nin mediump vec2 uv1;\nin mediump vec2 uv2;\nin mediump vec2 uv3;\nin mediump vec3 diffuse;\nin mediump vec3 luv;\nlayout(std140) uniform PbrParams {\nvec4 metallic;\nvec4 roughness;\n};\nuniform sampler2D weightMap;\nuniform sampler2D detailMap0;\nuniform sampler2D detailMap1;\nuniform sampler2D detailMap2;\nuniform sampler2D detailMap3;\nuniform sampler2D normalMap0;\nuniform sampler2D normalMap1;\nuniform sampler2D normalMap2;\nuniform sampler2D normalMap3;\nuniform sampler2D lightMap;\nvoid surf (out StandardSurface s) {\n#if LAYERS > 1\nvec4 w = texture(weightMap, uvw);\n#endif\nvec4 baseColor = vec4(0, 0, 0, 0);\n#if LAYERS == 1\nbaseColor = texture(detailMap0, uv0);\n#elif LAYERS == 2\nbaseColor += texture(detailMap0, uv0) * w.r;\nbaseColor += texture(detailMap1, uv1) * w.g;\n#elif LAYERS == 3\nbaseColor += texture(detailMap0, uv0) * w.r;\nbaseColor += texture(detailMap1, uv1) * w.g;\nbaseColor += texture(detailMap2, uv2) * w.b;\n#elif LAYERS == 4\nbaseColor += texture(detailMap0, uv0) * w.r;\nbaseColor += texture(detailMap1, uv1) * w.g;\nbaseColor += texture(detailMap2, uv2) * w.b;\nbaseColor += texture(detailMap3, uv3) * w.a;\n#else\nbaseColor = texture(detailMap0, uv0);\n#endif\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\npackHighpData(s.position, s.position_fract_part, v_position);\n#else\ns.position = v_position;\n#endif\n#if USE_NORMALMAP\nvec4 baseNormal = vec4(0, 0, 0, 0);\n#if LAYERS == 1\nbaseNormal = texture(normalMap0, uv0);\n#elif LAYERS == 2\nbaseNormal += texture(normalMap0, uv0) * w.r;\nbaseNormal += texture(normalMap1, uv1) * w.g;\n#elif LAYERS == 3\nbaseNormal += texture(normalMap0, uv0) * w.r;\nbaseNormal += texture(normalMap1, uv1) * w.g;\nbaseNormal += texture(normalMap2, uv2) * w.b;\n#elif LAYERS == 4\nbaseNormal += texture(normalMap0, uv0) * w.r;\nbaseNormal += texture(normalMap1, uv1) * w.g;\nbaseNormal += texture(normalMap2, uv2) * w.b;\nbaseNormal += texture(normalMap3, uv3) * w.a;\n#else\nbaseNormal = texture(normalMap0, uv0);\n#endif\nvec3 nmmp = baseNormal.xyz - vec3(0.5);\ns.normal =\nnmmp.x * normalize(v_tangent) +\nnmmp.y * normalize(v_binormal) +\nnmmp.z * normalize(v_normal);\n#else\ns.normal = v_normal;\n#endif\ns.albedo = vec4(SRGBToLinear(baseColor.rgb), 1.0);\ns.occlusion = 1.0;\n#if USE_PBR\ns.roughness = 0.0;\n#if LAYERS == 1\ns.roughness = roughness.x;\n#elif LAYERS == 2\ns.roughness += roughness.x * w.r;\ns.roughness += roughness.y * w.g;\n#elif LAYERS == 3\ns.roughness += roughness.x * w.r;\ns.roughness += roughness.y * w.g;\ns.roughness += roughness.z * w.b;\n#elif LAYERS == 4\ns.roughness += roughness.x * w.r;\ns.roughness += roughness.y * w.g;\ns.roughness += roughness.z * w.b;\ns.roughness += roughness.w * w.a;\n#else\ns.roughness = 1.0;\n#endif\ns.metallic = 0.0;\n#if LAYERS == 1\ns.metallic = metallic.x;\n#elif LAYERS == 2\ns.metallic += metallic.x * w.r;\ns.metallic += metallic.y * w.g;\n#elif LAYERS == 3\ns.metallic += metallic.x * w.r;\ns.metallic += metallic.y * w.g;\ns.metallic += metallic.z * w.b;\n#elif LAYERS == 4\ns.metallic += metallic.x * w.r;\ns.metallic += metallic.y * w.g;\ns.metallic += metallic.z * w.b;\ns.metallic += metallic.w * w.a;\n#else\ns.metallic = 0.0;\n#endif\n#else\ns.roughness = 1.0;\ns.metallic = 0.0;\n#endif\ns.emissive = vec3(0.0, 0.0, 0.0);\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nvec4 lightColor = texture(lightMap, luv.xy);\ns.lightmap = UnpackLightingmap(lightColor);\ns.lightmap_test = luv.z;\n#endif\n}\n#if CC_FORWARD_ADD\n#if CC_PIPELINE_TYPE == 0\n# define LIGHTS_PER_PASS 1\n#else\n# define LIGHTS_PER_PASS 10\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nlayout(std140) uniform CCForwardLight {\nhighp vec4 cc_lightPos[LIGHTS_PER_PASS];\nvec4 cc_lightColor[LIGHTS_PER_PASS];\nvec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\nvec4 cc_lightDir[LIGHTS_PER_PASS];\n};\n#endif\nfloat SmoothDistAtt (float distSqr, float invSqrAttRadius) {\nfloat factor = distSqr * invSqrAttRadius;\nfloat smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\nreturn smoothFactor * smoothFactor;\n}\nfloat GetDistAtt (float distSqr, float invSqrAttRadius) {\nfloat attenuation = 1.0 / max(distSqr, 0.01*0.01);\nattenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\nreturn attenuation;\n}\nfloat GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\nfloat cd = dot(litDir, L);\nfloat attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\nreturn (attenuation * attenuation);\n}\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nvec4 CCStandardShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / 3.14159265359;\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nint numLights = CC_PIPELINE_TYPE == 0 ? LIGHTS_PER_PASS : int(cc_lightDir[0].w);\nfor (int i = 0; i < LIGHTS_PER_PASS; i++) {\nif (i >= numLights) break;\nvec3 SLU = cc_lightPos[i].xyz - position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.0);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = cc_lightSizeRangeAngle[i].x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (cc_lightPos[i].w > 0.0) {\nfloat cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\nfloat cosOuter = cc_lightSizeRangeAngle[i].z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = cc_lightColor[i].rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (cc_lightPos[i].w > 0.0 && cc_lightSizeRangeAngle[i].w > 0.0) {\n{\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetSpotLightShadowFactorSoft2X(shadowPos, position);\nelse if (pcf > 0.9) shadow = CCGetSpotLightShadowFactorSoft(shadowPos, position);\nelse shadow = CCGetSpotLightShadowFactorHard(shadowPos, position);\n}\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nlayout(std430, binding = 4) readonly buffer b_ccLightsBuffer { vec4 b_ccLights[]; };\nlayout(std430, binding = 5) readonly buffer b_clusterLightIndicesBuffer { uint b_clusterLightIndices[]; };\nlayout(std430, binding = 6) readonly buffer b_clusterLightGridBuffer { uvec4 b_clusterLightGrid[]; };\nstruct CCLight\n{\nvec4 cc_lightPos;\nvec4 cc_lightColor;\nvec4 cc_lightSizeRangeAngle;\nvec4 cc_lightDir;\n};\nstruct Cluster\n{\nvec3 minBounds;\nvec3 maxBounds;\n};\nstruct LightGrid\n{\nuint offset;\nuint ccLights;\n};\nCCLight getCCLight(uint i)\n{\nCCLight light;\nlight.cc_lightPos = b_ccLights[4u * i + 0u];\nlight.cc_lightColor = b_ccLights[4u * i + 1u];\nlight.cc_lightSizeRangeAngle = b_ccLights[4u * i + 2u];\nlight.cc_lightDir = b_ccLights[4u * i + 3u];\nreturn light;\n}\nLightGrid getLightGrid(uint cluster)\n{\nuvec4 gridvec = b_clusterLightGrid[cluster];\nLightGrid grid;\ngrid.offset = gridvec.x;\ngrid.ccLights = gridvec.y;\nreturn grid;\n}\nuint getGridLightIndex(uint start, uint offset)\n{\nreturn b_clusterLightIndices[start + offset];\n}\nuint getClusterZIndex(vec4 worldPos)\n{\nfloat scale = float(24) / log(cc_nearFar.y / cc_nearFar.x);\nfloat bias = -(float(24) * log(cc_nearFar.x) / log(cc_nearFar.y / cc_nearFar.x));\nfloat eyeDepth = -(cc_matView * worldPos).z;\nuint zIndex = uint(max(log(eyeDepth) * scale + bias, 0.0));\nreturn zIndex;\n}\nuint getClusterIndex(vec4 fragCoord, vec4 worldPos)\n{\nuint zIndex = getClusterZIndex(worldPos);\nfloat clusterSizeX = ceil(cc_viewPort.z / float(16));\nfloat clusterSizeY = ceil(cc_viewPort.w / float(8));\nuvec3 indices = uvec3(uvec2(fragCoord.xy / vec2(clusterSizeX, clusterSizeY)), zIndex);\nuint cluster = (16u * 8u) * indices.z + 16u * indices.y + indices.x;\nreturn cluster;\n}\nvec4 CCClusterShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / 3.14159265359;\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.001);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nuint cluster = getClusterIndex(gl_FragCoord, vec4(position, 1.0));\nLightGrid grid = getLightGrid(cluster);\nuint numLights = grid.ccLights;\nfor (uint i = 0u; i < 100u; i++) {\nif (i >= numLights) break;\nuint lightIndex = getGridLightIndex(grid.offset, i);\nCCLight light = getCCLight(lightIndex);\nvec3 SLU = light.cc_lightPos.xyz - position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.001);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = light.cc_lightSizeRangeAngle.x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(light.cc_lightSizeRangeAngle.y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (light.cc_lightPos.w > 0.0) {\nfloat cosInner = max(dot(-light.cc_lightDir.xyz, SL), 0.01);\nfloat cosOuter = light.cc_lightSizeRangeAngle.z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -light.cc_lightDir.xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = light.cc_lightColor.rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (light.cc_lightPos.w > 0.0) {\n{\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetSpotLightShadowFactorSoft2X(shadowPos, position);\nelse if (pcf > 0.9) shadow = CCGetSpotLightShadowFactorSoft(shadowPos, position);\nelse shadow = CCGetSpotLightShadowFactorHard(shadowPos, position);\n}\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * light.cc_lightColor.w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\nlayout(location = 0) out vec4 fragColorX;\nvoid main () {\nStandardSurface s; surf(s);\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nvec4 color = CCClusterShadingAdditive(s, v_shadowPos);\n#else\nvec4 color = CCStandardShadingAdditive(s, v_shadowPos);\n#endif\nCC_APPLY_FOG(color, s.position.xyz);\nfragColorX = CCFragOutput(color);\n}\n#elif (CC_PIPELINE_TYPE == 0 || CC_FORCE_FORWARD_SHADING)\nlayout(location = 0) out vec4 fragColorX;\nvoid main () {\nStandardSurface s; surf(s);\nvec4 color = CCStandardShadingBase(s, v_shadowPos);\nCC_APPLY_FOG(color, s.position.xyz);\nfragColorX = CCFragOutput(color);\n}\n#elif CC_PIPELINE_TYPE == 1\nvec2 signNotZero(vec2 v) {\nreturn vec2((v.x >= 0.0) ? +1.0 : -1.0, (v.y >= 0.0) ? +1.0 : -1.0);\n}\nvec2 float32x3_to_oct(in vec3 v) {\nvec2 p = v.xy * (1.0 / (abs(v.x) + abs(v.y) + abs(v.z)));\nreturn (v.z <= 0.0) ? ((1.0 - abs(p.yx)) * signNotZero(p)) : p;\n}\nlayout(location = 0) out vec4 fragColor0;\nlayout(location = 1) out vec4 fragColor1;\nlayout(location = 2) out vec4 fragColor2;\nvoid main () {\nStandardSurface s; surf(s);\nfragColor0 = s.albedo;\nfragColor1 = vec4(float32x3_to_oct(s.normal), s.roughness, s.metallic);\nfragColor2 = vec4(s.emissive, s.occlusion);\n}\n#endif"},{vert:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nmediump vec4 cc_shadowNFLSInfo;\nmediump vec4 cc_shadowWHPBInfo;\nmediump vec4 cc_shadowLPNNInfo;\nlowp vec4 cc_shadowColor;\nmediump vec4 cc_planarNDInfo;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nout vec2 v_clip_depth;\nvec4 vert () {\nvec4 worldPos;\nworldPos.x = cc_matWorld[3][0] + a_position.x;\nworldPos.y = cc_matWorld[3][1] + a_position.y;\nworldPos.z = cc_matWorld[3][2] + a_position.z;\nworldPos.w = 1.0;\nvec4 clipPos = cc_matLightViewProj * worldPos;\nv_clip_depth = clipPos.zw;\nreturn clipPos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec4 packDepthToRGBA (float depth) {\nvec4 ret = vec4(1.0, 255.0, 65025.0, 16581375.0) * depth;\nret = fract(ret);\nret -= vec4(ret.yzw, 0.0) / 255.0;\nreturn ret;\n}\nin vec2 v_clip_depth;\nvec4 frag () {\nreturn packDepthToRGBA(v_clip_depth.x / v_clip_depth.y * 0.5 + 0.5);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_MORPH\nin float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nlayout(std140) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nin vec4 a_joints;\nin vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nin highp vec4 a_jointAnimInfo;\n#endif\nlayout(std140) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(std140) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nuniform highp sampler2D cc_jointTexture;\n#else\nlayout(std140) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\n#if USE_INSTANCING\nin vec4 a_matWorld0;\nin vec4 a_matWorld1;\nin vec4 a_matWorld2;\n#if USE_LIGHTMAP\nin vec4 a_lightingMapUVParam;\n#endif\n#elif USE_BATCHING\nin float a_dyn_batch_id;\nlayout(std140) uniform CCLocalBatched {\nhighp mat4 cc_matWorlds[10];\n};\n#else\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\n#endif\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\n#if !CC_USE_ACCURATE_FOG\nout float v_fog_factor;\n#endif\nvoid CC_TRANSFER_FOG(vec4 pos) {\n#if !CC_USE_ACCURATE_FOG\nCC_TRANSFER_FOG_BASE(pos, v_fog_factor);\n#endif\n}\n#if USE_VERTEX_COLOR\nin lowp vec4 a_color;\nout lowp vec4 v_color;\n#endif\n#if USE_TEXTURE\nout vec2 v_uv;\nlayout(std140) uniform TexCoords {\nvec4 tilingOffset;\n};\n#endif\nvec4 vert () {\nvec4 position;\nposition = vec4(a_position, 1.0);\n#if CC_USE_MORPH\napplyMorph(position);\n#endif\n#if CC_USE_SKINNING\nCCSkin(position);\n#endif\nmat4 matWorld;\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\n#else\nmatWorld = cc_matWorld;\n#endif\n#if USE_TEXTURE\nv_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n#if SAMPLE_FROM_RT\nv_uv = cc_cameraPos.w > 1.0 ? vec2(v_uv.x, 1.0 - v_uv.y) : v_uv;\n#endif\n#endif\n#if USE_VERTEX_COLOR\nv_color = a_color;\n#endif\nCC_TRANSFER_FOG(matWorld * position);\nreturn cc_matProj * (cc_matView * matWorld) * position;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = ACESToneMap(color.rgb);\n#endif\ncolor.rgb = sqrt(color.rgb);\nreturn color;\n}\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\nvoid CC_APPLY_FOG_BASE(inout vec4 color, float factor) {\ncolor = vec4(mix(cc_fogColor.rgb, color.rgb, factor), color.a);\n}\n#if !CC_USE_ACCURATE_FOG\nin float v_fog_factor;\n#endif\nvoid CC_APPLY_FOG(inout vec4 color) {\n#if !CC_USE_ACCURATE_FOG\nCC_APPLY_FOG_BASE(color, v_fog_factor);\n#endif\n}\nvoid CC_APPLY_FOG(inout vec4 color, vec3 worldPos) {\n#if CC_USE_ACCURATE_FOG\nfloat factor;\nCC_TRANSFER_FOG_BASE(vec4(worldPos, 1.0), factor);\n#else\nfloat factor = v_fog_factor;\n#endif\nCC_APPLY_FOG_BASE(color, factor);\n}\n#if USE_ALPHA_TEST\n#endif\n#if USE_TEXTURE\nin vec2 v_uv;\nuniform sampler2D mainTexture;\n#endif\nlayout(std140) uniform Constant {\nvec4 mainColor;\nvec4 colorScaleAndCutoff;\n};\n#if USE_VERTEX_COLOR\nin lowp vec4 v_color;\n#endif\nvec4 frag () {\nvec4 o = mainColor;\no.rgb *= colorScaleAndCutoff.xyz;\n#if USE_VERTEX_COLOR\no.rgb *= SRGBToLinear(v_color.rgb);\no.a *= v_color.a;\n#endif\n#if USE_TEXTURE\nvec4 texColor = texture(mainTexture, v_uv);\ntexColor.rgb = SRGBToLinear(texColor.rgb);\no *= texColor;\n#endif\n#if USE_ALPHA_TEST\nif (o.ALPHA_TEST_CHANNEL < colorScaleAndCutoff.w) discard;\n#endif\nCC_APPLY_FOG(o);\nreturn CCFragOutput(o);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_MORPH\nin float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nlayout(std140) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nin vec4 a_joints;\nin vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nin highp vec4 a_jointAnimInfo;\n#endif\nlayout(std140) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(std140) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nuniform highp sampler2D cc_jointTexture;\n#else\nlayout(std140) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nout vec2 v_uv;\nvoid main () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nIn.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\ngl_Position = In.position;\ngl_Position.y = gl_Position.y;\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nin vec2 v_uv;\nlayout(std140) uniform BloomUBO {\nmediump vec4 texSize;\n};\nuniform sampler2D outputResultMap;\nlayout(location = 0) out vec4 fragColor;\nfloat luminance(vec3 color) {\nreturn dot(color, vec3(0.2126, 0.7152, 0.0722));\n}\nvoid main() {\nvec3 color = texture(outputResultMap, v_uv).xyz;\nif (luminance(SRGBToLinear(color)) > texSize.z) {\nfragColor = vec4(color, 1.0);\n} else {\nfragColor = vec4(0.0, 0.0, 0.0, 1.0);\n}\n}"},{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_MORPH\nin float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nlayout(std140) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nin vec4 a_joints;\nin vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nin highp vec4 a_jointAnimInfo;\n#endif\nlayout(std140) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(std140) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nuniform highp sampler2D cc_jointTexture;\n#else\nlayout(std140) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nout vec2 v_uv;\nvoid main () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nIn.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\ngl_Position = In.position;\ngl_Position.y = gl_Position.y;\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nin vec2 v_uv;\nlayout(std140) uniform BloomUBO {\nmediump vec4 texSize;\n};\nuniform sampler2D bloomTexture;\nlayout(location = 0) out vec4 fragColor;\nvec3 downsample4taps(vec2 uv, vec2 halfpixel) {\nvec3 sum = texture(bloomTexture, uv + vec2(-halfpixel.x, halfpixel.y)).xyz;\nsum += texture(bloomTexture, uv + vec2(halfpixel.x, halfpixel.y)).xyz;\nsum += texture(bloomTexture, uv + vec2(halfpixel.x, -halfpixel.y)).xyz;\nsum += texture(bloomTexture, uv + vec2(-halfpixel.x, -halfpixel.y)).xyz;\nreturn sum / 4.0;\n}\nvoid main()\n{\nvec3 result = downsample4taps(v_uv, 1.0 / texSize.xy).rgb;\nfragColor = vec4(result, 1.0);\n}"},{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_MORPH\nin float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nlayout(std140) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nin vec4 a_joints;\nin vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nin highp vec4 a_jointAnimInfo;\n#endif\nlayout(std140) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(std140) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nuniform highp sampler2D cc_jointTexture;\n#else\nlayout(std140) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nout vec2 v_uv;\nvoid main () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nIn.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\ngl_Position = In.position;\ngl_Position.y = gl_Position.y;\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nin vec2 v_uv;\nlayout(std140) uniform BloomUBO {\nmediump vec4 texSize;\n};\nuniform sampler2D bloomTexture;\nlayout(location = 0) out vec4 fragColor;\nvec3 upsample4taps(vec2 uv, vec2 halfpixel) {\nvec3 sum = texture(bloomTexture, uv + vec2(-halfpixel.x, halfpixel.y)).xyz;\nsum += texture(bloomTexture, uv + vec2(halfpixel.x, halfpixel.y)).xyz;\nsum += texture(bloomTexture, uv + vec2(halfpixel.x, -halfpixel.y)).xyz;\nsum += texture(bloomTexture, uv + vec2(-halfpixel.x, -halfpixel.y)).xyz;\nreturn sum / 4.0;\n}\nvoid main() {\nvec3 result = upsample4taps(v_uv, 0.5 / texSize.xy).rgb;\nfragColor = vec4(result, 1.0);\n}"},{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_MORPH\nin float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nlayout(std140) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nin vec4 a_joints;\nin vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nin highp vec4 a_jointAnimInfo;\n#endif\nlayout(std140) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(std140) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nuniform highp sampler2D cc_jointTexture;\n#else\nlayout(std140) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nout vec2 v_uv;\nvoid main () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nIn.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\ngl_Position = In.position;\ngl_Position.y = gl_Position.y;\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nin vec2 v_uv;\nlayout(std140) uniform BloomUBO {\nmediump vec4 texSize;\n};\nuniform sampler2D outputResultMap;\nuniform sampler2D bloomTexture;\nlayout(location = 0) out vec4 fragColor;\nvoid main() {\nvec4 hdrColor = texture(outputResultMap, v_uv);\nvec3 bloomColor = texture(bloomTexture, v_uv).rgb;\nvec3 result = hdrColor.rgb + bloomColor * texSize.w * hdrColor.a;\nfragColor = vec4(result, hdrColor.a);\n}"}],[{vert:"\nprecision highp float;\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nout vec2 v_uv;\nvoid main () {\nvec4 position;\nposition = vec4(a_position, 1.0);\nposition.xy = cc_cameraPos.w == 0.0 ? vec2(position.xy.x, -position.xy.y) : position.xy;\ngl_Position = vec4(position.x, position.y, 1.0, 1.0);\nv_uv = a_texCoord;\n}",frag:"\n#ifdef GL_EXT_shader_framebuffer_fetch\n#extension GL_EXT_shader_framebuffer_fetch: enable\n#endif\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nmediump vec4 cc_shadowNFLSInfo;\nmediump vec4 cc_shadowWHPBInfo;\nmediump vec4 cc_shadowLPNNInfo;\nlowp vec4 cc_shadowColor;\nmediump vec4 cc_planarNDInfo;\n};\nhighp float unpackHighpData (float mainPart, float modPart) {\nhighp float data = mainPart;\nreturn data + modPart;\n}\nhighp float unpackHighpData (float mainPart, float modPart, const float modValue) {\nhighp float data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nhighp vec2 unpackHighpData (vec2 mainPart, vec2 modPart) {\nhighp vec2 data = mainPart;\nreturn data + modPart;\n}\nhighp vec2 unpackHighpData (vec2 mainPart, vec2 modPart, const float modValue) {\nhighp vec2 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nhighp vec3 unpackHighpData (vec3 mainPart, vec3 modPart) {\nhighp vec3 data = mainPart;\nreturn data + modPart;\n}\nhighp vec3 unpackHighpData (vec3 mainPart, vec3 modPart, const float modValue) {\nhighp vec3 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nhighp vec4 unpackHighpData (vec4 mainPart, vec4 modPart) {\nhighp vec4 data = mainPart;\nreturn data + modPart;\n}\nhighp vec4 unpackHighpData (vec4 mainPart, vec4 modPart, const float modValue) {\nhighp vec4 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\nfloat dist = length(viewPos);\nreturn (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\nvec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\nreturn CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\nuniform highp sampler2D cc_shadowMap;\nuniform highp sampler2D cc_spotLightingMap;\nvec4 ApplyShadowDepthBias_FaceNormal(vec4 shadowPos, vec3 worldNormal)\n{\nvec4 newShadowPos = shadowPos;\nif(cc_shadowLPNNInfo.z > 0.0001)\n{\nvec4 viewNormal = cc_matLightView * vec4(worldNormal, 0.0);\nif(viewNormal.z < 0.1)\nnewShadowPos.xy += viewNormal.xy * cc_shadowProjInfo.xy * cc_shadowLPNNInfo.z * clamp(viewNormal.z, 0.001, 0.1);\n}\nreturn newShadowPos;\n}\nvec4 ApplyShadowDepthBias_Perspective(vec4 shadowPos, float viewspaceDepthBias)\n{\nvec3 viewSpacePos;\nviewSpacePos.xy = shadowPos.xy * cc_shadowProjInfo.zw;\nviewSpacePos.z = shadowPos.z * cc_shadowInvProjDepthInfo.x + shadowPos.w * cc_shadowInvProjDepthInfo.y;\nviewSpacePos.xyz += cc_shadowProjDepthInfo.z * normalize(viewSpacePos.xyz) * viewspaceDepthBias;\nvec4 clipSpacePos;\nclipSpacePos.xy = viewSpacePos.xy * cc_shadowProjInfo.xy;\nclipSpacePos.zw = viewSpacePos.z * cc_shadowProjDepthInfo.xz + vec2(cc_shadowProjDepthInfo.y, 0.0);\nif (cc_shadowNFLSInfo.z > 0.000001) {\nclipSpacePos.z = CCGetLinearDepthFromViewSpace(viewSpacePos.xyz);\nclipSpacePos.z = (clipSpacePos.z * 2.0 - 1.0) * clipSpacePos.w;\n}\nreturn clipSpacePos;\n}\nvec4 ApplyShadowDepthBias_Orthographic(vec4 shadowPos, float viewspaceDepthBias)\n{\nfloat coeffA = cc_shadowProjDepthInfo.x;\nfloat coeffB = cc_shadowProjDepthInfo.y;\nfloat viewSpacePos_z = (shadowPos.z - coeffB) / coeffA;\nviewSpacePos_z += viewspaceDepthBias;\nvec4 result = shadowPos;\nresult.z = viewSpacePos_z * coeffA + coeffB;\nreturn result;\n}\nfloat CCGetShadowFactorHard (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture(cc_shadowMap, clipPos.xy).x;\n}\nshadow = step(clipPos.z, closestDepth);\nreturn shadow;\n}\nfloat CCGetShadowFactorSoft (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * mapSize.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetShadowFactorSoft2X (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\nfloat CCGetSpotLightShadowFactorHard (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nfloat depth = clipPos.z;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture(cc_spotLightingMap, clipPos.xy).x;\n}\nshadow = step(depth, closestDepth);\nreturn shadow;\n}\nfloat CCGetSpotLightShadowFactorSoft (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nfloat bias = cc_shadowWHPBInfo.w;\nvec2 oneTap = 1.0 / cc_shadowWHPBInfo.xy;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * cc_shadowWHPBInfo.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * cc_shadowWHPBInfo.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetSpotLightShadowFactorSoft2X (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nfloat bias = cc_shadowWHPBInfo.w;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\n#endif\n#if CC_USE_IBL\nuniform samplerCube cc_environment;\nvec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\nreturn textureLod(tex, coord, lod);\n}\nvec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\nreturn textureLod(tex, coord, lod);\n}\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n}\n#if CC_USE_DIFFUSEMAP\nuniform samplerCube cc_diffuseMap;\n#endif\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\nvec3 NxH = cross(N, H);\nfloat OneMinusNoHSqr = dot(NxH, NxH);\nfloat a = roughness * roughness;\nfloat n = NoH * a;\nfloat p = a / (OneMinusNoHSqr + n * n);\nreturn p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\nreturn (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\nconst vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\nconst vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\nvec4 r = roughness * c0 + c1;\nfloat a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\nvec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\nAB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\nreturn specular * AB.x + AB.y;\n}\n#if USE_REFLECTION_DENOISE\nvec3 GetEnvReflectionWithMipFiltering(vec3 R, float roughness, float mipCount, float denoiseIntensity) {\n#if CC_USE_IBL\nfloat mip = roughness * mipCount;\nfloat delta = (dot(dFdx(R), dFdy(R))) * 1000.0;\nfloat mipBias = mix(0.0, 5.0, clamp(delta, 0.0, 1.0));\nvec4 biased = fragTextureLod(cc_environment, R, mip + mipBias);\nvec4 filtered = texture(cc_environment, R);\n#if CC_USE_IBL == 2\nbiased.rgb = unpackRGBE(biased);\nfiltered.rgb = unpackRGBE(filtered);\n#else\nbiased.rgb = SRGBToLinear(biased.rgb);\nfiltered.rgb = SRGBToLinear(filtered.rgb);\n#endif\nreturn mix(biased.rgb, filtered.rgb, denoiseIntensity);\n#else\nreturn vec3(0.0, 0.0, 0.0);\n#endif\n}\n#endif\nstruct StandardSurface {\nvec4 albedo;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nvec3 position, position_fract_part;\n#else\nvec3 position;\n#endif\nvec3 normal;\nvec3 emissive;\nvec3 lightmap;\nfloat lightmap_test;\nfloat roughness;\nfloat metallic;\nfloat occlusion;\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 L = normalize(-cc_mainLitDir.xyz);\nvec3 H = normalize(L + V);\nfloat NH = max(dot(N, H), 0.0);\nfloat NL = max(dot(N, L), 0.0);\nvec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\nvec3 diffuseContrib = diffuse;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nif (s.lightmap_test > 0.0001) {\nfinalColor = s.lightmap.rgb;\n}\n#else\ndiffuseContrib /= 3.14159265359;\n#endif\nvec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\nvec3 dirlightContrib = (diffuseContrib + specularContrib);\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (NL > 0.0 && cc_mainLitDir.w > 0.0) {\n{\nvec4 pos = ApplyShadowDepthBias_FaceNormal(shadowPos, N);\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetShadowFactorSoft2X(pos);\nelse if (pcf > 0.9) shadow = CCGetShadowFactorSoft(pos);\nelse shadow = CCGetShadowFactorHard(pos);\nshadow = mix(shadow, 1.0, cc_shadowNFLSInfo.w);\n}\n}\n#endif\ndirlightContrib *= shadow;\nfinalColor *= dirlightContrib;\nfloat fAmb = 0.5 - N.y * 0.5;\nvec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb);\n#if CC_USE_IBL\n#if CC_USE_DIFFUSEMAP\nvec4 diffuseMap = texture(cc_diffuseMap, N);\n#if CC_USE_DIFFUSEMAP == 2\nambDiff = unpackRGBE(diffuseMap);\n#else\nambDiff = SRGBToLinear(diffuseMap.rgb);\n#endif\n#endif\nvec3 R = normalize(reflect(-V, N));\n#if USE_REFLECTION_DENOISE\nvec3 env = GetEnvReflectionWithMipFiltering(R, s.roughness, cc_ambientGround.w, 0.6);\n#else\nvec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n#if CC_USE_IBL == 2\nvec3 env = unpackRGBE(envmap);\n#else\nvec3 env = SRGBToLinear(envmap.rgb);\n#endif\n#endif\nfinalColor += env * cc_ambientSky.w * specular * s.occlusion;\n#endif\nfinalColor += ambDiff.rgb * cc_ambientSky.w * diffuse * s.occlusion;\nfinalColor += s.emissive;\nreturn vec4(finalColor, s.albedo.a);\n}\n#if CC_PIPELINE_TYPE == 0\n# define LIGHTS_PER_PASS 1\n#else\n# define LIGHTS_PER_PASS 10\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nlayout(std140) uniform CCForwardLight {\nhighp vec4 cc_lightPos[LIGHTS_PER_PASS];\nvec4 cc_lightColor[LIGHTS_PER_PASS];\nvec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\nvec4 cc_lightDir[LIGHTS_PER_PASS];\n};\n#endif\nfloat SmoothDistAtt (float distSqr, float invSqrAttRadius) {\nfloat factor = distSqr * invSqrAttRadius;\nfloat smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\nreturn smoothFactor * smoothFactor;\n}\nfloat GetDistAtt (float distSqr, float invSqrAttRadius) {\nfloat attenuation = 1.0 / max(distSqr, 0.01*0.01);\nattenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\nreturn attenuation;\n}\nfloat GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\nfloat cd = dot(litDir, L);\nfloat attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\nreturn (attenuation * attenuation);\n}\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nvec4 CCStandardShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / 3.14159265359;\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nint numLights = CC_PIPELINE_TYPE == 0 ? LIGHTS_PER_PASS : int(cc_lightDir[0].w);\nfor (int i = 0; i < LIGHTS_PER_PASS; i++) {\nif (i >= numLights) break;\nvec3 SLU = cc_lightPos[i].xyz - position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.0);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = cc_lightSizeRangeAngle[i].x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (cc_lightPos[i].w > 0.0) {\nfloat cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\nfloat cosOuter = cc_lightSizeRangeAngle[i].z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = cc_lightColor[i].rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (cc_lightPos[i].w > 0.0 && cc_lightSizeRangeAngle[i].w > 0.0) {\n{\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetSpotLightShadowFactorSoft2X(shadowPos, position);\nelse if (pcf > 0.9) shadow = CCGetSpotLightShadowFactorSoft(shadowPos, position);\nelse shadow = CCGetSpotLightShadowFactorHard(shadowPos, position);\n}\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nlayout(std430, binding = 4) readonly buffer b_ccLightsBuffer { vec4 b_ccLights[]; };\nlayout(std430, binding = 5) readonly buffer b_clusterLightIndicesBuffer { uint b_clusterLightIndices[]; };\nlayout(std430, binding = 6) readonly buffer b_clusterLightGridBuffer { uvec4 b_clusterLightGrid[]; };\nstruct CCLight\n{\nvec4 cc_lightPos;\nvec4 cc_lightColor;\nvec4 cc_lightSizeRangeAngle;\nvec4 cc_lightDir;\n};\nstruct Cluster\n{\nvec3 minBounds;\nvec3 maxBounds;\n};\nstruct LightGrid\n{\nuint offset;\nuint ccLights;\n};\nCCLight getCCLight(uint i)\n{\nCCLight light;\nlight.cc_lightPos = b_ccLights[4u * i + 0u];\nlight.cc_lightColor = b_ccLights[4u * i + 1u];\nlight.cc_lightSizeRangeAngle = b_ccLights[4u * i + 2u];\nlight.cc_lightDir = b_ccLights[4u * i + 3u];\nreturn light;\n}\nLightGrid getLightGrid(uint cluster)\n{\nuvec4 gridvec = b_clusterLightGrid[cluster];\nLightGrid grid;\ngrid.offset = gridvec.x;\ngrid.ccLights = gridvec.y;\nreturn grid;\n}\nuint getGridLightIndex(uint start, uint offset)\n{\nreturn b_clusterLightIndices[start + offset];\n}\nuint getClusterZIndex(vec4 worldPos)\n{\nfloat scale = float(24) / log(cc_nearFar.y / cc_nearFar.x);\nfloat bias = -(float(24) * log(cc_nearFar.x) / log(cc_nearFar.y / cc_nearFar.x));\nfloat eyeDepth = -(cc_matView * worldPos).z;\nuint zIndex = uint(max(log(eyeDepth) * scale + bias, 0.0));\nreturn zIndex;\n}\nuint getClusterIndex(vec4 fragCoord, vec4 worldPos)\n{\nuint zIndex = getClusterZIndex(worldPos);\nfloat clusterSizeX = ceil(cc_viewPort.z / float(16));\nfloat clusterSizeY = ceil(cc_viewPort.w / float(8));\nuvec3 indices = uvec3(uvec2(fragCoord.xy / vec2(clusterSizeX, clusterSizeY)), zIndex);\nuint cluster = (16u * 8u) * indices.z + 16u * indices.y + indices.x;\nreturn cluster;\n}\nvec4 CCClusterShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / 3.14159265359;\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.001);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nuint cluster = getClusterIndex(gl_FragCoord, vec4(position, 1.0));\nLightGrid grid = getLightGrid(cluster);\nuint numLights = grid.ccLights;\nfor (uint i = 0u; i < 100u; i++) {\nif (i >= numLights) break;\nuint lightIndex = getGridLightIndex(grid.offset, i);\nCCLight light = getCCLight(lightIndex);\nvec3 SLU = light.cc_lightPos.xyz - position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.001);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = light.cc_lightSizeRangeAngle.x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(light.cc_lightSizeRangeAngle.y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (light.cc_lightPos.w > 0.0) {\nfloat cosInner = max(dot(-light.cc_lightDir.xyz, SL), 0.01);\nfloat cosOuter = light.cc_lightSizeRangeAngle.z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -light.cc_lightDir.xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = light.cc_lightColor.rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (light.cc_lightPos.w > 0.0) {\n{\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetSpotLightShadowFactorSoft2X(shadowPos, position);\nelse if (pcf > 0.9) shadow = CCGetSpotLightShadowFactorSoft(shadowPos, position);\nelse shadow = CCGetSpotLightShadowFactorHard(shadowPos, position);\n}\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * light.cc_lightColor.w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = ACESToneMap(color.rgb);\n#endif\ncolor.rgb = sqrt(color.rgb);\nreturn color;\n}\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\nvoid CC_APPLY_FOG_BASE(inout vec4 color, float factor) {\ncolor = vec4(mix(cc_fogColor.rgb, color.rgb, factor), color.a);\n}\nvec2 signNotZero(vec2 v) {\nreturn vec2((v.x >= 0.0) ? +1.0 : -1.0, (v.y >= 0.0) ? +1.0 : -1.0);\n}\nvec3 oct_to_float32x3(vec2 e) {\nvec3 v = vec3(e.xy, 1.0 - abs(e.x) - abs(e.y));\nif (v.z < 0.0) v.xy = (1.0 - abs(v.yx)) * signNotZero(v.xy);\nreturn normalize(v);\n}\nvec4 screen2WS(vec3 coord) {\nvec3 ndc = vec3(\n2.0 * (coord.x - cc_viewPort.x) / cc_viewPort.z - 1.0,\n2.0 * (coord.y - cc_viewPort.y) / cc_viewPort.w - 1.0,\n2.0 * coord.z - 1.0);\nvec4 world = ((cc_matViewProjInv) * (vec4(ndc, 1.0)));\nworld      = world / world.w;\nreturn world;\n}\nin vec2 v_uv;\n#if CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT\nlayout(location = 0) inout vec4 gbuffer_albedoMap;\nlayout(location = 1) inout vec4 gbuffer_normalMap;\nlayout(location = 2) inout vec4 gbuffer_emissiveMap;\n#else\nuniform sampler2D gbuffer_albedoMap;\nuniform sampler2D gbuffer_normalMap;\nuniform sampler2D gbuffer_emissiveMap;\n#endif\nuniform sampler2D depth_stencil;\n#if !CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT || __VERSION__ >= 450\nlayout(location = 0) out vec4 fragColor;\n#endif\nvoid main () {\nStandardSurface s;\n#if CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT\nvec4 albedoMap = gbuffer_albedoMap;\nvec4 normalMap = gbuffer_normalMap;\nvec4 emissiveMap = gbuffer_emissiveMap;\n#else\nvec4 albedoMap = texture(gbuffer_albedoMap,v_uv);\nvec4 normalMap = texture(gbuffer_normalMap,v_uv);\nvec4 emissiveMap = texture(gbuffer_emissiveMap,v_uv);\n#endif\nfloat depth = texture(depth_stencil, v_uv).x;\ns.albedo = albedoMap;\nvec3 position = screen2WS(vec3(gl_FragCoord.xy, depth)).xyz;\ns.position = position;\ns.roughness = normalMap.z;\ns.normal = oct_to_float32x3(normalMap.xy);\ns.metallic = normalMap.w;\ns.emissive = emissiveMap.xyz;\ns.occlusion = emissiveMap.w;\nfloat fogFactor;\nCC_TRANSFER_FOG_BASE(vec4(position, 1), fogFactor);\nvec4 shadowPos;\nshadowPos = cc_matLightViewProj * vec4(position, 1);\nvec4 color = CCStandardShadingBase(s, shadowPos) +\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nCCClusterShadingAdditive(s, shadowPos);\n#else\nCCStandardShadingAdditive(s, shadowPos);\n#endif\nCC_APPLY_FOG_BASE(color, fogFactor);\ncolor = CCFragOutput(color);\n#if CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT\ngbuffer_emissiveMap = color;\n#else\nfragColor = color;\n#endif\n}"}],[{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_MORPH\nin float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nlayout(std140) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nin vec4 a_joints;\nin vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nin highp vec4 a_jointAnimInfo;\n#endif\nlayout(std140) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(std140) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nuniform highp sampler2D cc_jointTexture;\n#else\nlayout(std140) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\n#if USE_INSTANCING\nin vec4 a_matWorld0;\nin vec4 a_matWorld1;\nin vec4 a_matWorld2;\n#if USE_LIGHTMAP\nin vec4 a_lightingMapUVParam;\n#endif\n#elif USE_BATCHING\nin float a_dyn_batch_id;\nlayout(std140) uniform CCLocalBatched {\nhighp mat4 cc_matWorlds[10];\n};\n#else\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\n#endif\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nmediump vec4 cc_shadowNFLSInfo;\nmediump vec4 cc_shadowWHPBInfo;\nmediump vec4 cc_shadowLPNNInfo;\nlowp vec4 cc_shadowColor;\nmediump vec4 cc_planarNDInfo;\n};\nout float v_dist;\nvec4 vert () {\nvec4 position;\nposition = vec4(a_position, 1.0);\n#if CC_USE_MORPH\napplyMorph(position);\n#endif\n#if CC_USE_SKINNING\nCCSkin(position);\n#endif\nmat4 matWorld;\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\n#else\nmatWorld = cc_matWorld;\n#endif\nvec3 P = (matWorld * position).xyz;\nvec3 L = cc_mainLitDir.xyz;\nvec3 N = cc_planarNDInfo.xyz;\nfloat d = cc_planarNDInfo.w + 0.001;\nfloat dist = (-d - dot(P, N)) / (dot(L, N) + 0.0001);\nvec3 shadowPos = P + L * dist;\nvec3 view = normalize(cc_cameraPos.xyz - shadowPos);\nfloat viewLength = length(cc_cameraPos.xyz - shadowPos);\nshadowPos += view * max(0.02, 0.001 * viewLength);\nposition = cc_matProj * cc_matView * vec4(shadowPos, 1.0);\nv_dist = dist;\nreturn position;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nmediump vec4 cc_shadowNFLSInfo;\nmediump vec4 cc_shadowWHPBInfo;\nmediump vec4 cc_shadowLPNNInfo;\nlowp vec4 cc_shadowColor;\nmediump vec4 cc_planarNDInfo;\n};\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nin float v_dist;\nvec4 frag () {\nif(v_dist < 0.02)\ndiscard;\nreturn CCFragOutput(cc_shadowColor);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_MORPH\nin float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\nlayout(std140) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nin vec4 a_joints;\nin vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nin highp vec4 a_jointAnimInfo;\n#endif\nlayout(std140) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(std140) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nuniform highp sampler2D cc_jointTexture;\n#else\nlayout(std140) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nout vec2 v_uv;\nvoid main () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nIn.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\ngl_Position = In.position;\ngl_Position.y = gl_Position.y;\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\n#if ANTIALIAS_TYPE == 1\nvec4 fxaa(sampler2D tex, vec2 fragCoord, vec2 resolution,\nvec2 v_rgbNW, vec2 v_rgbNE,\nvec2 v_rgbSW, vec2 v_rgbSE,\nvec2 v_rgbM) {\nvec4 color;\nmediump vec2 inverseVP = vec2(1.0 / resolution.x, 1.0 / resolution.y);\nvec3 rgbNW = texture(tex, v_rgbNW).xyz;\nvec3 rgbNE = texture(tex, v_rgbNE).xyz;\nvec3 rgbSW = texture(tex, v_rgbSW).xyz;\nvec3 rgbSE = texture(tex, v_rgbSE).xyz;\nvec4 texColor = texture(tex, v_rgbM);\nvec3 rgbM  = texColor.xyz;\nvec3 luma = vec3(0.299, 0.587, 0.114);\nfloat lumaNW = dot(rgbNW, luma);\nfloat lumaNE = dot(rgbNE, luma);\nfloat lumaSW = dot(rgbSW, luma);\nfloat lumaSE = dot(rgbSE, luma);\nfloat lumaM  = dot(rgbM,  luma);\nfloat lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\nfloat lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\nmediump vec2 dir;\ndir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\ndir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\nfloat dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) *\n(0.25 * (1.0 / 8.0)), (1.0/ 128.0));\nfloat rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);\ndir = min(vec2(8.0, 8.0),\nmax(vec2(-8.0, -8.0),\ndir * rcpDirMin)) * inverseVP;\nvec3 rgbA = 0.5 * (\ntexture(tex, fragCoord * inverseVP + dir * (1.0 / 3.0 - 0.5)).xyz +\ntexture(tex, fragCoord * inverseVP + dir * (2.0 / 3.0 - 0.5)).xyz);\nvec3 rgbB = rgbA * 0.5 + 0.25 * (\ntexture(tex, fragCoord * inverseVP + dir * -0.5).xyz +\ntexture(tex, fragCoord * inverseVP + dir * 0.5).xyz);\nfloat lumaB = dot(rgbB, luma);\nif ((lumaB < lumaMin) || (lumaB > lumaMax))\ncolor = vec4(rgbA, texColor.a);\nelse\ncolor = vec4(rgbB, texColor.a);\nreturn color;\n}\n#endif\nin vec2 v_uv;\nuniform sampler2D outputResultMap;\nlayout(location = 0) out vec4 fragColor;\nvoid texcoords(vec2 fragCoord, vec2 resolution,\nout vec2 v_rgbNW, out vec2 v_rgbNE,\nout vec2 v_rgbSW, out vec2 v_rgbSE,\nout vec2 v_rgbM) {\nvec2 inverseVP = 1.0 / resolution.xy;\nv_rgbNW = (fragCoord + vec2(-1.0, -1.0)) * inverseVP;\nv_rgbNE = (fragCoord + vec2(1.0, -1.0)) * inverseVP;\nv_rgbSW = (fragCoord + vec2(-1.0, 1.0)) * inverseVP;\nv_rgbSE = (fragCoord + vec2(1.0, 1.0)) * inverseVP;\nv_rgbM = vec2(fragCoord * inverseVP);\n}\nvoid main () {\nmediump vec2 v_rgbNW;\nmediump vec2 v_rgbNE;\nmediump vec2 v_rgbSW;\nmediump vec2 v_rgbSE;\nmediump vec2 v_rgbM;\n#if ANTIALIAS_TYPE == 1\nvec2 resolution = cc_screenSize.xy;\nvec2 fragCoord = v_uv * resolution;\ntexcoords(fragCoord, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\nfragColor = fxaa(outputResultMap, fragCoord, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\n#else\nfragColor = texture(outputResultMap, v_uv);\n#endif\n}"}],[{vert:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\nout mediump vec4 viewDir;\nvec4 vert () {\nviewDir = vec4(a_position, 1.0);\nmat4 matViewRotOnly = mat4(mat3(cc_matView));\nvec4 pos = matViewRotOnly * viewDir;\nif (cc_matProj[3].w > 0.0) {\nmat4 matProj = cc_matProj;\nvec2 scale = vec2(48.0, 24.0);\nmatProj[0].xy *= scale;\nmatProj[1].xy *= scale;\nmatProj[2].zw = vec2(-1.0);\nmatProj[3].zw = vec2(0.0);\npos = matProj * pos;\n} else {\npos = cc_matProj * pos;\n}\npos.z = 0.99999 * pos.w;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nuniform samplerCube cc_environment;\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n}\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = ACESToneMap(color.rgb);\n#endif\ncolor.rgb = sqrt(color.rgb);\nreturn color;\n}\nin mediump vec4 viewDir;\nvec4 frag () {\n#if USE_RGBE_CUBEMAP\nvec3 c = unpackRGBE(texture(cc_environment, viewDir.xyz));\n#else\nvec3 c = SRGBToLinear(texture(cc_environment, viewDir.xyz).rgb);\n#endif\nreturn CCFragOutput(vec4(c * cc_ambientSky.w, 1.0));\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec2 v_uv;\nlayout(std140) uniform Constants {\nvec4 offset;\n};\nlayout(std140) uniform PerFrameInfo {\nvec4 digits[8 * 10 / 4];\n};\nfloat getComponent(vec4 v, float i) {\nif (i < 1.0) { return v.x; }\nelse if (i < 2.0) { return v.y; }\nelse if (i < 3.0) { return v.z; }\nelse { return v.w; }\n}\nvec4 vert () {\nmat2 proj = mat2(cc_matProj[0].xy, cc_matProj[1].xy);\nproj /= abs(proj[1].x + proj[1].y);\nvec2 position = proj * a_position.xy + offset.xy;\nv_uv = a_color.xy;\nif (a_color.z >= 0.0) {\nfloat n = getComponent(digits[int(a_color.z)], a_color.w);\nv_uv += vec2(offset.z * n, 0.0);\n}\nreturn vec4(position, 0.0, 1.0);\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nin vec2 v_uv;\nuniform sampler2D mainTexture;\nvec4 frag () {\nreturn CCFragOutput(texture(mainTexture, v_uv));\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nin vec2 a_position;\nin vec2 a_texCoord;\nout vec2 v_uv;\nlayout(std140) uniform Constant {\nvec4 u_buffer0;\nvec4 u_buffer1;\nmat4 u_projection;\n};\nvec4 vert () {\nvec2 worldPos = a_position * u_buffer1.xy + u_buffer1.zw;\nvec2 clipSpace = worldPos / u_buffer0.xy * 2.0 - 1.0;\nvec4 screenPos = u_projection * vec4(clipSpace, 0.0, 1.0);\nv_uv = a_texCoord;\nreturn screenPos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nin vec2 v_uv;\nlayout(std140) uniform Factor {\nfloat u_percent;\n};\nuniform sampler2D mainTexture;\nvec4 frag () {\nvec4 color = texture(mainTexture, v_uv);\nfloat percent = clamp(u_percent, 0.0, 1.0);\ncolor.xyz *= percent;\nreturn color;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}]],glsl4:[[{vert:"\nprecision mediump float;\nlayout(set = 1, binding = 0) uniform Constants {\nvec4 mainTiling_Offset;\nvec4 frameTile_velLenScale;\nvec4 scale;\nvec4 nodeRotation;\n};\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(set = 2, binding = 0) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\nmat3 m = mat3(xAxis,yAxis,zAxis);\nfloat trace = m[0][0] + m[1][1] + m[2][2];\nvec4 quat;\nif (trace > 0.) {\nfloat s = 0.5 / sqrt(trace + 1.0);\nquat.w = 0.25 / s;\nquat.x = (m[2][1] - m[1][2]) * s;\nquat.y = (m[0][2] - m[2][0]) * s;\nquat.z = (m[1][0] - m[0][1]) * s;\n} else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\nfloat s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\nquat.w = (m[2][1] - m[1][2]) / s;\nquat.x = 0.25 * s;\nquat.y = (m[0][1] + m[1][0]) / s;\nquat.z = (m[0][2] + m[2][0]) / s;\n} else if (m[1][1] > m[2][2]) {\nfloat s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\nquat.w = (m[0][2] - m[2][0]) / s;\nquat.x = (m[0][1] + m[1][0]) / s;\nquat.y = 0.25 * s;\nquat.z = (m[1][2] + m[2][1]) / s;\n} else {\nfloat s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\nquat.w = (m[1][0] - m[0][1]) / s;\nquat.x = (m[0][2] + m[2][0]) / s;\nquat.y = (m[1][2] + m[2][1]) / s;\nquat.z = 0.25 * s;\n}\nfloat len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\nif (len > 0.) {\nlen = 1. / sqrt(len);\nquat.x = quat.x * len;\nquat.y = quat.y * len;\nquat.z = quat.z * len;\nquat.w = quat.w * len;\n}\nreturn quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\nfloat x = angle.x / 2.;\nfloat y = angle.y / 2.;\nfloat z = angle.z / 2.;\nfloat sx = sin(x);\nfloat cx = cos(x);\nfloat sy = sin(y);\nfloat cy = cos(y);\nfloat sz = sin(z);\nfloat cz = cos(z);\nvec4 quat = vec4(0);\nquat.x = sx * cy * cz + cx * sy * sz;\nquat.y = cx * sy * cz + sx * cy * sz;\nquat.z = cx * cy * sz - sx * sy * cz;\nquat.w = cx * cy * cz - sx * sy * sz;\nreturn quat;\n}\nvec4 quatMultiply (vec4 a, vec4 b){\nvec4 quat;\nquat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\nquat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\nquat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\nquat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\nreturn quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\nfloat ix = q.w * v.x + q.y * v.z - q.z * v.y;\nfloat iy = q.w * v.y + q.z * v.x - q.x * v.z;\nfloat iz = q.w * v.z + q.x * v.y - q.y * v.x;\nfloat iw = -q.x * v.x - q.y * v.y - q.z * v.z;\nv.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\nv.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\nv.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\nvec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\nvec4 rotQuat = quatMultiply(viewQuat, q);\nrotateVecFromQuat(pos, rotQuat);\nreturn pos;\n}\nlayout(location = 0) out mediump vec2 uv;\nlayout(location = 1) out mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n, mat4 viewInv\n) {\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\nvec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\nvec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n}\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec2 a_texCoord;\nlayout(location = 2) in vec4 a_color;\nlayout(set = 1, binding = 1) uniform builtin {\nvec4 cc_size_rotation;\n};\nvec4 vs_main() {\nvec4 pos = vec4(a_position, 1);\npos = cc_matWorld * pos;\nvec2 vertOffset = a_texCoord.xy - 0.5;\ncomputeVertPos(pos, vertOffset, quaternionFromEuler(vec3(0., 0., cc_size_rotation.z)), vec3(cc_size_rotation.xy, 0.), cc_matViewInv);\npos = cc_matViewProj * pos;\nuv = a_texCoord.xy;\ncolor = a_color;\nreturn pos;\n}\nvoid main() { gl_Position = vs_main(); }",frag:"\nprecision mediump float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nlayout(location = 0) in vec2 uv;\nlayout(location = 1) in vec4 color;\nlayout(set = 1, binding = 3) uniform sampler2D mainTexture;\nlayout(set = 1, binding = 2) uniform FragConstants {\nvec4 tintColor;\n};\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture(mainTexture, uv);\nreturn CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = add(); }"}],[{vert:"\nprecision highp float;\nlayout(location = 0) in vec3 a_position;\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec4 frag () {\nvec4 o = vec4(1.0);\nreturn o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(set = 2, binding = 0) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec4 a_color;\nlayout(location = 0) out vec4 v_color;\nlayout(location = 2) in float a_dist;\nlayout(location = 1) out float v_dist;\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\npos = cc_matViewProj * cc_matWorld * pos;\nv_color = a_color;\nv_dist = a_dist;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nlayout(location = 0) in vec4 v_color;\nlayout(location = 1) in float v_dist;\nvec4 frag () {\nvec4 o = v_color;\nfloat aa = fwidth(v_dist);\nfloat alpha = 1. - smoothstep(-aa, 0., abs(v_dist) - 1.0);\no.rgb *= o.a;\no *= alpha;\nreturn o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(set = 2, binding = 0) uniform CCWorldBound {\nhighp vec4 cc_worldBoundCenter;\nhighp vec4 cc_worldBoundHalfExtents;\n};\nlayout(location = 0) in vec3 a_position;\nvec4 vert () {\nvec4 position;\nposition = vec4(a_position, 1.0);\nposition *= cc_worldBoundHalfExtents;\nposition += cc_worldBoundCenter;\nposition = cc_matViewProj * position;\nreturn position;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nvec4 frag () {\nreturn vec4(1, 0, 0, 1);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\nmat3 m = mat3(xAxis,yAxis,zAxis);\nfloat trace = m[0][0] + m[1][1] + m[2][2];\nvec4 quat;\nif (trace > 0.) {\nfloat s = 0.5 / sqrt(trace + 1.0);\nquat.w = 0.25 / s;\nquat.x = (m[2][1] - m[1][2]) * s;\nquat.y = (m[0][2] - m[2][0]) * s;\nquat.z = (m[1][0] - m[0][1]) * s;\n} else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\nfloat s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\nquat.w = (m[2][1] - m[1][2]) / s;\nquat.x = 0.25 * s;\nquat.y = (m[0][1] + m[1][0]) / s;\nquat.z = (m[0][2] + m[2][0]) / s;\n} else if (m[1][1] > m[2][2]) {\nfloat s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\nquat.w = (m[0][2] - m[2][0]) / s;\nquat.x = (m[0][1] + m[1][0]) / s;\nquat.y = 0.25 * s;\nquat.z = (m[1][2] + m[2][1]) / s;\n} else {\nfloat s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\nquat.w = (m[1][0] - m[0][1]) / s;\nquat.x = (m[0][2] + m[2][0]) / s;\nquat.y = (m[1][2] + m[2][1]) / s;\nquat.z = 0.25 * s;\n}\nfloat len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\nif (len > 0.) {\nlen = 1. / sqrt(len);\nquat.x = quat.x * len;\nquat.y = quat.y * len;\nquat.z = quat.z * len;\nquat.w = quat.w * len;\n}\nreturn quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\nfloat x = angle.x / 2.;\nfloat y = angle.y / 2.;\nfloat z = angle.z / 2.;\nfloat sx = sin(x);\nfloat cx = cos(x);\nfloat sy = sin(y);\nfloat cy = cos(y);\nfloat sz = sin(z);\nfloat cz = cos(z);\nvec4 quat = vec4(0);\nquat.x = sx * cy * cz + cx * sy * sz;\nquat.y = cx * sy * cz + sx * cy * sz;\nquat.z = cx * cy * sz - sx * sy * cz;\nquat.w = cx * cy * cz - sx * sy * sz;\nreturn quat;\n}\nmat4 matrixFromRT (vec4 q, vec3 p){\nfloat x2 = q.x + q.x;\nfloat y2 = q.y + q.y;\nfloat z2 = q.z + q.z;\nfloat xx = q.x * x2;\nfloat xy = q.x * y2;\nfloat xz = q.x * z2;\nfloat yy = q.y * y2;\nfloat yz = q.y * z2;\nfloat zz = q.z * z2;\nfloat wx = q.w * x2;\nfloat wy = q.w * y2;\nfloat wz = q.w * z2;\nreturn mat4(\n1. - (yy + zz), xy + wz, xz - wy, 0,\nxy - wz, 1. - (xx + zz), yz + wx, 0,\nxz + wy, yz - wx, 1. - (xx + yy), 0,\np.x, p.y, p.z, 1\n);\n}\nmat4 matFromRTS (vec4 q, vec3 t, vec3 s){\nfloat x = q.x, y = q.y, z = q.z, w = q.w;\nfloat x2 = x + x;\nfloat y2 = y + y;\nfloat z2 = z + z;\nfloat xx = x * x2;\nfloat xy = x * y2;\nfloat xz = x * z2;\nfloat yy = y * y2;\nfloat yz = y * z2;\nfloat zz = z * z2;\nfloat wx = w * x2;\nfloat wy = w * y2;\nfloat wz = w * z2;\nfloat sx = s.x;\nfloat sy = s.y;\nfloat sz = s.z;\nreturn mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n(xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n(xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\nt.x, t.y, t.z, 1);\n}\nvec4 quatMultiply (vec4 a, vec4 b){\nvec4 quat;\nquat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\nquat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\nquat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\nquat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\nreturn quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\nfloat ix = q.w * v.x + q.y * v.z - q.z * v.y;\nfloat iy = q.w * v.y + q.z * v.x - q.x * v.z;\nfloat iz = q.w * v.z + q.x * v.y - q.y * v.x;\nfloat iw = -q.x * v.x - q.y * v.y - q.z * v.z;\nv.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\nv.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\nv.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\nvec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\nvec4 rotQuat = quatMultiply(viewQuat, q);\nrotateVecFromQuat(pos, rotQuat);\nreturn pos;\n}\nmat3 quatToMat3(vec4 q) {\nvec3 m0 = vec3(\n1.0 - 2.0 * q.y * q.y - 2.0 * q.z * q.z,\n2.0 * q.x * q.y + 2.0 * q.w * q.z,\n2.0 * q.x * q.z - 2.0 * q.w * q.y);\nvec3 m1 = vec3(\n2.0 * q.x * q.y - 2.0 * q.w * q.z,\n1.0 - 2.0 * q.x * q.x - 2.0 * q.z * q.z,\n2.0 * q.y * q.z + 2.0 * q.w * q.x);\nvec3 m2 = vec3(\n2.0 * q.x * q.z + 2.0 * q.w * q.y,\n2.0 * q.y * q.z - 2.0 * q.w * q.x,\n1.0 - 2.0 * q.x * q.x - 2.0 * q.y * q.y);\nreturn mat3(m0, m1, m2);\n}\nvec4 mat3ToQuat(mat3 mat) {\nfloat tr = mat[0][0] + mat[1][1] + mat[2][2];\nfloat qw, qx, qy, qz;\nif (tr > 0.0) {\nfloat S = sqrt(tr + 1.0) * 2.0;\nfloat invS = 1.0 / S;\nqw = 0.25 * S;\nqx = (mat[1][2] - mat[2][1]) * invS;\nqy = (mat[2][0] - mat[0][2]) * invS;\nqz = (mat[0][1] - mat[1][0]) * invS;\n} else if ((mat[0][0] > mat[1][1])&&(mat[0][0] > mat[2][2])) {\nfloat S = sqrt(1.0 + mat[0][0] - mat[1][1] - mat[2][2]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[1][2] - mat[2][1]) * invS;\nqx = 0.25 * S;\nqy = (mat[1][0] + mat[0][1]) * invS;\nqz = (mat[2][0] + mat[0][2]) * invS;\n} else if (mat[1][1] > mat[2][2]) {\nfloat S = sqrt(1.0 + mat[1][1] - mat[0][0] - mat[2][2]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[2][0] - mat[0][2]) * invS;\nqx = (mat[1][0] + mat[0][1]) * invS;\nqy = 0.25 * S;\nqz = (mat[2][1] + mat[1][2]) * invS;\n} else {\nfloat S = sqrt(1.0 + mat[2][2] - mat[0][0] - mat[1][1]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[0][1] - mat[1][0]) * invS;\nqx = (mat[2][0] + mat[0][2]) * invS;\nqy = (mat[2][1] + mat[1][2]) * invS;\nqz = 0.25 * S;\n}\nreturn vec4(qx, qy, qz, qw);\n}\nvec4 eulerToQuat(vec3 euler) {\nvec3 er = euler * 0.5;\nfloat x = er.x, y = er.y, z = er.z;\nfloat sx = sin(x);\nfloat cx = cos(x);\nfloat sy = sin(y);\nfloat cy = cos(y);\nfloat sz = sin(z);\nfloat cz = cos(z);\nvec4 quat;\nquat.x = sx * cy * cz + cx * sy * sz;\nquat.y = cx * sy * cz + sx * cy * sz;\nquat.z = cx * cy * sz - sx * sy * cz;\nquat.w = cx * cy * cz - sx * sy * sz;\nreturn quat;\n}\nlayout(set = 1, binding = 0) uniform Constants {\nvec4 mainTiling_Offset;\nvec4 frameTile_velLenScale;\nvec4 scale;\nvec4 nodeRotation;\n};\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(set = 2, binding = 0) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\nlayout(location = 0) out mediump vec2 uv;\nlayout(location = 1) out mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n, mat4 viewInv\n#endif\n#if CC_RENDER_MODE == 1\n, vec3 eye\n, vec4 velocity\n, float velocityScale\n, float lengthScale\n, float xIndex\n#endif\n) {\n#if CC_RENDER_MODE == 0\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\nvec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\nvec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_RENDER_MODE == 1\nvec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\nvec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\npos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_RENDER_MODE == 2\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = vec3(1, 0, 0);\nvec3 camY = vec3(0, 0, -1);\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_RENDER_MODE == 3\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nrotateVecFromQuat(viewSpaceVert, q);\nvec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\nvec3 camY = vec3(0, 1, 0);\nvec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\npos.xyz += offset;\n#else\npos.x += vertOffset.x;\npos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV (float frameIndex, vec2 vertIndex, vec2 frameTile){\nvec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\naniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if CC_RENDER_MODE != 4\nvertIndex.y = 1. - vertIndex.y;\n#endif\nreturn (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nlayout(set = 1, binding = 1) uniform SampleConstants {\nvec4 u_sampleInfo;\n};\nlayout(set = 1, binding = 2) uniform TickConstants {\nvec4 u_worldRot;\nvec4 u_timeDelta;\n};\nlayout(location = 0) in vec4 a_position_starttime;\nlayout(location = 1) in vec4 a_size_uv;\nlayout(location = 2) in vec4 a_rotation_uv;\nlayout(location = 3) in vec4 a_color;\nlayout(location = 4) in vec4 a_dir_life;\nlayout(location = 5) in float a_rndSeed;\n#if CC_RENDER_MODE == 4\nlayout(location = 6) in vec3 a_texCoord;\nlayout(location = 7) in vec3 a_texCoord3;\nlayout(location = 8) in vec3 a_normal;\nlayout(location = 9) in vec4 a_color1;\n#endif\nvec3 unpackCurveData (sampler2D tex, vec2 coord) {\nvec4 a = texture(tex, coord);\nvec4 b = texture(tex, coord + u_sampleInfo.y);\nfloat c = fract(coord.x * u_sampleInfo.x);\nreturn mix(a.xyz, b.xyz, c);\n}\nvec3 unpackCurveData (sampler2D tex, vec2 coord, out float w) {\nvec4 a = texture(tex, coord);\nvec4 b = texture(tex, coord + u_sampleInfo.y);\nfloat c = fract(coord.x * u_sampleInfo.x);\nw = mix(a.w, b.w, c);\nreturn mix(a.xyz, b.xyz, c);\n}\nfloat pseudoRandom(float x) {\n#if USE_VK_SHADER\nfloat o = x;\nx = mod(x - 1.0, 2.0) - 1.0;\nfloat freqVar = 10.16640753482;\nfloat y = sin(freqVar * floor(o * 0.5 - 0.5));\nfloat v = max(0.0, 1.0-abs(x));\nv *= 0.7071067812;\nv = y < 0.0 ? -v : v;\nreturn v;\n#else\nfloat seed = mod(x, 233280.);\nfloat q = (seed * 9301. + 49297.) / 233280.;\nreturn fract(q);\n#endif\n}\n#if COLOR_OVER_TIME_MODULE_ENABLE\nlayout(set = 1, binding = 10) uniform sampler2D color_over_time_tex0;\nlayout(set = 1, binding = 3) uniform ColorConstant {\nint u_color_mode;\n};\n#endif\n#if ROTATION_OVER_TIME_MODULE_ENABLE\nlayout(set = 1, binding = 11) uniform sampler2D rotation_over_time_tex0;\nlayout(set = 1, binding = 4) uniform RotationConstant {\nint u_rotation_mode;\n};\n#endif\n#if SIZE_OVER_TIME_MODULE_ENABLE\nlayout(set = 1, binding = 12) uniform sampler2D size_over_time_tex0;\nlayout(set = 1, binding = 5) uniform SizeConstant {\nint u_size_mode;\n};\n#endif\n#if FORCE_OVER_TIME_MODULE_ENABLE\nlayout(set = 1, binding = 13) uniform sampler2D force_over_time_tex0;\nlayout(set = 1, binding = 6) uniform ForceConstant {\nint u_force_mode;\nint u_force_space;\n};\n#endif\n#if VELOCITY_OVER_TIME_MODULE_ENABLE\nlayout(set = 1, binding = 14) uniform sampler2D velocity_over_time_tex0;\nlayout(set = 1, binding = 7) uniform VelocityConstant {\nint u_velocity_mode;\nint u_velocity_space;\n};\n#endif\n#if TEXTURE_ANIMATION_MODULE_ENABLE\nlayout(set = 1, binding = 15) uniform sampler2D texture_animation_tex0;\nlayout(set = 1, binding = 8) uniform AnimationConstant {\nvec4 u_anim_info;\n};\n#endif\nfloat repeat (float t, float length) {\nreturn t - floor(t / length) * length;\n}\nvec4 rotateQuat (vec4 p, vec4 q) {\nvec3 iv = cross(q.xyz, p.xyz) + q.w * p.xyz;\nvec3 res = p.xyz + 2.0 * cross(q.xyz, iv);\nreturn vec4(res.xyz, p.w);\n}\nvec4 gpvs_main () {\nfloat activeTime = u_timeDelta.x - a_position_starttime.w;\nfloat normalizedTime = clamp(activeTime / a_dir_life.w, 0.0, 1.0);\nvec2 timeCoord0 = vec2(normalizedTime, 0.);\nvec2 timeCoord1 = vec2(normalizedTime, 1.);\n#if CC_RENDER_MODE == 4\nvec2 vertIdx = vec2(a_texCoord.x, a_texCoord.y);\n#else\nvec2 vertIdx = vec2(a_size_uv.w, a_rotation_uv.w);\n#endif\nvec4 velocity = vec4(a_dir_life.xyz, 0.);\nvec4 pos = vec4(a_position_starttime.xyz, 1.);\nvec3 size = a_size_uv.xyz;\n#if SIZE_OVER_TIME_MODULE_ENABLE\nif (u_size_mode == 1) {\nsize *= unpackCurveData(size_over_time_tex0, timeCoord0);\n} else {\nvec3 size_0 = unpackCurveData(size_over_time_tex0, timeCoord0);\nvec3 size_1 = unpackCurveData(size_over_time_tex0, timeCoord1);\nfloat factor_s = pseudoRandom(a_rndSeed + 39825.);\nsize *= mix(size_0, size_1, factor_s);\n}\n#endif\nvec3 compScale = scale.xyz * size;\n#if FORCE_OVER_TIME_MODULE_ENABLE\nvec3 forceAnim = vec3(0.);\nif (u_force_mode == 1) {\nforceAnim = unpackCurveData(force_over_time_tex0, timeCoord0);\n} else {\nvec3 force_0 = unpackCurveData(force_over_time_tex0, timeCoord0);\nvec3 force_1 = unpackCurveData(force_over_time_tex0, timeCoord1);\nfloat factor_f =  pseudoRandom(a_rndSeed + 212165.);\nforceAnim = mix(force_0, force_1, factor_f);\n}\nvec4 forceTrack = vec4(forceAnim, 0.);\nif (u_force_space == 0) {\nforceTrack = rotateQuat(forceTrack, u_worldRot);\n}\nvelocity.xyz += forceTrack.xyz;\n#endif\n#if VELOCITY_OVER_TIME_MODULE_ENABLE\nfloat speedModifier0 = 1.;\nfloat speedModifier1 = 1.;\nvec3 velocityAnim = vec3(0.);\nif (u_velocity_mode == 1) {\nvelocityAnim = unpackCurveData(velocity_over_time_tex0, timeCoord0, speedModifier0);\n} else {\nvec3 vectory_0 = unpackCurveData(velocity_over_time_tex0, timeCoord0, speedModifier0);\nvec3 vectory_1 = unpackCurveData(velocity_over_time_tex0, timeCoord1, speedModifier1);\nfloat factor_v = pseudoRandom(a_rndSeed + 197866.);\nvelocityAnim = mix(vectory_0, vectory_1, factor_v);\nspeedModifier0 = mix(speedModifier0, speedModifier1, factor_v);\n}\nvec4 velocityTrack = vec4(velocityAnim, 0.);\nif (u_velocity_space == 0) {\nvelocityTrack = rotateQuat(velocityTrack, u_worldRot);\n}\nvelocity.xyz += velocityTrack.xyz;\nvelocity.xyz *= speedModifier0;\n#endif\npos.xyz += velocity.xyz * normalizedTime * a_dir_life.w;\n#if !CC_USE_WORLD_SPACE\npos = cc_matWorld * pos;\n#if CC_RENDER_MODE == 1\nvelocity = rotateQuat(velocity, u_worldRot);\n#endif\n#endif\nvec3 startRotation = a_rotation_uv.xyz;\n#if CC_RENDER_MODE != 4\n#if CC_RENDER_MODE == 0\nvec3 rotEuler = startRotation.xyz;\n#elif CC_RENDER_MODE == 1\nvec3 rotEuler = vec3(0.);\n#else\nvec3 rotEuler = vec3(0., 0., startRotation.z);\n#endif\nvec4 rot = quaternionFromEuler(rotEuler);\n#else\nvec4 rot = quaternionFromEuler(startRotation);\n#endif\n#if ROTATION_OVER_TIME_MODULE_ENABLE\nif (u_rotation_mode == 1) {\nvec3 euler = unpackCurveData(rotation_over_time_tex0, timeCoord0) * normalizedTime * a_dir_life.w;\nvec4 quat = eulerToQuat(euler);\nmat3 mLocal = quatToMat3(quat);\nmat3 mStart = quatToMat3(rot);\nrot = mat3ToQuat(mStart * mLocal);\n} else {\nvec3 rotation_0 = unpackCurveData(rotation_over_time_tex0, timeCoord0);\nvec3 rotation_1 = unpackCurveData(rotation_over_time_tex0, timeCoord1);\nfloat factor_r = pseudoRandom(a_rndSeed + 125292.);\nvec3 euler = mix(rotation_0, rotation_1, factor_r) * normalizedTime * a_dir_life.w;\n#if CC_RENDER_MODE == 3 || CC_RENDER_MODE == 2\neuler = vec3(0.0, 0.0, euler.z);\n#endif\nvec4 quat = eulerToQuat(euler);\nmat3 mLocal = quatToMat3(quat);\nmat3 mStart = quatToMat3(rot);\nrot = mat3ToQuat(mStart * mLocal);\n}\n#endif\n#if COLOR_OVER_TIME_MODULE_ENABLE\nif (u_color_mode == 1) {\ncolor = a_color * texture(color_over_time_tex0, timeCoord0);\n} else {\nvec4 color_0 = texture(color_over_time_tex0, timeCoord0);\nvec4 color_1 = texture(color_over_time_tex0, timeCoord1);\nfloat factor_c = pseudoRandom(a_rndSeed + 91041.);\ncolor = a_color * mix(color_0, color_1, factor_c);\n}\n#else\ncolor = a_color;\n#endif\n#if CC_RENDER_MODE != 4\nvec2 cornerOffset = vec2((vertIdx - 0.5));\n#if CC_RENDER_MODE == 1\nrot = vec4(0.0, 0.0, 0.0, 1.0);\n#endif\ncomputeVertPos(pos, cornerOffset, rot, compScale\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n, cc_matViewInv\n#endif\n#if CC_RENDER_MODE == 1\n, cc_cameraPos.xyz\n, velocity\n, frameTile_velLenScale.z\n, frameTile_velLenScale.w\n, a_size_uv.w\n#endif\n);\n#else\nmat3 rotMat = quatToMat3(rot);\nmat3 nodeMat = quatToMat3(nodeRotation);\nrotMat = nodeMat * rotMat;\nrot = mat3ToQuat(rotMat);\nmat4 xformNoScale = matrixFromRT(rot, pos.xyz);\nmat4 xform = matFromRTS(rot, pos.xyz, compScale);\npos = xform * vec4(a_texCoord3, 1);\nvec4 normal = xformNoScale * vec4(a_normal, 0);\ncolor *= a_color1;\n#endif\npos = cc_matViewProj * pos;\nfloat frameIndex = 0.;\n#if TEXTURE_ANIMATION_MODULE_ENABLE\nfloat startFrame = 0.;\nvec3 frameInfo = vec3(0.);\nif (int(u_anim_info.x) == 1) {\nframeInfo = unpackCurveData(texture_animation_tex0, timeCoord0);\n} else {\nvec3 frameInfo0 = unpackCurveData(texture_animation_tex0, timeCoord0);\nvec3 frameInfo1 = unpackCurveData(texture_animation_tex0, timeCoord1);\nfloat factor_t = pseudoRandom(a_rndSeed + 90794.);\nframeInfo = mix(frameInfo0, frameInfo1, factor_t);\n}\nstartFrame = frameInfo.x / u_anim_info.y;\nframeIndex = repeat(u_anim_info.z * (frameInfo.y + startFrame), 1.);\n#endif\nuv = computeUV(frameIndex, vertIdx, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\nreturn pos;\n}\nvoid main() { gl_Position = gpvs_main(); }",frag:"\nprecision mediump float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nlayout(location = 0) in vec2 uv;\nlayout(location = 1) in vec4 color;\nlayout(set = 1, binding = 16) uniform sampler2D mainTexture;\nlayout(set = 1, binding = 9) uniform FragConstants {\nvec4 tintColor;\n};\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture(mainTexture, uv);\nreturn CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = add(); }"}],[{vert:"\nprecision mediump float;\nlayout(set = 1, binding = 0) uniform Constants {\nvec4 mainTiling_Offset;\nvec4 frameTile_velLenScale;\nvec4 scale;\nvec4 nodeRotation;\n};\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(set = 2, binding = 0) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\nlayout(location = 0) out mediump vec2 uv;\nlayout(location = 1) out mediump vec4 color;\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec4 a_texCoord;\nlayout(location = 2) in vec3 a_texCoord1;\nlayout(location = 3) in vec3 a_texCoord2;\nlayout(location = 4) in vec4 a_color;\n#if CC_DRAW_WIRE_FRAME\nlayout(location = 2) out vec3 vBarycentric;\n#endif\nvec4 vs_main() {\nhighp vec4 pos = vec4(a_position, 1);\nvec4 velocity = vec4(a_texCoord1.xyz, 0);\n#if !CC_USE_WORLD_SPACE\npos = cc_matWorld * pos;\nvelocity = cc_matWorld * velocity;\n#endif\nfloat vertOffset = (a_texCoord.x - 0.5) * a_texCoord.y;\nvec3 camUp = normalize(cross(pos.xyz - cc_cameraPos.xyz, velocity.xyz));\npos.xyz += camUp * vertOffset;\npos = cc_matViewProj * pos;\nuv = a_texCoord.zw * mainTiling_Offset.xy + mainTiling_Offset.zw;;\ncolor = a_color;\n#if CC_DRAW_WIRE_FRAME\nvBarycentric = a_texCoord2;\n#endif\nreturn pos;\n}\nvoid main() { gl_Position = vs_main(); }",frag:"\nprecision mediump float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nlayout(location = 0) in vec2 uv;\nlayout(location = 1) in vec4 color;\n#if CC_DRAW_WIRE_FRAME\nlayout(location = 2) in vec3 vBarycentric;\n#endif\nlayout(set = 1, binding = 2) uniform sampler2D mainTexture;\nlayout(set = 1, binding = 1) uniform FragConstants {\nvec4 tintColor;\n};\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture(mainTexture, uv);\n#if CC_DRAW_WIRE_FRAME\nif (any(lessThan(vBarycentric, vec3(0.02)))) {\ncol = vec4(0., 1., 1., 1.);\n}\n#endif\nreturn CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = add(); }"}],[{vert:"\nprecision highp float;\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\nmat3 m = mat3(xAxis,yAxis,zAxis);\nfloat trace = m[0][0] + m[1][1] + m[2][2];\nvec4 quat;\nif (trace > 0.) {\nfloat s = 0.5 / sqrt(trace + 1.0);\nquat.w = 0.25 / s;\nquat.x = (m[2][1] - m[1][2]) * s;\nquat.y = (m[0][2] - m[2][0]) * s;\nquat.z = (m[1][0] - m[0][1]) * s;\n} else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\nfloat s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\nquat.w = (m[2][1] - m[1][2]) / s;\nquat.x = 0.25 * s;\nquat.y = (m[0][1] + m[1][0]) / s;\nquat.z = (m[0][2] + m[2][0]) / s;\n} else if (m[1][1] > m[2][2]) {\nfloat s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\nquat.w = (m[0][2] - m[2][0]) / s;\nquat.x = (m[0][1] + m[1][0]) / s;\nquat.y = 0.25 * s;\nquat.z = (m[1][2] + m[2][1]) / s;\n} else {\nfloat s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\nquat.w = (m[1][0] - m[0][1]) / s;\nquat.x = (m[0][2] + m[2][0]) / s;\nquat.y = (m[1][2] + m[2][1]) / s;\nquat.z = 0.25 * s;\n}\nfloat len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\nif (len > 0.) {\nlen = 1. / sqrt(len);\nquat.x = quat.x * len;\nquat.y = quat.y * len;\nquat.z = quat.z * len;\nquat.w = quat.w * len;\n}\nreturn quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\nfloat x = angle.x / 2.;\nfloat y = angle.y / 2.;\nfloat z = angle.z / 2.;\nfloat sx = sin(x);\nfloat cx = cos(x);\nfloat sy = sin(y);\nfloat cy = cos(y);\nfloat sz = sin(z);\nfloat cz = cos(z);\nvec4 quat = vec4(0);\nquat.x = sx * cy * cz + cx * sy * sz;\nquat.y = cx * sy * cz + sx * cy * sz;\nquat.z = cx * cy * sz - sx * sy * cz;\nquat.w = cx * cy * cz - sx * sy * sz;\nreturn quat;\n}\nmat4 matrixFromRT (vec4 q, vec3 p){\nfloat x2 = q.x + q.x;\nfloat y2 = q.y + q.y;\nfloat z2 = q.z + q.z;\nfloat xx = q.x * x2;\nfloat xy = q.x * y2;\nfloat xz = q.x * z2;\nfloat yy = q.y * y2;\nfloat yz = q.y * z2;\nfloat zz = q.z * z2;\nfloat wx = q.w * x2;\nfloat wy = q.w * y2;\nfloat wz = q.w * z2;\nreturn mat4(\n1. - (yy + zz), xy + wz, xz - wy, 0,\nxy - wz, 1. - (xx + zz), yz + wx, 0,\nxz + wy, yz - wx, 1. - (xx + yy), 0,\np.x, p.y, p.z, 1\n);\n}\nmat4 matFromRTS (vec4 q, vec3 t, vec3 s){\nfloat x = q.x, y = q.y, z = q.z, w = q.w;\nfloat x2 = x + x;\nfloat y2 = y + y;\nfloat z2 = z + z;\nfloat xx = x * x2;\nfloat xy = x * y2;\nfloat xz = x * z2;\nfloat yy = y * y2;\nfloat yz = y * z2;\nfloat zz = z * z2;\nfloat wx = w * x2;\nfloat wy = w * y2;\nfloat wz = w * z2;\nfloat sx = s.x;\nfloat sy = s.y;\nfloat sz = s.z;\nreturn mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n(xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n(xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\nt.x, t.y, t.z, 1);\n}\nvec4 quatMultiply (vec4 a, vec4 b){\nvec4 quat;\nquat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\nquat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\nquat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\nquat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\nreturn quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\nfloat ix = q.w * v.x + q.y * v.z - q.z * v.y;\nfloat iy = q.w * v.y + q.z * v.x - q.x * v.z;\nfloat iz = q.w * v.z + q.x * v.y - q.y * v.x;\nfloat iw = -q.x * v.x - q.y * v.y - q.z * v.z;\nv.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\nv.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\nv.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\nvec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\nvec4 rotQuat = quatMultiply(viewQuat, q);\nrotateVecFromQuat(pos, rotQuat);\nreturn pos;\n}\nmat3 quatToMat3(vec4 q) {\nvec3 m0 = vec3(\n1.0 - 2.0 * q.y * q.y - 2.0 * q.z * q.z,\n2.0 * q.x * q.y + 2.0 * q.w * q.z,\n2.0 * q.x * q.z - 2.0 * q.w * q.y);\nvec3 m1 = vec3(\n2.0 * q.x * q.y - 2.0 * q.w * q.z,\n1.0 - 2.0 * q.x * q.x - 2.0 * q.z * q.z,\n2.0 * q.y * q.z + 2.0 * q.w * q.x);\nvec3 m2 = vec3(\n2.0 * q.x * q.z + 2.0 * q.w * q.y,\n2.0 * q.y * q.z - 2.0 * q.w * q.x,\n1.0 - 2.0 * q.x * q.x - 2.0 * q.y * q.y);\nreturn mat3(m0, m1, m2);\n}\nvec4 mat3ToQuat(mat3 mat) {\nfloat tr = mat[0][0] + mat[1][1] + mat[2][2];\nfloat qw, qx, qy, qz;\nif (tr > 0.0) {\nfloat S = sqrt(tr + 1.0) * 2.0;\nfloat invS = 1.0 / S;\nqw = 0.25 * S;\nqx = (mat[1][2] - mat[2][1]) * invS;\nqy = (mat[2][0] - mat[0][2]) * invS;\nqz = (mat[0][1] - mat[1][0]) * invS;\n} else if ((mat[0][0] > mat[1][1])&&(mat[0][0] > mat[2][2])) {\nfloat S = sqrt(1.0 + mat[0][0] - mat[1][1] - mat[2][2]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[1][2] - mat[2][1]) * invS;\nqx = 0.25 * S;\nqy = (mat[1][0] + mat[0][1]) * invS;\nqz = (mat[2][0] + mat[0][2]) * invS;\n} else if (mat[1][1] > mat[2][2]) {\nfloat S = sqrt(1.0 + mat[1][1] - mat[0][0] - mat[2][2]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[2][0] - mat[0][2]) * invS;\nqx = (mat[1][0] + mat[0][1]) * invS;\nqy = 0.25 * S;\nqz = (mat[2][1] + mat[1][2]) * invS;\n} else {\nfloat S = sqrt(1.0 + mat[2][2] - mat[0][0] - mat[1][1]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[0][1] - mat[1][0]) * invS;\nqx = (mat[2][0] + mat[0][2]) * invS;\nqy = (mat[2][1] + mat[1][2]) * invS;\nqz = 0.25 * S;\n}\nreturn vec4(qx, qy, qz, qw);\n}\nlayout(set = 1, binding = 0) uniform Constants {\nvec4 mainTiling_Offset;\nvec4 frameTile_velLenScale;\nvec4 scale;\nvec4 nodeRotation;\n};\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(set = 2, binding = 0) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\nlayout(location = 0) out mediump vec2 uv;\nlayout(location = 1) out mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n, mat4 viewInv\n#endif\n#if CC_RENDER_MODE == 1\n, vec3 eye\n, vec4 velocity\n, float velocityScale\n, float lengthScale\n, float xIndex\n#endif\n) {\n#if CC_RENDER_MODE == 0\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\nvec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\nvec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_RENDER_MODE == 1\nvec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\nvec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\npos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_RENDER_MODE == 2\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = vec3(1, 0, 0);\nvec3 camY = vec3(0, 0, -1);\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_RENDER_MODE == 3\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nrotateVecFromQuat(viewSpaceVert, q);\nvec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\nvec3 camY = vec3(0, 1, 0);\nvec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\npos.xyz += offset;\n#else\npos.x += vertOffset.x;\npos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV (float frameIndex, vec2 vertIndex, vec2 frameTile){\nvec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\naniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if CC_RENDER_MODE != 4\nvertIndex.y = 1. - vertIndex.y;\n#endif\nreturn (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec3 a_texCoord;\nlayout(location = 2) in vec3 a_texCoord1;\nlayout(location = 3) in vec3 a_texCoord2;\nlayout(location = 4) in vec4 a_color;\n#if CC_RENDER_MODE == 1\nlayout(location = 8) in vec3 a_color1;\n#endif\n#if CC_RENDER_MODE == 4\nlayout(location = 6) in vec3 a_texCoord3;\nlayout(location = 7) in vec3 a_normal;\nlayout(location = 8) in vec4 a_color1;\n#endif\nvec4 lpvs_main () {\nvec3 compScale = scale.xyz * a_texCoord1;\nvec4 pos = vec4(a_position, 1);\n#if CC_RENDER_MODE == 1\nvec4 velocity = vec4(a_color1.xyz, 0);\n#endif\n#if !CC_USE_WORLD_SPACE\npos = cc_matWorld * pos;\n#if CC_RENDER_MODE == 1\nvelocity = cc_matWorld * velocity;\n#endif\n#endif\n#if ROTATION_OVER_TIME_MODULE_ENABLE\nvec3 rotTmp = a_texCoord2;\nfloat mulFactor = 1.0;\nif (rotTmp.x > 10.0 * 0.5) {\nrotTmp.x -= 10.0;\nmulFactor = -1.0;\n}\nvec4 rot = vec4(rotTmp, 0.0);\nrot.w = mulFactor * sqrt(1.0 - rot.x * rot.x - rot.y * rot.y - rot.z * rot.z);\n#else\n#if CC_RENDER_MODE != 4\n#if CC_RENDER_MODE == 0\nvec3 rotEuler = a_texCoord2;\n#elif CC_RENDER_MODE == 1\nvec3 rotEuler = vec3(0.);\n#else\nvec3 rotEuler = vec3(0., 0., a_texCoord2.z);\n#endif\nvec4 rot = quaternionFromEuler(rotEuler);\n#else\nvec4 rot = quaternionFromEuler(a_texCoord2);\n#endif\n#endif\n#if CC_RENDER_MODE != 4\nvec2 cornerOffset = vec2((a_texCoord.xy - 0.5));\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\ncomputeVertPos(pos, cornerOffset, rot, compScale, cc_matViewInv);\n#elif CC_RENDER_MODE == 1\ncomputeVertPos(pos, cornerOffset, rot, compScale, cc_cameraPos.xyz, velocity, frameTile_velLenScale.z, frameTile_velLenScale.w, a_texCoord.x);\n#elif 2\ncomputeVertPos(pos, cornerOffset, rot, compScale);\n#endif\ncolor = a_color;\n#else\nmat3 rotMat = quatToMat3(rot);\nmat3 nodeMat = quatToMat3(nodeRotation);\nrotMat = nodeMat * rotMat;\nrot = mat3ToQuat(rotMat);\nmat4 xformNoScale = matrixFromRT(rot, pos.xyz);\nmat4 xform = matFromRTS(rot, pos.xyz, compScale);\npos = xform * vec4(a_texCoord3, 1);\nvec4 normal = xformNoScale * vec4(a_normal, 0);\ncolor = a_color * a_color1;\n#endif\nuv = computeUV(a_texCoord.z, a_texCoord.xy, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\npos = cc_matViewProj * pos;\nreturn pos;\n}\nvoid main() { gl_Position = lpvs_main(); }",frag:"\nprecision mediump float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nlayout(location = 0) in vec2 uv;\nlayout(location = 1) in vec4 color;\nlayout(set = 1, binding = 2) uniform sampler2D mainTexture;\nlayout(set = 1, binding = 1) uniform FragConstants {\nvec4 tintColor;\n};\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture(mainTexture, uv);\nreturn CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = add(); }"}],[{vert:"\nprecision highp float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\n#if USE_LOCAL\nlayout(set = 2, binding = 0) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\n#endif\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec2 a_texCoord;\nlayout(location = 2) in vec4 a_color;\nlayout(location = 0) out vec4 v_light;\nlayout(location = 1) out vec2 uv0;\n#if TWO_COLORED\nlayout(location = 3) in vec4 a_color2;\nlayout(location = 2) out vec4 v_dark;\n#endif\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\n#if USE_LOCAL\npos = cc_matWorld * pos;\n#endif\npos = cc_matViewProj * pos;\nuv0 = a_texCoord;\nv_light = a_color;\n#if TWO_COLORED\nv_dark = a_color2;\n#endif\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\n#if USE_ALPHA_TEST\nlayout(set = 1, binding = 0) uniform ALPHA_TEST_DATA {\nfloat alphaThreshold;\n};\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n#if USE_ALPHA_TEST\nif (color.a < alphaThreshold) discard;\n#endif\n}\nvoid ALPHA_TEST (in float alpha) {\n#if USE_ALPHA_TEST\nif (alpha < alphaThreshold) discard;\n#endif\n}\nlayout(location = 0) in vec4 v_light;\n#if TWO_COLORED\nlayout(location = 2) in vec4 v_dark;\n#endif\nlayout(location = 1) in vec2 uv0;\nlayout(set = 2, binding = 11) uniform sampler2D cc_spriteTexture;\nvec4 frag () {\nvec4 o = vec4(1, 1, 1, 1);\n#if TWO_COLORED\nvec4 texColor = vec4(1, 1, 1, 1);\ntexColor *= texture(cc_spriteTexture, uv0);\no.a = texColor.a * v_light.a;\no.rgb = ((texColor.a - 1.0) * v_dark.a + 1.0 - texColor.rgb) * v_dark.rgb + texColor.rgb * v_light.rgb;\n#else\no *= texture(cc_spriteTexture, uv0);\no *= v_light;\n#endif\nALPHA_TEST(o);\nreturn o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nstruct SpriteVertexData {\nvec4 position;\nvec4 color;\n};\nstruct SpriteFragmentData {\nvec2 uv;\n};\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec2 a_texCoord;\nlayout(location = 2) in float a_batch_id;\nlayout(location = 0) out vec2 v_uv0;\nlayout(location = 1) out float v_uvMode;\nlayout(location = 2) out vec4 v_uvSizeOffset;\nlayout(location = 3) out vec4 v_uvParams0;\nlayout(location = 4) out vec4 v_uvParams1;\nstruct SpriteVertexInternalData {\nvec4 rotation;\nvec3 translation;\nvec3 scale;\nvec4 uvSizeOffset;\nfloat uvMode;\nvec4 uvParams;\nfloat filltype;\n};\nlayout(set = 2, binding = 5) uniform CCUILocal {\nvec4 cc_local_data[(CC_DEVICE_MAX_VERTEX_UNIFORM_VECTORS - CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS) / 5 * 5];\n};\nvec3 VectorTransformQuat (vec3 v, vec4 q) {\nreturn v + 2.0 * cross(q.xyz, cross(q.xyz, v) + q.w * v);\n}\nvoid CCSpriteInput(out SpriteVertexData i0) {\nvec4 data0 = cc_local_data[int(a_batch_id) * 5];\nvec4 data1 = cc_local_data[int(a_batch_id) * 5 + 1];\nvec4 data2 = cc_local_data[int(a_batch_id) * 5 + 2];\nvec4 data3 = cc_local_data[int(a_batch_id) * 5 + 3];\nvec4 data4 = cc_local_data[int(a_batch_id) * 5 + 4];\nfloat rg = data0.w;\nfloat r = floor(rg);\nfloat ba = data2.z;\nfloat b = floor(ba);\nSpriteVertexInternalData i1;\ni1.rotation = data1;\ni1.translation = data0.xyz;\ni1.scale = vec3(data2.xy, 1.0);\ni1.uvSizeOffset = data3;\ni1.filltype = fract(data2.w) * 10.0;\ni1.uvMode = data2.w;\ni1.uvParams = data4;\ni0.position = vec4(VectorTransformQuat(a_position * i1.scale, i1.rotation) + i1.translation, 1.0);\ni0.color = vec4(r * (1.0 / 255.0), rg - r, b * (1.0 / 255.0), ba - b);\nvec2 uvWithRotation;\nif (i1.uvSizeOffset.x < 0.0) {\ni1.uvSizeOffset.x = abs(i1.uvSizeOffset.x);\nuvWithRotation = vec2(1.0 - a_texCoord.y, a_texCoord.x);\n} else {\nuvWithRotation = a_texCoord;\n}\nif (i1.uvMode >= 3.0) {\nv_uv0 = uvWithRotation;\nv_uvSizeOffset = i1.uvSizeOffset;\nv_uvParams0 = vec4(i1.uvParams.xy, i1.filltype, 0);\nif (i1.filltype >= 2.0) {\nv_uvParams1 = i1.uvParams;\n} else if (i1.filltype >= 1.0) {\nv_uvParams0 = vec4(1.0 - v_uvParams0.y, 1.0 - v_uvParams0.x, v_uvParams0.zw);\n}\n} else if (i1.uvMode >= 2.0) {\nv_uv0 = uvWithRotation * i1.uvParams.xy;\nv_uv0.y -= fract(i1.uvParams.y);\nv_uvSizeOffset = i1.uvSizeOffset;\n} else if (i1.uvMode >= 1.0) {\nv_uv0 = uvWithRotation;\nv_uvSizeOffset = i1.uvSizeOffset;\nvec4 params0 = fract(i1.uvParams);\nvec4 params1 = floor(i1.uvParams) / 2048.0;\nv_uvParams0 = vec4(params0.xy, params1.xy);\nv_uvParams1 = vec4(params0.zw, params1.zw);\n} else {\nv_uv0 = uvWithRotation * i1.uvSizeOffset.xy + i1.uvSizeOffset.zw;\n}\nv_uvMode = i1.uvMode;\n#if SAMPLE_FROM_RT\nv_uv0 = cc_cameraPos.w > 1.0 ? vec2(v_uv0.x, 1.0 - v_uv0.y) : v_uv0;\n#endif\n}\nlayout(location = 5) out vec4 v_color;\nvec4 vert () {\nSpriteVertexData i;\nCCSpriteInput(i);\nv_color = i.color;\nvec4 pos = i.position;\n#if USE_PIXEL_ALIGNMENT\npos = cc_matView * pos;\npos.xyz = floor(pos.xyz);\npos = cc_matProj * pos;\n#else\npos = cc_matViewProj * pos;\n#endif\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nstruct SpriteVertexData {\nvec4 position;\nvec4 color;\n};\nstruct SpriteFragmentData {\nvec2 uv;\n};\nvec4 CCSampleWithAlphaSeparated(sampler2D tex, vec2 uv) {\n#if CC_USE_EMBEDDED_ALPHA\nreturn vec4(texture(tex, uv).rgb, texture(tex, uv + vec2(0.0, 0.5)).r);\n#else\nreturn texture(tex, uv);\n#endif\n}\nlayout(location = 0) in vec2 v_uv0;\nlayout(location = 1) in float v_uvMode;\nlayout(location = 2) in vec4 v_uvSizeOffset;\nlayout(location = 3) in vec4 v_uvParams0;\nlayout(location = 4) in vec4 v_uvParams1;\nvec2 evalSlicedUV(vec2 uv) {\nvec4 p0 = mix(vec4(0.0), v_uvParams0, step(v_uvParams0.xyxy, uv.xyxy));\np0 = mix(       p0, v_uvParams1, step(v_uvParams1.xyxy, uv.xyxy));\nvec4 p1 = mix(vec4(1.0), v_uvParams1, step(uv.xyxy, v_uvParams1.xyxy));\np1 = mix(       p1, v_uvParams0, step(uv.xyxy, v_uvParams0.xyxy));\nvec2 k = (p1.zw - p0.zw) / (p1.xy - p0.xy);\nvec2 b = (p1.xy * p0.zw - p0.xy * p1.zw) / (p1.xy - p0.xy);\nreturn k * uv + b;\n}\nfloat evalFilledUV(vec2 uv, float mode) {\nfloat alpha = 1.0;\nif (mode >= 2.0) {\nfloat start = v_uvParams1.x;\nfloat range = v_uvParams1.y;\nvec2 dir = uv - v_uvParams1.zw;\nfloat angle = -atan(dir.y, dir.x) * 0.3183098861838;\nif (range < 0.0) {\nangle += mix(0.0, -2.0, step(start, angle));\nalpha = step(start + range, angle);\n} else {\nangle += mix(0.0, 2.0, step(angle, start));\nalpha = step(angle, start + range);\n}\n} else if (mode >= 1.0) {\nif (uv.y >= v_uvParams0.x && uv.y <= v_uvParams0.y) {\nalpha = 1.0;\n} else {\nalpha = 0.0;\n}\n} else {\nif (uv.x >= v_uvParams0.x && uv.x <= v_uvParams0.y) {\nalpha = 1.0;\n} else {\nalpha = 0.0;\n}\n}\nreturn alpha;\n}\nvoid CCSpriteInput(out SpriteFragmentData i) {\n#if USE_TEXTURE\nif(v_uvMode >= 3.0) {\ni.uv = v_uv0 * v_uvSizeOffset.xy + v_uvSizeOffset.zw;\n} else if (v_uvMode >= 2.0) {\ni.uv = fract(v_uv0) * v_uvSizeOffset.xy + v_uvSizeOffset.zw;\n} else if (v_uvMode >= 1.0) {\ni.uv = evalSlicedUV(v_uv0) * v_uvSizeOffset.xy + v_uvSizeOffset.zw;\n} else {\ni.uv = v_uv0;\n}\n#endif\n}\nvec4 CCSpriteSample(sampler2D tex, vec2 uv) {\nvec4 o = CCSampleWithAlphaSeparated(tex, uv);\nif (v_uvMode >= 3.0) {\no.a *= evalFilledUV(v_uv0, v_uvParams0.z);\n}\nreturn o;\n}\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nlayout(location = 5) in vec4 v_color;\n#if USE_TEXTURE\nlayout(set = 2, binding = 11) uniform sampler2D cc_spriteTexture;\n#endif\nvec4 frag () {\nSpriteFragmentData i;\nCCSpriteInput(i);\n#if USE_TEXTURE\nvec4 color = v_color * CCSpriteSample(cc_spriteTexture, i.uv);\n#else\nvec4 color = v_color;\n#endif\n#if IS_GRAY\ncolor.rgb = SRGBToLinear(color.rgb);\ncolor.rgb = vec3(dot(color.rgb, vec3(0.2126, 0.7152, 0.0722)));\ncolor.rgb = sqrt(color.rgb);\n#endif\nreturn color;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\n#if USE_LOCAL\nlayout(set = 2, binding = 0) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\n#endif\n#if SAMPLE_FROM_RT\n#endif\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec2 a_texCoord;\nlayout(location = 2) in vec4 a_color;\nlayout(location = 0) out vec4 color;\nlayout(location = 1) out vec2 uv0;\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\n#if USE_LOCAL\npos = cc_matWorld * pos;\n#endif\n#if USE_PIXEL_ALIGNMENT\npos = cc_matView * pos;\npos.xyz = floor(pos.xyz);\npos = cc_matProj * pos;\n#else\npos = cc_matViewProj * pos;\n#endif\nuv0 = a_texCoord;\n#if SAMPLE_FROM_RT\nuv0 = cc_cameraPos.w > 1.0 ? vec2(uv0.x, 1.0 - uv0.y) : uv0;\n#endif\ncolor = a_color;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec4 CCSampleWithAlphaSeparated(sampler2D tex, vec2 uv) {\n#if CC_USE_EMBEDDED_ALPHA\nreturn vec4(texture(tex, uv).rgb, texture(tex, uv + vec2(0.0, 0.5)).r);\n#else\nreturn texture(tex, uv);\n#endif\n}\n#if USE_ALPHA_TEST\nlayout(set = 1, binding = 0) uniform ALPHA_TEST_DATA {\nfloat alphaThreshold;\n};\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n#if USE_ALPHA_TEST\nif (color.a < alphaThreshold) discard;\n#endif\n}\nvoid ALPHA_TEST (in float alpha) {\n#if USE_ALPHA_TEST\nif (alpha < alphaThreshold) discard;\n#endif\n}\nlayout(location = 0) in vec4 color;\n#if USE_TEXTURE\nlayout(location = 1) in vec2 uv0;\nlayout(set = 2, binding = 11) uniform sampler2D cc_spriteTexture;\n#endif\nvec4 frag () {\nvec4 o = vec4(1, 1, 1, 1);\n#if USE_TEXTURE\no *= CCSampleWithAlphaSeparated(cc_spriteTexture, uv0);\n#if IS_GRAY\nfloat gray  = 0.2126 * o.r + 0.7152 * o.g + 0.0722 * o.b;\no.r = o.g = o.b = gray;\n#endif\n#endif\no *= color;\nALPHA_TEST(o);\nreturn o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"#extension GL_EXT_shader_explicit_arithmetic_types_int32: require\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec3 a_normal;\nlayout(location = 2) in vec2 a_texCoord;\nlayout(location = 3) in vec4 a_tangent;\n#if CC_USE_MORPH\nint getVertexId() {\nreturn gl_VertexIndex;\n}\nlayout(set = 2, binding = 4) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nlayout(set = 2, binding = 7) uniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nlayout(set = 2, binding = 8) uniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nlayout(set = 2, binding = 9) uniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nlayout(location = 4) in u32vec4 a_joints;\nlayout(location = 5) in vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nlayout(location = 7) in highp vec4 a_jointAnimInfo;\n#endif\nlayout(set = 2, binding = 3) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(set = 2, binding = 2) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nlayout(set = 2, binding = 6) uniform highp sampler2D cc_jointTexture;\n#else\nlayout(set = 2, binding = 3) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\n#if USE_INSTANCING\nlayout(location = 8) in vec4 a_matWorld0;\nlayout(location = 9) in vec4 a_matWorld1;\nlayout(location = 10) in vec4 a_matWorld2;\n#if USE_LIGHTMAP\nlayout(location = 11) in vec4 a_lightingMapUVParam;\n#endif\n#elif USE_BATCHING\nlayout(location = 12) in float a_dyn_batch_id;\nlayout(set = 2, binding = 0) uniform CCLocalBatched {\nhighp mat4 cc_matWorlds[10];\n};\n#else\nlayout(set = 2, binding = 0) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\n#endif\nlayout(set = 1, binding = 0) uniform Constants {\nvec4 tilingOffset;\nvec4 albedo;\nvec4 albedoScaleAndCutoff;\nvec4 pbrParams;\nvec4 emissive;\nvec4 emissiveScaleParam;\n};\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\n#if !CC_USE_ACCURATE_FOG\nlayout(location = 0) out float v_fog_factor;\n#endif\nvoid CC_TRANSFER_FOG(vec4 pos) {\n#if !CC_USE_ACCURATE_FOG\nCC_TRANSFER_FOG_BASE(pos, v_fog_factor);\n#endif\n}\nlayout(location = 1) out highp vec4 v_shadowPos;\nlayout(set = 0, binding = 2) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nmediump vec4 cc_shadowNFLSInfo;\nmediump vec4 cc_shadowWHPBInfo;\nmediump vec4 cc_shadowLPNNInfo;\nlowp vec4 cc_shadowColor;\nmediump vec4 cc_planarNDInfo;\n};\n#if CC_RECEIVE_SHADOW\nlayout(set = 0, binding = 3) uniform highp sampler2D cc_shadowMap;\nlayout(set = 0, binding = 5) uniform highp sampler2D cc_spotLightingMap;\n#endif\n#if USE_VERTEX_COLOR\nlayout(location = 13) in vec4 a_color;\nlayout(location = 2) out vec4 v_color;\n#endif\nlayout(location = 3) out vec3 v_position;\nlayout(location = 4) out vec3 v_normal;\nlayout(location = 5) out vec2 v_uv;\nlayout(location = 6) out vec2 v_uv1;\n#if USE_NORMAL_MAP\nlayout(location = 7) out vec3 v_tangent;\nlayout(location = 8) out vec3 v_bitangent;\n#endif\n#if HAS_SECOND_UV || USE_LIGHTMAP\nlayout(location = 14) in vec2 a_texCoord1;\n#endif\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nlayout(location = 9) out vec3 v_luv;\nvoid CCLightingMapCaclUV()\n{\n#if !USE_INSTANCING\nv_luv.xy = cc_lightingMapUVParam.xy + a_texCoord1 * cc_lightingMapUVParam.zw;\nv_luv.z = cc_lightingMapUVParam.z;\n#else\nv_luv.xy = a_lightingMapUVParam.xy + a_texCoord1 * a_lightingMapUVParam.zw;\nv_luv.z = a_lightingMapUVParam.z;\n#endif\n}\n#endif\nvoid main () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nmat4 matWorld, matWorldIT;\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\nmatWorldIT = matWorld;\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\nmatWorldIT = matWorld;\n#else\nmatWorld = cc_matWorld;\nmatWorldIT = cc_matWorldIT;\n#endif\nvec4 pos = matWorld * In.position;\nv_position = pos.xyz;\nv_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);\n#if USE_TWOSIDE\nvec3 viewDirect = normalize(cc_cameraPos.xyz - v_position);\nv_normal *= dot(v_normal, viewDirect) < 0.0 ? -1.0 : 1.0;\n#endif\n#if USE_NORMAL_MAP\nv_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);\nv_bitangent = cross(v_normal, v_tangent) * In.tangent.w;\n#endif\nv_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n#if SAMPLE_FROM_RT\nv_uv = cc_cameraPos.w > 1.0 ? vec2(v_uv.x, 1.0 - v_uv.y) : v_uv;\n#endif\n#if HAS_SECOND_UV\nv_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n#if SAMPLE_FROM_RT\nv_uv1 = cc_cameraPos.w > 1.0 ? vec2(v_uv1.x, 1.0 - v_uv1.y) : v_uv1;\n#endif\n#endif\n#if USE_VERTEX_COLOR\nv_color = a_color;\n#endif\nCC_TRANSFER_FOG(pos);\nv_shadowPos = cc_matLightViewProj * pos;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nCCLightingMapCaclUV();\n#endif\ngl_Position = cc_matProj * (cc_matView * matWorld) * In.position;\n}",frag:"\nprecision highp float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(set = 1, binding = 0) uniform Constants {\nvec4 tilingOffset;\nvec4 albedo;\nvec4 albedoScaleAndCutoff;\nvec4 pbrParams;\nvec4 emissive;\nvec4 emissiveScaleParam;\n};\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\nvoid CC_APPLY_FOG_BASE(inout vec4 color, float factor) {\ncolor = vec4(mix(cc_fogColor.rgb, color.rgb, factor), color.a);\n}\n#if !CC_USE_ACCURATE_FOG\nlayout(location = 0) in float v_fog_factor;\n#endif\nvoid CC_APPLY_FOG(inout vec4 color) {\n#if !CC_USE_ACCURATE_FOG\nCC_APPLY_FOG_BASE(color, v_fog_factor);\n#endif\n}\nvoid CC_APPLY_FOG(inout vec4 color, vec3 worldPos) {\n#if CC_USE_ACCURATE_FOG\nfloat factor;\nCC_TRANSFER_FOG_BASE(vec4(worldPos, 1.0), factor);\n#else\nfloat factor = v_fog_factor;\n#endif\nCC_APPLY_FOG_BASE(color, factor);\n}\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nlayout(set = 0, binding = 2) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nmediump vec4 cc_shadowNFLSInfo;\nmediump vec4 cc_shadowWHPBInfo;\nmediump vec4 cc_shadowLPNNInfo;\nlowp vec4 cc_shadowColor;\nmediump vec4 cc_planarNDInfo;\n};\nhighp float unpackHighpData (float mainPart, float modPart) {\nhighp float data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out float mainPart, out float modPart, highp float data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp float unpackHighpData (float mainPart, float modPart, const float modValue) {\nhighp float data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out float mainPart, out float modPart, highp float data, const float modValue) {\nhighp float divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec2 unpackHighpData (vec2 mainPart, vec2 modPart) {\nhighp vec2 data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out vec2 mainPart, out vec2 modPart, highp vec2 data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp vec2 unpackHighpData (vec2 mainPart, vec2 modPart, const float modValue) {\nhighp vec2 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out vec2 mainPart, out vec2 modPart, highp vec2 data, const float modValue) {\nhighp vec2 divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec3 unpackHighpData (vec3 mainPart, vec3 modPart) {\nhighp vec3 data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out vec3 mainPart, out vec3 modPart, highp vec3 data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp vec3 unpackHighpData (vec3 mainPart, vec3 modPart, const float modValue) {\nhighp vec3 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out vec3 mainPart, out vec3 modPart, highp vec3 data, const float modValue) {\nhighp vec3 divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec4 unpackHighpData (vec4 mainPart, vec4 modPart) {\nhighp vec4 data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out vec4 mainPart, out vec4 modPart, highp vec4 data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp vec4 unpackHighpData (vec4 mainPart, vec4 modPart, const float modValue) {\nhighp vec4 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out vec4 mainPart, out vec4 modPart, highp vec4 data, const float modValue) {\nhighp vec4 divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\nfloat dist = length(viewPos);\nreturn (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\nvec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\nreturn CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\nlayout(set = 0, binding = 3) uniform highp sampler2D cc_shadowMap;\nlayout(set = 0, binding = 5) uniform highp sampler2D cc_spotLightingMap;\nvec4 ApplyShadowDepthBias_FaceNormal(vec4 shadowPos, vec3 worldNormal)\n{\nvec4 newShadowPos = shadowPos;\nif(cc_shadowLPNNInfo.z > 0.0001)\n{\nvec4 viewNormal = cc_matLightView * vec4(worldNormal, 0.0);\nif(viewNormal.z < 0.1)\nnewShadowPos.xy += viewNormal.xy * cc_shadowProjInfo.xy * cc_shadowLPNNInfo.z * clamp(viewNormal.z, 0.001, 0.1);\n}\nreturn newShadowPos;\n}\nvec4 ApplyShadowDepthBias_Perspective(vec4 shadowPos, float viewspaceDepthBias)\n{\nvec3 viewSpacePos;\nviewSpacePos.xy = shadowPos.xy * cc_shadowProjInfo.zw;\nviewSpacePos.z = shadowPos.z * cc_shadowInvProjDepthInfo.x + shadowPos.w * cc_shadowInvProjDepthInfo.y;\nviewSpacePos.xyz += cc_shadowProjDepthInfo.z * normalize(viewSpacePos.xyz) * viewspaceDepthBias;\nvec4 clipSpacePos;\nclipSpacePos.xy = viewSpacePos.xy * cc_shadowProjInfo.xy;\nclipSpacePos.zw = viewSpacePos.z * cc_shadowProjDepthInfo.xz + vec2(cc_shadowProjDepthInfo.y, 0.0);\nif (cc_shadowNFLSInfo.z > 0.000001) {\nclipSpacePos.z = CCGetLinearDepthFromViewSpace(viewSpacePos.xyz);\nclipSpacePos.z = (clipSpacePos.z * 2.0 - 1.0) * clipSpacePos.w;\n}\nreturn clipSpacePos;\n}\nvec4 ApplyShadowDepthBias_Orthographic(vec4 shadowPos, float viewspaceDepthBias)\n{\nfloat coeffA = cc_shadowProjDepthInfo.x;\nfloat coeffB = cc_shadowProjDepthInfo.y;\nfloat viewSpacePos_z = (shadowPos.z - coeffB) / coeffA;\nviewSpacePos_z += viewspaceDepthBias;\nvec4 result = shadowPos;\nresult.z = viewSpacePos_z * coeffA + coeffB;\nreturn result;\n}\nfloat CCGetShadowFactorHard (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture(cc_shadowMap, clipPos.xy).x;\n}\nshadow = step(clipPos.z, closestDepth);\nreturn shadow;\n}\nfloat CCGetShadowFactorSoft (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * mapSize.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetShadowFactorSoft2X (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\nfloat CCGetSpotLightShadowFactorHard (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nfloat depth = clipPos.z;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture(cc_spotLightingMap, clipPos.xy).x;\n}\nshadow = step(depth, closestDepth);\nreturn shadow;\n}\nfloat CCGetSpotLightShadowFactorSoft (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nfloat bias = cc_shadowWHPBInfo.w;\nvec2 oneTap = 1.0 / cc_shadowWHPBInfo.xy;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * cc_shadowWHPBInfo.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * cc_shadowWHPBInfo.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetSpotLightShadowFactorSoft2X (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nfloat bias = cc_shadowWHPBInfo.w;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\n#endif\n#if CC_USE_IBL\nlayout(set = 0, binding = 4) uniform samplerCube cc_environment;\nvec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\nreturn textureLod(tex, coord, lod);\n}\nvec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\nreturn textureLod(tex, coord, lod);\n}\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n}\n#if CC_USE_DIFFUSEMAP\nlayout(set = 0, binding = 6) uniform samplerCube cc_diffuseMap;\n#endif\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\nvec3 NxH = cross(N, H);\nfloat OneMinusNoHSqr = dot(NxH, NxH);\nfloat a = roughness * roughness;\nfloat n = NoH * a;\nfloat p = a / (OneMinusNoHSqr + n * n);\nreturn p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\nreturn (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\nconst vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\nconst vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\nvec4 r = roughness * c0 + c1;\nfloat a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\nvec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\nAB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\nreturn specular * AB.x + AB.y;\n}\n#if USE_REFLECTION_DENOISE\nvec3 GetEnvReflectionWithMipFiltering(vec3 R, float roughness, float mipCount, float denoiseIntensity) {\n#if CC_USE_IBL\nfloat mip = roughness * mipCount;\nfloat delta = (dot(dFdx(R), dFdy(R))) * 1000.0;\nfloat mipBias = mix(0.0, 5.0, clamp(delta, 0.0, 1.0));\nvec4 biased = fragTextureLod(cc_environment, R, mip + mipBias);\nvec4 filtered = texture(cc_environment, R);\n#if CC_USE_IBL == 2\nbiased.rgb = unpackRGBE(biased);\nfiltered.rgb = unpackRGBE(filtered);\n#else\nbiased.rgb = SRGBToLinear(biased.rgb);\nfiltered.rgb = SRGBToLinear(filtered.rgb);\n#endif\nreturn mix(biased.rgb, filtered.rgb, denoiseIntensity);\n#else\nreturn vec3(0.0, 0.0, 0.0);\n#endif\n}\n#endif\nstruct StandardSurface {\nvec4 albedo;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nvec3 position, position_fract_part;\n#else\nvec3 position;\n#endif\nvec3 normal;\nvec3 emissive;\nvec3 lightmap;\nfloat lightmap_test;\nfloat roughness;\nfloat metallic;\nfloat occlusion;\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 L = normalize(-cc_mainLitDir.xyz);\nvec3 H = normalize(L + V);\nfloat NH = max(dot(N, H), 0.0);\nfloat NL = max(dot(N, L), 0.0);\nvec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\nvec3 diffuseContrib = diffuse;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nif (s.lightmap_test > 0.0001) {\nfinalColor = s.lightmap.rgb;\n}\n#else\ndiffuseContrib /= 3.14159265359;\n#endif\nvec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\nvec3 dirlightContrib = (diffuseContrib + specularContrib);\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (NL > 0.0 && cc_mainLitDir.w > 0.0) {\n{\nvec4 pos = ApplyShadowDepthBias_FaceNormal(shadowPos, N);\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetShadowFactorSoft2X(pos);\nelse if (pcf > 0.9) shadow = CCGetShadowFactorSoft(pos);\nelse shadow = CCGetShadowFactorHard(pos);\nshadow = mix(shadow, 1.0, cc_shadowNFLSInfo.w);\n}\n}\n#endif\ndirlightContrib *= shadow;\nfinalColor *= dirlightContrib;\nfloat fAmb = 0.5 - N.y * 0.5;\nvec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb);\n#if CC_USE_IBL\n#if CC_USE_DIFFUSEMAP\nvec4 diffuseMap = texture(cc_diffuseMap, N);\n#if CC_USE_DIFFUSEMAP == 2\nambDiff = unpackRGBE(diffuseMap);\n#else\nambDiff = SRGBToLinear(diffuseMap.rgb);\n#endif\n#endif\nvec3 R = normalize(reflect(-V, N));\n#if USE_REFLECTION_DENOISE\nvec3 env = GetEnvReflectionWithMipFiltering(R, s.roughness, cc_ambientGround.w, 0.6);\n#else\nvec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n#if CC_USE_IBL == 2\nvec3 env = unpackRGBE(envmap);\n#else\nvec3 env = SRGBToLinear(envmap.rgb);\n#endif\n#endif\nfinalColor += env * cc_ambientSky.w * specular * s.occlusion;\n#endif\nfinalColor += ambDiff.rgb * cc_ambientSky.w * diffuse * s.occlusion;\nfinalColor += s.emissive;\nreturn vec4(finalColor, s.albedo.a);\n}\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = ACESToneMap(color.rgb);\n#endif\ncolor.rgb = sqrt(color.rgb);\nreturn color;\n}\nlayout(location = 1) in highp vec4 v_shadowPos;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nlayout(location = 9) in vec3 v_luv;\nlayout(set = 2, binding = 10) uniform sampler2D cc_lightingMap;\nvec3 UnpackLightingmap(vec4 color) {\nvec3 c;\nfloat e = 1.0 + color.a * (8.0 - 1.0);\nc.r = color.r * e;\nc.g = color.g * e;\nc.b = color.b * e;\nreturn c;\n}\n#endif\nlayout(location = 3) in vec3 v_position;\nlayout(location = 5) in vec2 v_uv;\nlayout(location = 6) in vec2 v_uv1;\nlayout(location = 4) in vec3 v_normal;\n#if USE_VERTEX_COLOR\nlayout(location = 2) in vec4 v_color;\n#endif\n#if USE_ALBEDO_MAP\nlayout(set = 1, binding = 1) uniform sampler2D albedoMap;\n#endif\n#if USE_NORMAL_MAP\nlayout(location = 7) in vec3 v_tangent;\nlayout(location = 8) in vec3 v_bitangent;\nlayout(set = 1, binding = 2) uniform sampler2D normalMap;\n#endif\n#if USE_PBR_MAP\nlayout(set = 1, binding = 3) uniform sampler2D pbrMap;\n#endif\n#if USE_METALLIC_ROUGHNESS_MAP\nlayout(set = 1, binding = 4) uniform sampler2D metallicRoughnessMap;\n#endif\n#if USE_OCCLUSION_MAP\nlayout(set = 1, binding = 5) uniform sampler2D occlusionMap;\n#endif\n#if USE_EMISSIVE_MAP\nlayout(set = 1, binding = 6) uniform sampler2D emissiveMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvoid surf (out StandardSurface s) {\nvec4 baseColor = albedo;\n#if USE_VERTEX_COLOR\nbaseColor.rgb *= SRGBToLinear(v_color.rgb);\nbaseColor.a *= v_color.a;\n#endif\n#if USE_ALBEDO_MAP\nvec4 texColor = texture(albedoMap, ALBEDO_UV);\ntexColor.rgb = SRGBToLinear(texColor.rgb);\nbaseColor *= texColor;\n#endif\ns.albedo = baseColor;\ns.albedo.rgb *= albedoScaleAndCutoff.xyz;\n#if USE_ALPHA_TEST\nif (s.albedo.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n#endif\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nvec4 lightColor = texture(cc_lightingMap, v_luv.xy);\ns.lightmap = UnpackLightingmap(lightColor);\ns.lightmap_test = v_luv.z;\n#endif\ns.normal = v_normal;\n#if USE_NORMAL_MAP\nvec3 nmmp = texture(normalMap, NORMAL_UV).xyz - vec3(0.5);\ns.normal =\n(nmmp.x * emissiveScaleParam.w) * normalize(v_tangent) +\n(nmmp.y * emissiveScaleParam.w) * normalize(v_bitangent) +\nnmmp.z * normalize(s.normal);\n#endif\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\npackHighpData(s.position, s.position_fract_part, v_position);\n#else\ns.position = v_position;\n#endif\nvec4 pbr = pbrParams;\n#if USE_PBR_MAP\nvec4 res = texture(pbrMap, PBR_UV);\npbr.x *= res.r;\npbr.y *= res.g;\npbr.z *= res.b;\npbr.w *= res.a;\n#endif\n#if USE_METALLIC_ROUGHNESS_MAP\nvec4 metallicRoughness = texture(metallicRoughnessMap, PBR_UV);\npbr.z *= metallicRoughness.b;\npbr.y *= metallicRoughness.g;\n#endif\n#if USE_OCCLUSION_MAP\npbr.x *= texture(occlusionMap, PBR_UV).r;\n#endif\ns.occlusion = pbr.x;\ns.roughness = pbr.y;\ns.metallic = pbr.z;\ns.emissive = emissive.rgb * emissiveScaleParam.xyz;\n#if USE_EMISSIVE_MAP\ns.emissive *= SRGBToLinear(texture(emissiveMap, EMISSIVE_UV).rgb);\n#endif\n}\n#if CC_FORWARD_ADD\n#if CC_PIPELINE_TYPE == 0\n# define LIGHTS_PER_PASS 1\n#else\n# define LIGHTS_PER_PASS 10\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nlayout(set = 2, binding = 1) uniform CCForwardLight {\nhighp vec4 cc_lightPos[LIGHTS_PER_PASS];\nvec4 cc_lightColor[LIGHTS_PER_PASS];\nvec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\nvec4 cc_lightDir[LIGHTS_PER_PASS];\n};\n#endif\nfloat SmoothDistAtt (float distSqr, float invSqrAttRadius) {\nfloat factor = distSqr * invSqrAttRadius;\nfloat smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\nreturn smoothFactor * smoothFactor;\n}\nfloat GetDistAtt (float distSqr, float invSqrAttRadius) {\nfloat attenuation = 1.0 / max(distSqr, 0.01*0.01);\nattenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\nreturn attenuation;\n}\nfloat GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\nfloat cd = dot(litDir, L);\nfloat attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\nreturn (attenuation * attenuation);\n}\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nvec4 CCStandardShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / 3.14159265359;\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nint numLights = CC_PIPELINE_TYPE == 0 ? LIGHTS_PER_PASS : int(cc_lightDir[0].w);\nfor (int i = 0; i < LIGHTS_PER_PASS; i++) {\nif (i >= numLights) break;\nvec3 SLU = cc_lightPos[i].xyz - position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.0);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = cc_lightSizeRangeAngle[i].x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (cc_lightPos[i].w > 0.0) {\nfloat cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\nfloat cosOuter = cc_lightSizeRangeAngle[i].z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = cc_lightColor[i].rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (cc_lightPos[i].w > 0.0 && cc_lightSizeRangeAngle[i].w > 0.0) {\n{\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetSpotLightShadowFactorSoft2X(shadowPos, position);\nelse if (pcf > 0.9) shadow = CCGetSpotLightShadowFactorSoft(shadowPos, position);\nelse shadow = CCGetSpotLightShadowFactorHard(shadowPos, position);\n}\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nlayout(set = 1, binding = 7) readonly buffer b_ccLightsBuffer { vec4 b_ccLights[]; };\nlayout(set = 1, binding = 8) readonly buffer b_clusterLightIndicesBuffer { uint b_clusterLightIndices[]; };\nlayout(set = 1, binding = 9) readonly buffer b_clusterLightGridBuffer { uvec4 b_clusterLightGrid[]; };\nstruct CCLight\n{\nvec4 cc_lightPos;\nvec4 cc_lightColor;\nvec4 cc_lightSizeRangeAngle;\nvec4 cc_lightDir;\n};\nstruct Cluster\n{\nvec3 minBounds;\nvec3 maxBounds;\n};\nstruct LightGrid\n{\nuint offset;\nuint ccLights;\n};\nCCLight getCCLight(uint i)\n{\nCCLight light;\nlight.cc_lightPos = b_ccLights[4u * i + 0u];\nlight.cc_lightColor = b_ccLights[4u * i + 1u];\nlight.cc_lightSizeRangeAngle = b_ccLights[4u * i + 2u];\nlight.cc_lightDir = b_ccLights[4u * i + 3u];\nreturn light;\n}\nLightGrid getLightGrid(uint cluster)\n{\nuvec4 gridvec = b_clusterLightGrid[cluster];\nLightGrid grid;\ngrid.offset = gridvec.x;\ngrid.ccLights = gridvec.y;\nreturn grid;\n}\nuint getGridLightIndex(uint start, uint offset)\n{\nreturn b_clusterLightIndices[start + offset];\n}\nuint getClusterZIndex(vec4 worldPos)\n{\nfloat scale = float(24) / log(cc_nearFar.y / cc_nearFar.x);\nfloat bias = -(float(24) * log(cc_nearFar.x) / log(cc_nearFar.y / cc_nearFar.x));\nfloat eyeDepth = -(cc_matView * worldPos).z;\nuint zIndex = uint(max(log(eyeDepth) * scale + bias, 0.0));\nreturn zIndex;\n}\nuint getClusterIndex(vec4 fragCoord, vec4 worldPos)\n{\nuint zIndex = getClusterZIndex(worldPos);\nfloat clusterSizeX = ceil(cc_viewPort.z / float(16));\nfloat clusterSizeY = ceil(cc_viewPort.w / float(8));\nuvec3 indices = uvec3(uvec2(fragCoord.xy / vec2(clusterSizeX, clusterSizeY)), zIndex);\nuint cluster = (16u * 8u) * indices.z + 16u * indices.y + indices.x;\nreturn cluster;\n}\nvec4 CCClusterShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / 3.14159265359;\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.001);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nuint cluster = getClusterIndex(gl_FragCoord, vec4(position, 1.0));\nLightGrid grid = getLightGrid(cluster);\nuint numLights = grid.ccLights;\nfor (uint i = 0u; i < 100u; i++) {\nif (i >= numLights) break;\nuint lightIndex = getGridLightIndex(grid.offset, i);\nCCLight light = getCCLight(lightIndex);\nvec3 SLU = light.cc_lightPos.xyz - position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.001);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = light.cc_lightSizeRangeAngle.x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(light.cc_lightSizeRangeAngle.y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (light.cc_lightPos.w > 0.0) {\nfloat cosInner = max(dot(-light.cc_lightDir.xyz, SL), 0.01);\nfloat cosOuter = light.cc_lightSizeRangeAngle.z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -light.cc_lightDir.xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = light.cc_lightColor.rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (light.cc_lightPos.w > 0.0) {\n{\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetSpotLightShadowFactorSoft2X(shadowPos, position);\nelse if (pcf > 0.9) shadow = CCGetSpotLightShadowFactorSoft(shadowPos, position);\nelse shadow = CCGetSpotLightShadowFactorHard(shadowPos, position);\n}\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * light.cc_lightColor.w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\nlayout(location = 0) out vec4 fragColorX;\nvoid main () {\nStandardSurface s; surf(s);\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nvec4 color = CCClusterShadingAdditive(s, v_shadowPos);\n#else\nvec4 color = CCStandardShadingAdditive(s, v_shadowPos);\n#endif\nCC_APPLY_FOG(color, s.position.xyz);\nfragColorX = CCFragOutput(color);\n}\n#elif (CC_PIPELINE_TYPE == 0 || CC_FORCE_FORWARD_SHADING)\nlayout(location = 0) out vec4 fragColorX;\nvoid main () {\nStandardSurface s; surf(s);\nvec4 color = CCStandardShadingBase(s, v_shadowPos);\nCC_APPLY_FOG(color, s.position.xyz);\nfragColorX = CCFragOutput(color);\n}\n#elif CC_PIPELINE_TYPE == 1\nvec2 signNotZero(vec2 v) {\nreturn vec2((v.x >= 0.0) ? +1.0 : -1.0, (v.y >= 0.0) ? +1.0 : -1.0);\n}\nvec2 float32x3_to_oct(in vec3 v) {\nvec2 p = v.xy * (1.0 / (abs(v.x) + abs(v.y) + abs(v.z)));\nreturn (v.z <= 0.0) ? ((1.0 - abs(p.yx)) * signNotZero(p)) : p;\n}\nlayout(location = 0) out vec4 fragColor0;\nlayout(location = 1) out vec4 fragColor1;\nlayout(location = 2) out vec4 fragColor2;\nvoid main () {\nStandardSurface s; surf(s);\nfragColor0 = s.albedo;\nfragColor1 = vec4(float32x3_to_oct(s.normal), s.roughness, s.metallic);\nfragColor2 = vec4(s.emissive, s.occlusion);\n}\n#endif"},{vert:"#extension GL_EXT_shader_explicit_arithmetic_types_int32: require\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec3 a_normal;\nlayout(location = 2) in vec2 a_texCoord;\nlayout(location = 3) in vec4 a_tangent;\n#if CC_USE_MORPH\nint getVertexId() {\nreturn gl_VertexIndex;\n}\nlayout(set = 2, binding = 4) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nlayout(set = 2, binding = 7) uniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nlayout(set = 2, binding = 8) uniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nlayout(set = 2, binding = 9) uniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nlayout(location = 4) in u32vec4 a_joints;\nlayout(location = 5) in vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nlayout(location = 7) in highp vec4 a_jointAnimInfo;\n#endif\nlayout(set = 2, binding = 3) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(set = 2, binding = 2) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nlayout(set = 2, binding = 6) uniform highp sampler2D cc_jointTexture;\n#else\nlayout(set = 2, binding = 3) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\n#if USE_INSTANCING\nlayout(location = 8) in vec4 a_matWorld0;\nlayout(location = 9) in vec4 a_matWorld1;\nlayout(location = 10) in vec4 a_matWorld2;\n#if USE_LIGHTMAP\nlayout(location = 11) in vec4 a_lightingMapUVParam;\n#endif\n#elif USE_BATCHING\nlayout(location = 12) in float a_dyn_batch_id;\nlayout(set = 2, binding = 0) uniform CCLocalBatched {\nhighp mat4 cc_matWorlds[10];\n};\n#else\nlayout(set = 2, binding = 0) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\n#endif\nlayout(set = 1, binding = 0) uniform Constants {\nvec4 tilingOffset;\nvec4 albedo;\nvec4 albedoScaleAndCutoff;\nvec4 pbrParams;\nvec4 emissive;\nvec4 emissiveScaleParam;\n};\nlayout(set = 0, binding = 2) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nmediump vec4 cc_shadowNFLSInfo;\nmediump vec4 cc_shadowWHPBInfo;\nmediump vec4 cc_shadowLPNNInfo;\nlowp vec4 cc_shadowColor;\nmediump vec4 cc_planarNDInfo;\n};\n#if HAS_SECOND_UV || USE_LIGHTMAP\nlayout(location = 13) in vec2 a_texCoord1;\n#endif\nlayout(location = 0) out vec2 v_uv;\nlayout(location = 1) out vec2 v_uv1;\nlayout(location = 2) out vec4 v_worldPos;\nlayout(location = 3) out float v_clip_depth;\nvec4 vert () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nmat4 matWorld, matWorldIT;\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\nmatWorldIT = matWorld;\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\nmatWorldIT = matWorld;\n#else\nmatWorld = cc_matWorld;\nmatWorldIT = cc_matWorldIT;\n#endif\nv_worldPos = matWorld * In.position;\nvec4 clipPos = cc_matLightViewProj * v_worldPos;\nv_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n#if HAS_SECOND_UV\nv_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n#endif\nv_clip_depth = clipPos.z / clipPos.w * 0.5 + 0.5;\nreturn clipPos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nlayout(set = 1, binding = 0) uniform Constants {\nvec4 tilingOffset;\nvec4 albedo;\nvec4 albedoScaleAndCutoff;\nvec4 pbrParams;\nvec4 emissive;\nvec4 emissiveScaleParam;\n};\nvec4 packDepthToRGBA (float depth) {\nvec4 ret = vec4(1.0, 255.0, 65025.0, 16581375.0) * depth;\nret = fract(ret);\nret -= vec4(ret.yzw, 0.0) / 255.0;\nreturn ret;\n}\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(set = 0, binding = 2) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nmediump vec4 cc_shadowNFLSInfo;\nmediump vec4 cc_shadowWHPBInfo;\nmediump vec4 cc_shadowLPNNInfo;\nlowp vec4 cc_shadowColor;\nmediump vec4 cc_planarNDInfo;\n};\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\nfloat dist = length(viewPos);\nreturn (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\nvec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\nreturn CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\nlayout(set = 0, binding = 3) uniform highp sampler2D cc_shadowMap;\nlayout(set = 0, binding = 5) uniform highp sampler2D cc_spotLightingMap;\n#endif\nlayout(location = 0) in vec2 v_uv;\nlayout(location = 1) in vec2 v_uv1;\nlayout(location = 2) in vec4 v_worldPos;\nlayout(location = 3) in float v_clip_depth;\n#if USE_ALBEDO_MAP\nlayout(set = 1, binding = 1) uniform sampler2D albedoMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvec4 frag () {\nvec4 baseColor = albedo;\n#if USE_ALBEDO_MAP\nbaseColor *= texture(albedoMap, ALBEDO_UV);\n#endif\n#if USE_ALPHA_TEST\nif (baseColor.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n#endif\nif(cc_shadowLPNNInfo.x > 0.000001 && cc_shadowLPNNInfo.x < 1.999999) {\nif (cc_shadowNFLSInfo.z > 0.000001) {\nreturn vec4(CCGetLinearDepth(v_worldPos.xyz), 1.0, 1.0, 1.0);\n}\n}\nif (cc_shadowLPNNInfo.y > 0.000001) {\nreturn packDepthToRGBA(v_clip_depth);\n}\nreturn vec4(v_clip_depth, 1.0, 1.0, 1.0);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(set = 2, binding = 0) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\n#if !CC_USE_ACCURATE_FOG\nlayout(location = 0) out float v_fog_factor;\n#endif\nvoid CC_TRANSFER_FOG(vec4 pos) {\n#if !CC_USE_ACCURATE_FOG\nCC_TRANSFER_FOG_BASE(pos, v_fog_factor);\n#endif\n}\nlayout(location = 1) out highp vec4 v_shadowPos;\nlayout(set = 0, binding = 2) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nmediump vec4 cc_shadowNFLSInfo;\nmediump vec4 cc_shadowWHPBInfo;\nmediump vec4 cc_shadowLPNNInfo;\nlowp vec4 cc_shadowColor;\nmediump vec4 cc_planarNDInfo;\n};\n#if CC_RECEIVE_SHADOW\nlayout(set = 0, binding = 3) uniform highp sampler2D cc_shadowMap;\nlayout(set = 0, binding = 5) uniform highp sampler2D cc_spotLightingMap;\n#endif\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec3 a_normal;\nlayout(location = 2) in vec2 a_texCoord;\nlayout(location = 2) out highp vec3 v_position;\nlayout(location = 3) out mediump vec3 v_normal;\n#if USE_NORMALMAP\nlayout(location = 4) out mediump vec3 v_tangent;\nlayout(location = 5) out mediump vec3 v_binormal;\n#endif\nlayout(location = 6) out mediump vec2 uvw;\nlayout(location = 7) out mediump vec2 uv0;\nlayout(location = 8) out mediump vec2 uv1;\nlayout(location = 9) out mediump vec2 uv2;\nlayout(location = 10) out mediump vec2 uv3;\nlayout(location = 11) out mediump vec3 luv;\nlayout(location = 12) out mediump vec3 diffuse;\nlayout(set = 1, binding = 0) uniform TexCoords {\nvec4 UVScale;\nvec4 lightMapUVParam;\n};\nvoid main () {\nvec3 worldPos;\nworldPos.x = cc_matWorld[3][0] + a_position.x;\nworldPos.y = cc_matWorld[3][1] + a_position.y;\nworldPos.z = cc_matWorld[3][2] + a_position.z;\nvec4 pos = vec4(worldPos, 1.0);\npos = cc_matViewProj * pos;\nuvw = a_texCoord;\nuv0 = a_position.xz * UVScale.x;\nuv1 = a_position.xz * UVScale.y;\nuv2 = a_position.xz * UVScale.z;\nuv3 = a_position.xz * UVScale.w;\n#if USE_LIGHTMAP\nluv.xy = lightMapUVParam.xy + a_texCoord * lightMapUVParam.zw;\nluv.z = lightMapUVParam.z;\n#endif\nv_position = worldPos;\nv_normal = a_normal;\nCC_TRANSFER_FOG(vec4(worldPos, 1.0));\n#if USE_NORMALMAP\nv_tangent = vec3(1.0, 0.0, 0.0);\nv_binormal = vec3(0.0, 0.0, 1.0);\nv_binormal = cross(v_tangent, a_normal);\nv_tangent = cross(a_normal, v_binormal);\n#endif\nv_shadowPos = cc_matLightViewProj * vec4(worldPos, 1.0);\ngl_Position = pos;\n}",frag:"\nprecision highp float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nlayout(set = 0, binding = 2) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nmediump vec4 cc_shadowNFLSInfo;\nmediump vec4 cc_shadowWHPBInfo;\nmediump vec4 cc_shadowLPNNInfo;\nlowp vec4 cc_shadowColor;\nmediump vec4 cc_planarNDInfo;\n};\nhighp float unpackHighpData (float mainPart, float modPart) {\nhighp float data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out float mainPart, out float modPart, highp float data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp float unpackHighpData (float mainPart, float modPart, const float modValue) {\nhighp float data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out float mainPart, out float modPart, highp float data, const float modValue) {\nhighp float divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec2 unpackHighpData (vec2 mainPart, vec2 modPart) {\nhighp vec2 data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out vec2 mainPart, out vec2 modPart, highp vec2 data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp vec2 unpackHighpData (vec2 mainPart, vec2 modPart, const float modValue) {\nhighp vec2 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out vec2 mainPart, out vec2 modPart, highp vec2 data, const float modValue) {\nhighp vec2 divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec3 unpackHighpData (vec3 mainPart, vec3 modPart) {\nhighp vec3 data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out vec3 mainPart, out vec3 modPart, highp vec3 data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp vec3 unpackHighpData (vec3 mainPart, vec3 modPart, const float modValue) {\nhighp vec3 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out vec3 mainPart, out vec3 modPart, highp vec3 data, const float modValue) {\nhighp vec3 divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec4 unpackHighpData (vec4 mainPart, vec4 modPart) {\nhighp vec4 data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out vec4 mainPart, out vec4 modPart, highp vec4 data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp vec4 unpackHighpData (vec4 mainPart, vec4 modPart, const float modValue) {\nhighp vec4 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out vec4 mainPart, out vec4 modPart, highp vec4 data, const float modValue) {\nhighp vec4 divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\nfloat dist = length(viewPos);\nreturn (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\nvec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\nreturn CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\nlayout(set = 0, binding = 3) uniform highp sampler2D cc_shadowMap;\nlayout(set = 0, binding = 5) uniform highp sampler2D cc_spotLightingMap;\nvec4 ApplyShadowDepthBias_FaceNormal(vec4 shadowPos, vec3 worldNormal)\n{\nvec4 newShadowPos = shadowPos;\nif(cc_shadowLPNNInfo.z > 0.0001)\n{\nvec4 viewNormal = cc_matLightView * vec4(worldNormal, 0.0);\nif(viewNormal.z < 0.1)\nnewShadowPos.xy += viewNormal.xy * cc_shadowProjInfo.xy * cc_shadowLPNNInfo.z * clamp(viewNormal.z, 0.001, 0.1);\n}\nreturn newShadowPos;\n}\nvec4 ApplyShadowDepthBias_Perspective(vec4 shadowPos, float viewspaceDepthBias)\n{\nvec3 viewSpacePos;\nviewSpacePos.xy = shadowPos.xy * cc_shadowProjInfo.zw;\nviewSpacePos.z = shadowPos.z * cc_shadowInvProjDepthInfo.x + shadowPos.w * cc_shadowInvProjDepthInfo.y;\nviewSpacePos.xyz += cc_shadowProjDepthInfo.z * normalize(viewSpacePos.xyz) * viewspaceDepthBias;\nvec4 clipSpacePos;\nclipSpacePos.xy = viewSpacePos.xy * cc_shadowProjInfo.xy;\nclipSpacePos.zw = viewSpacePos.z * cc_shadowProjDepthInfo.xz + vec2(cc_shadowProjDepthInfo.y, 0.0);\nif (cc_shadowNFLSInfo.z > 0.000001) {\nclipSpacePos.z = CCGetLinearDepthFromViewSpace(viewSpacePos.xyz);\nclipSpacePos.z = (clipSpacePos.z * 2.0 - 1.0) * clipSpacePos.w;\n}\nreturn clipSpacePos;\n}\nvec4 ApplyShadowDepthBias_Orthographic(vec4 shadowPos, float viewspaceDepthBias)\n{\nfloat coeffA = cc_shadowProjDepthInfo.x;\nfloat coeffB = cc_shadowProjDepthInfo.y;\nfloat viewSpacePos_z = (shadowPos.z - coeffB) / coeffA;\nviewSpacePos_z += viewspaceDepthBias;\nvec4 result = shadowPos;\nresult.z = viewSpacePos_z * coeffA + coeffB;\nreturn result;\n}\nfloat CCGetShadowFactorHard (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture(cc_shadowMap, clipPos.xy).x;\n}\nshadow = step(clipPos.z, closestDepth);\nreturn shadow;\n}\nfloat CCGetShadowFactorSoft (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * mapSize.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetShadowFactorSoft2X (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\nfloat CCGetSpotLightShadowFactorHard (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nfloat depth = clipPos.z;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture(cc_spotLightingMap, clipPos.xy).x;\n}\nshadow = step(depth, closestDepth);\nreturn shadow;\n}\nfloat CCGetSpotLightShadowFactorSoft (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nfloat bias = cc_shadowWHPBInfo.w;\nvec2 oneTap = 1.0 / cc_shadowWHPBInfo.xy;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * cc_shadowWHPBInfo.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * cc_shadowWHPBInfo.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetSpotLightShadowFactorSoft2X (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nfloat bias = cc_shadowWHPBInfo.w;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\n#endif\n#if CC_USE_IBL\nlayout(set = 0, binding = 4) uniform samplerCube cc_environment;\nvec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\nreturn textureLod(tex, coord, lod);\n}\nvec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\nreturn textureLod(tex, coord, lod);\n}\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n}\n#if CC_USE_DIFFUSEMAP\nlayout(set = 0, binding = 6) uniform samplerCube cc_diffuseMap;\n#endif\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\nvec3 NxH = cross(N, H);\nfloat OneMinusNoHSqr = dot(NxH, NxH);\nfloat a = roughness * roughness;\nfloat n = NoH * a;\nfloat p = a / (OneMinusNoHSqr + n * n);\nreturn p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\nreturn (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\nconst vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\nconst vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\nvec4 r = roughness * c0 + c1;\nfloat a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\nvec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\nAB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\nreturn specular * AB.x + AB.y;\n}\n#if USE_REFLECTION_DENOISE\nvec3 GetEnvReflectionWithMipFiltering(vec3 R, float roughness, float mipCount, float denoiseIntensity) {\n#if CC_USE_IBL\nfloat mip = roughness * mipCount;\nfloat delta = (dot(dFdx(R), dFdy(R))) * 1000.0;\nfloat mipBias = mix(0.0, 5.0, clamp(delta, 0.0, 1.0));\nvec4 biased = fragTextureLod(cc_environment, R, mip + mipBias);\nvec4 filtered = texture(cc_environment, R);\n#if CC_USE_IBL == 2\nbiased.rgb = unpackRGBE(biased);\nfiltered.rgb = unpackRGBE(filtered);\n#else\nbiased.rgb = SRGBToLinear(biased.rgb);\nfiltered.rgb = SRGBToLinear(filtered.rgb);\n#endif\nreturn mix(biased.rgb, filtered.rgb, denoiseIntensity);\n#else\nreturn vec3(0.0, 0.0, 0.0);\n#endif\n}\n#endif\nstruct StandardSurface {\nvec4 albedo;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nvec3 position, position_fract_part;\n#else\nvec3 position;\n#endif\nvec3 normal;\nvec3 emissive;\nvec3 lightmap;\nfloat lightmap_test;\nfloat roughness;\nfloat metallic;\nfloat occlusion;\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 L = normalize(-cc_mainLitDir.xyz);\nvec3 H = normalize(L + V);\nfloat NH = max(dot(N, H), 0.0);\nfloat NL = max(dot(N, L), 0.0);\nvec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\nvec3 diffuseContrib = diffuse;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nif (s.lightmap_test > 0.0001) {\nfinalColor = s.lightmap.rgb;\n}\n#else\ndiffuseContrib /= 3.14159265359;\n#endif\nvec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\nvec3 dirlightContrib = (diffuseContrib + specularContrib);\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (NL > 0.0 && cc_mainLitDir.w > 0.0) {\n{\nvec4 pos = ApplyShadowDepthBias_FaceNormal(shadowPos, N);\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetShadowFactorSoft2X(pos);\nelse if (pcf > 0.9) shadow = CCGetShadowFactorSoft(pos);\nelse shadow = CCGetShadowFactorHard(pos);\nshadow = mix(shadow, 1.0, cc_shadowNFLSInfo.w);\n}\n}\n#endif\ndirlightContrib *= shadow;\nfinalColor *= dirlightContrib;\nfloat fAmb = 0.5 - N.y * 0.5;\nvec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb);\n#if CC_USE_IBL\n#if CC_USE_DIFFUSEMAP\nvec4 diffuseMap = texture(cc_diffuseMap, N);\n#if CC_USE_DIFFUSEMAP == 2\nambDiff = unpackRGBE(diffuseMap);\n#else\nambDiff = SRGBToLinear(diffuseMap.rgb);\n#endif\n#endif\nvec3 R = normalize(reflect(-V, N));\n#if USE_REFLECTION_DENOISE\nvec3 env = GetEnvReflectionWithMipFiltering(R, s.roughness, cc_ambientGround.w, 0.6);\n#else\nvec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n#if CC_USE_IBL == 2\nvec3 env = unpackRGBE(envmap);\n#else\nvec3 env = SRGBToLinear(envmap.rgb);\n#endif\n#endif\nfinalColor += env * cc_ambientSky.w * specular * s.occlusion;\n#endif\nfinalColor += ambDiff.rgb * cc_ambientSky.w * diffuse * s.occlusion;\nfinalColor += s.emissive;\nreturn vec4(finalColor, s.albedo.a);\n}\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = ACESToneMap(color.rgb);\n#endif\ncolor.rgb = sqrt(color.rgb);\nreturn color;\n}\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\nvoid CC_APPLY_FOG_BASE(inout vec4 color, float factor) {\ncolor = vec4(mix(cc_fogColor.rgb, color.rgb, factor), color.a);\n}\n#if !CC_USE_ACCURATE_FOG\nlayout(location = 0) in float v_fog_factor;\n#endif\nvoid CC_APPLY_FOG(inout vec4 color) {\n#if !CC_USE_ACCURATE_FOG\nCC_APPLY_FOG_BASE(color, v_fog_factor);\n#endif\n}\nvoid CC_APPLY_FOG(inout vec4 color, vec3 worldPos) {\n#if CC_USE_ACCURATE_FOG\nfloat factor;\nCC_TRANSFER_FOG_BASE(vec4(worldPos, 1.0), factor);\n#else\nfloat factor = v_fog_factor;\n#endif\nCC_APPLY_FOG_BASE(color, factor);\n}\nlayout(location = 1) in highp vec4 v_shadowPos;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nlayout(location = 13) in vec3 v_luv;\nlayout(set = 2, binding = 10) uniform sampler2D cc_lightingMap;\nvec3 UnpackLightingmap(vec4 color) {\nvec3 c;\nfloat e = 1.0 + color.a * (8.0 - 1.0);\nc.r = color.r * e;\nc.g = color.g * e;\nc.b = color.b * e;\nreturn c;\n}\n#endif\nlayout(location = 2) in highp vec3 v_position;\nlayout(location = 3) in mediump vec3 v_normal;\n#if USE_NORMALMAP\nlayout(location = 4) in mediump vec3 v_tangent;\nlayout(location = 5) in mediump vec3 v_binormal;\n#endif\nlayout(location = 6) in mediump vec2 uvw;\nlayout(location = 7) in mediump vec2 uv0;\nlayout(location = 8) in mediump vec2 uv1;\nlayout(location = 9) in mediump vec2 uv2;\nlayout(location = 10) in mediump vec2 uv3;\nlayout(location = 12) in mediump vec3 diffuse;\nlayout(location = 11) in mediump vec3 luv;\nlayout(set = 1, binding = 1) uniform PbrParams {\nvec4 metallic;\nvec4 roughness;\n};\nlayout(set = 1, binding = 2) uniform sampler2D weightMap;\nlayout(set = 1, binding = 3) uniform sampler2D detailMap0;\nlayout(set = 1, binding = 4) uniform sampler2D detailMap1;\nlayout(set = 1, binding = 5) uniform sampler2D detailMap2;\nlayout(set = 1, binding = 6) uniform sampler2D detailMap3;\nlayout(set = 1, binding = 7) uniform sampler2D normalMap0;\nlayout(set = 1, binding = 8) uniform sampler2D normalMap1;\nlayout(set = 1, binding = 9) uniform sampler2D normalMap2;\nlayout(set = 1, binding = 10) uniform sampler2D normalMap3;\nlayout(set = 1, binding = 11) uniform sampler2D lightMap;\nvoid surf (out StandardSurface s) {\n#if LAYERS > 1\nvec4 w = texture(weightMap, uvw);\n#endif\nvec4 baseColor = vec4(0, 0, 0, 0);\n#if LAYERS == 1\nbaseColor = texture(detailMap0, uv0);\n#elif LAYERS == 2\nbaseColor += texture(detailMap0, uv0) * w.r;\nbaseColor += texture(detailMap1, uv1) * w.g;\n#elif LAYERS == 3\nbaseColor += texture(detailMap0, uv0) * w.r;\nbaseColor += texture(detailMap1, uv1) * w.g;\nbaseColor += texture(detailMap2, uv2) * w.b;\n#elif LAYERS == 4\nbaseColor += texture(detailMap0, uv0) * w.r;\nbaseColor += texture(detailMap1, uv1) * w.g;\nbaseColor += texture(detailMap2, uv2) * w.b;\nbaseColor += texture(detailMap3, uv3) * w.a;\n#else\nbaseColor = texture(detailMap0, uv0);\n#endif\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\npackHighpData(s.position, s.position_fract_part, v_position);\n#else\ns.position = v_position;\n#endif\n#if USE_NORMALMAP\nvec4 baseNormal = vec4(0, 0, 0, 0);\n#if LAYERS == 1\nbaseNormal = texture(normalMap0, uv0);\n#elif LAYERS == 2\nbaseNormal += texture(normalMap0, uv0) * w.r;\nbaseNormal += texture(normalMap1, uv1) * w.g;\n#elif LAYERS == 3\nbaseNormal += texture(normalMap0, uv0) * w.r;\nbaseNormal += texture(normalMap1, uv1) * w.g;\nbaseNormal += texture(normalMap2, uv2) * w.b;\n#elif LAYERS == 4\nbaseNormal += texture(normalMap0, uv0) * w.r;\nbaseNormal += texture(normalMap1, uv1) * w.g;\nbaseNormal += texture(normalMap2, uv2) * w.b;\nbaseNormal += texture(normalMap3, uv3) * w.a;\n#else\nbaseNormal = texture(normalMap0, uv0);\n#endif\nvec3 nmmp = baseNormal.xyz - vec3(0.5);\ns.normal =\nnmmp.x * normalize(v_tangent) +\nnmmp.y * normalize(v_binormal) +\nnmmp.z * normalize(v_normal);\n#else\ns.normal = v_normal;\n#endif\ns.albedo = vec4(SRGBToLinear(baseColor.rgb), 1.0);\ns.occlusion = 1.0;\n#if USE_PBR\ns.roughness = 0.0;\n#if LAYERS == 1\ns.roughness = roughness.x;\n#elif LAYERS == 2\ns.roughness += roughness.x * w.r;\ns.roughness += roughness.y * w.g;\n#elif LAYERS == 3\ns.roughness += roughness.x * w.r;\ns.roughness += roughness.y * w.g;\ns.roughness += roughness.z * w.b;\n#elif LAYERS == 4\ns.roughness += roughness.x * w.r;\ns.roughness += roughness.y * w.g;\ns.roughness += roughness.z * w.b;\ns.roughness += roughness.w * w.a;\n#else\ns.roughness = 1.0;\n#endif\ns.metallic = 0.0;\n#if LAYERS == 1\ns.metallic = metallic.x;\n#elif LAYERS == 2\ns.metallic += metallic.x * w.r;\ns.metallic += metallic.y * w.g;\n#elif LAYERS == 3\ns.metallic += metallic.x * w.r;\ns.metallic += metallic.y * w.g;\ns.metallic += metallic.z * w.b;\n#elif LAYERS == 4\ns.metallic += metallic.x * w.r;\ns.metallic += metallic.y * w.g;\ns.metallic += metallic.z * w.b;\ns.metallic += metallic.w * w.a;\n#else\ns.metallic = 0.0;\n#endif\n#else\ns.roughness = 1.0;\ns.metallic = 0.0;\n#endif\ns.emissive = vec3(0.0, 0.0, 0.0);\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nvec4 lightColor = texture(lightMap, luv.xy);\ns.lightmap = UnpackLightingmap(lightColor);\ns.lightmap_test = luv.z;\n#endif\n}\n#if CC_FORWARD_ADD\n#if CC_PIPELINE_TYPE == 0\n# define LIGHTS_PER_PASS 1\n#else\n# define LIGHTS_PER_PASS 10\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nlayout(set = 2, binding = 1) uniform CCForwardLight {\nhighp vec4 cc_lightPos[LIGHTS_PER_PASS];\nvec4 cc_lightColor[LIGHTS_PER_PASS];\nvec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\nvec4 cc_lightDir[LIGHTS_PER_PASS];\n};\n#endif\nfloat SmoothDistAtt (float distSqr, float invSqrAttRadius) {\nfloat factor = distSqr * invSqrAttRadius;\nfloat smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\nreturn smoothFactor * smoothFactor;\n}\nfloat GetDistAtt (float distSqr, float invSqrAttRadius) {\nfloat attenuation = 1.0 / max(distSqr, 0.01*0.01);\nattenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\nreturn attenuation;\n}\nfloat GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\nfloat cd = dot(litDir, L);\nfloat attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\nreturn (attenuation * attenuation);\n}\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nvec4 CCStandardShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / 3.14159265359;\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nint numLights = CC_PIPELINE_TYPE == 0 ? LIGHTS_PER_PASS : int(cc_lightDir[0].w);\nfor (int i = 0; i < LIGHTS_PER_PASS; i++) {\nif (i >= numLights) break;\nvec3 SLU = cc_lightPos[i].xyz - position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.0);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = cc_lightSizeRangeAngle[i].x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (cc_lightPos[i].w > 0.0) {\nfloat cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\nfloat cosOuter = cc_lightSizeRangeAngle[i].z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = cc_lightColor[i].rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (cc_lightPos[i].w > 0.0 && cc_lightSizeRangeAngle[i].w > 0.0) {\n{\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetSpotLightShadowFactorSoft2X(shadowPos, position);\nelse if (pcf > 0.9) shadow = CCGetSpotLightShadowFactorSoft(shadowPos, position);\nelse shadow = CCGetSpotLightShadowFactorHard(shadowPos, position);\n}\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nlayout(set = 1, binding = 12) readonly buffer b_ccLightsBuffer { vec4 b_ccLights[]; };\nlayout(set = 1, binding = 13) readonly buffer b_clusterLightIndicesBuffer { uint b_clusterLightIndices[]; };\nlayout(set = 1, binding = 14) readonly buffer b_clusterLightGridBuffer { uvec4 b_clusterLightGrid[]; };\nstruct CCLight\n{\nvec4 cc_lightPos;\nvec4 cc_lightColor;\nvec4 cc_lightSizeRangeAngle;\nvec4 cc_lightDir;\n};\nstruct Cluster\n{\nvec3 minBounds;\nvec3 maxBounds;\n};\nstruct LightGrid\n{\nuint offset;\nuint ccLights;\n};\nCCLight getCCLight(uint i)\n{\nCCLight light;\nlight.cc_lightPos = b_ccLights[4u * i + 0u];\nlight.cc_lightColor = b_ccLights[4u * i + 1u];\nlight.cc_lightSizeRangeAngle = b_ccLights[4u * i + 2u];\nlight.cc_lightDir = b_ccLights[4u * i + 3u];\nreturn light;\n}\nLightGrid getLightGrid(uint cluster)\n{\nuvec4 gridvec = b_clusterLightGrid[cluster];\nLightGrid grid;\ngrid.offset = gridvec.x;\ngrid.ccLights = gridvec.y;\nreturn grid;\n}\nuint getGridLightIndex(uint start, uint offset)\n{\nreturn b_clusterLightIndices[start + offset];\n}\nuint getClusterZIndex(vec4 worldPos)\n{\nfloat scale = float(24) / log(cc_nearFar.y / cc_nearFar.x);\nfloat bias = -(float(24) * log(cc_nearFar.x) / log(cc_nearFar.y / cc_nearFar.x));\nfloat eyeDepth = -(cc_matView * worldPos).z;\nuint zIndex = uint(max(log(eyeDepth) * scale + bias, 0.0));\nreturn zIndex;\n}\nuint getClusterIndex(vec4 fragCoord, vec4 worldPos)\n{\nuint zIndex = getClusterZIndex(worldPos);\nfloat clusterSizeX = ceil(cc_viewPort.z / float(16));\nfloat clusterSizeY = ceil(cc_viewPort.w / float(8));\nuvec3 indices = uvec3(uvec2(fragCoord.xy / vec2(clusterSizeX, clusterSizeY)), zIndex);\nuint cluster = (16u * 8u) * indices.z + 16u * indices.y + indices.x;\nreturn cluster;\n}\nvec4 CCClusterShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / 3.14159265359;\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.001);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nuint cluster = getClusterIndex(gl_FragCoord, vec4(position, 1.0));\nLightGrid grid = getLightGrid(cluster);\nuint numLights = grid.ccLights;\nfor (uint i = 0u; i < 100u; i++) {\nif (i >= numLights) break;\nuint lightIndex = getGridLightIndex(grid.offset, i);\nCCLight light = getCCLight(lightIndex);\nvec3 SLU = light.cc_lightPos.xyz - position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.001);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = light.cc_lightSizeRangeAngle.x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(light.cc_lightSizeRangeAngle.y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (light.cc_lightPos.w > 0.0) {\nfloat cosInner = max(dot(-light.cc_lightDir.xyz, SL), 0.01);\nfloat cosOuter = light.cc_lightSizeRangeAngle.z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -light.cc_lightDir.xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = light.cc_lightColor.rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (light.cc_lightPos.w > 0.0) {\n{\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetSpotLightShadowFactorSoft2X(shadowPos, position);\nelse if (pcf > 0.9) shadow = CCGetSpotLightShadowFactorSoft(shadowPos, position);\nelse shadow = CCGetSpotLightShadowFactorHard(shadowPos, position);\n}\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * light.cc_lightColor.w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\nlayout(location = 0) out vec4 fragColorX;\nvoid main () {\nStandardSurface s; surf(s);\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nvec4 color = CCClusterShadingAdditive(s, v_shadowPos);\n#else\nvec4 color = CCStandardShadingAdditive(s, v_shadowPos);\n#endif\nCC_APPLY_FOG(color, s.position.xyz);\nfragColorX = CCFragOutput(color);\n}\n#elif (CC_PIPELINE_TYPE == 0 || CC_FORCE_FORWARD_SHADING)\nlayout(location = 0) out vec4 fragColorX;\nvoid main () {\nStandardSurface s; surf(s);\nvec4 color = CCStandardShadingBase(s, v_shadowPos);\nCC_APPLY_FOG(color, s.position.xyz);\nfragColorX = CCFragOutput(color);\n}\n#elif CC_PIPELINE_TYPE == 1\nvec2 signNotZero(vec2 v) {\nreturn vec2((v.x >= 0.0) ? +1.0 : -1.0, (v.y >= 0.0) ? +1.0 : -1.0);\n}\nvec2 float32x3_to_oct(in vec3 v) {\nvec2 p = v.xy * (1.0 / (abs(v.x) + abs(v.y) + abs(v.z)));\nreturn (v.z <= 0.0) ? ((1.0 - abs(p.yx)) * signNotZero(p)) : p;\n}\nlayout(location = 0) out vec4 fragColor0;\nlayout(location = 1) out vec4 fragColor1;\nlayout(location = 2) out vec4 fragColor2;\nvoid main () {\nStandardSurface s; surf(s);\nfragColor0 = s.albedo;\nfragColor1 = vec4(float32x3_to_oct(s.normal), s.roughness, s.metallic);\nfragColor2 = vec4(s.emissive, s.occlusion);\n}\n#endif"},{vert:"\nprecision highp float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(set = 2, binding = 0) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\nlayout(set = 0, binding = 2) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nmediump vec4 cc_shadowNFLSInfo;\nmediump vec4 cc_shadowWHPBInfo;\nmediump vec4 cc_shadowLPNNInfo;\nlowp vec4 cc_shadowColor;\nmediump vec4 cc_planarNDInfo;\n};\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec3 a_normal;\nlayout(location = 2) in vec2 a_texCoord;\nlayout(location = 0) out vec2 v_clip_depth;\nvec4 vert () {\nvec4 worldPos;\nworldPos.x = cc_matWorld[3][0] + a_position.x;\nworldPos.y = cc_matWorld[3][1] + a_position.y;\nworldPos.z = cc_matWorld[3][2] + a_position.z;\nworldPos.w = 1.0;\nvec4 clipPos = cc_matLightViewProj * worldPos;\nv_clip_depth = clipPos.zw;\nreturn clipPos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec4 packDepthToRGBA (float depth) {\nvec4 ret = vec4(1.0, 255.0, 65025.0, 16581375.0) * depth;\nret = fract(ret);\nret -= vec4(ret.yzw, 0.0) / 255.0;\nreturn ret;\n}\nlayout(location = 0) in vec2 v_clip_depth;\nvec4 frag () {\nreturn packDepthToRGBA(v_clip_depth.x / v_clip_depth.y * 0.5 + 0.5);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"#extension GL_EXT_shader_explicit_arithmetic_types_int32: require\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec3 a_normal;\nlayout(location = 2) in vec2 a_texCoord;\nlayout(location = 3) in vec4 a_tangent;\n#if CC_USE_MORPH\nint getVertexId() {\nreturn gl_VertexIndex;\n}\nlayout(set = 2, binding = 4) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nlayout(set = 2, binding = 7) uniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nlayout(set = 2, binding = 8) uniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nlayout(set = 2, binding = 9) uniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nlayout(location = 4) in u32vec4 a_joints;\nlayout(location = 5) in vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nlayout(location = 7) in highp vec4 a_jointAnimInfo;\n#endif\nlayout(set = 2, binding = 3) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(set = 2, binding = 2) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nlayout(set = 2, binding = 6) uniform highp sampler2D cc_jointTexture;\n#else\nlayout(set = 2, binding = 3) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\n#if USE_INSTANCING\nlayout(location = 8) in vec4 a_matWorld0;\nlayout(location = 9) in vec4 a_matWorld1;\nlayout(location = 10) in vec4 a_matWorld2;\n#if USE_LIGHTMAP\nlayout(location = 11) in vec4 a_lightingMapUVParam;\n#endif\n#elif USE_BATCHING\nlayout(location = 12) in float a_dyn_batch_id;\nlayout(set = 2, binding = 0) uniform CCLocalBatched {\nhighp mat4 cc_matWorlds[10];\n};\n#else\nlayout(set = 2, binding = 0) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\n#endif\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\n#if !CC_USE_ACCURATE_FOG\nlayout(location = 0) out float v_fog_factor;\n#endif\nvoid CC_TRANSFER_FOG(vec4 pos) {\n#if !CC_USE_ACCURATE_FOG\nCC_TRANSFER_FOG_BASE(pos, v_fog_factor);\n#endif\n}\n#if USE_VERTEX_COLOR\nlayout(location = 13) in lowp vec4 a_color;\nlayout(location = 1) out lowp vec4 v_color;\n#endif\n#if USE_TEXTURE\nlayout(location = 2) out vec2 v_uv;\nlayout(set = 1, binding = 0) uniform TexCoords {\nvec4 tilingOffset;\n};\n#endif\nvec4 vert () {\nvec4 position;\nposition = vec4(a_position, 1.0);\n#if CC_USE_MORPH\napplyMorph(position);\n#endif\n#if CC_USE_SKINNING\nCCSkin(position);\n#endif\nmat4 matWorld;\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\n#else\nmatWorld = cc_matWorld;\n#endif\n#if USE_TEXTURE\nv_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n#if SAMPLE_FROM_RT\nv_uv = cc_cameraPos.w > 1.0 ? vec2(v_uv.x, 1.0 - v_uv.y) : v_uv;\n#endif\n#endif\n#if USE_VERTEX_COLOR\nv_color = a_color;\n#endif\nCC_TRANSFER_FOG(matWorld * position);\nreturn cc_matProj * (cc_matView * matWorld) * position;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = ACESToneMap(color.rgb);\n#endif\ncolor.rgb = sqrt(color.rgb);\nreturn color;\n}\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\nvoid CC_APPLY_FOG_BASE(inout vec4 color, float factor) {\ncolor = vec4(mix(cc_fogColor.rgb, color.rgb, factor), color.a);\n}\n#if !CC_USE_ACCURATE_FOG\nlayout(location = 0) in float v_fog_factor;\n#endif\nvoid CC_APPLY_FOG(inout vec4 color) {\n#if !CC_USE_ACCURATE_FOG\nCC_APPLY_FOG_BASE(color, v_fog_factor);\n#endif\n}\nvoid CC_APPLY_FOG(inout vec4 color, vec3 worldPos) {\n#if CC_USE_ACCURATE_FOG\nfloat factor;\nCC_TRANSFER_FOG_BASE(vec4(worldPos, 1.0), factor);\n#else\nfloat factor = v_fog_factor;\n#endif\nCC_APPLY_FOG_BASE(color, factor);\n}\n#if USE_ALPHA_TEST\n#endif\n#if USE_TEXTURE\nlayout(location = 2) in vec2 v_uv;\nlayout(set = 1, binding = 2) uniform sampler2D mainTexture;\n#endif\nlayout(set = 1, binding = 1) uniform Constant {\nvec4 mainColor;\nvec4 colorScaleAndCutoff;\n};\n#if USE_VERTEX_COLOR\nlayout(location = 1) in lowp vec4 v_color;\n#endif\nvec4 frag () {\nvec4 o = mainColor;\no.rgb *= colorScaleAndCutoff.xyz;\n#if USE_VERTEX_COLOR\no.rgb *= SRGBToLinear(v_color.rgb);\no.a *= v_color.a;\n#endif\n#if USE_TEXTURE\nvec4 texColor = texture(mainTexture, v_uv);\ntexColor.rgb = SRGBToLinear(texColor.rgb);\no *= texColor;\n#endif\n#if USE_ALPHA_TEST\nif (o.ALPHA_TEST_CHANNEL < colorScaleAndCutoff.w) discard;\n#endif\nCC_APPLY_FOG(o);\nreturn CCFragOutput(o);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"#extension GL_EXT_shader_explicit_arithmetic_types_int32: require\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec3 a_normal;\nlayout(location = 2) in vec2 a_texCoord;\nlayout(location = 3) in vec4 a_tangent;\n#if CC_USE_MORPH\nint getVertexId() {\nreturn gl_VertexIndex;\n}\nlayout(set = 2, binding = 4) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nlayout(set = 2, binding = 7) uniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nlayout(set = 2, binding = 8) uniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nlayout(set = 2, binding = 9) uniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nlayout(location = 4) in u32vec4 a_joints;\nlayout(location = 5) in vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nlayout(location = 7) in highp vec4 a_jointAnimInfo;\n#endif\nlayout(set = 2, binding = 3) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(set = 2, binding = 2) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nlayout(set = 2, binding = 6) uniform highp sampler2D cc_jointTexture;\n#else\nlayout(set = 2, binding = 3) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(location = 0) out vec2 v_uv;\nvoid main () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nIn.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\ngl_Position = In.position;\ngl_Position.y = gl_Position.y;\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nlayout(location = 0) in vec2 v_uv;\nlayout(set = 1, binding = 0) uniform BloomUBO {\nmediump vec4 texSize;\n};\nlayout(set = 1, binding = 1) uniform sampler2D outputResultMap;\nlayout(location = 0) out vec4 fragColor;\nfloat luminance(vec3 color) {\nreturn dot(color, vec3(0.2126, 0.7152, 0.0722));\n}\nvoid main() {\nvec3 color = texture(outputResultMap, v_uv).xyz;\nif (luminance(SRGBToLinear(color)) > texSize.z) {\nfragColor = vec4(color, 1.0);\n} else {\nfragColor = vec4(0.0, 0.0, 0.0, 1.0);\n}\n}"},{vert:"#extension GL_EXT_shader_explicit_arithmetic_types_int32: require\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec3 a_normal;\nlayout(location = 2) in vec2 a_texCoord;\nlayout(location = 3) in vec4 a_tangent;\n#if CC_USE_MORPH\nint getVertexId() {\nreturn gl_VertexIndex;\n}\nlayout(set = 2, binding = 4) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nlayout(set = 2, binding = 7) uniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nlayout(set = 2, binding = 8) uniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nlayout(set = 2, binding = 9) uniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nlayout(location = 4) in u32vec4 a_joints;\nlayout(location = 5) in vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nlayout(location = 7) in highp vec4 a_jointAnimInfo;\n#endif\nlayout(set = 2, binding = 3) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(set = 2, binding = 2) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nlayout(set = 2, binding = 6) uniform highp sampler2D cc_jointTexture;\n#else\nlayout(set = 2, binding = 3) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(location = 0) out vec2 v_uv;\nvoid main () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nIn.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\ngl_Position = In.position;\ngl_Position.y = gl_Position.y;\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(location = 0) in vec2 v_uv;\nlayout(set = 1, binding = 0) uniform BloomUBO {\nmediump vec4 texSize;\n};\nlayout(set = 1, binding = 1) uniform sampler2D bloomTexture;\nlayout(location = 0) out vec4 fragColor;\nvec3 downsample4taps(vec2 uv, vec2 halfpixel) {\nvec3 sum = texture(bloomTexture, uv + vec2(-halfpixel.x, halfpixel.y)).xyz;\nsum += texture(bloomTexture, uv + vec2(halfpixel.x, halfpixel.y)).xyz;\nsum += texture(bloomTexture, uv + vec2(halfpixel.x, -halfpixel.y)).xyz;\nsum += texture(bloomTexture, uv + vec2(-halfpixel.x, -halfpixel.y)).xyz;\nreturn sum / 4.0;\n}\nvoid main()\n{\nvec3 result = downsample4taps(v_uv, 1.0 / texSize.xy).rgb;\nfragColor = vec4(result, 1.0);\n}"},{vert:"#extension GL_EXT_shader_explicit_arithmetic_types_int32: require\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec3 a_normal;\nlayout(location = 2) in vec2 a_texCoord;\nlayout(location = 3) in vec4 a_tangent;\n#if CC_USE_MORPH\nint getVertexId() {\nreturn gl_VertexIndex;\n}\nlayout(set = 2, binding = 4) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nlayout(set = 2, binding = 7) uniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nlayout(set = 2, binding = 8) uniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nlayout(set = 2, binding = 9) uniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nlayout(location = 4) in u32vec4 a_joints;\nlayout(location = 5) in vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nlayout(location = 7) in highp vec4 a_jointAnimInfo;\n#endif\nlayout(set = 2, binding = 3) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(set = 2, binding = 2) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nlayout(set = 2, binding = 6) uniform highp sampler2D cc_jointTexture;\n#else\nlayout(set = 2, binding = 3) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(location = 0) out vec2 v_uv;\nvoid main () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nIn.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\ngl_Position = In.position;\ngl_Position.y = gl_Position.y;\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(location = 0) in vec2 v_uv;\nlayout(set = 1, binding = 0) uniform BloomUBO {\nmediump vec4 texSize;\n};\nlayout(set = 1, binding = 1) uniform sampler2D bloomTexture;\nlayout(location = 0) out vec4 fragColor;\nvec3 upsample4taps(vec2 uv, vec2 halfpixel) {\nvec3 sum = texture(bloomTexture, uv + vec2(-halfpixel.x, halfpixel.y)).xyz;\nsum += texture(bloomTexture, uv + vec2(halfpixel.x, halfpixel.y)).xyz;\nsum += texture(bloomTexture, uv + vec2(halfpixel.x, -halfpixel.y)).xyz;\nsum += texture(bloomTexture, uv + vec2(-halfpixel.x, -halfpixel.y)).xyz;\nreturn sum / 4.0;\n}\nvoid main() {\nvec3 result = upsample4taps(v_uv, 0.5 / texSize.xy).rgb;\nfragColor = vec4(result, 1.0);\n}"},{vert:"#extension GL_EXT_shader_explicit_arithmetic_types_int32: require\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec3 a_normal;\nlayout(location = 2) in vec2 a_texCoord;\nlayout(location = 3) in vec4 a_tangent;\n#if CC_USE_MORPH\nint getVertexId() {\nreturn gl_VertexIndex;\n}\nlayout(set = 2, binding = 4) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nlayout(set = 2, binding = 7) uniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nlayout(set = 2, binding = 8) uniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nlayout(set = 2, binding = 9) uniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nlayout(location = 4) in u32vec4 a_joints;\nlayout(location = 5) in vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nlayout(location = 7) in highp vec4 a_jointAnimInfo;\n#endif\nlayout(set = 2, binding = 3) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(set = 2, binding = 2) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nlayout(set = 2, binding = 6) uniform highp sampler2D cc_jointTexture;\n#else\nlayout(set = 2, binding = 3) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(location = 0) out vec2 v_uv;\nvoid main () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nIn.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\ngl_Position = In.position;\ngl_Position.y = gl_Position.y;\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(location = 0) in vec2 v_uv;\nlayout(set = 1, binding = 0) uniform BloomUBO {\nmediump vec4 texSize;\n};\nlayout(set = 1, binding = 1) uniform sampler2D outputResultMap;\nlayout(set = 1, binding = 2) uniform sampler2D bloomTexture;\nlayout(location = 0) out vec4 fragColor;\nvoid main() {\nvec4 hdrColor = texture(outputResultMap, v_uv);\nvec3 bloomColor = texture(bloomTexture, v_uv).rgb;\nvec3 result = hdrColor.rgb + bloomColor * texSize.w * hdrColor.a;\nfragColor = vec4(result, hdrColor.a);\n}"}],[{vert:"\nprecision highp float;\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec3 a_normal;\nlayout(location = 2) in vec2 a_texCoord;\nlayout(location = 3) in vec4 a_tangent;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(location = 0) out vec2 v_uv;\nvoid main () {\nvec4 position;\nposition = vec4(a_position, 1.0);\nposition.xy = cc_cameraPos.w == 0.0 ? vec2(position.xy.x, -position.xy.y) : position.xy;\ngl_Position = vec4(position.x, position.y, 1.0, 1.0);\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nlayout(set = 0, binding = 2) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nmediump vec4 cc_shadowNFLSInfo;\nmediump vec4 cc_shadowWHPBInfo;\nmediump vec4 cc_shadowLPNNInfo;\nlowp vec4 cc_shadowColor;\nmediump vec4 cc_planarNDInfo;\n};\nhighp float unpackHighpData (float mainPart, float modPart) {\nhighp float data = mainPart;\nreturn data + modPart;\n}\nhighp float unpackHighpData (float mainPart, float modPart, const float modValue) {\nhighp float data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nhighp vec2 unpackHighpData (vec2 mainPart, vec2 modPart) {\nhighp vec2 data = mainPart;\nreturn data + modPart;\n}\nhighp vec2 unpackHighpData (vec2 mainPart, vec2 modPart, const float modValue) {\nhighp vec2 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nhighp vec3 unpackHighpData (vec3 mainPart, vec3 modPart) {\nhighp vec3 data = mainPart;\nreturn data + modPart;\n}\nhighp vec3 unpackHighpData (vec3 mainPart, vec3 modPart, const float modValue) {\nhighp vec3 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nhighp vec4 unpackHighpData (vec4 mainPart, vec4 modPart) {\nhighp vec4 data = mainPart;\nreturn data + modPart;\n}\nhighp vec4 unpackHighpData (vec4 mainPart, vec4 modPart, const float modValue) {\nhighp vec4 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\nfloat dist = length(viewPos);\nreturn (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\nvec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\nreturn CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\nlayout(set = 0, binding = 3) uniform highp sampler2D cc_shadowMap;\nlayout(set = 0, binding = 5) uniform highp sampler2D cc_spotLightingMap;\nvec4 ApplyShadowDepthBias_FaceNormal(vec4 shadowPos, vec3 worldNormal)\n{\nvec4 newShadowPos = shadowPos;\nif(cc_shadowLPNNInfo.z > 0.0001)\n{\nvec4 viewNormal = cc_matLightView * vec4(worldNormal, 0.0);\nif(viewNormal.z < 0.1)\nnewShadowPos.xy += viewNormal.xy * cc_shadowProjInfo.xy * cc_shadowLPNNInfo.z * clamp(viewNormal.z, 0.001, 0.1);\n}\nreturn newShadowPos;\n}\nvec4 ApplyShadowDepthBias_Perspective(vec4 shadowPos, float viewspaceDepthBias)\n{\nvec3 viewSpacePos;\nviewSpacePos.xy = shadowPos.xy * cc_shadowProjInfo.zw;\nviewSpacePos.z = shadowPos.z * cc_shadowInvProjDepthInfo.x + shadowPos.w * cc_shadowInvProjDepthInfo.y;\nviewSpacePos.xyz += cc_shadowProjDepthInfo.z * normalize(viewSpacePos.xyz) * viewspaceDepthBias;\nvec4 clipSpacePos;\nclipSpacePos.xy = viewSpacePos.xy * cc_shadowProjInfo.xy;\nclipSpacePos.zw = viewSpacePos.z * cc_shadowProjDepthInfo.xz + vec2(cc_shadowProjDepthInfo.y, 0.0);\nif (cc_shadowNFLSInfo.z > 0.000001) {\nclipSpacePos.z = CCGetLinearDepthFromViewSpace(viewSpacePos.xyz);\nclipSpacePos.z = (clipSpacePos.z * 2.0 - 1.0) * clipSpacePos.w;\n}\nreturn clipSpacePos;\n}\nvec4 ApplyShadowDepthBias_Orthographic(vec4 shadowPos, float viewspaceDepthBias)\n{\nfloat coeffA = cc_shadowProjDepthInfo.x;\nfloat coeffB = cc_shadowProjDepthInfo.y;\nfloat viewSpacePos_z = (shadowPos.z - coeffB) / coeffA;\nviewSpacePos_z += viewspaceDepthBias;\nvec4 result = shadowPos;\nresult.z = viewSpacePos_z * coeffA + coeffB;\nreturn result;\n}\nfloat CCGetShadowFactorHard (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture(cc_shadowMap, clipPos.xy).x;\n}\nshadow = step(clipPos.z, closestDepth);\nreturn shadow;\n}\nfloat CCGetShadowFactorSoft (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * mapSize.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetShadowFactorSoft2X (vec4 shadowPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\nfloat CCGetSpotLightShadowFactorHard (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nfloat depth = clipPos.z;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nclosestDepth = dot(texture(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture(cc_spotLightingMap, clipPos.xy).x;\n}\nshadow = step(depth, closestDepth);\nreturn shadow;\n}\nfloat CCGetSpotLightShadowFactorSoft (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nfloat bias = cc_shadowWHPBInfo.w;\nvec2 oneTap = 1.0 / cc_shadowWHPBInfo.xy;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * cc_shadowWHPBInfo.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * cc_shadowWHPBInfo.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetSpotLightShadowFactorSoft2X (vec4 shadowPos, vec3 worldPos) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > 0.000001) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nfloat bias = cc_shadowWHPBInfo.w;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > 0.000001) {\nblock0 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\n#endif\n#if CC_USE_IBL\nlayout(set = 0, binding = 4) uniform samplerCube cc_environment;\nvec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\nreturn textureLod(tex, coord, lod);\n}\nvec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\nreturn textureLod(tex, coord, lod);\n}\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n}\n#if CC_USE_DIFFUSEMAP\nlayout(set = 0, binding = 6) uniform samplerCube cc_diffuseMap;\n#endif\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\nvec3 NxH = cross(N, H);\nfloat OneMinusNoHSqr = dot(NxH, NxH);\nfloat a = roughness * roughness;\nfloat n = NoH * a;\nfloat p = a / (OneMinusNoHSqr + n * n);\nreturn p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\nreturn (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\nconst vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\nconst vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\nvec4 r = roughness * c0 + c1;\nfloat a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\nvec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\nAB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\nreturn specular * AB.x + AB.y;\n}\n#if USE_REFLECTION_DENOISE\nvec3 GetEnvReflectionWithMipFiltering(vec3 R, float roughness, float mipCount, float denoiseIntensity) {\n#if CC_USE_IBL\nfloat mip = roughness * mipCount;\nfloat delta = (dot(dFdx(R), dFdy(R))) * 1000.0;\nfloat mipBias = mix(0.0, 5.0, clamp(delta, 0.0, 1.0));\nvec4 biased = fragTextureLod(cc_environment, R, mip + mipBias);\nvec4 filtered = texture(cc_environment, R);\n#if CC_USE_IBL == 2\nbiased.rgb = unpackRGBE(biased);\nfiltered.rgb = unpackRGBE(filtered);\n#else\nbiased.rgb = SRGBToLinear(biased.rgb);\nfiltered.rgb = SRGBToLinear(filtered.rgb);\n#endif\nreturn mix(biased.rgb, filtered.rgb, denoiseIntensity);\n#else\nreturn vec3(0.0, 0.0, 0.0);\n#endif\n}\n#endif\nstruct StandardSurface {\nvec4 albedo;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nvec3 position, position_fract_part;\n#else\nvec3 position;\n#endif\nvec3 normal;\nvec3 emissive;\nvec3 lightmap;\nfloat lightmap_test;\nfloat roughness;\nfloat metallic;\nfloat occlusion;\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 L = normalize(-cc_mainLitDir.xyz);\nvec3 H = normalize(L + V);\nfloat NH = max(dot(N, H), 0.0);\nfloat NL = max(dot(N, L), 0.0);\nvec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\nvec3 diffuseContrib = diffuse;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nif (s.lightmap_test > 0.0001) {\nfinalColor = s.lightmap.rgb;\n}\n#else\ndiffuseContrib /= 3.14159265359;\n#endif\nvec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\nvec3 dirlightContrib = (diffuseContrib + specularContrib);\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (NL > 0.0 && cc_mainLitDir.w > 0.0) {\n{\nvec4 pos = ApplyShadowDepthBias_FaceNormal(shadowPos, N);\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetShadowFactorSoft2X(pos);\nelse if (pcf > 0.9) shadow = CCGetShadowFactorSoft(pos);\nelse shadow = CCGetShadowFactorHard(pos);\nshadow = mix(shadow, 1.0, cc_shadowNFLSInfo.w);\n}\n}\n#endif\ndirlightContrib *= shadow;\nfinalColor *= dirlightContrib;\nfloat fAmb = 0.5 - N.y * 0.5;\nvec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb);\n#if CC_USE_IBL\n#if CC_USE_DIFFUSEMAP\nvec4 diffuseMap = texture(cc_diffuseMap, N);\n#if CC_USE_DIFFUSEMAP == 2\nambDiff = unpackRGBE(diffuseMap);\n#else\nambDiff = SRGBToLinear(diffuseMap.rgb);\n#endif\n#endif\nvec3 R = normalize(reflect(-V, N));\n#if USE_REFLECTION_DENOISE\nvec3 env = GetEnvReflectionWithMipFiltering(R, s.roughness, cc_ambientGround.w, 0.6);\n#else\nvec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n#if CC_USE_IBL == 2\nvec3 env = unpackRGBE(envmap);\n#else\nvec3 env = SRGBToLinear(envmap.rgb);\n#endif\n#endif\nfinalColor += env * cc_ambientSky.w * specular * s.occlusion;\n#endif\nfinalColor += ambDiff.rgb * cc_ambientSky.w * diffuse * s.occlusion;\nfinalColor += s.emissive;\nreturn vec4(finalColor, s.albedo.a);\n}\n#if CC_PIPELINE_TYPE == 0\n# define LIGHTS_PER_PASS 1\n#else\n# define LIGHTS_PER_PASS 10\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nlayout(set = 2, binding = 1) uniform CCForwardLight {\nhighp vec4 cc_lightPos[LIGHTS_PER_PASS];\nvec4 cc_lightColor[LIGHTS_PER_PASS];\nvec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\nvec4 cc_lightDir[LIGHTS_PER_PASS];\n};\n#endif\nfloat SmoothDistAtt (float distSqr, float invSqrAttRadius) {\nfloat factor = distSqr * invSqrAttRadius;\nfloat smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\nreturn smoothFactor * smoothFactor;\n}\nfloat GetDistAtt (float distSqr, float invSqrAttRadius) {\nfloat attenuation = 1.0 / max(distSqr, 0.01*0.01);\nattenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\nreturn attenuation;\n}\nfloat GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\nfloat cd = dot(litDir, L);\nfloat attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\nreturn (attenuation * attenuation);\n}\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nvec4 CCStandardShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / 3.14159265359;\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nint numLights = CC_PIPELINE_TYPE == 0 ? LIGHTS_PER_PASS : int(cc_lightDir[0].w);\nfor (int i = 0; i < LIGHTS_PER_PASS; i++) {\nif (i >= numLights) break;\nvec3 SLU = cc_lightPos[i].xyz - position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.0);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = cc_lightSizeRangeAngle[i].x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (cc_lightPos[i].w > 0.0) {\nfloat cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\nfloat cosOuter = cc_lightSizeRangeAngle[i].z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = cc_lightColor[i].rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (cc_lightPos[i].w > 0.0 && cc_lightSizeRangeAngle[i].w > 0.0) {\n{\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetSpotLightShadowFactorSoft2X(shadowPos, position);\nelse if (pcf > 0.9) shadow = CCGetSpotLightShadowFactorSoft(shadowPos, position);\nelse shadow = CCGetSpotLightShadowFactorHard(shadowPos, position);\n}\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nlayout(set = 1, binding = 4) readonly buffer b_ccLightsBuffer { vec4 b_ccLights[]; };\nlayout(set = 1, binding = 5) readonly buffer b_clusterLightIndicesBuffer { uint b_clusterLightIndices[]; };\nlayout(set = 1, binding = 6) readonly buffer b_clusterLightGridBuffer { uvec4 b_clusterLightGrid[]; };\nstruct CCLight\n{\nvec4 cc_lightPos;\nvec4 cc_lightColor;\nvec4 cc_lightSizeRangeAngle;\nvec4 cc_lightDir;\n};\nstruct Cluster\n{\nvec3 minBounds;\nvec3 maxBounds;\n};\nstruct LightGrid\n{\nuint offset;\nuint ccLights;\n};\nCCLight getCCLight(uint i)\n{\nCCLight light;\nlight.cc_lightPos = b_ccLights[4u * i + 0u];\nlight.cc_lightColor = b_ccLights[4u * i + 1u];\nlight.cc_lightSizeRangeAngle = b_ccLights[4u * i + 2u];\nlight.cc_lightDir = b_ccLights[4u * i + 3u];\nreturn light;\n}\nLightGrid getLightGrid(uint cluster)\n{\nuvec4 gridvec = b_clusterLightGrid[cluster];\nLightGrid grid;\ngrid.offset = gridvec.x;\ngrid.ccLights = gridvec.y;\nreturn grid;\n}\nuint getGridLightIndex(uint start, uint offset)\n{\nreturn b_clusterLightIndices[start + offset];\n}\nuint getClusterZIndex(vec4 worldPos)\n{\nfloat scale = float(24) / log(cc_nearFar.y / cc_nearFar.x);\nfloat bias = -(float(24) * log(cc_nearFar.x) / log(cc_nearFar.y / cc_nearFar.x));\nfloat eyeDepth = -(cc_matView * worldPos).z;\nuint zIndex = uint(max(log(eyeDepth) * scale + bias, 0.0));\nreturn zIndex;\n}\nuint getClusterIndex(vec4 fragCoord, vec4 worldPos)\n{\nuint zIndex = getClusterZIndex(worldPos);\nfloat clusterSizeX = ceil(cc_viewPort.z / float(16));\nfloat clusterSizeY = ceil(cc_viewPort.w / float(8));\nuvec3 indices = uvec3(uvec2(fragCoord.xy / vec2(clusterSizeX, clusterSizeY)), zIndex);\nuint cluster = (16u * 8u) * indices.z + 16u * indices.y + indices.x;\nreturn cluster;\n}\nvec4 CCClusterShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / 3.14159265359;\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.001);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nuint cluster = getClusterIndex(gl_FragCoord, vec4(position, 1.0));\nLightGrid grid = getLightGrid(cluster);\nuint numLights = grid.ccLights;\nfor (uint i = 0u; i < 100u; i++) {\nif (i >= numLights) break;\nuint lightIndex = getGridLightIndex(grid.offset, i);\nCCLight light = getCCLight(lightIndex);\nvec3 SLU = light.cc_lightPos.xyz - position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.001);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = light.cc_lightSizeRangeAngle.x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(light.cc_lightSizeRangeAngle.y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (light.cc_lightPos.w > 0.0) {\nfloat cosInner = max(dot(-light.cc_lightDir.xyz, SL), 0.01);\nfloat cosOuter = light.cc_lightSizeRangeAngle.z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -light.cc_lightDir.xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = light.cc_lightColor.rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (light.cc_lightPos.w > 0.0) {\n{\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) shadow = CCGetSpotLightShadowFactorSoft2X(shadowPos, position);\nelse if (pcf > 0.9) shadow = CCGetSpotLightShadowFactorSoft(shadowPos, position);\nelse shadow = CCGetSpotLightShadowFactorHard(shadowPos, position);\n}\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * light.cc_lightColor.w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = ACESToneMap(color.rgb);\n#endif\ncolor.rgb = sqrt(color.rgb);\nreturn color;\n}\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\nvoid CC_APPLY_FOG_BASE(inout vec4 color, float factor) {\ncolor = vec4(mix(cc_fogColor.rgb, color.rgb, factor), color.a);\n}\nvec2 signNotZero(vec2 v) {\nreturn vec2((v.x >= 0.0) ? +1.0 : -1.0, (v.y >= 0.0) ? +1.0 : -1.0);\n}\nvec3 oct_to_float32x3(vec2 e) {\nvec3 v = vec3(e.xy, 1.0 - abs(e.x) - abs(e.y));\nif (v.z < 0.0) v.xy = (1.0 - abs(v.yx)) * signNotZero(v.xy);\nreturn normalize(v);\n}\nvec4 screen2WS(vec3 coord) {\nvec3 ndc = vec3(\n2.0 * (coord.x - cc_viewPort.x) / cc_viewPort.z - 1.0,\n2.0 * (coord.y - cc_viewPort.y) / cc_viewPort.w - 1.0,\ncoord.z);\nvec4 world = ((cc_matViewProjInv) * (vec4(ndc, 1.0)));\nworld      = world / world.w;\nreturn world;\n}\nlayout(location = 0) in vec2 v_uv;\n#if CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT\nlayout(set = 1, binding = 0, input_attachment_index = 0) uniform subpassInput gbuffer_albedoMap;\nlayout(set = 1, binding = 1, input_attachment_index = 1) uniform subpassInput gbuffer_normalMap;\nlayout(set = 1, binding = 2, input_attachment_index = 2) uniform subpassInput gbuffer_emissiveMap;\n#else\nlayout(set = 1, binding = 0) uniform sampler2D gbuffer_albedoMap;\nlayout(set = 1, binding = 1) uniform sampler2D gbuffer_normalMap;\nlayout(set = 1, binding = 2) uniform sampler2D gbuffer_emissiveMap;\n#endif\nlayout(set = 1, binding = 3) uniform sampler2D depth_stencil;\n#if !CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT || __VERSION__ >= 450\nlayout(location = 0) out vec4 fragColor;\n#endif\nvoid main () {\nStandardSurface s;\n#if CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT\nvec4 albedoMap = subpassLoad(gbuffer_albedoMap);\nvec4 normalMap = subpassLoad(gbuffer_normalMap);\nvec4 emissiveMap = subpassLoad(gbuffer_emissiveMap);\n#else\nvec4 albedoMap = texture(gbuffer_albedoMap,v_uv);\nvec4 normalMap = texture(gbuffer_normalMap,v_uv);\nvec4 emissiveMap = texture(gbuffer_emissiveMap,v_uv);\n#endif\nfloat depth = texture(depth_stencil, v_uv).x;\ns.albedo = albedoMap;\nvec3 position = screen2WS(vec3(gl_FragCoord.xy, depth)).xyz;\ns.position = position;\ns.roughness = normalMap.z;\ns.normal = oct_to_float32x3(normalMap.xy);\ns.metallic = normalMap.w;\ns.emissive = emissiveMap.xyz;\ns.occlusion = emissiveMap.w;\nfloat fogFactor;\nCC_TRANSFER_FOG_BASE(vec4(position, 1), fogFactor);\nvec4 shadowPos;\nshadowPos = cc_matLightViewProj * vec4(position, 1);\nvec4 color = CCStandardShadingBase(s, shadowPos) +\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nCCClusterShadingAdditive(s, shadowPos);\n#else\nCCStandardShadingAdditive(s, shadowPos);\n#endif\nCC_APPLY_FOG_BASE(color, fogFactor);\ncolor = CCFragOutput(color);\n#if CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT\nfragColor = color;\n#else\nfragColor = color;\n#endif\n}"}],[{vert:"#extension GL_EXT_shader_explicit_arithmetic_types_int32: require\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec3 a_normal;\nlayout(location = 2) in vec2 a_texCoord;\nlayout(location = 3) in vec4 a_tangent;\n#if CC_USE_MORPH\nint getVertexId() {\nreturn gl_VertexIndex;\n}\nlayout(set = 2, binding = 4) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nlayout(set = 2, binding = 7) uniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nlayout(set = 2, binding = 8) uniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nlayout(set = 2, binding = 9) uniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nlayout(location = 4) in u32vec4 a_joints;\nlayout(location = 5) in vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nlayout(location = 7) in highp vec4 a_jointAnimInfo;\n#endif\nlayout(set = 2, binding = 3) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(set = 2, binding = 2) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nlayout(set = 2, binding = 6) uniform highp sampler2D cc_jointTexture;\n#else\nlayout(set = 2, binding = 3) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\n#if USE_INSTANCING\nlayout(location = 8) in vec4 a_matWorld0;\nlayout(location = 9) in vec4 a_matWorld1;\nlayout(location = 10) in vec4 a_matWorld2;\n#if USE_LIGHTMAP\nlayout(location = 11) in vec4 a_lightingMapUVParam;\n#endif\n#elif USE_BATCHING\nlayout(location = 12) in float a_dyn_batch_id;\nlayout(set = 2, binding = 0) uniform CCLocalBatched {\nhighp mat4 cc_matWorlds[10];\n};\n#else\nlayout(set = 2, binding = 0) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\n};\n#endif\nlayout(set = 0, binding = 2) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nmediump vec4 cc_shadowNFLSInfo;\nmediump vec4 cc_shadowWHPBInfo;\nmediump vec4 cc_shadowLPNNInfo;\nlowp vec4 cc_shadowColor;\nmediump vec4 cc_planarNDInfo;\n};\nlayout(location = 0) out float v_dist;\nvec4 vert () {\nvec4 position;\nposition = vec4(a_position, 1.0);\n#if CC_USE_MORPH\napplyMorph(position);\n#endif\n#if CC_USE_SKINNING\nCCSkin(position);\n#endif\nmat4 matWorld;\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\n#else\nmatWorld = cc_matWorld;\n#endif\nvec3 P = (matWorld * position).xyz;\nvec3 L = cc_mainLitDir.xyz;\nvec3 N = cc_planarNDInfo.xyz;\nfloat d = cc_planarNDInfo.w + 0.001;\nfloat dist = (-d - dot(P, N)) / (dot(L, N) + 0.0001);\nvec3 shadowPos = P + L * dist;\nvec3 view = normalize(cc_cameraPos.xyz - shadowPos);\nfloat viewLength = length(cc_cameraPos.xyz - shadowPos);\nshadowPos += view * max(0.02, 0.001 * viewLength);\nposition = cc_matProj * cc_matView * vec4(shadowPos, 1.0);\nv_dist = dist;\nreturn position;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nlayout(set = 0, binding = 2) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nmediump vec4 cc_shadowNFLSInfo;\nmediump vec4 cc_shadowWHPBInfo;\nmediump vec4 cc_shadowLPNNInfo;\nlowp vec4 cc_shadowColor;\nmediump vec4 cc_planarNDInfo;\n};\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nlayout(location = 0) in float v_dist;\nvec4 frag () {\nif(v_dist < 0.02)\ndiscard;\nreturn CCFragOutput(cc_shadowColor);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"#extension GL_EXT_shader_explicit_arithmetic_types_int32: require\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec3 a_normal;\nlayout(location = 2) in vec2 a_texCoord;\nlayout(location = 3) in vec4 a_tangent;\n#if CC_USE_MORPH\nint getVertexId() {\nreturn gl_VertexIndex;\n}\nlayout(set = 2, binding = 4) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nlayout(set = 2, binding = 7) uniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nlayout(set = 2, binding = 8) uniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nlayout(set = 2, binding = 9) uniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nattr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nattr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nattr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\nlayout(location = 4) in u32vec4 a_joints;\nlayout(location = 5) in vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n#if USE_INSTANCING\nlayout(location = 7) in highp vec4 a_jointAnimInfo;\n#endif\nlayout(set = 2, binding = 3) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(set = 2, binding = 2) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nlayout(set = 2, binding = 6) uniform highp sampler2D cc_jointTexture;\n#else\nlayout(set = 2, binding = 3) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\n#if USE_INSTANCING\nhighp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n#else\nhighp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n#endif\nhighp float invSize = cc_jointTextureInfo.w;\nhighp float y = floor(j * invSize);\nhighp float x = floor(j - y * cc_jointTextureInfo.x);\ny = (y + 0.5) * invSize;\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\nmat4 m = skinMatrix();\nattr.position = m * attr.position;\nattr.normal = (m * vec4(attr.normal, 0.0)).xyz;\nattr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(location = 0) out vec2 v_uv;\nvoid main () {\nStandardVertInput In;\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\nIn.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\ngl_Position = In.position;\ngl_Position.y = gl_Position.y;\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\n#if ANTIALIAS_TYPE == 1\nvec4 fxaa(sampler2D tex, vec2 fragCoord, vec2 resolution,\nvec2 v_rgbNW, vec2 v_rgbNE,\nvec2 v_rgbSW, vec2 v_rgbSE,\nvec2 v_rgbM) {\nvec4 color;\nmediump vec2 inverseVP = vec2(1.0 / resolution.x, 1.0 / resolution.y);\nvec3 rgbNW = texture(tex, v_rgbNW).xyz;\nvec3 rgbNE = texture(tex, v_rgbNE).xyz;\nvec3 rgbSW = texture(tex, v_rgbSW).xyz;\nvec3 rgbSE = texture(tex, v_rgbSE).xyz;\nvec4 texColor = texture(tex, v_rgbM);\nvec3 rgbM  = texColor.xyz;\nvec3 luma = vec3(0.299, 0.587, 0.114);\nfloat lumaNW = dot(rgbNW, luma);\nfloat lumaNE = dot(rgbNE, luma);\nfloat lumaSW = dot(rgbSW, luma);\nfloat lumaSE = dot(rgbSE, luma);\nfloat lumaM  = dot(rgbM,  luma);\nfloat lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\nfloat lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\nmediump vec2 dir;\ndir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\ndir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\nfloat dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) *\n(0.25 * (1.0 / 8.0)), (1.0/ 128.0));\nfloat rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);\ndir = min(vec2(8.0, 8.0),\nmax(vec2(-8.0, -8.0),\ndir * rcpDirMin)) * inverseVP;\nvec3 rgbA = 0.5 * (\ntexture(tex, fragCoord * inverseVP + dir * (1.0 / 3.0 - 0.5)).xyz +\ntexture(tex, fragCoord * inverseVP + dir * (2.0 / 3.0 - 0.5)).xyz);\nvec3 rgbB = rgbA * 0.5 + 0.25 * (\ntexture(tex, fragCoord * inverseVP + dir * -0.5).xyz +\ntexture(tex, fragCoord * inverseVP + dir * 0.5).xyz);\nfloat lumaB = dot(rgbB, luma);\nif ((lumaB < lumaMin) || (lumaB > lumaMax))\ncolor = vec4(rgbA, texColor.a);\nelse\ncolor = vec4(rgbB, texColor.a);\nreturn color;\n}\n#endif\nlayout(location = 0) in vec2 v_uv;\nlayout(set = 1, binding = 0) uniform sampler2D outputResultMap;\nlayout(location = 0) out vec4 fragColor;\nvoid texcoords(vec2 fragCoord, vec2 resolution,\nout vec2 v_rgbNW, out vec2 v_rgbNE,\nout vec2 v_rgbSW, out vec2 v_rgbSE,\nout vec2 v_rgbM) {\nvec2 inverseVP = 1.0 / resolution.xy;\nv_rgbNW = (fragCoord + vec2(-1.0, -1.0)) * inverseVP;\nv_rgbNE = (fragCoord + vec2(1.0, -1.0)) * inverseVP;\nv_rgbSW = (fragCoord + vec2(-1.0, 1.0)) * inverseVP;\nv_rgbSE = (fragCoord + vec2(1.0, 1.0)) * inverseVP;\nv_rgbM = vec2(fragCoord * inverseVP);\n}\nvoid main () {\nmediump vec2 v_rgbNW;\nmediump vec2 v_rgbNE;\nmediump vec2 v_rgbSW;\nmediump vec2 v_rgbSE;\nmediump vec2 v_rgbM;\n#if ANTIALIAS_TYPE == 1\nvec2 resolution = cc_screenSize.xy;\nvec2 fragCoord = v_uv * resolution;\ntexcoords(fragCoord, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\nfragColor = fxaa(outputResultMap, fragCoord, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\n#else\nfragColor = texture(outputResultMap, v_uv);\n#endif\n}"}],[{vert:"\nprecision highp float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec3 a_normal;\nlayout(location = 2) in vec2 a_texCoord;\nlayout(location = 3) in vec4 a_tangent;\nlayout(location = 0) out mediump vec4 viewDir;\nvec4 vert () {\nviewDir = vec4(a_position, 1.0);\nmat4 matViewRotOnly = mat4(mat3(cc_matView));\nvec4 pos = matViewRotOnly * viewDir;\nif (cc_matProj[3].w > 0.0) {\nmat4 matProj = cc_matProj;\nvec2 scale = vec2(48.0, 24.0);\nmatProj[0].xy *= scale;\nmatProj[1].xy *= scale;\nmatProj[2].zw = vec2(-1.0);\nmatProj[3].zw = vec2(0.0);\npos = matProj * pos;\n} else {\npos = cc_matProj * pos;\n}\npos.z = 0.99999 * pos.w;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(set = 0, binding = 4) uniform samplerCube cc_environment;\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n}\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = ACESToneMap(color.rgb);\n#endif\ncolor.rgb = sqrt(color.rgb);\nreturn color;\n}\nlayout(location = 0) in mediump vec4 viewDir;\nvec4 frag () {\n#if USE_RGBE_CUBEMAP\nvec3 c = unpackRGBE(texture(cc_environment, viewDir.xyz));\n#else\nvec3 c = SRGBToLinear(texture(cc_environment, viewDir.xyz).rgb);\n#endif\nreturn CCFragOutput(vec4(c * cc_ambientSky.w, 1.0));\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec4 a_color;\nlayout(location = 0) out vec2 v_uv;\nlayout(set = 1, binding = 0) uniform Constants {\nvec4 offset;\n};\nlayout(set = 1, binding = 1) uniform PerFrameInfo {\nvec4 digits[8 * 10 / 4];\n};\nfloat getComponent(vec4 v, float i) {\nif (i < 1.0) { return v.x; }\nelse if (i < 2.0) { return v.y; }\nelse if (i < 3.0) { return v.z; }\nelse { return v.w; }\n}\nvec4 vert () {\nmat2 proj = mat2(cc_matProj[0].xy, cc_matProj[1].xy);\nproj /= abs(proj[1].x + proj[1].y);\nvec2 position = proj * a_position.xy + offset.xy;\nv_uv = a_color.xy;\nif (a_color.z >= 0.0) {\nfloat n = getComponent(digits[int(a_color.z)], a_color.w);\nv_uv += vec2(offset.z * n, 0.0);\n}\nreturn vec4(position, 0.0, 1.0);\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nlayout(location = 0) in vec2 v_uv;\nlayout(set = 1, binding = 2) uniform sampler2D mainTexture;\nvec4 frag () {\nreturn CCFragOutput(texture(mainTexture, v_uv));\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nlayout(location = 0) in vec2 a_position;\nlayout(location = 1) in vec2 a_texCoord;\nlayout(location = 0) out vec2 v_uv;\nlayout(set = 1, binding = 0) uniform Constant {\nvec4 u_buffer0;\nvec4 u_buffer1;\nmat4 u_projection;\n};\nvec4 vert () {\nvec2 worldPos = a_position * u_buffer1.xy + u_buffer1.zw;\nvec2 clipSpace = worldPos / u_buffer0.xy * 2.0 - 1.0;\nvec4 screenPos = u_projection * vec4(clipSpace, 0.0, 1.0);\nv_uv = a_texCoord;\nreturn screenPos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nlayout(location = 0) in vec2 v_uv;\nlayout(set = 1, binding = 1) uniform Factor {\nfloat u_percent;\n};\nlayout(set = 1, binding = 2) uniform sampler2D mainTexture;\nvec4 frag () {\nvec4 color = texture(mainTexture, v_uv);\nfloat percent = clamp(u_percent, 0.0, 1.0);\ncolor.xyz *= percent;\nreturn color;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}]]},Jm=e("builtinResMgr",i.builtinResMgr=new class{constructor(){this._device=null,this._resources={}}initBuiltinRes(e){this._device=e;const t=this._resources,n=new Uint8Array(16),s=new Uint8Array(16),r=new Uint8Array(16),o=new Uint8Array(16),a=new Uint8Array(16);let c=0;for(let e=0;e<4;e++)n[c]=0,n[c+1]=0,n[c+2]=0,n[c+3]=255,s[c]=0,s[c+1]=0,s[c+2]=0,s[c+3]=0,r[c]=119,r[c+1]=119,r[c+2]=119,r[c+3]=255,o[c]=255,o[c+1]=255,o[c+2]=255,o[c+3]=255,a[c]=127,a[c+1]=127,a[c+2]=255,a[c+3]=255,c+=4;const l=new Uint8Array(1024);c=0;for(let e=0;e<256;e++)l[c]=221,l[c+1]=221,l[c+2]=221,l[c+3]=255,c+=4;c=0;for(let e=0;e<8;e++){for(let e=0;e<8;e++)l[c]=85,l[c+1]=85,l[c+2]=85,l[c+3]=255,c+=4;c+=32}c+=32;for(let e=0;e<8;e++){for(let e=0;e<8;e++)l[c]=85,l[c+1]=85,l[c+2]=85,l[c+3]=255,c+=4;c+=32}const h={width:2,height:2,_data:n,_compressed:!1,format:ym.PixelFormat.RGBA8888},_={width:2,height:2,_data:s,_compressed:!1,format:ym.PixelFormat.RGBA8888},u={width:2,height:2,_data:r,_compressed:!1,format:ym.PixelFormat.RGBA8888},p={width:2,height:2,_data:o,_compressed:!1,format:ym.PixelFormat.RGBA8888},d={width:2,height:2,_data:a,_compressed:!1,format:ym.PixelFormat.RGBA8888},f={width:16,height:16,_data:l,_compressed:!1,format:ym.PixelFormat.RGBA8888},m=new jf(h),g=new ym;g._uuid="black-texture",g.image=m,t[g._uuid]=g;const v=new jf(_),y=new ym;y._uuid="empty-texture",y.image=v,t[y._uuid]=y;const x=new Pm;x._uuid="black-cube-texture",x.setMipFilter(Pm.Filter.NEAREST),x.image={front:new jf(h),back:new jf(h),left:new jf(h),right:new jf(h),top:new jf(h),bottom:new jf(h)},t[x._uuid]=x;const S=new jf(u),C=new ym;C._uuid="grey-texture",C.image=S,t[C._uuid]=C;const T=new jf(p),b=new ym;b._uuid="white-texture",b.image=T,t[b._uuid]=b;const E=new Pm;E._uuid="white-cube-texture",E.setMipFilter(Pm.Filter.NEAREST),E.image={front:new jf(p),back:new jf(p),left:new jf(p),right:new jf(p),top:new jf(p),bottom:new jf(p)},t[E._uuid]=E;const A=new jf(d),P=new ym;P._uuid="normal-texture",P.image=A,t[P._uuid]=P;const w=new jf(f),I=new ym;I._uuid="default-texture",I.image=w,t[I._uuid]=I;const R=new Pm;if(R.setMipFilter(Pm.Filter.NEAREST),R._uuid="default-cube-texture",R.image={front:new jf(f),back:new jf(f),left:new jf(f),right:new jf(f),top:new jf(f),bottom:new jf(f)},t[R._uuid]=R,i.SpriteFrame){const e=new i.SpriteFrame,n=m,s=new ym;s.image=n,e.texture=s,e._uuid="default-spriteframe",t[e._uuid]=e}const D=$m(e);if(!D)return Promise.reject(Error("Failed to initialize builtin shaders: unknown device."));const O=Qm[D];return O?Promise.resolve().then((()=>{Im.forEach(((e,t)=>{const n=Object.assign(new i.EffectAsset,e);n.shaders.forEach(((e,n)=>{const i=O[t][n];i&&(e[D]=i)})),n.hideInEditor=!0,n.onLoaded()})),this._initMaterials()})):Promise.reject(Error(`Current device is requiring builtin shaders of version ${D} but shaders of that version are not assembled in this build.`))}get(e){return this._resources[e]}_initMaterials(){const e=this._resources,t=[],n=new i.Material;n._uuid="standard-material",n.initialize({effectName:"standard"}),e[n._uuid]=n,t.push(n);const s=new i.Material;s._uuid="missing-effect-material",s.initialize({effectName:"unlit",defines:{USE_COLOR:!0}}),s.setProperty("mainColor",i.color("#ffff00")),e[s._uuid]=s,t.push(s);const r=new i.Material;r._uuid="missing-material",r.initialize({effectName:"unlit",defines:{USE_COLOR:!0}}),r.setProperty("mainColor",i.color("#ff00ff")),e[r._uuid]=r,t.push(r);const o=new i.Material;o._uuid="default-clear-stencil",o.initialize({defines:{USE_TEXTURE:!1},effectName:"clear-stencil"}),e[o._uuid]=o,t.push(o);const a=new i.Material;a._uuid="ui-base-material",a.initialize({defines:{USE_TEXTURE:!1},effectName:"sprite"}),e[a._uuid]=a,t.push(a);const c=new i.Material;c._uuid="ui-sprite-material",c.initialize({defines:{USE_TEXTURE:!0,CC_USE_EMBEDDED_ALPHA:!1,IS_GRAY:!1},effectName:"sprite"}),e[c._uuid]=c,t.push(c);const l=new i.Material;l._uuid="ui-alpha-test-material",l.initialize({defines:{USE_TEXTURE:!0,USE_ALPHA_TEST:!0,CC_USE_EMBEDDED_ALPHA:!1,IS_GRAY:!1},effectName:"sprite"}),e[l._uuid]=l,t.push(l);const h=new i.Material;h._uuid="ui-sprite-gray-material",h.initialize({defines:{USE_TEXTURE:!0,CC_USE_EMBEDDED_ALPHA:!1,IS_GRAY:!0},effectName:"sprite"}),e[h._uuid]=h,t.push(h);const _=new i.Material;_._uuid="ui-sprite-alpha-sep-material",_.initialize({defines:{USE_TEXTURE:!0,CC_USE_EMBEDDED_ALPHA:!0,IS_GRAY:!1},effectName:"sprite"}),e[_._uuid]=_,t.push(_);const u=new i.Material;u._uuid="ui-sprite-gray-alpha-sep-material",u.initialize({defines:{USE_TEXTURE:!0,CC_USE_EMBEDDED_ALPHA:!0,IS_GRAY:!0},effectName:"sprite"}),e[u._uuid]=u,t.push(u);const p=new i.Material;p._uuid="ui-graphics-material",p.initialize({effectName:"graphics"}),e[p._uuid]=p,t.push(p);const d=new i.Material;d._uuid="default-particle-material",d.initialize({effectName:"particle"}),e[d._uuid]=d,t.push(d);{const n=new i.Material;n._uuid="default-particle-gpu-material",n.initialize({effectName:"particle-gpu"}),e[n._uuid]=n,t.push(n)}const f=new i.Material;f._uuid="default-trail-material",f.initialize({effectName:"particle-trail"}),e[f._uuid]=f,t.push(f);const m=new i.Material;m._uuid="default-billboard-material",m.initialize({effectName:"billboard"}),e[m._uuid]=m,t.push(m);const g=new i.Material;g._uuid="default-spine-material",g.initialize({defines:{USE_TEXTURE:!0,CC_USE_EMBEDDED_ALPHA:!1,IS_GRAY:!1},effectName:"spine"}),e[g._uuid]=g,t.push(g),i.game.on(i.Game.EVENT_GAME_INITED,(()=>{for(let e=0;e<t.length;++e){const n=t[e];for(let e=0;e<n.passes.length;++e)n.passes[e].tryCompile()}}))}}),eg=(()=>{const e=new Map;let t=0;return n=>"number"==typeof n?n:(e.has(n)||(e.set(n,1<<t),t++),e.get(n))})();class tg{constructor(e){this.instances=[],this.pass=void 0,this.hasPendingModels=!1,this.dynamicOffsets=[],this._device=void 0,this._device=e.device,this.pass=e}destroy(){for(let e=0;e<this.instances.length;++e){const t=this.instances[e];t.vb.destroy(),t.ia.destroy()}this.instances.length=0}merge(e,t,n,i=null){const s=t.buffer.length;if(!s)return;const r=e.inputAssembler,o=e.descriptorSet.getTexture(af);let a=i;a||(a=e.shaders[n]);const c=e.descriptorSet;for(let e=0;e<this.instances.length;++e){const n=this.instances[e];if(!(n.ia.indexBuffer!==r.indexBuffer||n.count>=1024)&&n.lightingMap===o&&n.stride===s){if(n.count>=n.capacity){n.capacity<<=1;const e=n.stride*n.capacity,t=n.data;n.data=new Uint8Array(e),n.data.set(t),n.vb.resize(e)}return n.shader!==a&&(n.shader=a),n.descriptorSet!==c&&(n.descriptorSet=c),n.data.set(t.buffer,n.stride*n.count++),void(this.hasPendingModels=!0)}}const l=this._device.createBuffer(new Lr(Us.VERTEX|Us.TRANSFER_DST,ks.HOST|ks.DEVICE,32*s,s)),h=new Uint8Array(32*s),_=r.vertexBuffers.slice(),u=r.attributes.slice(),p=r.indexBuffer;for(let e=0;e<t.attributes.length;e++){const n=t.attributes[e],i=new Qr(n.name,n.format,n.isNormalized,_.length,!0);u.push(i)}h.set(t.buffer),_.push(l);const d=new eo(u,_,p),f=this._device.createInputAssembler(d);this.instances.push({count:1,capacity:32,vb:l,data:h,ia:f,stride:s,shader:a,descriptorSet:c,lightingMap:o}),this.hasPendingModels=!0}uploadBuffers(e){for(let t=0;t<this.instances.length;++t){const n=this.instances[t];n.count&&(n.ia.instanceCount=n.count,e.updateBuffer(n.vb,n.data))}}clear(){for(let e=0;e<this.instances.length;++e)this.instances[e].count=0;this.hasPendingModels=!1}}class ng{constructor(e){this.batches=[],this.dynamicOffsets=[],this._device=void 0,this._device=e.device}destroy(){for(let e=0;e<this.batches.length;++e){const t=this.batches[e];for(let e=0;e<t.vbs.length;++e)t.vbs[e].destroy();t.vbIdx.destroy(),t.ia.destroy(),t.ubo.destroy()}this.batches.length=0}merge(e,t,n){const i=e.subMesh.flatBuffers;if(0===i.length)return;let s=0,r=0;const o=i[0].count,a=e.passes[t],c=e.shaders[t],l=e.descriptorSet;let h=!1;for(let e=0;e<this.batches.length;++e){const t=this.batches[e];if(t.vbs.length===i.length&&t.mergeCount<Hd.BATCHING_COUNT){h=!0;for(let e=0;e<t.vbs.length;++e)if(t.vbs[e].stride!==i[e].stride){h=!1;break}if(h){for(let e=0;e<t.vbs.length;++e){const n=i[e],r=t.vbs[e],a=t.vbDatas[e];s=(o+t.vbCount)*n.stride,s>r.size&&(r.resize(s),t.vbDatas[e]=new Uint8Array(s),t.vbDatas[e].set(a)),t.vbDatas[e].set(n.buffer,t.vbCount*n.stride)}let e=t.vbIdxData;r=4*(o+t.vbCount),r>t.vbIdx.size&&(t.vbIdx.resize(r),t.vbIdxData=new Float32Array(r/Float32Array.BYTES_PER_ELEMENT),t.vbIdxData.set(e),e=t.vbIdxData);const h=t.vbCount,_=h+o,u=t.mergeCount;if(e[h]!==u||e[_-1]!==u)for(let t=h;t<_;t++)e[t]=u+.1;return xi.toArray(t.uboData,n.transform.worldMatrix,Hd.MAT_WORLDS_OFFSET+16*t.mergeCount),t.mergeCount||(l.bindBuffer(Hd.BINDING,t.ubo),l.update(),t.pass=a,t.shader=c,t.descriptorSet=l),++t.mergeCount,t.vbCount+=o,void(t.ia.vertexCount+=o)}}}const _=[],u=[],p=[];for(let e=0;e<i.length;++e){const t=i[e],n=this._device.createBuffer(new Lr(Us.VERTEX|Us.TRANSFER_DST,ks.HOST|ks.DEVICE,t.count*t.stride,t.stride));n.update(t.buffer.buffer),_.push(n),u.push(new Uint8Array(n.size)),p.push(n)}const d=this._device.createBuffer(new Lr(Us.VERTEX|Us.TRANSFER_DST,ks.HOST|ks.DEVICE,4*o,4)),f=new Float32Array(o);f.fill(0),d.update(f),p.push(d);const m=e.inputAssembler.attributes,g=new Array(m.length+1);for(let e=0;e<m.length;++e)g[e]=m[e];g[m.length]=new Qr("a_dyn_batch_id",zs.R32F,!1,i.length);const v=new eo(g,p),y=this._device.createInputAssembler(v),x=this._device.createBuffer(new Lr(Us.UNIFORM|Us.TRANSFER_DST,ks.HOST|ks.DEVICE,Hd.SIZE,Hd.SIZE));l.bindBuffer(Hd.BINDING,x),l.update();const S=new Float32Array(Hd.COUNT);xi.toArray(S,n.transform.worldMatrix,Hd.MAT_WORLDS_OFFSET),this.batches.push({mergeCount:1,vbs:_,vbDatas:u,vbIdx:d,vbIdxData:f,vbCount:o,ia:y,ubo:x,uboData:S,pass:a,shader:c,descriptorSet:l})}clear(){for(let e=0;e<this.batches.length;++e){const t=this.batches[e];t.vbCount=0,t.mergeCount=0,t.ia.vertexCount=0}}}const ig=new Lr(Us.UNIFORM|Us.TRANSFER_DST,ks.DEVICE),sg=new zr(null),rg=new _o(null);let og;!function(e){e[e.NONE=0]="NONE",e[e.INSTANCING=1]="INSTANCING",e[e.VB_MERGING=2]="VB_MERGING"}(og||(og={}));class ag{static fillPipelineInfo(e,t){void 0!==t.priority&&e._setPriority(t.priority),void 0!==t.primitive&&e._setPrimitive(t.primitive),void 0!==t.stage&&e._setStage(t.stage),void 0!==t.dynamicStates&&e._setDynamicState(t.dynamicStates),void 0!==t.phase&&e._setPhase(eg(t.phase));const n=e._bs;if(t.blendState){const e=t.blendState,{targets:i}=e;i&&i.forEach(((e,t)=>{n.setTarget(t,e)})),void 0!==e.isA2C&&(n.isA2C=e.isA2C),void 0!==e.isIndepend&&(n.isIndepend=e.isIndepend),void 0!==e.blendColor&&(n.blendColor=e.blendColor)}e._rs.assign(t.rasterizerState),e._dss.assign(t.depthStencilState)}static getPassHash(e){let t=`${Zm.getKey(e.program,e.defines)},${e._primitive},${e._dynamicStates}`;var n;return t+=function(e){let t=`,bs,${e.isA2C}`;for(const n of e.targets)t+=`,bt,${n.blend},${n.blendEq},${n.blendAlphaEq},${n.blendColorMask}`,t+=`,${n.blendSrc},${n.blendDst},${n.blendSrcAlpha},${n.blendDstAlpha}`;return t}(e._bs),t+=function(e){let t=`,dss,${e.depthTest},${e.depthWrite},${e.depthFunc}`;return t+=`,${e.stencilTestFront},${e.stencilFuncFront},${e.stencilRefFront},${e.stencilReadMaskFront}`,t+=`,${e.stencilFailOpFront},${e.stencilZFailOpFront},${e.stencilPassOpFront},${e.stencilWriteMaskFront}`,t+=`,${e.stencilTestBack},${e.stencilFuncBack},${e.stencilRefBack},${e.stencilReadMaskBack}`,t+=`,${e.stencilFailOpBack},${e.stencilZFailOpBack},${e.stencilPassOpBack},${e.stencilWriteMaskBack}`,t}(e._dss),t+=`,rs,${(n=e._rs).cullMode},${n.depthBias},${n.isFrontFaceCCW}`,Ko(t,666)}get native(){return this._nativeObj}constructor(e){this._rootBuffer=null,this._buffers=[],this._descriptorSet=null,this._pipelineLayout=null,this._passIndex=0,this._propertyIndex=0,this._programName="",this._dynamics={},this._propertyHandleMap={},this._rootBlock=null,this._blocksInt=[],this._blocks=[],this._shaderInfo=null,this._defines={},this._properties={},this._shader=null,this._bs=new la,this._dss=new _a,this._rs=new ha,this._priority=pd.DEFAULT,this._stage=ud.DEFAULT,this._phase=eg("default"),this._primitive=cr.TRIANGLE_LIST,this._batchingScheme=og.NONE,this._dynamicStates=ur.NONE,this._instancedBuffers={},this._batchedBuffers={},this._hash=0,this._root=void 0,this._device=void 0,this._passHandle=0,this._rootBufferDirty=!1,this._root=e,this._device=e.device}initialize(e){this._doInit(e),this.resetUBOs(),this.resetTextures(),this.tryCompile()}getHandle(e,t=0,n=Bs.UNKNOWN){let i=this._propertyHandleMap[e];return i?(n?i=Bm(i,n):t&&(i=Bm(i,Nm(i)-t)),i+t):0}getBinding(e){const t=this.getHandle(e);return t?ag.getBindingFromHandle(t):-1}setUniform(e,t){const n=ag.getBindingFromHandle(e),i=ag.getTypeFromHandle(e),s=ag.getOffsetFromHandle(e),r=this._getBlockView(i,n);Gm[i](r,t,s),this._setRootBufferDirty(!0)}getUniform(e,t){const n=ag.getBindingFromHandle(e),i=ag.getTypeFromHandle(e),s=ag.getOffsetFromHandle(e),r=this._getBlockView(i,n);return Um[i](r,t,s)}setUniformArray(e,t){const n=ag.getBindingFromHandle(e),i=ag.getTypeFromHandle(e),s=Oo(i)>>2,r=this._getBlockView(i,n);let o=ag.getOffsetFromHandle(e);for(let e=0;e<t.length;e++,o+=s)null!==t[e]&&Gm[i](r,t[e],o);this._setRootBufferDirty(!0)}bindTexture(e,t,n){this._descriptorSet.bindTexture(e,t,n||0)}bindSampler(e,t,n){this._descriptorSet.bindSampler(e,t,n||0)}setDynamicState(e,t){const n=this._dynamics[e];n&&n.value===t||(n.value=t,n.dirty=!0)}overridePipelineStates(e,t){console.warn("base pass cannot override states, please use pass instance instead.")}_setRootBufferDirty(e){this._rootBufferDirty=e,this._nativeObj.setRootBufferDirty(e)}update(){this._descriptorSet?(this._rootBuffer&&this._rootBufferDirty&&(this._rootBuffer.update(this._rootBlock),this._setRootBufferDirty(!1)),this._descriptorSet.update(),this._nativeObj.update()):E(12006)}getInstancedBuffer(e=0){return this._instancedBuffers[e]||(this._instancedBuffers[e]=new tg(this))}getBatchedBuffer(e=0){return this._batchedBuffers[e]||(this._batchedBuffers[e]=new ng(this))}_initNative(){this._nativeObj||(this._nativeObj=new es,this._passHandle=fc.alloc(),this._nativePriority=fc.getTypedArray(this._passHandle,uc.PRIORITY),this._nativeStage=fc.getTypedArray(this._passHandle,uc.STAGE),this._nativePhase=fc.getTypedArray(this._passHandle,uc.PHASE),this._nativePrimitive=fc.getTypedArray(this._passHandle,uc.PRIMITIVE),this._nativeBatchingScheme=fc.getTypedArray(this._passHandle,uc.BATCHING_SCHEME),this._nativeDynamicStates=fc.getTypedArray(this._passHandle,uc.DYNAMIC_STATE),this._nativeHash=fc.getTypedArray(this._passHandle,uc.HASH),this._nativeObj.initWithData(fc.getBuffer(this._passHandle)))}_destroy(){this._nativeObj=null,this._passHandle&&fc.free(this._passHandle)}destroy(){for(let e=0;e<this._shaderInfo.blocks.length;e++){const t=this._shaderInfo.blocks[e];this._buffers[t.binding].destroy()}this._buffers=[],this._rootBuffer&&(this._rootBuffer.destroy(),this._rootBuffer=null);for(const e in this._instancedBuffers)this._instancedBuffers[e].destroy();for(const e in this._batchedBuffers)this._batchedBuffers[e].destroy();this._descriptorSet.destroy(),this._rs.destroy(),this._dss.destroy(),this._bs.destroy(),this._destroy()}resetUniform(e){const t=this.getHandle(e);if(!t)return;const n=ag.getTypeFromHandle(t),i=ag.getBindingFromHandle(t),s=ag.getOffsetFromHandle(t),r=ag.getCountFromHandle(t),o=this._getBlockView(n,i),a=this._properties[e],c=a&&a.value||km(n),l=(Oo(n)>>2)*r;for(let e=0;e+c.length<=l;e+=c.length)o.set(c,s+e);this._setRootBufferDirty(!0)}resetTexture(e,t){const n=this.getHandle(e);if(!n)return;const i=ag.getTypeFromHandle(n),s=ag.getBindingFromHandle(n),r=this._properties[e],o=r&&r.value,a=o?`${o}-texture`:km(i),c=Jm.get(a),l=c&&c.getGFXTexture(),h=r&&void 0!==r.samplerHash?ia.unpackFromHash(r.samplerHash):c&&c.getSamplerInfo(),_=this._device.getSampler(h);this._descriptorSet.bindSampler(s,_,t),this._descriptorSet.bindTexture(s,l,t)}resetUBOs(){for(let e=0;e<this._shaderInfo.blocks.length;e++){const t=this._shaderInfo.blocks[e];let n=0;for(let e=0;e<t.members.length;e++){const i=t.members[e],s=this._getBlockView(i.type,t.binding),r=this._properties[i.name],o=r&&r.value||km(i.type),a=(Oo(i.type)>>2)*i.count;for(let e=0;e+o.length<=a;e+=o.length)s.set(o,n+e);n+=a}}this._setRootBufferDirty(!0)}resetTextures(){for(let e=0;e<this._shaderInfo.samplerTextures.length;e++){const t=this._shaderInfo.samplerTextures[e];for(let e=0;e<t.count;e++)this.resetTexture(t.name,e)}}tryCompile(){const{pipeline:e}=this._root;if(!e)return!1;this._syncBatchingScheme();const t=Zm.getGFXShader(this._device,this._programName,this._defines,e);return t?(this._shader=t,this._setPipelineLayout(Zm.getTemplateInfo(this._programName).pipelineLayout),this._setHash(ag.getPassHash(this)),!0):(console.warn(`create shader ${this._programName} failed`),!1)}getShaderVariant(e=null){if(!this._shader&&!this.tryCompile())return console.warn("pass resources incomplete"),null;if(!e)return this._shader;const{pipeline:t}=this._root;for(let t=0;t<e.length;t++){const n=e[t];this._defines[n.name]=n.value}const n=Zm.getGFXShader(this._device,this._programName,this._defines,t);for(let t=0;t<e.length;t++){const n=e[t];delete this._defines[n.name]}return n}beginChangeStatesSilently(){}endChangeStatesSilently(){}_setPriority(e){this._priority=e,this._nativePriority[0]=e}_setStage(e){this._stage=e,this._nativeStage[0]=e}_setPhase(e){this._phase=e,this._nativePhase[0]=e}_setPrimitive(e){this._primitive=e,this._nativePrimitive[0]=e}_setState(e,t,n,i){this._bs=e,this._dss=t,this._rs=n,this._descriptorSet=i,this._nativeObj.blendState=e.native,this._nativeObj.depthStencilState=t.native,this._nativeObj.rasterizerState=n.native,this._nativeObj.descriptorSet=i}_doInit(e,t=!1){this._initNative(),this._setPriority(pd.DEFAULT),this._setStage(ud.DEFAULT),this._setPhase(eg("default")),this._setPrimitive(cr.TRIANGLE_LIST),this._passIndex=e.passIndex,this._propertyIndex=void 0!==e.propertyIndex?e.propertyIndex:e.passIndex,this._programName=e.program,this._defines=t?{...e.defines}:e.defines,this._shaderInfo=Zm.getTemplate(e.program),this._properties=e.properties||this._properties;const n=this._device;ag.fillPipelineInfo(this,e),e.stateOverrides&&ag.fillPipelineInfo(this,e.stateOverrides),rg.layout=Zm.getDescriptorSetLayout(this._device,e.program),this._descriptorSet=this._device.createDescriptorSet(rg),this._setState(this._bs,this._dss,this._rs,this._descriptorSet);const i=this._shaderInfo.blocks,s=Zm.getTemplateInfo(e.program),{blockSizes:r,handleMap:o}=s,a=n.capabilities.uboOffsetAlignment,c=[];let l=0,h=0;for(let e=0;e<i.length;e++){const t=r[e];c.push(h),h+=Math.ceil(t/a)*a,l=t}const _=c[c.length-1]+l;_&&(ig.size=16*Math.ceil(_/16),this._rootBuffer=n.createBuffer(ig),this._rootBlock=new ArrayBuffer(_),this._nativeObj.setRootBufferAndBlock(this._rootBuffer,this._rootBlock));for(let e=0,t=0;e<i.length;e++){const{binding:s}=i[e],o=r[e];sg.buffer=this._rootBuffer,sg.offset=c[t++],sg.range=16*Math.ceil(o/16);const a=this._buffers[s]=n.createBuffer(sg);this._blocks[s]=new Float32Array(this._rootBlock,sg.offset,o/Float32Array.BYTES_PER_ELEMENT),this._blocksInt[s]=new Int32Array(this._blocks[s].buffer,this._blocks[s].byteOffset,this._blocks[s].length),this._descriptorSet.bindBuffer(s,a)}const u=this._propertyHandleMap=o,p={};for(const e in this._properties){const t=this._properties[e];t.handleInfo&&(p[e]=this.getHandle.apply(this,t.handleInfo))}Object.assign(u,p)}_syncBatchingScheme(){this._defines.USE_INSTANCING?this._device.hasFeature(Ls.INSTANCED_ARRAYS)?this._setBatchingScheme(og.INSTANCING):(this._defines.USE_INSTANCING=!1,this._setBatchingScheme(og.NONE)):this._defines.USE_BATCHING?this._setBatchingScheme(og.VB_MERGING):this._setBatchingScheme(og.NONE)}_setBatchingScheme(e){this._batchingScheme=e,this._nativeBatchingScheme[0]=e}_setDynamicState(e){this._dynamicStates=e,this._nativeDynamicStates[0]=e}_setHash(e){this._hash=e,this._nativeHash[0]=e}_getBlockView(e,t){return e<Bs.FLOAT?this._blocksInt[t]:this._blocks[t]}_setPipelineLayout(e){this._pipelineLayout=e,this._nativeObj.setPipelineLayout(e)}_initPassFromTarget(e,t,n,i){this._initNative(),this._setPriority(e.priority),this._setStage(e.stage),this._setPhase(e.phase),this._setBatchingScheme(e.batchingScheme),this._setPrimitive(e.primitive),this._setDynamicState(e.dynamicStates),this._setState(n,t,e.rasterizerState,e.descriptorSet),this._passIndex=e.passIndex,this._propertyIndex=e.propertyIndex,this._programName=e.program,this._defines=e.defines,this._shaderInfo=e._shaderInfo,this._properties=e._properties,this._blocks=e._blocks,this._blocksInt=e._blocksInt,this._dynamics=e._dynamics,this._shader=e._shader,this._setPipelineLayout(Zm.getTemplateInfo(this._programName).pipelineLayout),this._setHash(e._hash^i)}get root(){return this._root}get device(){return this._device}get shaderInfo(){return this._shaderInfo}get localSetLayout(){return Zm.getDescriptorSetLayout(this._device,this._programName,!0)}get program(){return this._programName}get properties(){return this._properties}get defines(){return this._defines}get passIndex(){return this._passIndex}get propertyIndex(){return this._propertyIndex}get dynamics(){return this._dynamics}get blocks(){return this._blocks}get blocksInt(){return this._blocksInt}get rootBufferDirty(){return this._rootBufferDirty}get priority(){return this._priority}get primitive(){return this._primitive}get stage(){return this._stage}get phase(){return this._phase}get rasterizerState(){return this._rs}get depthStencilState(){return this._dss}get blendState(){return this._bs}get dynamicStates(){return this._dynamicStates}get batchingScheme(){return this._batchingScheme}get descriptorSet(){return this._descriptorSet}get hash(){return this._hash}get pipelineLayout(){return this._pipelineLayout}}ag.getTypeFromHandle=Nm,ag.getBindingFromHandle=Lm,ag.getCountFromHandle=zm,ag.getOffsetFromHandle=Fm;const cg=new _o(null);class lg{constructor(){this._device=null,this._passes=null,this._shaders=null,this._subMesh=null,this._patches=null,this._priority=pd.DEFAULT,this._inputAssembler=null,this._descriptorSet=null,this._worldBoundDescriptorSet=null,this._planarInstanceShader=null,this._planarShader=null,this._reflectionTex=null,this._reflectionSampler=null}_destroyDescriptorSet(){this._descriptorSet.destroy(),this._nativeObj.setDescriptorSet(null),this._descriptorSet=null}_destroyWorldBoundDescriptorSet(){this._worldBoundDescriptorSet.destroy(),this._nativeObj.setWorldBoundDescriptorSet(null),this._worldBoundDescriptorSet=null}_destroyInputAssembler(){this._inputAssembler.destroy(),this._nativeObj.setInputAssembler(null),this._inputAssembler=null}_createDescriptorSet(e){this._descriptorSet=this._device.createDescriptorSet(e),this._nativeObj.setDescriptorSet(this._descriptorSet)}_createWorldBoundDescriptorSet(e){this._worldBoundDescriptorSet=this._device.createDescriptorSet(e),this._nativeObj.setWorldBoundDescriptorSet(this._worldBoundDescriptorSet)}set passes(e){e.length>8?E(12004,8):(this._passes=e,this._flushPassInfo(),this._passes[0].batchingScheme===og.VB_MERGING&&(this.subMesh.genFlatBuffers(),this._setSubMesh(this.subMesh)),this._descriptorSet&&(this._destroyDescriptorSet(),cg.layout=e[0].localSetLayout,this._createDescriptorSet(cg)))}get passes(){return this._passes}get shaders(){return this._shaders}set subMesh(e){this._inputAssembler.destroy(),this._inputAssembler.initialize(e.iaInfo),this._passes[0].batchingScheme===og.VB_MERGING&&this.subMesh.genFlatBuffers(),this._setSubMesh(e)}get subMesh(){return this._subMesh}set priority(e){this._priority=e,this._nativeObj.setPriority(e)}get priority(){return this._priority}get inputAssembler(){return this._inputAssembler}get descriptorSet(){return this._descriptorSet}get worldBoundDescriptorSet(){return this._worldBoundDescriptorSet}get patches(){return this._patches}get planarInstanceShader(){return this._planarInstanceShader}get planarShader(){return this._planarShader}_setInputAssembler(e){this._inputAssembler=this._device.createInputAssembler(e),this._nativeObj.setInputAssembler(this._inputAssembler)}_setSubMesh(e){this._subMesh=e,this._nativeObj.setSubMeshBuffers(e.flatBuffers)}get native(){return this._nativeObj}_init(){this._nativeObj=new ts}initialize(e,t,n=null){const s=i.director.root;this._device=s.device,cg.layout=t[0].localSetLayout,this._init(),this._setInputAssembler(e.iaInfo),this._createDescriptorSet(cg);const r=i.director.root.pipeline.pipelineSceneData.getOcclusionQueryPass(),o=new _o(null);if(o.layout=r.localSetLayout,this._createWorldBoundDescriptorSet(o),this._setSubMesh(e),this._patches=n,this._passes=t,this._flushPassInfo(),t[0].batchingScheme===og.VB_MERGING&&(this.subMesh.genFlatBuffers(),this._setSubMesh(this.subMesh)),this.priority=pd.DEFAULT,t[0].phase===eg("reflection")){let e=s.mainWindow.width,t=s.mainWindow.height;const n=512;t<e?(e=n*e/t,t=n):(e=n,t=n*t/e),this._reflectionTex=this._device.createTexture(new Gr(Vs.TEX2D,js.STORAGE|js.TRANSFER_SRC|js.SAMPLED,zs.RGBA8,e,t)),this.descriptorSet.bindTexture(pf,this._reflectionTex),this._reflectionSampler=this._device.getSampler(new kr(Ys.LINEAR,Ys.LINEAR,Ys.NONE,Ks.CLAMP,Ks.CLAMP,Ks.CLAMP)),this.descriptorSet.bindSampler(pf,this._reflectionSampler),this.descriptorSet.bindTexture(mf,this._reflectionTex)}}_initNativePlanarShadowShader(e){this._planarShader=e.getPlanarShader(this._patches),this._nativeObj.setPlanarShader(this._planarShader)}initPlanarShadowShader(){const e=i.director.root.pipeline.pipelineSceneData.shadows;this._initNativePlanarShadowShader(e)}_initNativePlanarShadowInstanceShader(e){this._planarInstanceShader=e.getPlanarInstanceShader(this._patches),this._nativeObj.setPlanarInstanceShader(this._planarInstanceShader)}initPlanarShadowInstanceShader(){const e=i.director.root.pipeline.pipelineSceneData.shadows;this._initNativePlanarShadowInstanceShader(e)}_destroy(){this._nativeObj=null}destroy(){this._destroyDescriptorSet(),this._destroyWorldBoundDescriptorSet(),this._destroyInputAssembler(),this.priority=pd.DEFAULT,this._patches=null,this._subMesh=null,this._passes=null,this._shaders=null,this._reflectionTex&&this._reflectionTex.destroy(),this._reflectionTex=null,this._reflectionSampler=null,this._destroy()}update(){for(let e=0;e<this._passes.length;++e)this._passes[e].update();this._descriptorSet.update(),this._worldBoundDescriptorSet.update()}onPipelineStateChanged(){const e=this._passes;if(e){for(let t=0;t<e.length;t++){const n=e[t];n.beginChangeStatesSilently(),n.tryCompile(),n.endChangeStatesSilently()}this._flushPassInfo()}}onMacroPatchesStateChanged(e){this._patches=e;const t=this._passes;if(t){for(let e=0;e<t.length;e++){const n=t[e];n.beginChangeStatesSilently(),n.tryCompile(),n.endChangeStatesSilently()}this._flushPassInfo()}}_flushPassInfo(){const e=this._passes;if(e){this._shaders||(this._shaders=[]),this._shaders.length=e.length;for(let t=0,n=e.length;t<n;t++)this._shaders[t]=e[t].getShaderVariant(this.patches);{const t=e.map((e=>e.native));this._nativeObj.setPasses(t),this._nativeObj.setShaders(this._shaders)}}}}const hg=new xi,_g=[{name:"CC_RECEIVE_SHADOW",value:!0}];let ug;!function(e){e[e.DEFAULT=0]="DEFAULT",e[e.SKINNING=1]="SKINNING",e[e.BAKED_SKINNING=2]="BAKED_SKINNING",e[e.BATCH_2D=3]="BATCH_2D",e[e.PARTICLE_BATCH=4]="PARTICLE_BATCH",e[e.LINE=5]="LINE"}(ug||(ug={}));const pg=new kr(Ys.LINEAR,Ys.LINEAR,Ys.NONE,Ks.CLAMP,Ks.CLAMP,Ks.CLAMP),dg=new kr(Ys.LINEAR,Ys.LINEAR,Ys.LINEAR,Ks.CLAMP,Ks.CLAMP,Ks.CLAMP);class fg{get subModels(){return this._subModels}get inited(){return this._inited}get worldBounds(){return this._worldBounds}get modelBounds(){return this._modelBounds}get localBuffer(){return this._localBuffer}get worldBoundBuffer(){return this._worldBoundBuffer}get updateStamp(){return this._updateStamp}get isInstancingEnabled(){return this._instMatWorldIdx>=0}get receiveShadow(){return this._receiveShadow}set receiveShadow(e){this._setReceiveShadow(e),this.onMacroPatchesStateChanged()}get castShadow(){return this._castShadow}set castShadow(e){this._castShadow=e,this._nativeObj.setCastShadow(e)}get node(){return this._node}set node(e){this._node=e,this._nativeObj.setNode(e.native)}get transform(){return this._transform}set transform(e){this._transform=e,this._nativeObj.setTransform(e.native)}get visFlags(){return this._visFlags}set visFlags(e){this._visFlags=e,this._nativeObj.seVisFlag(e)}get enabled(){return this._enabled}set enabled(e){this._enabled=e,this._nativeObj.setEnabled(e)}get native(){return this._nativeObj}constructor(){this.type=ug.DEFAULT,this.scene=null,this.isDynamicBatching=!1,this.instancedAttributes={buffer:null,views:[],attributes:[]},this._worldBounds=null,this._modelBounds=null,this._subModels=[],this._node=null,this._transform=null,this._device=void 0,this._inited=!1,this._descriptorSetCount=1,this._updateStamp=-1,this._localDataUpdated=!0,this._localData=new Float32Array(Ud.COUNT),this._localBuffer=null,this._instMatWorldIdx=-1,this._lightmap=null,this._lightmapUVParam=new wi,this._worldBoundBuffer=null,this._receiveShadow=!1,this._castShadow=!1,this._enabled=!0,this._visFlags=_d.Enum.NONE,this._device=i.director.root.device}_setReceiveShadow(e){this._receiveShadow=e,this._nativeObj.setReceiveShadow(e)}_init(){this._nativeObj=new Bi}initialize(){this._inited||(this._init(),this._setReceiveShadow(!0),this.castShadow=!1,this.enabled=!0,this.visFlags=_d.Enum.NONE,this._inited=!0)}_destroySubmodel(e){e.destroy()}_destroy(){this._nativeObj=null}destroy(){const e=this._subModels;for(let t=0;t<e.length;t++){const e=this._subModels[t];this._destroySubmodel(e)}this._localBuffer&&(this._localBuffer.destroy(),this._localBuffer=null),this._worldBoundBuffer&&(this._worldBoundBuffer.destroy(),this._worldBoundBuffer=null),this._worldBounds=null,this._modelBounds=null,this._subModels.length=0,this._inited=!1,this._localDataUpdated=!0,this._transform=null,this._node=null,this.isDynamicBatching=!1,this._destroy()}attachToScene(e){this.scene=e,this._localDataUpdated=!0}detachFromScene(){this.scene=null}updateTransform(e){const t=this.transform;if(t.hasChangedFlags||t._dirtyFlags){t.updateWorldTransform(),this._localDataUpdated=!0;const e=this._worldBounds;this._modelBounds&&e&&this._modelBounds.transform(t._mat,t._pos,t._rot,t._scale,e)}}updateWorldBound(){const e=this.transform;if(null!==e){e.updateWorldTransform(),this._localDataUpdated=!0;const t=this._worldBounds;this._modelBounds&&t&&this._modelBounds.transform(e._mat,e._pos,e._rot,e._scale,t)}}_applyLocalData(){}_applyLocalBuffer(){this._nativeObj.setLocalBuffer(this._localBuffer)}_applyWorldBoundBuffer(){this._nativeObj.setWorldBoundBuffer(this._worldBoundBuffer)}updateUBOs(e){const t=this._subModels;for(let e=0;e<t.length;e++)t[e].update();if(this._updateStamp=e,!this._localDataUpdated)return;this._localDataUpdated=!1;const n=this.transform._mat,i=this._instMatWorldIdx;if(i>=0){const e=this.instancedAttributes.views;!function(e,t,n,i){t[0]=e.m00,t[1]=e.m01,t[2]=e.m02,t[3]=e.m12,n[0]=e.m04,n[1]=e.m05,n[2]=e.m06,n[3]=e.m13,i[0]=e.m08,i[1]=e.m09,i[2]=e.m10,i[3]=e.m14}(n,e[i],e[i+1],e[i+2])}else this._localBuffer&&(xi.toArray(this._localData,n,Ud.MAT_WORLD_OFFSET),xi.inverseTranspose(hg,n),xi.toArray(this._localData,hg,Ud.MAT_WORLD_IT_OFFSET),this._localBuffer.update(this._localData),this._applyLocalData(),this._applyLocalBuffer())}_updateNativeBounds(){this._nativeObj.setBounds(this._worldBounds.native)}createBoundingShape(e,t){e&&t&&(this._modelBounds=Ac.fromPoints(Ac.create(),e,t),this._worldBounds=Ac.clone(this._modelBounds),this._updateNativeBounds())}_createSubModel(){return new lg}initSubModel(e,t,n){this.initialize(),null==this._subModels[e]?this._subModels[e]=this._createSubModel():this._subModels[e].destroy(),this._subModels[e].initialize(t,n.passes,this.getMacroPatches(e)),this._subModels[e].initPlanarShadowShader(),this._subModels[e].initPlanarShadowInstanceShader(),this._updateAttributesAndBinding(e),this._nativeObj.setSubModel(e,this._subModels[e].native)}setSubModelMesh(e,t){this._subModels[e]&&(this._subModels[e].subMesh=t)}setSubModelMaterial(e,t){this._subModels[e]&&(this._subModels[e].passes=t.passes,this._updateAttributesAndBinding(e))}onGlobalPipelineStateChanged(){const e=this._subModels;for(let t=0;t<e.length;t++)e[t].onPipelineStateChanged()}onMacroPatchesStateChanged(){const e=this._subModels;for(let t=0;t<e.length;t++)e[t].onMacroPatchesStateChanged(this.getMacroPatches(t))}updateLightingmap(e,t){wi.toArray(this._localData,t,Ud.LIGHTINGMAP_UVPARAM),this._localDataUpdated=!0,this._lightmap=e,this._lightmapUVParam=t,null===e&&(e=Jm.get("empty-texture"));const n=e.getGFXTexture();if(n){const i=this._device.getSampler(e.mipmaps.length>1?dg:pg),s=this._subModels;for(let e=0;e<s.length;e++){const{descriptorSet:t}=s[e];t.bindTexture(af,n),t.bindSampler(af,i),t.update()}this._nativeObj.updateLightingmap(t,i,n)}}getMacroPatches(e){return this.receiveShadow?_g:null}_updateAttributesAndBinding(e){const t=this._subModels[e];if(!t)return;this._initLocalDescriptors(e),this._updateLocalDescriptors(e,t.descriptorSet),this._initWorldBoundDescriptors(e),this._updateWorldBoundDescriptors(e,t.worldBoundDescriptorSet);const n=t.passes[0].getShaderVariant(t.patches);this._updateInstancedAttributes(n.attributes,t.passes[0])}_getInstancedAttributeIndex(e){const{attributes:t}=this.instancedAttributes;for(let n=0;n<t.length;n++)if(t[n].name===e)return n;return-1}_setInstMatWorldIdx(e){this._instMatWorldIdx=e,this._nativeObj.setInstMatWorldIdx(e)}_updateInstancedAttributes(e,t){if(!t.device.hasFeature(Ls.INSTANCED_ARRAYS))return;let n=0;for(let t=0;t<e.length;t++){const i=e[t];i.isInstanced&&(n+=To[i.format].size)}const i=this.instancedAttributes;i.buffer=new Uint8Array(n),i.views.length=i.attributes.length=0;let s=0;for(let t=0;t<e.length;t++){const n=e[t];if(!n.isInstanced)continue;const r=new Qr;r.format=n.format,r.name=n.name,r.isNormalized=n.isNormalized,r.location=n.location,i.attributes.push(r);const o=To[n.format],a=new(Mo(o))(i.buffer.buffer,s,o.count);i.views.push(a),s+=o.size}t.batchingScheme===og.INSTANCING&&t.getInstancedBuffer().destroy(),this._setInstMatWorldIdx(this._getInstancedAttributeIndex("a_matWorld0")),this._localDataUpdated=!0,this._nativeObj.setInstancedAttrBlock(i.buffer.buffer,i.views,i.attributes)}_initLocalDescriptors(e){this._localBuffer||(this._localBuffer=this._device.createBuffer(new Lr(Us.UNIFORM|Us.TRANSFER_DST,ks.DEVICE,Ud.SIZE,Ud.SIZE)),this._applyLocalBuffer())}_initWorldBoundDescriptors(e){this._worldBoundBuffer||(this._worldBoundBuffer=this._device.createBuffer(new Lr(Us.UNIFORM|Us.TRANSFER_DST,ks.DEVICE,Gd.SIZE,Gd.SIZE)),this._applyWorldBoundBuffer())}_updateLocalDescriptors(e,t){this._localBuffer&&t.bindBuffer(Ud.BINDING,this._localBuffer)}_updateWorldBoundDescriptors(e,t){this._worldBoundBuffer&&t.bindBuffer(Gd.BINDING,this._worldBoundBuffer)}}let mg,gg;!function(e){e[e.LOCAL=0]="LOCAL",e[e.WORLD=1]="WORLD"}(mg||(mg={})),function(e){e[e.NONE=0]="NONE",e[e.POSITION=1]="POSITION",e[e.ROTATION=2]="ROTATION",e[e.SCALE=4]="SCALE",e[e.RS=e.ROTATION|e.SCALE]="RS",e[e.TRS=e.POSITION|e.ROTATION|e.SCALE]="TRS",e[e.TRS_MASK=~e.TRS]="TRS_MASK"}(gg||(gg={})),i.internal.TransformBit=gg;class vg{get root(){return this._root}get name(){return this._name}get cameras(){return this._cameras}get mainLight(){return this._mainLight}get sphereLights(){return this._sphereLights}get spotLights(){return this._spotLights}get models(){return this._models}get native(){return this._nativeObj}get batches(){return this._batches}static registerCreateFunc(e){e._createSceneFun=e=>new vg(e)}constructor(e){this._root=void 0,this._name="",this._cameras=[],this._models=[],this._batches=[],this._directionalLights=[],this._sphereLights=[],this._spotLights=[],this._mainLight=null,this._modelId=0,this._root=e,this._createNativeObject()}initialize(e){return this._name=e.name,!0}activate(){this._nativeObj.activate()}update(e){{const t=[];for(let e=0,n=this._batches.length;e<n;++e)t.push(this._batches[e].native);return this._nativeObj.updateBatches(t),void this._nativeObj.update(e)}}_destroy(){this._nativeObj=null}destroy(){this.removeCameras(),this.removeSphereLights(),this.removeSpotLights(),this.removeModels(),this._destroy()}addCamera(e){e.attachToScene(this),this._cameras.push(e)}removeCamera(e){for(let t=0;t<this._cameras.length;++t)if(this._cameras[t]===e)return this._cameras.splice(t,1),void e.detachFromScene()}removeCameras(){for(const e of this._cameras)e.detachFromScene();this._cameras.splice(0)}setMainLight(e){this._mainLight=e,this._nativeObj.setMainLight(e?e.native:null)}unsetMainLight(e){if(this._mainLight===e){const e=this._directionalLights;if(e.length)return this.setMainLight(e[e.length-1]),void(this._mainLight.node&&(this._mainLight.node.hasChangedFlags|=gg.ROTATION));this.setMainLight(null)}}addDirectionalLight(e){e.attachToScene(this),this._directionalLights.push(e)}removeDirectionalLight(e){for(let t=0;t<this._directionalLights.length;++t)if(this._directionalLights[t]===e)return e.detachFromScene(),void this._directionalLights.splice(t,1)}addSphereLight(e){e.attachToScene(this),this._sphereLights.push(e),this._nativeObj.addSphereLight(e.native)}removeSphereLight(e){for(let t=0;t<this._sphereLights.length;++t)if(this._sphereLights[t]===e)return e.detachFromScene(),this._sphereLights.splice(t,1),void this._nativeObj.removeSphereLight(e.native)}addSpotLight(e){e.attachToScene(this),this._spotLights.push(e),this._nativeObj.addSpotLight(e.native)}removeSpotLight(e){for(let t=0;t<this._spotLights.length;++t)if(this._spotLights[t]===e)return e.detachFromScene(),this._spotLights.splice(t,1),void this._nativeObj.removeSpotLight(e.native)}removeSphereLights(){for(let e=0;e<this._sphereLights.length;++e)this._sphereLights[e].detachFromScene();this._sphereLights.length=0,this._nativeObj.removeSphereLights()}removeSpotLights(){for(let e=0;e<this._spotLights.length;++e)this._spotLights[e].detachFromScene();this._spotLights=[],this._nativeObj.removeSpotLights()}addModel(e){switch(e.attachToScene(this),this._models.push(e),e.type){case ug.SKINNING:this._nativeObj.addSkinningModel(e.native);break;case ug.BAKED_SKINNING:this._nativeObj.addBakedSkinningModel(e.native);break;case ug.DEFAULT:default:this._nativeObj.addModel(e.native)}}removeModel(e){for(let t=0;t<this._models.length;++t)if(this._models[t]===e)return e.detachFromScene(),this._models.splice(t,1),void this._nativeObj.removeModel(t)}removeModels(){for(const e of this._models)e.detachFromScene(),e.destroy();this._models.length=0,this._nativeObj.removeModels()}addBatch(e){this._batches.push(e)}removeBatch(e){for(let t=0;t<this._batches.length;++t)if(this._batches[t]===e)return this._batches.splice(t,1),void this._nativeObj.removeBatch(t)}removeBatches(){this._batches.length=0,this._nativeObj.removeBatches()}onGlobalPipelineStateChanged(){for(const e of this._models)e.onGlobalPipelineStateChanged()}generateModelId(){return this._modelId++}_createNativeObject(){this._nativeObj||(this._nativeObj=new Qi)}}var yg,xg,Sg,Cg,Tg,bg,Eg,Ag;let Pg=e("EffectAsset",Zc("cc.EffectAsset")((Ag=Eg=class e extends bh{constructor(...e){super(...e),Fc(this,"techniques",Sg,this),Fc(this,"shaders",Cg,this),Fc(this,"combinations",Tg,this),Fc(this,"hideInEditor",bg,this)}static register(t){e._effects[t.name]=t}static remove(t){if("string"!=typeof t)e._effects[t.name]&&e._effects[t.name].equals(t)&&delete e._effects[t.name];else{if(e._effects[t])return void delete e._effects[t];for(const n in e._effects)if(e._effects[n]._uuid===t)return void delete e._effects[n]}}static get(t){if(e._effects[t])return e._effects[t];for(const n in e._effects)if(e._effects[n]._uuid===t)return e._effects[n];return null}static getAll(){return e._effects}onLoaded(){Zm.register(this),e.register(this),i.game.once(i.Game.EVENT_ENGINE_INITED,this._precompile,this)}_precompile(){const e=i.director.root;for(let t=0;t<this.shaders.length;t++){const n=this.shaders[t],i=this.combinations[t];i&&Object.keys(i).reduce(((e,t)=>e.reduce(((e,n)=>{const s=i[t];for(let i=0;i<s.length;++i){const r={...n};r[t]=s[i],e.push(r)}return e}),[])),[{}]).forEach((t=>Zm.getGFXShader(e.device,n.name,t,e.pipeline)))}}destroy(){return e.remove(this),super.destroy()}initDefault(t){super.initDefault(t);const n=e.get("unlit");this.name="unlit",this.shaders=n.shaders,this.combinations=n.combinations,this.techniques=n.techniques}validate(){return this.techniques.length>0&&this.shaders.length>0}},Eg._effects={},Sg=Bc((xg=Ag).prototype,"techniques",[il,dl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Cg=Bc(xg.prototype,"shaders",[il,dl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Tg=Bc(xg.prototype,"combinations",[il,dl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),bg=Bc(xg.prototype,"hideInEditor",[il,rl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),yg=xg))||yg);function wg(e,t){e.x=t.x*t.x,e.y=t.y*t.y,e.z=t.z*t.z}var Ig,Rg,Dg,Og,Mg,Ng,Lg,zg,Fg;i.EffectAsset=Pg;const Bg=new wi;let Ug=e("Material",(Ig=Zc("cc.Material"),Rg=Ol(Pg),Ig((Mg=Bc((Og=class e extends bh{static getHash(e){let t=0;for(const n of e.passes)t^=n.hash;return t}constructor(){super(),Fc(this,"_effectAsset",Mg,this),Fc(this,"_techIdx",Ng,this),Fc(this,"_defines",Lg,this),Fc(this,"_states",zg,this),Fc(this,"_props",Fg,this),this._passes=[],this._hash=0}get effectAsset(){return this._effectAsset}get effectName(){return this._effectAsset?this._effectAsset.name:""}get technique(){return this._techIdx}get passes(){return this._passes}get hash(){return this._hash}get parent(){return null}get owner(){return null}initialize(e){this._passes.length?T(12005):(this._defines||(this._defines=[]),this._states||(this._states=[]),this._props||(this._props=[]),this._fillInfo(e),this._update())}reset(e){this.initialize(e)}destroy(){return this._doDestroy(),super.destroy()}recompileShaders(e,t){console.warn(`Shaders in material asset '${this.name}' cannot be modified at runtime, please instantiate the material first.`)}overridePipelineStates(e,t){console.warn(`Pipeline states in material asset '${this.name}' cannot be modified at runtime, please instantiate the material first.`)}onLoaded(){this._update()}resetUniforms(e=!0){this._props.length=this._passes.length;for(let e=0;e<this._props.length;e++)this._props[e]={};if(e)for(const e of this._passes)e.resetUBOs(),e.resetTextures()}setProperty(e,t,n){let i=!1;if(void 0===n){const n=this._passes,s=n.length;for(let r=0;r<s;r++){const s=n[r];this._uploadProperty(s,e,t)&&(this._props[s.propertyIndex][e]=t,i=!0)}}else{if(n>=this._passes.length)return void console.warn(`illegal pass index: ${n}.`);const s=this._passes[n];this._uploadProperty(s,e,t)&&(this._props[s.propertyIndex][e]=t,i=!0)}i||console.warn(`illegal property name: ${e}.`)}getProperty(e,t){if(void 0===t){const t=this._props,n=t.length;for(let i=0;i<n;i++){const n=t[i];if(e in n)return n[e]}}else{if(t>=this._props.length)return console.warn(`illegal pass index: ${t}.`),null;const n=this._props[this._passes[t].propertyIndex];if(e in n)return n[e]}return null}copy(e,t){this._techIdx=e._techIdx,this._props.length=e._props.length;for(let t=0;t<e._props.length;t++)this._props[t]={...e._props[t]};this._defines.length=e._defines.length;for(let t=0;t<e._defines.length;t++)this._defines[t]={...e._defines[t]};this._states.length=e._states.length;for(let t=0;t<e._states.length;t++)this._states[t]={...e._states[t]};this._effectAsset=e._effectAsset,t&&this._fillInfo(t),this._update()}_fillInfo(e){void 0!==e.technique&&(this._techIdx=e.technique),e.effectAsset?this._effectAsset=e.effectAsset:e.effectName&&(this._effectAsset=Pg.get(e.effectName)),e.defines&&this._prepareInfo(e.defines,this._defines),e.states&&this._prepareInfo(e.states,this._states)}_prepareInfo(e,t){let n=e;if(!Array.isArray(n)){const e=this._effectAsset?this._effectAsset.techniques[this._techIdx].passes.length:1;n=Array(e).fill(n)}for(let e=0;e<n.length;++e)Object.assign(t[e]||(t[e]={}),n[e])}_createPasses(){const e=this._effectAsset.techniques[this._techIdx||0];if(!e)return[];const t=e.passes.length,n=[];for(let s=0;s<t;++s){const t=e.passes[s],r=t.passIndex=s,o=t.defines=this._defines[r]||(this._defines[r]={});if(t.stateOverrides=this._states[r]||(this._states[r]={}),void 0!==t.propertyIndex&&Object.assign(o,this._defines[t.propertyIndex]),void 0!==t.embeddedMacros&&Object.assign(o,t.embeddedMacros),t.switch&&!o[t.switch])continue;const a=new ag(i.director.root);a.initialize(t),n.push(a)}return n}_update(t=!0){if(this._effectAsset){this._passes=this._createPasses();const e=this._effectAsset.techniques[this._techIdx].passes.length;if(this._props.length=e,t)this._passes.forEach(((e,t)=>{let n=this._props[t];n||(n=this._props[t]={}),void 0!==e.propertyIndex&&Object.assign(n,this._props[e.propertyIndex]);for(const t in n)this._uploadProperty(e,t,n[t])}));else for(let e=0;e<this._props.length;e++)this._props[e]={}}this._hash=e.getHash(this)}_uploadProperty(e,t,n){const i=e.getHandle(t);if(!i)return!1;if(ag.getTypeFromHandle(i)<Bs.SAMPLER1D)if(Array.isArray(n))e.setUniformArray(i,n);else if(null!==n){var s;if(null===(s=e.properties[t])||void 0===s?void 0:s.linear){const e=n;wg(Bg,e),Bg.w=e.w,n=Bg}e.setUniform(i,n)}else e.resetUniform(t);else if(Array.isArray(n))for(let t=0;t<n.length;t++)this._bindTexture(e,i,n[t],t);else n?this._bindTexture(e,i,n):e.resetTexture(t);return!0}_bindTexture(e,t,n,i){const s=ag.getBindingFromHandle(t);if(n instanceof na)e.bindTexture(s,n,i);else if(n instanceof sm){const t=n.getGFXTexture();if(!t||!t.width||!t.height)return;e.bindTexture(s,t,i),e.bindSampler(s,n.getGFXSampler(),i)}}_doDestroy(){if(this._passes&&this._passes.length)for(const e of this._passes)e.destroy();this._passes.length=0}initDefault(e){super.initDefault(e),this.initialize({effectName:"unlit",defines:{USE_COLOR:!0}}),this.setProperty("mainColor",new ti("#ff00ff"))}validate(){return!!this._effectAsset&&!this._effectAsset.isDefault&&this.passes.length>0}}).prototype,"_effectAsset",[Rg],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Ng=Bc(Og.prototype,"_techIdx",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Lg=Bc(Og.prototype,"_defines",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),zg=Bc(Og.prototype,"_states",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Fg=Bc(Og.prototype,"_props",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Dg=Og))||Dg));i.Material=Ug;const Gg=Ne({Low_256x256:256,Medium_512x512:512,High_1024x1024:1024,Ultra_2048x2048:2048}),Hg=Ne({Planar:0,ShadowMap:1}),kg=Ne({HARD:0,SOFT:1,SOFT_2X:2}),Vg=Hg.ShadowMap+1;class jg{get enabled(){return this._enabled}set enabled(e){this._setEnable(e),this.activate()}get normal(){return this._normal}set normal(e){ri.copy(this._normal,e),this._nativeObj.normal=this._normal}get distance(){return this._distance}set distance(e){this._distance=e,this._nativeObj.distance=e}get shadowColor(){return this._shadowColor}set shadowColor(e){this._shadowColor=e,this._nativeObj.color=e}get invisibleOcclusionRange(){return this._invisibleOcclusionRange}set invisibleOcclusionRange(e){this._invisibleOcclusionRange=e,this._nativeObj.invisibleOcclusionRange=e}get shadowDistance(){return this._shadowDistance}set shadowDistance(e){this._shadowDistance=e,this._nativeObj.shadowDistance=e}get type(){return this._type}set type(e){this._setType(e),this.activate()}get near(){return this._near}set near(e){this._near=e,this._nativeObj.nearValue=e}get far(){return this._far}set far(e){this._far=e,this._nativeObj.farValue=e}get orthoSize(){return this._orthoSize}set orthoSize(e){this._orthoSize=e,this._nativeObj.orthoSize=e}get size(){return this._size}set size(e){this._size.set(e),this._nativeObj.size=e}get pcf(){return this._pcf}set pcf(e){this._pcf=e,this._nativeObj.pcfType=e}get shadowMapDirty(){return this._shadowMapDirty}set shadowMapDirty(e){this._shadowMapDirty=e,this._nativeObj.shadowMapDirty=e}get bias(){return this._bias}set bias(e){this._bias=e,this._nativeObj.bias=e}get normalBias(){return this._normalBias}set normalBias(e){this._normalBias=e,this._nativeObj.normalBias=e}get saturation(){return this._saturation}set saturation(e){this._saturation=e,this._nativeObj.saturation=e}get fixedArea(){return this._fixedArea}set fixedArea(e){this._fixedArea=e,this._nativeObj.fixedArea=e}get matLight(){return this._matLight}get material(){return this._material}get instancingMaterial(){return this._instancingMaterial}get native(){return this._nativeObj}constructor(){this.fixedSphere=new ws(0,0,0,.01),this.maxReceived=4,this.firstSetCSM=!1,this.shadowCameraFar=0,this.matShadowView=new xi,this.matShadowProj=new xi,this.matShadowViewProj=new xi,this._normal=new ri(0,1,0),this._shadowColor=new ti(0,0,0,76),this._matLight=new xi,this._material=null,this._instancingMaterial=null,this._size=new bi(512,512),this._enabled=!1,this._distance=0,this._type=Vg,this._near=.1,this._far=10,this._invisibleOcclusionRange=200,this._shadowDistance=100,this._orthoSize=1,this._pcf=0,this._shadowMapDirty=!1,this._bias=0,this._normalBias=0,this._fixedArea=!1,this._saturation=.75,this._nativeObj=new Yi}getPlanarShader(e){return this._material||(this._material=new Ug,this._material.initialize({effectName:"planar-shadow"}),this._nativeObj.planarPass=this._material.passes[0].native),this._material.passes[0].getShaderVariant(e)}getPlanarInstanceShader(e){return this._instancingMaterial||(this._instancingMaterial=new Ug,this._instancingMaterial.initialize({effectName:"planar-shadow",defines:{USE_INSTANCING:!0}}),this._nativeObj.instancePass=this._instancingMaterial.passes[0].native),this._instancingMaterial.passes[0].getShaderVariant(e)}_setEnable(e){this._enabled=e,this._nativeObj.enabled=e,e||this._setType(Vg)}_setType(e){this._type=this.enabled?e:Vg,this._nativeObj.shadowType=this._type}initialize(e){this.near=e.near,this.far=e.far,this.invisibleOcclusionRange=e.invisibleOcclusionRange,this.shadowDistance=e.shadowDistance,this.orthoSize=e.orthoSize,this.size=e.size,this.pcf=e.pcf,this.normal=e.normal,this.distance=e.distance,this.shadowColor=e.shadowColor,this.bias=e.bias,this.normalBias=e.normalBias,this.maxReceived=e.maxReceived,this.fixedArea=e.fixedArea,this._setEnable(e.enabled),this._setType(e.type),this.saturation=e.saturation}activate(){this.enabled&&this.type===Hg.Planar&&this._updatePlanarInfo()}_updatePlanarInfo(){this._material||(this._material=new Ug,this._material.initialize({effectName:"planar-shadow"}),this._nativeObj.planarPass=this._material.passes[0].native),this._instancingMaterial||(this._instancingMaterial=new Ug,this._instancingMaterial.initialize({effectName:"planar-shadow",defines:{USE_INSTANCING:!0}}),this._nativeObj.instancePass=this._instancingMaterial.passes[0].native)}_destroy(){this._nativeObj=null}destroy(){this._destroy(),this._material&&this._material.destroy(),this._instancingMaterial&&this._instancingMaterial.destroy(),this.fixedSphere.destroy()}}jg.MAX_FAR=2e3,jg.COEFFICIENT_OF_EXPANSION=2*Math.sqrt(3),i.Shadows=jg,Tn(vg.prototype,"RenderScene.prototype",[{name:"raycastUI2DNode"},{name:"raycastUINode"}]),Tn(vg.prototype,"RenderScene.prototype",[{name:"raycastAll",suggest:"using intersect.rayModel in geometry"},{name:"raycastAllModels",suggest:"using intersect.rayModel in geometry"},{name:"raycastSingleModel",suggest:"using intersect.rayModel in geometry"},{name:"raycastAllCanvas",suggest:"using intersect.rayAABB in geometry"},{name:"rayResultCanvas"},{name:"rayResultModels"},{name:"rayResultAll"},{name:"rayResultSingleModel"}]);const Wg={};Tn(Wg,"CameraVisFlags",[{name:"GENERAL"}]),Cn(Wg,"CameraVisFlags",[{name:"PROFILER",newName:"PROFILER",target:_d.BitMask,targetName:"PROFILER"},{name:"GIZMOS",newName:"GIZMOS",target:_d.BitMask,targetName:"GIZMOS"},{name:"EDITOR",newName:"EDITOR",target:_d.BitMask,targetName:"EDITOR"},{name:"UI",newName:"UI",target:_d.BitMask,targetName:"UI_3D"},{name:"UI2D",newName:"UI2D",target:_d.BitMask,targetName:"UI_2D"}]),i.CameraVisFlags=Wg;const qg={};function Xg(e,t){t<1e3?t=1e3:t>15e3&&(t=15e3);const n=t*t,i=(.860117757+.000154118254*t+1.28641212e-7*n)/(1+.000842420235*t+7.08145163e-7*n),s=(.317398726+422806245e-13*t+4.20481691e-8*n)/(1-289741816e-13*t+1.61456053e-7*n),r=2*i-8*s+4,o=3*i/r,a=2*s/r,c=1/a*o,l=1/a*(1-o-a);e.x=3.2404542*c-1.5371385+-.4985314*l,e.y=-.969266*c+1.8760108+.041556*l,e.z=.0556434*c-.2040259+1.0572252*l}let Yg;Tn(qg,"VisibilityFlags",[{name:"GENERAL"}]),Cn(qg,"VisibilityFlags",[{name:"ALWALS",newName:"ALWALS",target:_d.Enum,targetName:"ALWALS"},{name:"PROFILER",newName:"PROFILER",target:_d.Enum,targetName:"PROFILER"},{name:"GIZMOS",newName:"GIZMOS",target:_d.Enum,targetName:"GIZMOS"},{name:"EDITOR",newName:"EDITOR",target:_d.Enum,targetName:"EDITOR"},{name:"UI",newName:"UI",target:_d.Enum,targetName:"UI_3D"},{name:"UI2D",newName:"UI2D",target:_d.Enum,targetName:"UI_2D"}]),i.VisibilityFlags=qg,Cn(ag.prototype,"Pass.prototype",[{name:"getBindingTypeFromHandle",newName:"getDescriptorTypeFromHandle"}]),Tn(Nf.prototype,"Camera.prototype",[{name:"getSplitFrustum"},{name:"setMatView"},{name:"setMatViewInv"},{name:"setMatProjInv"},{name:"setMatViewProjInv"},{name:"setMatProj"},{name:"setMatViewProj"},{name:"getMatViewInv"}]),Tn(jg.prototype,"Shadows.prototype",[{name:"aspect"},{name:"selfShadow"},{name:"linear"},{name:"packing"},{name:"autoAdapt"}]),function(e){e[e.DIRECTIONAL=0]="DIRECTIONAL",e[e.SPHERE=1]="SPHERE",e[e.SPOT=2]="SPOT",e[e.UNKNOWN=3]="UNKNOWN"}(Yg||(Yg={}));const Kg=e=>4*Math.PI*Math.PI*e*e;class $g{constructor(){this._baked=!1,this._color=new ri(1,1,1),this._colorTemp=6550,this._colorTempRGB=new ri(1,1,1),this._scene=null,this._node=null,this._name=null,this._useColorTemperature=!1,this._type=Yg.UNKNOWN}_init(){switch(this._type){case Yg.DIRECTIONAL:this._nativeObj=new ki;break;case Yg.SPHERE:this._nativeObj=new ji;break;case Yg.SPOT:this._nativeObj=new Vi}this._nativeObj.setType(this._type)}_destroy(){this._nativeObj=null}get baked(){return this._baked}set baked(e){this._baked=e,this._nativeObj.setBaked(e)}set color(e){this._color.set(e),this._nativeObj.setColor(e)}get color(){return this._color}set useColorTemperature(e){this._useColorTemperature=e,this._nativeObj.setUseColorTemperature(e)}get useColorTemperature(){return this._useColorTemperature}set colorTemperature(e){this._colorTemp=e,Xg(this._colorTempRGB,this._colorTemp),this._nativeObj.setColorTemperatureRGB(this._colorTempRGB)}get colorTemperature(){return this._colorTemp}get colorTemperatureRGB(){return this._colorTempRGB}set node(e){this._node=e,this._node&&(this._node.hasChangedFlags|=gg.ROTATION,this._nativeObj.setNode(e?e.native:null))}get node(){return this._node}get type(){return this._type}get name(){return this._name}set name(e){this._name=e}get scene(){return this._scene}get native(){return this._nativeObj}initialize(){this._init(),this.color=new ri(1,1,1),this.colorTemperature=6550}attachToScene(e){this._scene=e}detachFromScene(){this._scene=null}destroy(){this._name=null,this._node=null,this._destroy()}update(){}}const Zg=new ri(0,0,-1),Qg=new ri;class Jg extends $g{set direction(e){ri.normalize(this._dir,e),this._nativeObj.setDirection(e)}get direction(){return this._dir}get illuminance(){return i.director.root.pipeline.pipelineSceneData.isHDR?this._illuminanceHDR:this._illuminanceLDR}set illuminance(e){i.director.root.pipeline.pipelineSceneData.isHDR?this.illuminanceHDR=e:this.illuminanceLDR=e}get illuminanceHDR(){return this._illuminanceHDR}set illuminanceHDR(e){this._illuminanceHDR=e,this._nativeObj.setIlluminanceHDR(e)}get illuminanceLDR(){return this._illuminanceLDR}set illuminanceLDR(e){this._illuminanceLDR=e,this._nativeObj.setIlluminanceLDR(e)}constructor(){super(),this._dir=new ri(1,-1,-1),this._illuminanceHDR=os.SUN_ILLUM,this._illuminanceLDR=1,this._type=Yg.DIRECTIONAL}initialize(){super.initialize(),this.illuminance=os.SUN_ILLUM,this.direction=new ri(1,-1,-1)}update(){this._node&&this._node.hasChangedFlags&&(this.direction=ri.transformQuat(Qg,Zg,this._node.worldRotation))}}class ev extends ag{get parent(){return this._parent}constructor(e,t){super(e.root),this._parent=void 0,this._owner=void 0,this._dontNotify=!1,this._parent=e,this._owner=t,this._doInit(this._parent,!0);for(let e=0;e<this._shaderInfo.blocks.length;e++){const t=this._shaderInfo.blocks[e],n=this._blocks[t.binding],i=this._parent.blocks[t.binding];n.set(i)}this._setRootBufferDirty(!0);const n=this._parent;for(let e=0;e<this._shaderInfo.samplerTextures.length;e++){const t=this._shaderInfo.samplerTextures[e];for(let e=0;e<t.count;e++){const i=n._descriptorSet.getSampler(t.binding,e),s=n._descriptorSet.getTexture(t.binding,e);this._descriptorSet.bindSampler(t.binding,i,e),this._descriptorSet.bindTexture(t.binding,s,e)}}super.tryCompile()}overridePipelineStates(e,t){this._bs.reset(),this._rs.reset(),this._dss.reset(),ag.fillPipelineInfo(this,e),ag.fillPipelineInfo(this,t),this._onStateChange()}tryCompile(e){if(e&&!Vm(this._defines,e))return!1;const t=super.tryCompile();return this._onStateChange(),t}beginChangeStatesSilently(){this._dontNotify=!0}endChangeStatesSilently(){this._dontNotify=!1}_syncBatchingScheme(){this._defines.USE_BATCHING=this._defines.USE_INSTANCING=!1,this._setBatchingScheme(og.NONE)}_onStateChange(){this._setHash(ag.getPassHash(this)),this._owner.onPassStateChange(this._dontNotify)}}class tv extends Ug{get parent(){return this._parent}get owner(){return this._owner}constructor(e){super(),this._passes=[],this._parent=void 0,this._owner=void 0,this._subModelIdx=0,this._parent=e.parent,this._owner=e.owner||null,this._subModelIdx=e.subModelIdx||0,this.copy(this._parent)}recompileShaders(e,t){if(this._passes&&this.effectAsset)if(void 0===t)for(const t of this._passes)t.tryCompile(e);else this._passes[t].tryCompile(e)}overridePipelineStates(e,t){if(!this._passes||!this.effectAsset)return;const n=this.effectAsset.techniques[this.technique].passes;if(void 0===t)for(let t=0;t<this._passes.length;t++){const i=this._passes[t],s=this._states[t]||(this._states[t]={});for(const t in e)s[t]=e[t];i.overridePipelineStates(n[i.passIndex],s)}else{const i=this._states[t]||(this._states[t]={});for(const t in e)i[t]=e[t];this._passes[t].overridePipelineStates(n[t],i)}}destroy(){return this._doDestroy(),!0}onPassStateChange(e){this._hash=Ug.getHash(this),!e&&this._owner&&this._owner._onRebuildPSO(this._subModelIdx,this)}_createPasses(){const e=[],t=this._parent.passes;if(!t)return e;for(let n=0;n<t.length;++n)e.push(new ev(t[n],this));return e}}let nv=null,iv=null;class sv{get model(){return this._model}get enabled(){return this._enabled}set enabled(e){this._setEnabled(e),e?this.activate():this._updatePipeline()}get useHDR(){return this._useHDR}set useHDR(e){this._setUseHDR(e),this.setEnvMaps(this._envmapHDR,this._envmapLDR)}get useIBL(){return this._useIBL}set useIBL(e){this._setUseIBL(e),this._updatePipeline()}get useDiffuseMap(){return this._useDiffuseMap}set useDiffuseMap(e){this._useDiffuseMap=e,this.setDiffuseMaps(null,null)}get isRGBE(){return!!this.envmap&&this.envmap.isRGBE}get envmap(){return i.director.root.pipeline.pipelineSceneData.isHDR?this._envmapHDR:this._envmapLDR}set envmap(e){i.director.root.pipeline.pipelineSceneData.isHDR?this.setEnvMaps(e,this._envmapLDR):this.setEnvMaps(this._envmapHDR,e)}get diffuseMap(){return i.director.root.pipeline.pipelineSceneData.isHDR?this._diffuseMapHDR:this._diffuseMapLDR}set diffuseMap(e){i.director.root.pipeline.pipelineSceneData.isHDR?this.setDiffuseMaps(e,this._diffuseMapLDR):this.setDiffuseMaps(this._diffuseMapHDR,e)}get native(){return this._nativeObj}constructor(){this._envmapLDR=null,this._envmapHDR=null,this._diffuseMapLDR=null,this._diffuseMapHDR=null,this._globalDSManager=null,this._model=null,this._default=null,this._enabled=!1,this._useIBL=!1,this._useHDR=!0,this._useDiffuseMap=!1,this._nativeObj=new Wi}_setEnabled(e){this._enabled=e,this._nativeObj.enabled=e}_setUseIBL(e){this._useIBL=e,this._nativeObj.useIBL=e}_setUseHDR(e){this._useHDR=e,this._nativeObj.useHDR=e}_setUseDiffuseMap(e){this._useDiffuseMap=e,this._nativeObj.useDiffuseMap=e}initialize(e){this._setEnabled(e.enabled),this._setUseIBL(e.useIBL),this._setUseDiffuseMap(e.applyDiffuseMap),this._setUseHDR(e.useHDR)}setEnvMaps(e,t){this._envmapHDR=e,this._envmapLDR=t;const n=i.director.root;n.pipeline.pipelineSceneData.isHDR?e&&(n.pipeline.pipelineSceneData.ambient.mipmapCount=e.mipmapLevel):t&&(n.pipeline.pipelineSceneData.ambient.mipmapCount=t.mipmapLevel),this._updateGlobalBinding(),this._updatePipeline()}setDiffuseMaps(e,t){this._diffuseMapHDR=e,this._diffuseMapLDR=t,this._updateGlobalBinding(),this._updatePipeline()}activate(){const e=i.director.root.pipeline;this._globalDSManager=e.globalDSManager,this._default=Jm.get("default-cube-texture"),this._model||(this._model=i.director.root.createModel(i.renderer.scene.Model),this._model._initLocalDescriptors=()=>{},this._model._initWorldBoundDescriptors=()=>{},this._nativeObj.model=this._model.native);let t=this._default.isRGBE;if(this.envmap&&(t=this.envmap.isRGBE),!iv){const e=new Ug;e.initialize({effectName:"skybox",defines:{USE_RGBE_CUBEMAP:t}}),iv=new tv({parent:e})}this.enabled&&(nv||(nv=i.utils.createMesh(i.primitives.box({width:2,height:2,length:2}))),this._model.initSubModel(0,nv.renderingSubMeshes[0],iv)),this.envmap||(this.envmap=this._default),this.diffuseMap||(this.diffuseMap=this._default),this._updateGlobalBinding(),this._updatePipeline()}_updatePipeline(){this._nativeObj.isRGBE=this.isRGBE;const e=i.director.root,t=e.pipeline,n=this.useIBL?this.isRGBE?2:1:0,s=this.useIBL&&this.useDiffuseMap&&this.diffuseMap?this.isRGBE?2:1:0,r=this.useHDR;t.macros.CC_USE_IBL===n&&t.macros.CC_USE_DIFFUSEMAP===s&&t.macros.CC_USE_HDR===r||(t.macros.CC_USE_IBL=n,t.macros.CC_USE_DIFFUSEMAP=s,t.macros.CC_USE_HDR=r,e.onGlobalPipelineStateChanged()),this.enabled&&iv&&iv.recompileShaders({USE_RGBE_CUBEMAP:this.isRGBE}),this._model&&this._model.setSubModelMaterial(0,iv)}_updateGlobalBinding(){if(this._globalDSManager){const e=i.director.root.device,t=this.envmap?this.envmap:this._default;if(t){const n=t.getGFXTexture(),i=e.getSampler(t.getSamplerInfo());this._globalDSManager.bindSampler(Rd,i),this._globalDSManager.bindTexture(Rd,n)}const n=this.diffuseMap?this.diffuseMap:this._default;if(n){const t=n.getGFXTexture(),i=e.getSampler(n.getSamplerInfo());this._globalDSManager.bindSampler(Md,i),this._globalDSManager.bindTexture(Md,t)}this._globalDSManager.update()}}_destroy(){this._nativeObj=null}destroy(){this._destroy()}}i.Skybox=sv;class rv extends $g{_init(){super._init(),this._nativeObj.setPosition(this._pos),this._nativeObj.setAABB(this._aabb.native)}_destroy(){super._destroy()}get position(){return this._pos}set size(e){this._size=e,this._nativeObj.setSize(e)}get size(){return this._size}set range(e){this._range=e,this._nativeObj.setRange(e),this._needUpdate=!0}get range(){return this._range}get luminance(){return i.director.root.pipeline.pipelineSceneData.isHDR?this._luminanceHDR:this._luminanceLDR}set luminance(e){i.director.root.pipeline.pipelineSceneData.isHDR?this.luminanceHDR=e:this.luminanceLDR=e}get luminanceHDR(){return this._luminanceHDR}set luminanceHDR(e){this._luminanceHDR=e,this._nativeObj.setLuminanceHDR(e)}set luminanceLDR(e){this._luminanceLDR=e,this._nativeObj.setLuminanceLDR(e)}get aabb(){return this._aabb}constructor(){super(),this._needUpdate=!1,this._size=.15,this._range=1,this._luminanceHDR=0,this._luminanceLDR=0,this._pos=void 0,this._aabb=void 0,this._aabb=Ac.create(),this._pos=new ri,this._type=Yg.SPHERE}initialize(){super.initialize(),this.size=.15,this.range=1,this.luminance=1700/Kg(.15),this.luminanceLDR=1}update(){if(this._node&&(this._node.hasChangedFlags||this._needUpdate)){this._node.getWorldPosition(this._pos);const e=this._range;Ac.set(this._aabb,this._pos.x,this._pos.y,this._pos.z,e,e,e),this._needUpdate=!1}}}const ov=new ri(0,0,-1),av=new ui,cv=new xi,lv=new xi,hv=new xi,_v=new xi;class uv extends $g{_init(){super._init();{const e=this._nativeObj;e.setAABB(this._aabb.native),e.setFrustum(this._frustum),e.setDirection(this._dir),e.setPosition(this._pos)}}_destroy(){super._destroy()}_setDirection(e){this._dir.set(e),this._nativeObj.setDirection(e)}get position(){return this._pos}set size(e){this._size=e,this._nativeObj.setSize(e)}get size(){return this._size}set range(e){this._range=e,this._nativeObj.setRange(e),this._needUpdate=!0}get range(){return this._range}get luminance(){return i.director.root.pipeline.pipelineSceneData.isHDR?this._luminanceHDR:this._luminanceLDR}set luminance(e){i.director.root.pipeline.pipelineSceneData.isHDR?this.luminanceHDR=e:this.luminanceLDR=e}get luminanceHDR(){return this._luminanceHDR}set luminanceHDR(e){this._luminanceHDR=e,this._nativeObj.setLuminanceHDR(e)}get luminanceLDR(){return this._luminanceLDR}set luminanceLDR(e){this._luminanceLDR=e,this._nativeObj.setLuminanceLDR(e)}get direction(){return this._dir}get spotAngle(){return this._spotAngle}set spotAngle(e){this._angle=e,this._spotAngle=Math.cos(.5*e),this._nativeObj.setAngle(this._spotAngle),this._needUpdate=!0}get angle(){return this._angle}set aspect(e){this._aspect=e,this._nativeObj.setAspect(e),this._needUpdate=!0}get aspect(){return this._aspect}get aabb(){return this._aabb}get frustum(){return this._frustum}constructor(){super(),this._dir=new ri(1,-1,-1),this._range=5,this._spotAngle=Math.cos(Math.PI/6),this._pos=void 0,this._aabb=void 0,this._frustum=void 0,this._angle=0,this._needUpdate=!1,this._size=.15,this._luminanceHDR=0,this._luminanceLDR=0,this._aspect=0,this._aabb=Ac.create(),this._frustum=zc.create(),this._pos=new ri,this._type=Yg.SPOT}initialize(){super.initialize(),this.size=.15,this.aspect=1,this.luminance=1700/Kg(.15),this.luminanceLDR=1,this.range=Math.cos(Math.PI/6),this._setDirection(new ri(1,-1,-1))}update(){this._node&&(this._node.hasChangedFlags||this._needUpdate)&&(this._node.getWorldPosition(this._pos),ri.transformQuat(this._dir,ov,this._node.getWorldRotation(av)),ri.normalize(this._dir,this._dir),Ac.set(this._aabb,this._pos.x,this._pos.y,this._pos.z,this._range,this._range,this._range),this._node.getWorldRT(cv),xi.invert(cv,cv),xi.perspective(lv,this._angle,1,.001,this._range),xi.multiply(hv,lv,cv),this._frustum.update(hv,_v),this._needUpdate=!1)}}var pv=Object.freeze({__proto__:null,Ambient:os,Octree:as,get CameraFOVAxis(){return Sf},get CameraProjection(){return Cf},get CameraAperture(){return Tf},get CameraISO(){return bf},get CameraShutter(){return Ef},SKYBOX_FLAG:Of,Camera:Nf,CameraVisFlags:Wg,VisibilityFlags:qg,DirectionalLight:Jg,ColorTemperatureToRGB:Xg,get LightType(){return Yg},nt2lm:Kg,Light:$g,get ModelType(){return ug},Model:fg,ShadowSize:Gg,ShadowType:Hg,PCFType:kg,Shadows:jg,RenderScene:vg,Skybox:sv,SphereLight:rv,SpotLight:uv,SubModel:lg,NativeNode:zi,NativeScene:Fi,NativeModel:Bi,NativeSkinningModel:Ui,NativeBakedSkinningModel:Gi,NativeLight:Hi,NativeDirectionalLight:ki,NativeSpotLight:Vi,NativeSphereLight:ji,NaitveSkybox:Wi,NativeFog:qi,NativeAmbient:Xi,NativeShadow:Yi,NativeOctree:Ki,NativeCamera:$i,NativeRenderWindow:Zi,NativeRenderScene:Qi,NativeDrawBatch2D:Ji,NativePass:es,NativeSubModel:ts,NativeRoot:is,NativePipelineSharedSceneData:ss,NativeAABB:rs});let dv,fv;function mv(e){return--e,e|=e>>16,e|=e>>8,e|=e>>4,e|=e>>2,e|=e>>1,++e}function gv(e,t){return Math.ceil(e/t)*t}!function(e){e[e.OPAQUE=0]="OPAQUE",e[e.TRANSPARENT=1]="TRANSPARENT",e[e.OVERLAY=2]="OVERLAY"}(dv||(dv={})),function(e){e[e.DEFAULT=1]="DEFAULT",e[e.FORWARD=2]="FORWARD",e[e.SHADOWCAST=4]="SHADOWCAST"}(fv||(fv={}));class vv{constructor(e){this._device=void 0,this._format=zs.UNKNOWN,this._formatSize=0,this._chunks=[],this._chunkCount=0,this._handles=[],this._region0=new Ir,this._region1=new Ir,this._region2=new Ir,this._roundUpFn=null,this._bufferViewCtor=Uint8Array,this._channels=4,this._alignment=1,this._device=e}initialize(e){const t=To[e.format];this._format=e.format,this._formatSize=t.size,this._channels=t.count,this._bufferViewCtor=Mo(t),this._roundUpFn=e.roundUpFn||null,this._alignment=e.alignment||1,e.inOrderFree&&(this.alloc=this._McDonaldAlloc)}destroy(){for(let e=0;e<this._chunkCount;++e)this._chunks[e].texture.destroy();this._chunks.length=0,this._handles.length=0}alloc(e,t){e=gv(e,this._alignment);let n=-1,i=-1;if(void 0!==t&&(n=t,i=this._findAvailableSpace(e,n)),i<0)for(let t=0;t<this._chunkCount&&(n=t,i=this._findAvailableSpace(e,n),!(i>=0));++t);if(i>=0){const t=this._chunks[n];t.start+=e;const s={chunkIdx:n,start:i,end:i+e,texture:t.texture};return this._handles.push(s),s}const s=Math.sqrt(e/this._formatSize),r=this._roundUpFn&&this._roundUpFn(s,this._formatSize)||Math.max(1024,mv(s)),o=this._chunks[this.createChunk(r)];o.start+=e;const a={chunkIdx:this._chunkCount-1,start:0,end:e,texture:o.texture};return this._handles.push(a),a}free(e){for(let t=0;t<this._handles.length;++t)if(this._handles[t]===e)return this._chunks[e.chunkIdx].end=e.end,void this._handles.splice(t,1)}createChunk(e){const t=e*e*this._formatSize;m(`TextureBufferPool: Allocate chunk ${this._chunkCount}, size: ${t}, format: ${this._format}`);const n={texture:this._device.createTexture(new Gr(Vs.TEX2D,js.SAMPLED|js.TRANSFER_DST,this._format,e,e)),size:t,start:0,end:t};return this._chunks[this._chunkCount]=n,this._chunkCount++}update(e,t){const n=[],i=[],s=e.start/this._formatSize;let r=t.byteLength/this._formatSize,o=s%e.texture.width,a=Math.floor(s/e.texture.width),c=Math.min(e.texture.width-o,r),l=0;o>0&&(this._region0.texOffset.x=o,this._region0.texOffset.y=a,this._region0.texExtent.width=c,this._region0.texExtent.height=1,n.push(new this._bufferViewCtor(t,l*this._formatSize,c*this._channels)),i.push(this._region0),o=0,a+=1,r-=c,l+=c),r>0&&(this._region1.texOffset.x=o,this._region1.texOffset.y=a,r>e.texture.width?(this._region1.texExtent.width=e.texture.width,this._region1.texExtent.height=Math.floor(r/e.texture.width),c=this._region1.texExtent.width*this._region1.texExtent.height):(c=r,this._region1.texExtent.width=c,this._region1.texExtent.height=1),n.push(new this._bufferViewCtor(t,l*this._formatSize,c*this._channels)),i.push(this._region1),o=0,a+=this._region1.texExtent.height,r-=c,l+=c),r>0&&(this._region2.texOffset.x=o,this._region2.texOffset.y=a,this._region2.texExtent.width=r,this._region2.texExtent.height=1,n.push(new this._bufferViewCtor(t,l*this._formatSize,r*this._channels)),i.push(this._region2)),this._device.copyBuffersToTexture(n,e.texture,i)}_findAvailableSpace(e,t){const n=this._chunks[t];let i=!1,s=n.start;if(s+e<=n.size)i=!0;else{s=0;const r=this._handles.filter((e=>e.chunkIdx===t)).sort(((e,t)=>e.start-t.start));for(let t=0;t<r.length;t++){const n=r[t];if(s+e<=n.start){i=!0;break}s=n.end}!i&&s+e<=n.size&&(i=!0)}return i?s:-1}_McDonaldAlloc(e){e=gv(e,this._alignment);for(let t=0;t<this._chunkCount;++t){const n=this._chunks[t];let i=!1,s=n.start;if(s+e<=n.end?i=!0:s>n.end?s+e<=n.size?i=!0:e<=n.end&&(n.start=s=0,i=!0):s===n.end&&(n.start=s=0,n.end=n.size,e<=n.end&&(i=!0)),i){n.start+=e;const i={chunkIdx:t,start:s,end:s+e,texture:n.texture};return this._handles.push(i),i}}const t=Math.sqrt(e/this._formatSize),n=this._roundUpFn&&this._roundUpFn(t,this._formatSize)||Math.max(1024,mv(t)),i=this._chunks[this.createChunk(n)];i.start+=e;const s={chunkIdx:this._chunkCount,start:0,end:e,texture:i.texture};return this._handles.push(s),s}}const yv=dn.addStage;var xv=Object.freeze({__proto__:null,addStage:yv,scene:pv,createIA:function(e,t){if(!t.positions)return console.error("The data must have positions field"),null;const n=[],i=t.positions.length/3;for(let e=0;e<i;++e)n.push(t.positions[3*e],t.positions[3*e+1],t.positions[3*e+2]),t.normals&&n.push(t.normals[3*e],t.normals[3*e+1],t.normals[3*e+2]),t.uvs&&n.push(t.uvs[2*e],t.uvs[2*e+1]),t.colors&&n.push(t.colors[3*e],t.colors[3*e+1],t.colors[3*e+2]);const s=[];s.push(new Qr(yr.ATTR_POSITION,zs.RGB32F)),t.normals&&s.push(new Qr(yr.ATTR_NORMAL,zs.RGB32F)),t.uvs&&s.push(new Qr(yr.ATTR_TEX_COORD,zs.RG32F)),t.colors&&s.push(new Qr(yr.ATTR_COLOR,zs.RGB32F));const r=e.createBuffer(new Lr(Us.VERTEX|Us.TRANSFER_DST,ks.DEVICE,4*n.length,4*n.length/i));r.update(new Float32Array(n));let o=null;return t.indices&&(o=e.createBuffer(new Lr(Us.INDEX|Us.TRANSFER_DST,ks.DEVICE,2*t.indices.length,2)),o.update(new Uint16Array(t.indices))),e.createInputAssembler(new eo(s,[r],o))},get RenderQueue(){return dv},get PassStage(){return fv},genHandle:Mm,getTypeFromHandle:Nm,getBindingFromHandle:Lm,getCountFromHandle:zm,getOffsetFromHandle:Fm,customizeType:Bm,type2reader:Um,type2writer:Gm,getDefaultFromType:km,overrideMacros:Vm,get BatchingSchemes(){return og},Pass:ag,getDeviceShaderVersion:$m,programLib:Zm,nearestPOT:mv,TextureBufferPool:vv,MaterialInstance:tv,PassInstance:ev,get PoolType(){return ac},NULL_HANDLE:0,get NodeView(){return cc},NodePool:_c,get PassView(){return uc},PassPool:fc,get AABBView(){return mc},AABBPool:yc});e("renderer",xv);const Sv=new ri,Cv=(new ri,new ri,new ri),Tv=new xi,bv=new Ac,Ev=new Ac;let Av=!1;const Pv=ws.create(0,0,0,1),wv=new ws,Iv=new zc;Iv.accurate=!0;let Rv=new zc;Rv.accurate=!0;const Dv=new zc,Ov=new xi,Mv=new xi,Nv=new xi,Lv=new xi,zv=new xi,Fv=new xi,Bv=new xi,Uv=new ri,Gv=new bi,Hv=new ri,kv=new ri,Vv=new ri(0,0,0),jv=(new Ac,new Ie((()=>({model:null,depth:0})),128)),Wv=new Ie((()=>({model:null,depth:0})),128),qv=new Ie((()=>({model:null,depth:0})),128);function Xv(e,t){let n=0;e.node&&(ri.subtract(Sv,e.node.worldPosition,t.position),n=ri.dot(Sv,t.forward));const i=jv.alloc();return i.model=e,i.depth=n,i}function Yv(e,t){let n=0;e.node&&(ri.subtract(Sv,e.node.worldPosition,t.position),n=ri.dot(Sv,t.forward));const i=Wv.alloc();return i.model=e,i.depth=n,i}function Kv(e,t){let n=0;e.node&&(ri.subtract(Sv,e.node.worldPosition,t.position),n=ri.dot(Sv,t.forward));const i=qv.alloc();return i.model=e,i.depth=n,i}function $v(e,t){const n=e.pipelineSceneData.validPunctualLights;n.length=0;const{spotLights:i}=t.scene;for(let e=0;e<i.length;e++){const s=i[e];s.baked||(ws.set(Pv,s.position.x,s.position.y,s.position.z,s.range),Qa.sphereFrustum(Pv,t.frustum)&&n.push(s))}const{sphereLights:s}=t.scene;for(let e=0;e<s.length;e++){const i=s[e];i.baked||(ws.set(Pv,i.position.x,i.position.y,i.position.z,i.range),Qa.sphereFrustum(Pv,t.frustum)&&n.push(i))}}function Zv(e,t){const n=t.scene,i=n.mainLight,s=e.pipelineSceneData,r=s.shadows,o=s.skybox,a=s.renderObjects;jv.freeArray(a),a.length=0;const c=s.castShadowObjects;qv.freeArray(c),c.length=0,Av=!1;let l=null;if(r.enabled&&(e.pipelineUBO.updateShadowUBORange(Ad.SHADOW_COLOR_OFFSET,r.shadowColor),r.type===Hg.ShadowMap))if(l=e.pipelineSceneData.dirShadowObjects,Wv.freeArray(l),l.length=0,i&&i.node)!function(e,t,n,i,s){const r=t.device;if(s.fixedArea){const t=s.orthoSize,i=s.orthoSize,o=s.near,a=s.far;xi.fromRT(Ov,n.node.getWorldRotation(),n.node.getWorldPosition()),xi.invert(Mv,Ov),xi.ortho(Lv,-t,t,-i,i,o,a,r.capabilities.clipSpaceMinZ,r.capabilities.clipSpaceSignY),xi.multiply(zv,Lv,Mv),xi.invert(Nv,Mv),s.matShadowView=Mv,s.matShadowProj=Lv,s.matShadowViewProj=zv,zc.createOrtho(e,2*t,2*i,o,a,Nv)}else{const t=s.invisibleOcclusionRange,o=s.size.x;!function(e,t){if(!t.node)return;const n=t.node,i=n.getWorldPosition(),s=n.getWorldRotation();xi.fromRT(e,s,i),e.m08*=-1,e.m09*=-1,e.m10*=-1}(Tv,i),zc.split(Iv,i,Tv,.1,s.shadowDistance),Rv=zc.clone(Iv),xi.fromRT(Ov,n.node.rotation,Vv),xi.invert(Mv,Ov),xi.invert(Nv,Mv);const a=Mv.clone();Rv.transform(Mv),Ac.fromPoints(bv,new ri(1e7,1e7,1e7),new ri(-1e7,-1e7,-1e7)),bv.mergeFrustum(Rv);const c=2*bv.halfExtents.z;Cv.set(bv.center.x,bv.center.y,bv.center.z+bv.halfExtents.z+t),ri.transformMat4(Cv,Cv,Nv),xi.fromRT(Ov,n.node.rotation,Cv),xi.invert(Mv,Ov),xi.invert(Nv,Mv);const l=ri.distance(Iv.vertices[0],Iv.vertices[6]);wv.center.set(0,0,0),wv.radius=-1,wv.mergePoints(Iv.vertices);const h=.8*l+.4*wv.radius;s.shadowCameraFar=c+t;const _=.5*h;if(xi.ortho(Lv,-_,_,-_,_,.1,s.shadowCameraFar,r.capabilities.clipSpaceMinZ,r.capabilities.clipSpaceSignY),o>0){xi.multiply(Fv,Lv,a),ri.transformMat4(Uv,Cv,Fv);const t=2/o;Gv.set(t,t);const i=Uv.x%Gv.x,r=Uv.y%Gv.y;Hv.set(Uv.x-i,Uv.y-r,Uv.z),xi.invert(Bv,Fv),ri.transformMat4(kv,Hv,Bv),xi.fromRT(Ov,n.node.rotation,kv),xi.invert(Mv,Ov),xi.invert(Nv,Mv),zc.createOrtho(e,h,h,.1,s.shadowCameraFar,Nv)}else{for(let t=0;t<8;t++)e.vertices[t].set(0,0,0);e.updatePlanes()}xi.multiply(zv,Lv,Mv),s.matShadowView=Mv,s.matShadowProj=Lv,s.matShadowViewProj=zv}}(Dv,e,i,t,r);else{for(let e=0;e<8;e++)Dv.vertices[e].set(0,0,0);Dv.updatePlanes()}i&&r.type===Hg.Planar&&function(e,t){const n=e.pipelineSceneData.shadows,i=t.direction,s=n.normal,r=n.distance+.001,o=1/ri.dot(s,i),a=i.x*o,c=i.y*o,l=i.z*o,h=s.x,_=s.y,u=s.z,p=n.matLight;p.m00=1-h*a,p.m01=-h*c,p.m02=-h*l,p.m03=0,p.m04=-_*a,p.m05=1-_*c,p.m06=-_*l,p.m07=0,p.m08=-u*a,p.m09=-u*c,p.m10=1-u*l,p.m11=0,p.m12=a*r,p.m13=c*r,p.m14=l*r,p.m15=1,e.pipelineUBO.updateShadowUBORange(Ad.MAT_LIGHT_PLANE_PROJ_OFFSET,n.matLight)}(e,i),o.enabled&&o.model&&t.clearFlag&Of&&a.push(Xv(o.model,t));const h=n.models,_=t.visibility;for(let e=0;e<h.length;e++){const n=h[e];if(n.enabled&&(n.castShadow&&c.push(Kv(n,t)),r.firstSetCSM&&n.worldBounds&&(Av||(Ev.copy(n.worldBounds),Av=!0),Ac.merge(Ev,Ev,n.worldBounds)),n.node&&(_&n.node.layer)===n.node.layer||_&n.visFlags)){if(null!=l&&n.castShadow&&n.worldBounds&&Qa.aabbFrustum(n.worldBounds,Dv)&&l.push(Yv(n,t)),n.worldBounds&&!Qa.aabbFrustum(n.worldBounds,t.frustum))continue;a.push(Xv(n,t))}}r.firstSetCSM&&(r.shadowDistance=2*Ev.halfExtents.length(),r.firstSetCSM=!1)}const Qv=new kr(Ys.LINEAR,Ys.LINEAR,Ys.NONE,Ks.CLAMP,Ks.CLAMP,Ks.CLAMP),Jv=new kr(Ys.POINT,Ys.POINT,Ys.NONE,Ks.CLAMP,Ks.CLAMP,Ks.CLAMP);class ey{get descriptorSetMap(){return this._descriptorSetMap}get linearSampler(){return this._linearSampler}get pointSampler(){return this._pointSampler}get descriptorSetLayout(){return this._descriptorSetLayout}get globalDescriptorSet(){return this._globalDescriptorSet}constructor(e){this._device=void 0,this._descriptorSetMap=new Map,this._globalDescriptorSet=void 0,this._descriptorSetLayout=void 0,this._linearSampler=void 0,this._pointSampler=void 0,this._device=e.device,this._linearSampler=this._device.getSampler(Qv),this._pointSampler=this._device.getSampler(Jv);const t=new ho(dd.bindings);this._descriptorSetLayout=this._device.createDescriptorSetLayout(t),this._globalDescriptorSet=this._device.createDescriptorSet(new _o(this._descriptorSetLayout))}bindBuffer(e,t){this._globalDescriptorSet.bindBuffer(e,t);const n=this._descriptorSetMap.values();let i=n.next();for(;!i.done;)i.value.bindBuffer(e,t),i=n.next()}bindSampler(e,t){this._globalDescriptorSet.bindSampler(e,t);const n=this._descriptorSetMap.values();let i=n.next();for(;!i.done;)i.value.bindSampler(e,t),i=n.next()}bindTexture(e,t){this._globalDescriptorSet.bindTexture(e,t);const n=this._descriptorSetMap.values();let i=n.next();for(;!i.done;)i.value.bindTexture(e,t),i=n.next()}update(){this._globalDescriptorSet.update();const e=this._descriptorSetMap.values();let t=e.next();for(;!t.done;)t.value.update(),t=e.next()}getOrCreateDescriptorSet(e){const t=this._device;if(!this._descriptorSetMap.has(e)){const n=this._globalDescriptorSet,i=t.createDescriptorSet(new _o(this._descriptorSetLayout));this._descriptorSetMap.set(e,i);for(let e=md.UBO_GLOBAL;e<md.COUNT;e++)i.bindBuffer(e,n.getBuffer(e)),i.bindSampler(e,n.getSampler(e)),i.bindTexture(e,n.getTexture(e));const s=t.createBuffer(new Lr(Us.UNIFORM|Us.TRANSFER_DST,ks.HOST|ks.DEVICE,Ad.SIZE,Ad.SIZE));i.bindBuffer(Ad.BINDING,s),i.update()}return this._descriptorSetMap.get(e)}destroy(){this._descriptorSetLayout.destroy()}}const ty=new xi,ny=new xi,iy=new xi,sy=new wi,ry=new wi(0,0,1,0);class oy{constructor(){this._globalUBO=new Float32Array(bd.COUNT),this._cameraUBO=new Float32Array(Ed.COUNT),this._shadowUBO=new Float32Array(Ad.COUNT)}static updateGlobalUBOView(e,t){const n=i.director.root,s=t,r=Math.floor(e.width),o=Math.floor(e.height);s[bd.TIME_OFFSET]=n.cumulativeTime,s[bd.TIME_OFFSET+1]=n.frameTime,s[bd.TIME_OFFSET+2]=i.director.getTotalFrames(),s[bd.SCREEN_SIZE_OFFSET]=r,s[bd.SCREEN_SIZE_OFFSET+1]=o,s[bd.SCREEN_SIZE_OFFSET+2]=1/r,s[bd.SCREEN_SIZE_OFFSET+3]=1/o,s[bd.NATIVE_SIZE_OFFSET]=r,s[bd.NATIVE_SIZE_OFFSET+1]=o,s[bd.NATIVE_SIZE_OFFSET+2]=1/s[bd.NATIVE_SIZE_OFFSET],s[bd.NATIVE_SIZE_OFFSET+3]=1/s[bd.NATIVE_SIZE_OFFSET+1]}static updateCameraUBOView(e,t,n){const s=(n.scene?n.scene:i.director.getScene().renderScene).mainLight,r=e.pipelineSceneData,o=r.ambient,a=r.fog,c=r.shadows,l=t,h=n.exposure,_=r.isHDR;if(l[Ed.SCREEN_SCALE_OFFSET]=r.shadingScale,l[Ed.SCREEN_SCALE_OFFSET+1]=r.shadingScale,l[Ed.SCREEN_SCALE_OFFSET+2]=1/l[Ed.SCREEN_SCALE_OFFSET],l[Ed.SCREEN_SCALE_OFFSET+3]=1/l[Ed.SCREEN_SCALE_OFFSET+1],l[Ed.EXPOSURE_OFFSET]=h,l[Ed.EXPOSURE_OFFSET+1]=1/h,l[Ed.EXPOSURE_OFFSET+2]=_?1:0,l[Ed.EXPOSURE_OFFSET+3]=0,s){const e=c.enabled&&c.type===Hg.ShadowMap?1:0,t=s.direction;if(ry.set(t.x,t.y,t.z,e),wi.toArray(l,ry,Ed.MAIN_LIT_DIR_OFFSET),ri.toArray(l,s.color,Ed.MAIN_LIT_COLOR_OFFSET),s.useColorTemperature){const e=s.colorTemperatureRGB;l[Ed.MAIN_LIT_COLOR_OFFSET]*=e.x,l[Ed.MAIN_LIT_COLOR_OFFSET+1]*=e.y,l[Ed.MAIN_LIT_COLOR_OFFSET+2]*=e.z}l[Ed.MAIN_LIT_COLOR_OFFSET+3]=_?s.illuminance*h:s.illuminance}else ry.set(0,0,1,0),wi.toArray(l,ry,Ed.MAIN_LIT_DIR_OFFSET),wi.toArray(l,wi.ZERO,Ed.MAIN_LIT_COLOR_OFFSET);const u=o.skyColor;u.w=_?o.skyIllum*h:o.skyIllum,l[Ed.AMBIENT_SKY_OFFSET+0]=u.x,l[Ed.AMBIENT_SKY_OFFSET+1]=u.y,l[Ed.AMBIENT_SKY_OFFSET+2]=u.z,l[Ed.AMBIENT_SKY_OFFSET+3]=u.w,l[Ed.AMBIENT_GROUND_OFFSET+0]=o.groundAlbedo.x,l[Ed.AMBIENT_GROUND_OFFSET+1]=o.groundAlbedo.y,l[Ed.AMBIENT_GROUND_OFFSET+2]=o.groundAlbedo.z,l[Ed.AMBIENT_GROUND_OFFSET+3]=o.mipmapCount,xi.toArray(l,n.matView,Ed.MAT_VIEW_OFFSET),xi.toArray(l,n.node.worldMatrix,Ed.MAT_VIEW_INV_OFFSET),ri.toArray(l,n.position,Ed.CAMERA_POS_OFFSET),xi.toArray(l,n.matProj,Ed.MAT_PROJ_OFFSET),xi.toArray(l,n.matProjInv,Ed.MAT_PROJ_INV_OFFSET),xi.toArray(l,n.matViewProj,Ed.MAT_VIEW_PROJ_OFFSET),xi.toArray(l,n.matViewProjInv,Ed.MAT_VIEW_PROJ_INV_OFFSET),l[Ed.CAMERA_POS_OFFSET+3]=this.getCombineSignY();const p=a.colorArray;l[Ed.GLOBAL_FOG_COLOR_OFFSET]=p.x,l[Ed.GLOBAL_FOG_COLOR_OFFSET+1]=p.y,l[Ed.GLOBAL_FOG_COLOR_OFFSET+2]=p.z,l[Ed.GLOBAL_FOG_COLOR_OFFSET+3]=p.z,l[Ed.GLOBAL_FOG_BASE_OFFSET]=a.fogStart,l[Ed.GLOBAL_FOG_BASE_OFFSET+1]=a.fogEnd,l[Ed.GLOBAL_FOG_BASE_OFFSET+2]=a.fogDensity,l[Ed.GLOBAL_FOG_ADD_OFFSET]=a.fogTop,l[Ed.GLOBAL_FOG_ADD_OFFSET+1]=a.fogRange,l[Ed.GLOBAL_FOG_ADD_OFFSET+2]=a.fogAtten,l[Ed.NEAR_FAR_OFFSET]=n.nearClip,l[Ed.NEAR_FAR_OFFSET+1]=n.farClip,l[Ed.VIEW_PORT_OFFSET]=r.shadingScale*n.window.width*n.viewport.x,l[Ed.VIEW_PORT_OFFSET+1]=r.shadingScale*n.window.height*n.viewport.y,l[Ed.VIEW_PORT_OFFSET+2]=r.shadingScale*n.window.width*n.viewport.z,l[Ed.VIEW_PORT_OFFSET+3]=r.shadingScale*n.window.height*n.viewport.w}static updateShadowUBOView(e,t,n){const i=e.device,s=n.scene.mainLight,r=e.pipelineSceneData.shadows,o=t;if(r.enabled){if(s&&r.type===Hg.ShadowMap){let e=.1,n=0;const s=r.matShadowView,a=r.matShadowProj,c=r.matShadowViewProj;r.fixedArea?(e=r.near,n=r.far):(e=.1,n=r.shadowCameraFar),xi.toArray(t,s,Ad.MAT_LIGHT_VIEW_OFFSET),o[Ad.SHADOW_PROJ_DEPTH_INFO_OFFSET+0]=a.m10,o[Ad.SHADOW_PROJ_DEPTH_INFO_OFFSET+1]=a.m14,o[Ad.SHADOW_PROJ_DEPTH_INFO_OFFSET+2]=a.m11,o[Ad.SHADOW_PROJ_DEPTH_INFO_OFFSET+3]=a.m15,o[Ad.SHADOW_PROJ_INFO_OFFSET+0]=a.m00,o[Ad.SHADOW_PROJ_INFO_OFFSET+1]=a.m05,o[Ad.SHADOW_PROJ_INFO_OFFSET+2]=1/a.m00,o[Ad.SHADOW_PROJ_INFO_OFFSET+3]=1/a.m05,xi.toArray(t,c,Ad.MAT_LIGHT_VIEW_PROJ_OFFSET);const l=0,h=xf(i)?0:1;o[Ad.SHADOW_NEAR_FAR_LINEAR_SATURATION_INFO_OFFSET+0]=e,o[Ad.SHADOW_NEAR_FAR_LINEAR_SATURATION_INFO_OFFSET+1]=n,o[Ad.SHADOW_NEAR_FAR_LINEAR_SATURATION_INFO_OFFSET+2]=l,o[Ad.SHADOW_NEAR_FAR_LINEAR_SATURATION_INFO_OFFSET+3]=1-r.saturation,o[Ad.SHADOW_WIDTH_HEIGHT_PCF_BIAS_INFO_OFFSET+0]=r.size.x,o[Ad.SHADOW_WIDTH_HEIGHT_PCF_BIAS_INFO_OFFSET+1]=r.size.y,o[Ad.SHADOW_WIDTH_HEIGHT_PCF_BIAS_INFO_OFFSET+2]=r.pcf,o[Ad.SHADOW_WIDTH_HEIGHT_PCF_BIAS_INFO_OFFSET+3]=r.bias,o[Ad.SHADOW_LIGHT_PACKING_NBIAS_NULL_INFO_OFFSET+0]=0,o[Ad.SHADOW_LIGHT_PACKING_NBIAS_NULL_INFO_OFFSET+1]=h,o[Ad.SHADOW_LIGHT_PACKING_NBIAS_NULL_INFO_OFFSET+2]=r.normalBias,o[Ad.SHADOW_LIGHT_PACKING_NBIAS_NULL_INFO_OFFSET+3]=0}else s&&r.type===Hg.Planar&&(function(e,t,n){const i=t.direction,s=e.normal,r=e.distance+.001,o=1/ri.dot(s,i),a=i.x*o,c=i.y*o,l=i.z*o,h=s.x,_=s.y,u=s.z,p=e.matLight;p.m00=1-h*a,p.m01=-h*c,p.m02=-h*l,p.m03=0,p.m04=-_*a,p.m05=1-_*c,p.m06=-_*l,p.m07=0,p.m08=-u*a,p.m09=-u*c,p.m10=1-u*l,p.m11=0,p.m12=a*r,p.m13=c*r,p.m14=l*r,p.m15=1,xi.toArray(n,p,Ad.MAT_LIGHT_PLANE_PROJ_OFFSET)}(r,s,o),function(e,t){ri.normalize(Sv,e.normal),t[Ad.PLANAR_NORMAL_DISTANCE_INFO_OFFSET+0]=Sv.x,t[Ad.PLANAR_NORMAL_DISTANCE_INFO_OFFSET+1]=Sv.y,t[Ad.PLANAR_NORMAL_DISTANCE_INFO_OFFSET+2]=Sv.z,t[Ad.PLANAR_NORMAL_DISTANCE_INFO_OFFSET+3]=e.distance}(r,o));ti.toArray(o,r.shadowColor,Ad.SHADOW_COLOR_OFFSET)}}static updateShadowUBOLightView(e,t,n){const i=e.device,s=e.pipelineSceneData.shadows,r=t,o=xf(i)?0:1;let a=.1,c=0;const l=s.matShadowView,h=s.matShadowProj,_=s.matShadowViewProj;switch(n.type){case Yg.DIRECTIONAL:s.fixedArea?(a=s.near,c=s.far):(a=.1,c=s.shadowCameraFar),xi.toArray(t,l,Ad.MAT_LIGHT_VIEW_OFFSET),r[Ad.SHADOW_PROJ_DEPTH_INFO_OFFSET+0]=h.m10,r[Ad.SHADOW_PROJ_DEPTH_INFO_OFFSET+1]=h.m14,r[Ad.SHADOW_PROJ_DEPTH_INFO_OFFSET+2]=h.m11,r[Ad.SHADOW_PROJ_DEPTH_INFO_OFFSET+3]=h.m15,r[Ad.SHADOW_PROJ_INFO_OFFSET+0]=h.m00,r[Ad.SHADOW_PROJ_INFO_OFFSET+1]=h.m05,r[Ad.SHADOW_PROJ_INFO_OFFSET+2]=1/h.m00,r[Ad.SHADOW_PROJ_INFO_OFFSET+3]=1/h.m05,xi.toArray(t,_,Ad.MAT_LIGHT_VIEW_PROJ_OFFSET),sy.set(a,c,0,1-s.saturation),wi.toArray(r,sy,Ad.SHADOW_NEAR_FAR_LINEAR_SATURATION_INFO_OFFSET),sy.set(0,o,s.normalBias,0),wi.toArray(r,sy,Ad.SHADOW_LIGHT_PACKING_NBIAS_NULL_INFO_OFFSET);break;case Yg.SPOT:xi.invert(ty,n.node.getWorldMatrix()),xi.toArray(r,ty,Ad.MAT_LIGHT_VIEW_OFFSET),xi.perspective(ny,n.angle,n.aspect,.001,n.range),xi.multiply(iy,ny,ty),xi.toArray(r,iy,Ad.MAT_LIGHT_VIEW_PROJ_OFFSET),sy.set(.01,n.range,0,1-s.saturation),wi.toArray(r,sy,Ad.SHADOW_NEAR_FAR_LINEAR_SATURATION_INFO_OFFSET),sy.set(1,o,s.normalBias,0),wi.toArray(r,sy,Ad.SHADOW_LIGHT_PACKING_NBIAS_NULL_INFO_OFFSET)}sy.set(s.size.x,s.size.y,s.pcf,s.bias),wi.toArray(r,sy,Ad.SHADOW_WIDTH_HEIGHT_PCF_BIAS_INFO_OFFSET),ti.toArray(r,s.shadowColor,Ad.SHADOW_COLOR_OFFSET)}static getCombineSignY(){return oy._combineSignY}_initCombineSignY(){const e=this._device;oy._combineSignY=.5*e.capabilities.screenSpaceSignY+.5<<1|.5*e.capabilities.clipSpaceSignY+.5}activate(e,t){this._device=e,this._pipeline=t;const n=this._pipeline.descriptorSet;this._initCombineSignY();const i=e.createBuffer(new Lr(Us.UNIFORM|Us.TRANSFER_DST,ks.HOST|ks.DEVICE,bd.SIZE,bd.SIZE));n.bindBuffer(bd.BINDING,i);const s=e.createBuffer(new Lr(Us.UNIFORM|Us.TRANSFER_DST,ks.HOST|ks.DEVICE,Ed.SIZE,Ed.SIZE));n.bindBuffer(Ed.BINDING,s);const r=e.createBuffer(new Lr(Us.UNIFORM|Us.TRANSFER_DST,ks.HOST|ks.DEVICE,Ad.SIZE,Ad.SIZE));n.bindBuffer(Ad.BINDING,r)}updateGlobalUBO(e){const t=this._pipeline.globalDSManager,n=this._pipeline.descriptorSet,i=this._pipeline.commandBuffers;n.update(),oy.updateGlobalUBOView(e,this._globalUBO),i[0].updateBuffer(n.getBuffer(bd.BINDING),this._globalUBO),t.bindBuffer(bd.BINDING,n.getBuffer(bd.BINDING)),t.update()}updateCameraUBO(e){const t=this._pipeline.globalDSManager,n=this._pipeline.descriptorSet,i=this._pipeline.commandBuffers;oy.updateCameraUBOView(this._pipeline,this._cameraUBO,e),i[0].updateBuffer(n.getBuffer(Ed.BINDING),this._cameraUBO),t.bindBuffer(Ed.BINDING,n.getBuffer(Ed.BINDING)),t.update()}updateShadowUBO(e){const t=this._pipeline.pipelineSceneData;if(!t.shadows.enabled)return;const n=this._pipeline.descriptorSet,i=this._pipeline.commandBuffers,s=t.shadowFrameBufferMap,r=e.scene.mainLight;r&&s.has(r)&&n.bindTexture(Pd,s.get(r).colorTextures[0]),oy.updateShadowUBOView(this._pipeline,this._shadowUBO,e),n.update(),i[0].updateBuffer(n.getBuffer(Ad.BINDING),this._shadowUBO)}updateShadowUBOLight(e,t){oy.updateShadowUBOLightView(this._pipeline,this._shadowUBO,t),e.bindTexture(Pd,Jm.get("default-texture").getGFXTexture()),e.bindTexture(zd,Jm.get("default-texture").getGFXTexture()),e.update(),e.getBuffer(Ad.BINDING).update(this._shadowUBO)}updateShadowUBORange(e,t){t instanceof xi?xi.toArray(this._shadowUBO,t,e):t instanceof ti&&ti.toArray(this._shadowUBO,t,e)}destroy(){}}var ay,cy,ly,hy,_y,uy,py,dy,fy;oy._combineSignY=0;let my=(ay=Zc("RenderStage"),cy=bl(),ly=bl(),hy=bl(),ay((py=Bc((uy=class{constructor(){Fc(this,"_name",py,this),Fc(this,"_priority",dy,this),this._enabled=!0,Fc(this,"_tag",fy,this)}get name(){return this._name}get priority(){return this._priority}get tag(){return this._tag}set enabled(e){this._enabled=e}get enabled(){return this._enabled}initialize(e){return this._name=e.name,this._priority=e.priority,e.tag&&(this._tag=e.tag),!0}activate(e,t){this._pipeline=e,this._flow=t}}).prototype,"_name",[cy,il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),dy=Bc(uy.prototype,"_priority",[ly,il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),fy=Bc(uy.prototype,"_tag",[hy,il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),_y=uy))||_y);var gy,vy,yy,xy,Sy,Cy,Ty,by,Ey,Ay,Py,wy;i.RenderStage=my;let Iy,Ry=(gy=Zc("RenderFlow"),vy=bl(),yy=bl(),xy=bl(),Sy=bl(),Cy=Ol([my]),gy((Ey=Bc((by=class{constructor(){Fc(this,"_name",Ey,this),Fc(this,"_priority",Ay,this),Fc(this,"_tag",Py,this),Fc(this,"_stages",wy,this)}get name(){return this._name}get priority(){return this._priority}get tag(){return this._tag}get stages(){return this._stages}get pipeline(){return this._pipeline}initialize(e){return this._name=e.name,this._priority=e.priority,this._stages=e.stages,e.tag&&(this._tag=e.tag),!0}activate(e){this._pipeline=e,this._stages.sort(((e,t)=>e.priority-t.priority));for(let t=0,n=this._stages.length;t<n;t++)this._stages[t].activate(e,this)}render(e){for(let t=0,n=this._stages.length;t<n;t++)this._stages[t].enabled&&this._stages[t].render(e)}destroy(){for(let e=0,t=this._stages.length;e<t;e++)this._stages[e].destroy();this._stages.length=0}}).prototype,"_name",[vy,il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),Ay=Bc(by.prototype,"_priority",[yy,il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Py=Bc(by.prototype,"_tag",[xy,il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),wy=Bc(by.prototype,"_stages",[Sy,Cy,il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Ty=by))||Ty);i.RenderFlow=Ry,function(e){e.RENDER_FRAME_BEGIN="render-frame-begin",e.RENDER_FRAME_END="render-frame-end",e.RENDER_CAMERA_BEGIN="render-camera-begin",e.RENDER_CAMERA_END="render-camera-end",e.ATTACHMENT_SCALE_CAHNGED="attachment-scale-changed"}(Iy||(Iy=e("PipelineEventType",{})));class Dy extends kt{constructor(...e){super(...e),this.eventTargetOn=super.on,this.eventTargetOnce=super.once}on(e,t,n,i){return this.eventTargetOn(e,t,n,i)}once(e,t,n){return this.eventTargetOnce(e,t,n)}}var Oy,My,Ny,Ly,zy,Fy,By,Uy;e("PipelineEventProcessor",Dy);const Gy=new Tr,Hy=new Rr;class ky{constructor(){this.renderPass=null,this.sampler=null,this.prefiterTex=null,this.downsampleTexs=[],this.upsampleTexs=[],this.combineTex=null,this.prefilterFramebuffer=null,this.downsampleFramebuffers=[],this.upsampleFramebuffers=[],this.combineFramebuffer=null}}class Vy{constructor(){this.quadIB=null,this.quadVB=null,this.quadIA=null}}let jy=(Oy=Zc("cc.RenderPipeline"),My=bl(),Ny=bl(),Ly=Ol([Ry]),Oy((By=Bc((Fy=class extends bh{constructor(...e){super(...e),Fc(this,"_tag",By,this),Fc(this,"_flows",Uy,this),this._quadIB=null,this._quadVBOnscreen=null,this._quadVBOffscreen=null,this._quadIAOnscreen=null,this._quadIAOffscreen=null,this._eventProcessor=new Dy,this._commandBuffers=[],this._pipelineUBO=new oy,this._macros={},this._constantMacros="",this._profiler=null,this._pipelineRenderData=null,this._renderPasses=new Map,this._width=0,this._height=0,this._lastUsedRenderArea=new Tr,this._clusterEnabled=!1,this._bloomEnabled=!1}get tag(){return this._tag}get flows(){return this._flows}get quadIAOnscreen(){return this._quadIAOnscreen}get quadIAOffscreen(){return this._quadIAOffscreen}getPipelineRenderData(){return this._pipelineRenderData}get constantMacros(){return this._constantMacros}get macros(){return this._macros}get device(){return this._device}get globalDSManager(){return this._globalDSManager}get descriptorSetLayout(){return this._globalDSManager.descriptorSetLayout}get descriptorSet(){return this._descriptorSet}get commandBuffers(){return this._commandBuffers}get pipelineUBO(){return this._pipelineUBO}get pipelineSceneData(){return this._pipelineSceneData}set profiler(e){this._profiler=e}get profiler(){return this._profiler}set clusterEnabled(e){this._clusterEnabled=e}get clusterEnabled(){return this._clusterEnabled}set bloomEnabled(e){this._bloomEnabled=e}get bloomEnabled(){return this._bloomEnabled}initialize(e){return this._flows=e.flows,e.tag&&(this._tag=e.tag),!0}createRenderPass(e,t,n){const i=this._device,s=new to,r=new no;s.format=t,r.format=n,r.stencilStoreOp=sr.DISCARD,r.depthStoreOp=sr.DISCARD,e&vr.COLOR||(e&Of?s.loadOp=ir.DISCARD:(s.loadOp=ir.LOAD,s.beginAccesses=[rr.COLOR_ATTACHMENT_WRITE])),(e&vr.DEPTH_STENCIL)!==vr.DEPTH_STENCIL&&(e&vr.DEPTH||(r.depthLoadOp=ir.LOAD),e&vr.STENCIL||(r.stencilLoadOp=ir.LOAD)),r.beginAccesses=[rr.DEPTH_STENCIL_ATTACHMENT_WRITE];const o=new ro([s],r);return i.createRenderPass(o)}getRenderPass(e,t){let n=this._renderPasses.get(e);return n||(n=this.createRenderPass(e,t.colorTextures[0].format,t.depthStencilTexture.format),this._renderPasses.set(e,n),n)}applyFramebufferRatio(e){const t=this.pipelineSceneData,n=this._width*t.shadingScale,i=this._height*t.shadingScale,s=e.colorTextures;for(let e=0;e<s.length;e++)s[e].resize(n,i);e.depthStencilTexture&&e.depthStencilTexture.resize(n,i),e.destroy(),e.initialize(new co(e.renderPass,s,e.depthStencilTexture))}generateRenderArea(e,t){const n=e.viewport,i=e.window.width,s=e.window.height;t.x=n.x*i,t.y=n.y*s,t.width=n.width*i,t.height=n.height*s}generateViewport(e,t){this.generateRenderArea(e,Gy),t||(t=Hy);const n=this.pipelineSceneData.shadingScale;return t.left=Gy.x*n,t.top=Gy.y*n,t.width=Gy.width*n,t.height=Gy.height*n,t}generateScissor(e,t){t||(t=Gy),this.generateRenderArea(e,t);const n=this.pipelineSceneData.shadingScale;return t.x*=n,t.y*=n,t.width*=n,t.height*=n,t}activate(e){const t=i.director.root;this._device=t.device,this._generateConstantMacros(),this._globalDSManager=new ey(this),this._descriptorSet=this._globalDSManager.globalDescriptorSet,this._pipelineUBO.activate(this._device,this),this._macros.CC_USE_HDR=this._pipelineSceneData.isHDR,this._generateConstantMacros(),this._pipelineSceneData.activate(this._device,this);for(let e=0;e<this._flows.length;e++)this._flows[e].activate(this);return!0}_ensureEnoughSize(e){}render(e){if(0!==e.length){this._commandBuffers[0].begin(),this.emit(Iy.RENDER_FRAME_BEGIN,e),this._ensureEnoughSize(e),function(e){for(let t=e.length-1;t>=0;--t)if(e[t].window.swapchain)return}(e);for(let t=0;t<e.length;t++){const n=e[t];if(n.scene){this.emit(Iy.RENDER_CAMERA_BEGIN,n),$v(this,n),Zv(this,n),this._pipelineUBO.updateGlobalUBO(n.window),this._pipelineUBO.updateCameraUBO(n);for(let e=0;e<this._flows.length;e++)this._flows[e].render(n);this.emit(Iy.RENDER_CAMERA_END,n)}}this.emit(Iy.RENDER_FRAME_END,e),this._commandBuffers[0].end(),this._device.queue.submit(this._commandBuffers)}}_destroyQuadInputAssembler(){this._quadIB&&(this._quadIB.destroy(),this._quadIB=null),this._quadVBOnscreen&&(this._quadVBOnscreen.destroy(),this._quadVBOnscreen=null),this._quadVBOffscreen&&(this._quadVBOffscreen.destroy(),this._quadVBOffscreen=null),this._quadIAOnscreen&&(this._quadIAOnscreen.destroy(),this._quadIAOnscreen=null),this._quadIAOffscreen&&(this._quadIAOffscreen.destroy(),this._quadIAOffscreen=null)}_destroyBloomData(){var e;const t=this._pipelineRenderData.bloom;if(null!==t){t.prefiterTex&&t.prefiterTex.destroy(),t.prefilterFramebuffer&&t.prefilterFramebuffer.destroy();for(let e=0;e<t.downsampleTexs.length;++e)t.downsampleTexs[e].destroy(),t.downsampleFramebuffers[e].destroy();t.downsampleTexs.length=0,t.downsampleFramebuffers.length=0;for(let e=0;e<t.upsampleTexs.length;++e)t.upsampleTexs[e].destroy(),t.upsampleFramebuffers[e].destroy();t.upsampleTexs.length=0,t.upsampleFramebuffers.length=0,t.combineTex&&t.combineTex.destroy(),t.combineFramebuffer&&t.combineFramebuffer.destroy(),null===(e=t.renderPass)||void 0===e||e.destroy(),this._pipelineRenderData.bloom=null}}_genQuadVertexData(e,t){const n=new Float32Array(16),i=t.x/this._width,s=(t.x+t.width)/this._width;let r=t.y/this._height,o=(t.y+t.height)/this._height;if(this.device.capabilities.screenSpaceSignY>0){const e=o;o=r,r=e}let a=0;switch(e){case Ns.IDENTITY:a=0,n[a++]=-1,n[a++]=-1,n[a++]=i,n[a++]=o,n[a++]=1,n[a++]=-1,n[a++]=s,n[a++]=o,n[a++]=-1,n[a++]=1,n[a++]=i,n[a++]=r,n[a++]=1,n[a++]=1,n[a++]=s,n[a++]=r;break;case Ns.ROTATE_90:a=0,n[a++]=-1,n[a++]=-1,n[a++]=s,n[a++]=o,n[a++]=1,n[a++]=-1,n[a++]=s,n[a++]=r,n[a++]=-1,n[a++]=1,n[a++]=i,n[a++]=o,n[a++]=1,n[a++]=1,n[a++]=i,n[a++]=r;break;case Ns.ROTATE_180:a=0,n[a++]=-1,n[a++]=-1,n[a++]=i,n[a++]=r,n[a++]=1,n[a++]=-1,n[a++]=s,n[a++]=r,n[a++]=-1,n[a++]=1,n[a++]=i,n[a++]=o,n[a++]=1,n[a++]=1,n[a++]=s,n[a++]=o;break;case Ns.ROTATE_270:a=0,n[a++]=-1,n[a++]=-1,n[a++]=i,n[a++]=r,n[a++]=1,n[a++]=-1,n[a++]=i,n[a++]=o,n[a++]=-1,n[a++]=1,n[a++]=s,n[a++]=r,n[a++]=1,n[a++]=1,n[a++]=s,n[a++]=o}return n}_createQuadInputAssembler(){const e=new Vy,t=4*Float32Array.BYTES_PER_ELEMENT,n=4*t,i=this._device.createBuffer(new Lr(Us.VERTEX|Us.TRANSFER_DST,ks.DEVICE|ks.HOST,n,t));if(!i)return e;const s=Uint8Array.BYTES_PER_ELEMENT,r=6*s,o=this._device.createBuffer(new Lr(Us.INDEX|Us.TRANSFER_DST,ks.DEVICE,r,s));if(!o)return e;const a=new Uint8Array(6);a[0]=0,a[1]=1,a[2]=2,a[3]=1,a[4]=3,a[5]=2,o.update(a);const c=new Array(2);c[0]=new Qr("a_position",zs.RG32F),c[1]=new Qr("a_texCoord",zs.RG32F);const l=this._device.createInputAssembler(new eo(c,[i],o));return e.quadIB=o,e.quadVB=i,e.quadIA=l,e}updateQuadVertexData(e,t){const n=this._lastUsedRenderArea;if(n.x===e.x&&n.y===e.y&&n.width===e.width&&n.height===e.height)return;const i=this._genQuadVertexData(Ns.IDENTITY,e);this._quadVBOffscreen.update(i);const s=this._genQuadVertexData(t.swapchain&&t.swapchain.surfaceTransform||Ns.IDENTITY,e);this._quadVBOnscreen.update(s),n.copy(e)}destroy(){var e,t;for(let e=0;e<this._flows.length;e++)this._flows[e].destroy();this._flows.length=0,this._descriptorSet&&this._descriptorSet.destroy(),null===(e=this._globalDSManager)||void 0===e||e.destroy();for(let e=0;e<this._commandBuffers.length;e++)this._commandBuffers[e].destroy();return this._commandBuffers.length=0,this._pipelineUBO.destroy(),null===(t=this._pipelineSceneData)||void 0===t||t.destroy(),super.destroy()}_generateConstantMacros(){let e="";e+=`#define CC_DEVICE_SUPPORT_FLOAT_TEXTURE ${this.device.hasFeature(Ls.TEXTURE_FLOAT)?1:0}\n`,e+=`#define CC_ENABLE_CLUSTERED_LIGHT_CULLING ${this._clusterEnabled?1:0}\n`,e+=`#define CC_DEVICE_MAX_VERTEX_UNIFORM_VECTORS ${this.device.capabilities.maxVertexUniformVectors}\n`,e+=`#define CC_DEVICE_MAX_FRAGMENT_UNIFORM_VECTORS ${this.device.capabilities.maxFragmentUniformVectors}\n`,e+=`#define CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT ${this.device.hasFeature(Ls.INPUT_ATTACHMENT_BENEFIT)?1:0}\n`,e+=`#define CC_PLATFORM_ANDROID_AND_WEBGL ${Zt.os===qt.ANDROID&&Zt.isBrowser?1:0}\n`,e+=`#define CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES ${Ue.ENABLE_WEBGL_HIGHP_STRUCT_VALUES?1:0}\n`,this._constantMacros=e}generateBloomRenderData(){if(null!=this._pipelineRenderData.bloom)return;const e=this._pipelineRenderData.bloom=new ky,t=this.device,n=new to;n.format=zs.RGBA8,n.loadOp=ir.CLEAR,n.storeOp=sr.STORE,n.endAccesses=[rr.COLOR_ATTACHMENT_WRITE],e.renderPass=t.createRenderPass(new ro([n]));let i=this._width,s=this._height;e.prefiterTex=t.createTexture(new Gr(Vs.TEX2D,js.COLOR_ATTACHMENT|js.SAMPLED,zs.RGBA8,i>>1,s>>1)),e.prefilterFramebuffer=t.createFramebuffer(new co(e.renderPass,[e.prefiterTex])),i>>=1,s>>=1;for(let n=0;n<6;++n)e.downsampleTexs.push(t.createTexture(new Gr(Vs.TEX2D,js.COLOR_ATTACHMENT|js.SAMPLED,zs.RGBA8,i>>1,s>>1))),e.downsampleFramebuffers[n]=t.createFramebuffer(new co(e.renderPass,[e.downsampleTexs[n]])),e.upsampleTexs.push(t.createTexture(new Gr(Vs.TEX2D,js.COLOR_ATTACHMENT|js.SAMPLED,zs.RGBA8,i,s))),e.upsampleFramebuffers[n]=t.createFramebuffer(new co(e.renderPass,[e.upsampleTexs[n]])),i>>=1,s>>=1;e.combineTex=t.createTexture(new Gr(Vs.TEX2D,js.COLOR_ATTACHMENT|js.SAMPLED,zs.RGBA8,this._width,this._height)),e.combineFramebuffer=t.createFramebuffer(new co(e.renderPass,[e.combineTex])),e.sampler=this.globalDSManager.linearSampler}on(e,t,n,i){return this._eventProcessor.on(e,t,n,i)}once(e,t,n){return this._eventProcessor.once(e,t,n)}off(e,t,n){this._eventProcessor.off(e,t,n)}emit(e,t,n,i,s,r){this._eventProcessor.emit(e,t,n,i,s,r)}targetOff(e){this._eventProcessor.targetOff(e)}removeAll(e){this._eventProcessor.removeAll(e)}hasEventListener(e,t,n){return this._eventProcessor.hasEventListener(e,t,n)}}).prototype,"_tag",[My,il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Uy=Bc(Fy.prototype,"_flows",[Ny,Ly,il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),zy=Fy))||zy);function Wy(e,t){for(const n of t)Array.isArray(n)?Wy(e,n):e.push(n)}function qy(e){const t=[];return Wy(t,e),t.join("")}i.RenderPipeline=jy;const Xy=Dt.Flags.Destroyed,Yy=Dt.Flags.PersistentMask,Ky=Et.IDENTIFIER_RE,$y="var ",Zy="o",Qy={"cc.ClickEvent":!1,"cc.PrefabInfo":!1},Jy=Et.escapeForJS;class ex{constructor(e,t){this.varName=void 0,this.expression=void 0,this.varName=e,this.expression=t}toString(){return`${$y+this.varName}=${this.expression};`}}function tx(e,t){return t instanceof ex?new ex(t.varName,e+t.expression):e+t}function nx(e,t,n){Array.isArray(n)?(n[0]=tx(t,n[0]),e.push(n)):e.push(`${tx(t,n)};`)}class ix{constructor(e){this._exps=void 0,this._targetExp=void 0,this._exps=[],this._targetExp=e}append(e,t){this._exps.push([e,t])}writeCode(e){let t;if(this._exps.length>1)e.push(`t=${this._targetExp};`),t="t";else{if(1!==this._exps.length)return;t=this._targetExp}for(let n=0;n<this._exps.length;n++){const i=this._exps[n];nx(e,`${t+sx(i[0])}=`,i[1])}}}function sx(e){return Ky.test(e)?`.${e}`:`[${Jy(e)}]`}ix.pool=void 0,ix.pool=new be((e=>{e._exps.length=0,e._targetExp=null}),1),ix.pool.get=function(e){const t=this._get()||new ix;return t._targetExp=e,t};class rx{constructor(e,t){let n;this.parent=void 0,this.objsToClear_iN$t=void 0,this.codeArray=void 0,this.objs=void 0,this.funcs=void 0,this.funcModuleCache=void 0,this.globalVariables=void 0,this.globalVariableId=void 0,this.localVariableId=void 0,this.result=void 0,this.parent=t,this.objsToClear_iN$t=[],this.codeArray=[],this.objs=[],this.funcs=[],this.funcModuleCache=Z(),ce(this.funcModuleCache,Qy),this.globalVariables=[],this.globalVariableId=0,this.localVariableId=0,this.codeArray.push("var o,t;","if(R){","o=R;","}else{",`o=R=new ${this.getFuncModule(e.constructor,!0)}();`,"}"),e._iN$t={globalVar:"R"},this.objsToClear_iN$t.push(e),this.enumerateObject(this.codeArray,e),this.globalVariables.length>0&&(n=`${$y+this.globalVariables.join(",")};`);const i=qy(["return (function(R){",n||[],this.codeArray,"return o;","})"]);this.result=Function("O","F",i)(this.objs,this.funcs);for(let e=0,t=this.objsToClear_iN$t.length;e<t;++e)this.objsToClear_iN$t[e]._iN$t=null;this.objsToClear_iN$t.length=0}getFuncModule(e,t){const n=Q(e);if(n){const t=this.funcModuleCache[n];if(t)return t;if(void 0===t){let t=-1!==n.indexOf(".");if(t)try{if(t=e===Function(`return ${n}`)(),t)return this.funcModuleCache[n]=n,n}catch(e){}}}let i=this.funcs.indexOf(e);i<0&&(i=this.funcs.length,this.funcs.push(e));let s=`F[${i}]`;return t&&(s=`(${s})`),this.funcModuleCache[n]=s,s}getObjRef(e){let t=this.objs.indexOf(e);return t<0&&(t=this.objs.length,this.objs.push(e)),`O[${t}]`}setValueType(e,t,n,i){const s=ix.pool.get(i);let r=t.constructor.__props__;r||(r=Object.keys(t));for(let e=0;e<r.length;e++){const i=r[e],o=n[i];if(t[i]===o)continue;const a=this.enumerateField(n,i,o);s.append(i,a)}s.writeCode(e),ix.pool.put(s)}enumerateCCClass(e,t,n){const s=n.__values__,r=nt(n);for(let n=0;n<s.length;n++){const o=s[n],a=t[o];let c=r[o+"$_$default"];if(!ox(c,a))if("object"==typeof a&&a instanceof i.ValueType&&(c=Et.getDefault(c),c&&c.constructor===a.constructor)){const t=Zy+sx(o);this.setValueType(e,c,a,t)}else this.setObjProp(e,t,o,a)}}instantiateArray(e){if(0===e.length)return"[]";const t="a"+ ++this.localVariableId,n=[new ex(t,`new Array(${e.length})`)];e._iN$t={globalVar:"",source:n},this.objsToClear_iN$t.push(e);for(let i=0;i<e.length;++i)nx(n,`${t}[${i}]=`,this.enumerateField(e,i,e[i]));return n}instantiateTypedArray(e){const t=e.constructor.name;if(0===e.length)return`new ${t}`;const n="a"+ ++this.localVariableId,i=[new ex(n,`new ${t}(${e.length})`)];e._iN$t={globalVar:"",source:i},this.objsToClear_iN$t.push(e);for(let t=0;t<e.length;++t)0!==e[t]&&nx(i,`${n}[${t}]=`,e[t]);return i}enumerateField(e,t,n){if("object"==typeof n&&n){const e=n._iN$t;if(e){let t=e.globalVar;if(!t){t=e.globalVar="v"+ ++this.globalVariableId,this.globalVariables.push(t);const n=e.source[0];e.source[0]=tx(`${t}=`,n)}return t}return ArrayBuffer.isView(n)?this.instantiateTypedArray(n):Array.isArray(n)?this.instantiateArray(n):this.instantiateObj(n)}return"function"==typeof n?this.getFuncModule(n):"string"==typeof n?Jy(n):("_objFlags"===t&&e instanceof Dt&&(n&=Yy),n)}setObjProp(e,t,n,i){nx(e,`${Zy+sx(n)}=`,this.enumerateField(t,n,i))}enumerateObject(e,t){const n=t.constructor;if(i.Class._isCCClass(n))this.enumerateCCClass(e,t,n);else for(const n in t){if(!t.hasOwnProperty(n)||95===n.charCodeAt(0)&&95===n.charCodeAt(1)&&"__type__"!==n)continue;const i=t[n];"object"==typeof i&&i&&i===t._iN$t||this.setObjProp(e,t,n,i)}}instantiateObj(e){if(e instanceof i.ValueType)return Et.getNewValueTypeCode(e);if(e instanceof i.Asset)return this.getObjRef(e);if(e._objFlags&Xy)return null;let t;const n=e.constructor;if(i.Class._isCCClass(n)){if(this.parent)if(this.parent instanceof i.Component){if(e instanceof i._BaseNode||e instanceof i.Component)return this.getObjRef(e)}else if(this.parent instanceof i._BaseNode)if(e instanceof i._BaseNode){if(!e.isChildOf(this.parent))return this.getObjRef(e)}else if(e instanceof i.Component&&!e.node.isChildOf(this.parent))return this.getObjRef(e);t=new ex(Zy,`new ${this.getFuncModule(n,!0)}()`)}else if(n===Object)t=new ex(Zy,"{}");else{if(n)return this.getObjRef(e);t=new ex(Zy,"Object.create(null)")}const s=[t];return e._iN$t={globalVar:"",source:s},this.objsToClear_iN$t.push(e),this.enumerateObject(s,e),["(function(){",s,"return o;})();"]}}function ox(e,t){if("function"==typeof e)try{e=e()}catch(e){return!1}if(e===t)return!0;if(e&&t&&"object"==typeof e&&"object"==typeof t&&e.constructor===t.constructor)if(e instanceof i.ValueType){if(e.equals(t))return!0}else{if(Array.isArray(e))return 0===e.length&&0===t.length;if(e.constructor===Object)return q(e)&&q(t)}return!1}class ax{get uiTransformComp(){return this._uiTransformComp||(this._uiTransformComp=this._node.getComponent("cc.UITransform")),this._uiTransformComp}set uiTransformComp(e){this._uiTransformComp=e}get uiComp(){return this._uiComp}set uiComp(e){this._uiComp&&e?T(12002):this._uiComp=e}get opacity(){return this._opacity}get localOpacity(){return this._localOpacity}set localOpacity(e){this._localOpacity=e,this.colorDirty=!0}constructor(e){this._uiComp=null,this._opacity=1,this._localOpacity=1,this.colorDirty=!0,this._uiTransformComp=null,this._node=void 0,this._node=e}applyOpacity(e){this._opacity=this._localOpacity*e}static markOpacityTree(e,t=!0){}}let cx;var lx,hx,_x,ux,px,dx,fx,mx,gx;Dt.Flags.Destroying,function(e){e.TOUCH_START="touch-start",e.TOUCH_MOVE="touch-move",e.TOUCH_END="touch-end",e.TOUCH_CANCEL="touch-cancel",e.MOUSE_DOWN="mouse-down",e.MOUSE_MOVE="mouse-move",e.MOUSE_UP="mouse-up",e.MOUSE_WHEEL="mouse-wheel",e.MOUSE_ENTER="mouse-enter",e.MOUSE_LEAVE="mouse-leave",e.KEY_DOWN="keydown",e.KEY_UP="keyup",e.DEVICEMOTION="devicemotion",e.TRANSFORM_CHANGED="transform-changed",e.SCENE_CHANGED_FOR_PERSISTS="scene-changed-for-persists",e.SIZE_CHANGED="size-changed",e.ANCHOR_CHANGED="anchor-changed",e.COLOR_CHANGED="color-changed",e.CHILD_ADDED="child-added",e.CHILD_REMOVED="child-removed",e.PARENT_CHANGED="parent-changed",e.NODE_DESTROYED="node-destroyed",e.LAYER_CHANGED="layer-changed",e.SIBLING_ORDER_CHANGED="sibling-order-changed",e.ACTIVE_IN_HIERARCHY_CHANGED="active-in-hierarchy-changed"}(cx||(cx={}));const vx=Dt.Flags.Destroying,yx=Dt.Flags.DontDestroy,xx=Dt.Flags.Deactivating,Sx=new G("Node");function Cx(e){return e?"string"==typeof e?Ce(e):e:(E(3804),null)}let Tx=e("BaseNode",Zc("cc.BaseNode")((gx=mx=class e extends Dt{get components(){return this._components}get _persistNode(){return(this._objFlags&yx)>0}set _persistNode(e){e?this._objFlags|=yx:this._objFlags&=~yx}get name(){return this._name}set name(e){this._name=e}get uuid(){return this._id}get children(){return this._children}get active(){return this._active}set active(e){if(this._active!==e){this._active=e;const t=this._parent;t&&t._activeInHierarchy&&i.director._nodeActivator.activateNode(this,e)}}get activeInHierarchy(){return this._activeInHierarchy}get parent(){return this._parent}set parent(e){this.setParent(e)}get scene(){return this._scene}get eventProcessor(){return this._eventProcessor}static _setScene(e){e._updateScene()}static _findComponent(e,t){const n=t,i=e._components;if(n._sealed)for(let e=0;e<i.length;++e){const n=i[e];if(n.constructor===t)return n}else for(let e=0;e<i.length;++e){const n=i[e];if(n instanceof t)return n}return null}static _findComponents(e,t,n){const i=t,s=e._components;if(i._sealed)for(let e=0;e<s.length;++e){const i=s[e];i.constructor===t&&n.push(i)}else for(let e=0;e<s.length;++e){const i=s[e];i instanceof t&&n.push(i)}}static _findChildComponent(t,n){for(let i=0;i<t.length;++i){const s=t[i];let r=e._findComponent(s,n);if(r)return r;if(s._children.length>0&&(r=e._findChildComponent(s._children,n),r))return r}return null}static _findChildComponents(t,n,i){for(let s=0;s<t.length;++s){const r=t[s];e._findComponents(r,n,i),r._children.length>0&&e._findChildComponents(r._children,n,i)}}_updateScene(){null==this._parent?d("Node %s(%s) has not attached to a scene.",this.name,this.uuid):this._scene=this._parent._scene}constructor(e){super(e),Fc(this,"_parent",_x,this),Fc(this,"_children",ux,this),Fc(this,"_active",px,this),Fc(this,"_components",dx,this),Fc(this,"_prefab",fx,this),this._scene=null,this._activeInHierarchy=!1,this._id=Sx.getNewId(),this._name=void 0,this._eventProcessor=new i.NodeEventProcessor(this),this._eventMask=0,this._siblingIndex=0,this._originalSceneId="",this._registerIfAttached=void 0,this._name=void 0!==e?e:"New Node"}attr(e){ce(this,e)}getParent(){return this._parent}setParent(e,t=!1){if(this._parent===e)return;const n=this._parent,i=e;if(this._parent=i,this._siblingIndex=0,this._onSetParent(n,t),this.emit&&this.emit(cx.PARENT_CHANGED,n),n&&!(n._objFlags&vx)){const e=n._children.indexOf(this);n._children.splice(e,1),n._updateSiblingIndex(),n.emit&&n.emit(cx.CHILD_REMOVED,this)}i&&(i._children.push(this),this._siblingIndex=i._children.length-1,i.emit&&i.emit(cx.CHILD_ADDED,this)),this._onHierarchyChanged(n)}getChildByUuid(e){if(!e)return u("Invalid uuid"),null;const t=this._children;for(let n=0,i=t.length;n<i;n++)if(t[n]._id===e)return t[n];return null}getChildByName(e){if(!e)return u("Invalid name"),null;const t=this._children;for(let n=0,i=t.length;n<i;n++)if(t[n]._name===e)return t[n];return null}getChildByPath(e){const t=e.split("/");let n=this;for(let e=0;e<t.length;++e){const i=t[e];if(0===i.length)continue;const s=n.children.find((e=>e.name===i));if(!s)return null;n=s}return n}addChild(e){e.setParent(this)}insertChild(e,t){e.parent=this,e.setSiblingIndex(t)}getSiblingIndex(){return this._siblingIndex}setSiblingIndex(e){if(!this._parent)return;if(this._parent._objFlags&xx)return void E(3821);const t=this._parent._children;e=-1!==e?e:t.length-1;const n=t.indexOf(this);e!==n&&(t.splice(n,1),e<t.length?t.splice(e,0,this):t.push(this),this._parent._updateSiblingIndex(),this._onSiblingIndexChanged&&this._onSiblingIndexChanged(e))}walk(t,n){let i=1,s=null,r=null,o=0,a=e._stacks[e._stackId];a||(a=[],e._stacks.push(a)),e._stackId++,a.length=0,a[0]=this;let c=null,l=!1;for(;i;)if(i--,r=a[i],r)if(!l&&t?t(r):l&&n&&n(r),a[i]=null,l){if(c===this._parent)break;if(l=!1,s)if(o++,s[o])a[i]=s[o],i++;else if(c&&(a[i]=c,i++,l=!0,c._parent?(s=c._parent._children,o=s.indexOf(c),c=c._parent):(c=null,s=null),o<0))break}else r._children.length>0?(c=r,s=r._children,o=0,a[i]=s[o],i++):(a[i]=r,i++,l=!0);a.length=0,e._stackId--}removeFromParent(){this._parent&&this._parent.removeChild(this)}removeChild(e){this._children.indexOf(e)>-1&&(e.parent=null)}removeAllChildren(){const e=this._children;for(let t=e.length-1;t>=0;t--){const n=e[t];n&&(n.parent=null)}this._children.length=0}isChildOf(e){let t=this;do{if(t===e)return!0;t=t._parent}while(t);return!1}getComponent(t){const n=Cx(t);return n?e._findComponent(this,n):null}getComponents(t){const n=Cx(t),i=[];return n&&e._findComponents(this,n,i),i}getComponentInChildren(t){const n=Cx(t);return n?e._findChildComponent(this._children,n):null}getComponentsInChildren(t){const n=Cx(t),i=[];return n&&(e._findComponents(this,n,i),e._findChildComponents(this._children,n,i)),i}addComponent(e){let t;if("string"==typeof e){if(t=Ce(e),!t)throw i._RF.peek()&&E(3808,e),TypeError(I(3807,e))}else{if(!e)throw TypeError(I(3804));t=e}if("function"!=typeof t)throw TypeError(I(3809));if(!_e(t,i.Component))throw TypeError(I(3810));const n=t._requireComponent;if(n)if(Array.isArray(n))for(let e=0;e<n.length;e++){const t=n[e];this.getComponent(t)||this.addComponent(t)}else{const e=n;this.getComponent(e)||this.addComponent(e)}const s=new t;return s.node=this,this._components.push(s),this._activeInHierarchy&&i.director._nodeActivator.activateComp(s),s}removeComponent(e){if(!e)return void E(3813);let t=null;t=e instanceof jh?e:this.getComponent(e),t&&t.destroy()}on(e,t,n,i=!1){switch(e){case cx.TRANSFORM_CHANGED:this._eventMask|=1}this._eventProcessor.on(e,t,n,i)}off(e,t,n,i=!1){if(this._eventProcessor.off(e,t,n,i),!this._eventProcessor.hasEventListener(e))switch(e){case cx.TRANSFORM_CHANGED:this._eventMask&=-2}}once(e,t,n,i){this._eventProcessor.once(e,t,n,i)}emit(e,t,n,i,s,r){this._eventProcessor.emit(e,t,n,i,s,r)}dispatchEvent(e){this._eventProcessor.dispatchEvent(e)}hasEventListener(e,t,n){return this._eventProcessor.hasEventListener(e,t,n)}targetOff(e){this._eventProcessor.targetOff(e),1&this._eventMask&&!this._eventProcessor.hasEventListener(cx.TRANSFORM_CHANGED)&&(this._eventMask&=-2)}destroy(){return!!super.destroy()&&(this.active=!1,!0)}destroyAllChildren(){const e=this._children;for(let t=0;t<e.length;++t)e[t].destroy()}_removeComponent(e){if(e){if(!(this._objFlags&vx)){const t=this._components.indexOf(e);-1!==t?this._components.splice(t,1):e.node!==this&&E(3815)}}else E(3814)}_updateSiblingIndex(){for(let e=0;e<this._children.length;++e)this._children[e]._siblingIndex=e;this.emit(cx.SIBLING_ORDER_CHANGED)}_onSetParent(t,n=!1){this._parent&&(null!=t&&t._scene===this._parent._scene||null==this._parent._scene||this.walk(e._setScene))}_onPostActivated(e){}_onBatchCreated(e){this._parent&&(this._siblingIndex=this._parent.children.indexOf(this))}_onPreDestroy(){this._onPreDestroyBase()}_onHierarchyChanged(e){return this._onHierarchyChangedBase(e)}_instantiate(e,t){return e||(e=i.instantiate._clone(this,this)),e._prefab,e._parent=null,e._onBatchCreated(t),e}_onHierarchyChangedBase(e){const t=this._parent;!this._persistNode||t instanceof i.Scene||i.game.removePersistRootNode(this);const n=this._active&&!(!t||!t._activeInHierarchy);this._activeInHierarchy!==n&&i.director._nodeActivator.activateNode(this,n)}_onPreDestroyBase(){this._objFlags|=vx;const e=this._parent,t=!!e&&0!=(e._objFlags&vx);if(this._persistNode&&i.game.removePersistRootNode(this),!t&&e){this.emit(cx.PARENT_CHANGED,this);const t=e._children.indexOf(this);e._children.splice(t,1),this._siblingIndex=0,e._updateSiblingIndex(),e.emit&&e.emit(cx.CHILD_REMOVED,this)}this.emit(cx.NODE_DESTROYED,this),this._eventProcessor.destroy();const n=this._children;for(let e=0;e<n.length;++e)n[e]._destroyImmediate();const s=this._components;for(let e=0;e<s.length;++e)s[e]._destroyImmediate();return t}},mx.idGenerator=Sx,mx._stacks=[[]],mx._stackId=0,Bc((hx=gx).prototype,"_persistNode",[tl],Object.getOwnPropertyDescriptor(hx.prototype,"_persistNode"),hx.prototype),Bc(hx.prototype,"name",[dl],Object.getOwnPropertyDescriptor(hx.prototype,"name"),hx.prototype),Bc(hx.prototype,"children",[dl],Object.getOwnPropertyDescriptor(hx.prototype,"children"),hx.prototype),Bc(hx.prototype,"active",[dl],Object.getOwnPropertyDescriptor(hx.prototype,"active"),hx.prototype),Bc(hx.prototype,"activeInHierarchy",[dl],Object.getOwnPropertyDescriptor(hx.prototype,"activeInHierarchy"),hx.prototype),Bc(hx.prototype,"parent",[dl],Object.getOwnPropertyDescriptor(hx.prototype,"parent"),hx.prototype),_x=Bc(hx.prototype,"_parent",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),ux=Bc(hx.prototype,"_children",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),px=Bc(hx.prototype,"_active",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),dx=Bc(hx.prototype,"_components",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),fx=Bc(hx.prototype,"_prefab",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),lx=hx))||lx);var bx,Ex,Ax,Px,wx,Ix,Rx,Dx,Ox,Mx,Nx;i._BaseNode=Tx;const Lx=new ri,zx=new ui,Fx=new ui,Bx=new ui,Ux=new li,Gx=new li,Hx=new xi,kx=[],Vx=[],jx=[];class Wx{constructor(){this._chunks=[],this._freelists=[],this._createChunk()}alloc(){const e=this._freelists.length;for(let t=0;t<e;++t)if(this._freelists[t].length)return this._createView(t);return this._createChunk(),this._createView(e)}free(e,t){const n=this._freelists.length;for(let i=0;i<n;++i)if(this._chunks[i]===e)return void this._freelists[i].push(t)}clear(){const e=this._chunks.length;for(let t=0;t<e;++t)this._chunks[t].fill(0)}_createChunk(){this._chunks.push(new Uint32Array(Wx.CAPACITY_PER_CHUNK));const e=[];for(let t=Wx.CAPACITY_PER_CHUNK-1;t>=0;t--)e.push(t);this._freelists.push(e)}_createView(e){return jx[0]=this._chunks[e],jx[1]=this._freelists[e].pop(),jx}}Wx.CAPACITY_PER_CHUNK=256;const qx=new Wx,Xx=Symbol("ReserveContentsForAllSyncablePrefab");let Yx=e("Node",(bx=Zc("cc.Node"),Ex=Ol(ri),bx((Nx=Mx=class e extends Tx{get _dirtyFlags(){return this._dirtyFlagsPri}set _dirtyFlags(e){this._dirtyFlagsPri=e,this._nativeDirtyFlag[0]=e}_init(){const[e,t]=qx.alloc();this._hasChangedFlagsChunk=e,this._hasChangedFlagsOffset=t;const n=new Uint32Array(e.buffer,e.byteOffset+4*t,1);this._hasChangedFlags=n,this._nodeHandle=_c.alloc(),this._pos=new ri(_c.getTypedArray(this._nodeHandle,cc.WORLD_POSITION)),this._rot=new ui(_c.getTypedArray(this._nodeHandle,cc.WORLD_ROTATION)),this._scale=new ri(_c.getTypedArray(this._nodeHandle,cc.WORLD_SCALE)),this._lpos=new ri(_c.getTypedArray(this._nodeHandle,cc.LOCAL_POSITION)),this._lrot=new ui(_c.getTypedArray(this._nodeHandle,cc.LOCAL_ROTATION)),this._lscale=new ri(_c.getTypedArray(this._nodeHandle,cc.LOCAL_SCALE)),this._mat=new xi(_c.getTypedArray(this._nodeHandle,cc.WORLD_MATRIX)),this._nativeLayer=_c.getTypedArray(this._nodeHandle,cc.LAYER),this._nativeDirtyFlag=_c.getTypedArray(this._nodeHandle,cc.DIRTY_FLAG),this._scale.set(1,1,1),this._lscale.set(1,1,1),this._nativeLayer[0]=this._layer,this._nativeObj=new zi,this._nativeObj.initWithData(_c.getBuffer(this._nodeHandle),n,Vx)}constructor(e){super(e),this._uiProps=new ax(this),this._static=!1,Fc(this,"_lpos",wx,this),Fc(this,"_lrot",Ix,this),Fc(this,"_lscale",Rx,this),Fc(this,"_layer",Dx,this),Fc(this,"_euler",Ox,this),this._dirtyFlagsPri=gg.NONE,this._eulerDirty=!1,this._nodeHandle=0,this._init()}static isNode(t){return t instanceof e&&(t.constructor===e||!(t instanceof i.Scene))}_onPreDestroy(){const e=this._onPreDestroyBase();return this._nodeHandle&&(_c.free(this._nodeHandle),this._nodeHandle=0),this._nativeObj=null,qx.free(this._hasChangedFlagsChunk,this._hasChangedFlagsOffset),e}get native(){return this._nativeObj}get position(){return this._lpos}set position(e){this.setPosition(e)}get worldPosition(){return this.updateWorldTransform(),this._pos}set worldPosition(e){this.setWorldPosition(e)}get rotation(){return this._lrot}set rotation(e){this.setRotation(e)}set eulerAngles(e){this.setRotationFromEuler(e.x,e.y,e.z)}get eulerAngles(){return this._eulerDirty&&(ui.toEuler(this._euler,this._lrot),this._eulerDirty=!1),this._euler}get angle(){return this._euler.z}set angle(e){ri.set(this._euler,0,0,e),ui.fromAngleZ(this._lrot,e),this._eulerDirty=!1,this.invalidateChildren(gg.ROTATION),1&this._eventMask&&this.emit(cx.TRANSFORM_CHANGED,gg.ROTATION)}get worldRotation(){return this.updateWorldTransform(),this._rot}set worldRotation(e){this.setWorldRotation(e)}get scale(){return this._lscale}set scale(e){this.setScale(e)}get worldScale(){return this.updateWorldTransform(),this._scale}set worldScale(e){this.setWorldScale(e)}set matrix(e){xi.toRTS(e,this._lrot,this._lpos,this._lscale),this.invalidateChildren(gg.TRS),this._eulerDirty=!0,1&this._eventMask&&this.emit(cx.TRANSFORM_CHANGED,gg.TRS)}get worldMatrix(){return this.updateWorldTransform(),this._mat}get forward(){return ri.transformQuat(new ri,ri.FORWARD,this.worldRotation)}set forward(e){const t=e.length();ri.multiplyScalar(Lx,e,-1/t),ui.fromViewUp(zx,Lx),this.setWorldRotation(zx)}get up(){return ri.transformQuat(new ri,ri.UP,this.worldRotation)}get right(){return ri.transformQuat(new ri,ri.RIGHT,this.worldRotation)}set layer(e){this._layer=e,this._nativeLayer[0]=this._layer,this._uiProps&&this._uiProps.uiComp&&(this._uiProps.uiComp.setNodeDirty(),this._uiProps.uiComp.markForUpdateRenderData()),this.emit(cx.LAYER_CHANGED,this._layer)}get layer(){return this._layer}get hasChangedFlags(){return this._hasChangedFlagsChunk[this._hasChangedFlagsOffset]}set hasChangedFlags(e){this._hasChangedFlagsChunk[this._hasChangedFlagsOffset]=e}[t_](e,t){e.writeThis()}setParent(e,t=!1){t&&this.updateWorldTransform(),super.setParent(e,t),this._nativeObj.setParent(this.parent?this.parent.native:null)}_onSetParent(e,t){if(super._onSetParent(e,t),t){const e=this._parent;e?(e.updateWorldTransform(),xi.multiply(Hx,xi.invert(Hx,e._mat),this._mat),xi.toRTS(Hx,this._lrot,this._lpos,this._lscale)):(ri.copy(this._lpos,this._pos),ui.copy(this._lrot,this._rot),ri.copy(this._lscale,this._scale)),this._eulerDirty=!0}this.invalidateChildren(gg.TRS)}_onHierarchyChanged(e){this.eventProcessor.reattach(),super._onHierarchyChangedBase(e)}_onBatchCreated(e){var t;this._nativeLayer[0]=this._layer,this._nativeObj.setParent(null===(t=this.parent)||void 0===t?void 0:t.native),this.hasChangedFlags=gg.TRS,this._dirtyFlags|=gg.TRS;const n=this._children.length;for(let t=0;t<n;++t)this._children[t]._siblingIndex=t,this._children[t]._onBatchCreated(e)}_onBeforeSerialize(){this.eulerAngles}_onPostActivated(e){e?(this._eventProcessor.setEnabled(!0),this.invalidateChildren(gg.TRS),this._uiProps&&this._uiProps.uiComp&&(this._uiProps.uiComp.setNodeDirty(),this._uiProps.uiComp.setTextureDirty(),this._uiProps.uiComp.markForUpdateRenderData())):this._eventProcessor.setEnabled(!1)}translate(e,t){const n=t||mg.LOCAL;if(n===mg.LOCAL)ri.transformQuat(Lx,e,this._lrot),this._lpos.x+=Lx.x,this._lpos.y+=Lx.y,this._lpos.z+=Lx.z;else if(n===mg.WORLD)if(this._parent){ui.invert(zx,this._parent.worldRotation),ri.transformQuat(Lx,e,zx);const t=this.worldScale;this._lpos.x+=Lx.x/t.x,this._lpos.y+=Lx.y/t.y,this._lpos.z+=Lx.z/t.z}else this._lpos.x+=e.x,this._lpos.y+=e.y,this._lpos.z+=e.z;this.invalidateChildren(gg.POSITION),1&this._eventMask&&this.emit(cx.TRANSFORM_CHANGED,gg.POSITION)}rotate(e,t){const n=t||mg.LOCAL;if(ui.normalize(zx,e),n===mg.LOCAL)ui.multiply(this._lrot,this._lrot,zx);else if(n===mg.WORLD){const e=this.worldRotation;ui.multiply(Fx,zx,e),ui.invert(zx,e),ui.multiply(Fx,zx,Fx),ui.multiply(this._lrot,this._lrot,Fx)}this._eulerDirty=!0,this.invalidateChildren(gg.ROTATION),1&this._eventMask&&this.emit(cx.TRANSFORM_CHANGED,gg.ROTATION)}lookAt(e,t){this.getWorldPosition(Lx),ri.subtract(Lx,Lx,e),ri.normalize(Lx,Lx),ui.fromViewUp(zx,Lx,t),this.setWorldRotation(zx)}_setDirtyNode(e,t){kx[e]=t,Vx[e]=t.native}invalidateChildren(e){let t,n,i,s=0,r=0,o=0,a=0,c=0;const l=e|gg.POSITION;for(kx[0]=this,Vx[0]=this.native;s>=0;){if(t=kx[s--],c=t._hasChangedFlags[0],a=t._dirtyFlagsPri,t.isValid&&(a&c&e)!==e)for(a|=e,t._dirtyFlagsPri=a,t._nativeDirtyFlag[0]=a,t._hasChangedFlags[0]=c|e,i=t._children,o=i.length,r=0;r<o;r++)n=i[r],kx[++s]=n,Vx[s]=n.native;e=l}}updateWorldTransform(){if(!this._dirtyFlags)return;let e,t=this,n=0;for(;t&&t._dirtyFlags;)this._setDirtyNode(n++,t),t=t._parent;let i=0;for(;n;)e=kx[--n],i|=e._dirtyFlags,t?(i&gg.POSITION&&(ri.transformMat4(e._pos,e._lpos,t._mat),e._mat.m12=e._pos.x,e._mat.m13=e._pos.y,e._mat.m14=e._pos.z),i&gg.RS&&(xi.fromRTS(e._mat,e._lrot,e._lpos,e._lscale),xi.multiply(e._mat,t._mat,e._mat),i&gg.ROTATION&&ui.multiply(e._rot,t._rot,e._lrot),li.fromQuat(Ux,ui.conjugate(Bx,e._rot)),li.multiplyMat4(Ux,Ux,e._mat),e._scale.x=Ux.m00,e._scale.y=Ux.m04,e._scale.z=Ux.m08)):(i&gg.POSITION&&(ri.copy(e._pos,e._lpos),e._mat.m12=e._pos.x,e._mat.m13=e._pos.y,e._mat.m14=e._pos.z),i&gg.RS&&(i&gg.ROTATION&&ui.copy(e._rot,e._lrot),i&gg.SCALE&&(ri.copy(e._scale,e._lscale),xi.fromRTS(e._mat,e._rot,e._pos,e._scale)))),e._dirtyFlags=gg.NONE,t=e}setPosition(e,t,n){void 0===t&&void 0===n?ri.copy(this._lpos,e):void 0===n?ri.set(this._lpos,e,t,this._lpos.z):ri.set(this._lpos,e,t,n),this.invalidateChildren(gg.POSITION),1&this._eventMask&&this.emit(cx.TRANSFORM_CHANGED,gg.POSITION)}getPosition(e){return e?ri.set(e,this._lpos.x,this._lpos.y,this._lpos.z):ri.copy(new ri,this._lpos)}setRotation(e,t,n,i){void 0===t||void 0===n||void 0===i?ui.copy(this._lrot,e):ui.set(this._lrot,e,t,n,i),this._eulerDirty=!0,this.invalidateChildren(gg.ROTATION),1&this._eventMask&&this.emit(cx.TRANSFORM_CHANGED,gg.ROTATION)}setRotationFromEuler(e,t,n){const i=void 0===n?this._euler.z:n;void 0===t?(ri.copy(this._euler,e),ui.fromEuler(this._lrot,e.x,e.y,e.z)):(ri.set(this._euler,e,t,i),ui.fromEuler(this._lrot,e,t,i)),this._eulerDirty=!1,this.invalidateChildren(gg.ROTATION),1&this._eventMask&&this.emit(cx.TRANSFORM_CHANGED,gg.ROTATION)}getRotation(e){return e?ui.set(e,this._lrot.x,this._lrot.y,this._lrot.z,this._lrot.w):ui.copy(new ui,this._lrot)}setScale(e,t,n){void 0===t&&void 0===n?ri.copy(this._lscale,e):void 0===n?ri.set(this._lscale,e,t,this._lscale.z):ri.set(this._lscale,e,t,n),this.invalidateChildren(gg.SCALE),1&this._eventMask&&this.emit(cx.TRANSFORM_CHANGED,gg.SCALE)}getScale(e){return e?ri.set(e,this._lscale.x,this._lscale.y,this._lscale.z):ri.copy(new ri,this._lscale)}inverseTransformPoint(e,t){ri.copy(e,t);let n=this,i=0;for(;n._parent;)this._setDirtyNode(i++,n),n=n._parent;for(;i>=0;)ri.transformInverseRTS(e,e,n._lrot,n._lpos,n._lscale),n=kx[--i];return e}setWorldPosition(e,t,n){void 0===t||void 0===n?ri.copy(this._pos,e):ri.set(this._pos,e,t,n);const i=this._parent,s=this._lpos;i?(i.updateWorldTransform(),ri.transformMat4(s,this._pos,xi.invert(Hx,i._mat))):ri.copy(s,this._pos),this.invalidateChildren(gg.POSITION),1&this._eventMask&&this.emit(cx.TRANSFORM_CHANGED,gg.POSITION)}getWorldPosition(e){return this.updateWorldTransform(),e?ri.copy(e,this._pos):ri.copy(new ri,this._pos)}setWorldRotation(e,t,n,i){void 0===t||void 0===n||void 0===i?ui.copy(this._rot,e):ui.set(this._rot,e,t,n,i),this._parent?(this._parent.updateWorldTransform(),ui.multiply(this._lrot,ui.conjugate(this._lrot,this._parent._rot),this._rot)):ui.copy(this._lrot,this._rot),this._eulerDirty=!0,this.invalidateChildren(gg.ROTATION),1&this._eventMask&&this.emit(cx.TRANSFORM_CHANGED,gg.ROTATION)}setWorldRotationFromEuler(e,t,n){ui.fromEuler(this._rot,e,t,n),this._parent?(this._parent.updateWorldTransform(),ui.multiply(this._lrot,ui.conjugate(this._lrot,this._parent._rot),this._rot)):ui.copy(this._lrot,this._rot),this._eulerDirty=!0,this.invalidateChildren(gg.ROTATION),1&this._eventMask&&this.emit(cx.TRANSFORM_CHANGED,gg.ROTATION)}getWorldRotation(e){return this.updateWorldTransform(),e?ui.copy(e,this._rot):ui.copy(new ui,this._rot)}setWorldScale(e,t,n){void 0===t||void 0===n?ri.copy(this._scale,e):ri.set(this._scale,e,t,n);const i=this._parent;i?(i.updateWorldTransform(),li.fromQuat(Ux,ui.conjugate(Bx,i._rot)),li.multiplyMat4(Ux,Ux,i._mat),Gx.m00=this._scale.x,Gx.m04=this._scale.y,Gx.m08=this._scale.z,li.multiply(Ux,Gx,li.invert(Ux,Ux)),this._lscale.x=ri.set(Lx,Ux.m00,Ux.m01,Ux.m02).length(),this._lscale.y=ri.set(Lx,Ux.m03,Ux.m04,Ux.m05).length(),this._lscale.z=ri.set(Lx,Ux.m06,Ux.m07,Ux.m08).length()):ri.copy(this._lscale,this._scale),this.invalidateChildren(gg.SCALE),1&this._eventMask&&this.emit(cx.TRANSFORM_CHANGED,gg.SCALE)}getWorldScale(e){return this.updateWorldTransform(),e?ri.copy(e,this._scale):ri.copy(new ri,this._scale)}getWorldMatrix(e){this.updateWorldTransform();const t=e||new xi;return xi.copy(t,this._mat)}getWorldRS(e){this.updateWorldTransform();const t=e||new xi;return xi.copy(t,this._mat),t.m12=0,t.m13=0,t.m14=0,t}getWorldRT(e){this.updateWorldTransform();const t=e||new xi;return xi.fromRT(t,this._rot,this._pos)}setRTS(e,t,n){let i=0;e&&(i|=gg.ROTATION,void 0!==e.w?(ui.copy(this._lrot,e),this._eulerDirty=!0):(ri.copy(this._euler,e),ui.fromEuler(this._lrot,e.x,e.y,e.z),this._eulerDirty=!1)),t&&(ri.copy(this._lpos,t),i|=gg.POSITION),n&&(ri.copy(this._lscale,n),i|=gg.SCALE),i&&(this.invalidateChildren(i),1&this._eventMask&&this.emit(cx.TRANSFORM_CHANGED,i))}pauseSystemEvents(e){this._eventProcessor.setEnabled(!1,e)}resumeSystemEvents(e){this._eventProcessor.setEnabled(!0,e)}static resetHasChangedFlags(){qx.clear()}static clearNodeArray(){e.ClearFrame<e.ClearRound?e.ClearFrame++:(e.ClearFrame=0,kx.length=0,Vx.length=0)}},Mx.EventType=cx,Mx.NodeSpace=mg,Mx.TransformDirtyBit=gg,Mx.TransformBit=gg,Mx.reserveContentsForAllSyncablePrefabTag=Xx,Mx.ClearFrame=0,Mx.ClearRound=1e3,wx=Bc((Px=Nx).prototype,"_lpos",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new ri}}),Ix=Bc(Px.prototype,"_lrot",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new ui}}),Rx=Bc(Px.prototype,"_lscale",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new ri(1,1,1)}}),Dx=Bc(Px.prototype,"_layer",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return _d.Enum.DEFAULT}}),Ox=Bc(Px.prototype,"_euler",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new ri}}),Bc(Px.prototype,"eulerAngles",[Ex],Object.getOwnPropertyDescriptor(Px.prototype,"eulerAngles"),Px.prototype),Bc(Px.prototype,"angle",[dl],Object.getOwnPropertyDescriptor(Px.prototype,"angle"),Px.prototype),Bc(Px.prototype,"layer",[dl],Object.getOwnPropertyDescriptor(Px.prototype,"layer"),Px.prototype),Ax=Px))||Ax));var Kx,$x,Zx,Qx,Jx,eS,tS,nS,iS,sS,rS,oS,aS,cS,lS,hS,_S,uS,pS,dS,fS,mS,gS,vS,yS,xS,SS,CS,TS,bS,ES,AS,PS,wS,IS,RS,DS,OS,MS,NS,LS,zS,FS,BS,US,GS,HS,kS,VS,jS,WS,qS,XS,YS,KS,$S,ZS,QS,JS,eC,tC,nC,iC,sC,rC;i.Node=Yx;let oC=Zc("cc.TargetInfo")((Zx=Bc(($x=class{constructor(){Fc(this,"localID",Zx,this)}}).prototype,"localID",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Kx=$x))||Kx,aC=(Qx=Zc("cc.TargetOverrideInfo"),Jx=Ol(Dt),eS=Ol(oC),tS=Ol(Yx),nS=Ol(oC),Qx((rS=Bc((sS=class{constructor(){Fc(this,"source",rS,this),Fc(this,"sourceInfo",oS,this),Fc(this,"propertyPath",aS,this),Fc(this,"target",cS,this),Fc(this,"targetInfo",lS,this)}}).prototype,"source",[il,Jx],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),oS=Bc(sS.prototype,"sourceInfo",[il,eS],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),aS=Bc(sS.prototype,"propertyPath",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),cS=Bc(sS.prototype,"target",[il,tS],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),lS=Bc(sS.prototype,"targetInfo",[il,nS],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),iS=sS))||iS),cC=Zc("cc.CompPrefabInfo")((uS=Bc((_S=class{constructor(){Fc(this,"fileId",uS,this)}}).prototype,"fileId",[il,dl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),hS=_S))||hS,lC=(pS=Zc("CCPropertyOverrideInfo"),dS=Ol(oC),pS((gS=Bc((mS=class{constructor(){Fc(this,"targetInfo",gS,this),Fc(this,"propertyPath",vS,this),Fc(this,"value",yS,this)}isTarget(e,t){}}).prototype,"targetInfo",[il,dS],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),vS=Bc(mS.prototype,"propertyPath",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),yS=Bc(mS.prototype,"value",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),fS=mS))||fS),hC=(xS=Zc("cc.MountedChildrenInfo"),SS=Ol(oC),CS=Ol([Yx]),xS((ES=Bc((bS=class{constructor(){Fc(this,"targetInfo",ES,this),Fc(this,"nodes",AS,this)}isTarget(e){}}).prototype,"targetInfo",[il,SS],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),AS=Bc(bS.prototype,"nodes",[il,CS],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),TS=bS))||TS),_C=(PS=Zc("cc.MountedComponentsInfo"),wS=Ol(oC),IS=Ol([jh]),PS((OS=Bc((DS=class{constructor(){Fc(this,"targetInfo",OS,this),Fc(this,"components",MS,this)}isTarget(e){}}).prototype,"targetInfo",[il,wS],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),MS=Bc(DS.prototype,"components",[il,IS],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),RS=DS))||RS),uC=(NS=Zc("cc.PrefabInstance"),LS=Ol(Yx),zS=Ol([hC]),FS=Ol([_C]),BS=Ol([lC]),US=Ol([oC]),NS((kS=Bc((HS=class{constructor(){Fc(this,"fileId",kS,this),Fc(this,"prefabRootNode",VS,this),Fc(this,"mountedChildren",jS,this),Fc(this,"mountedComponents",WS,this),Fc(this,"propertyOverrides",qS,this),Fc(this,"removedComponents",XS,this),this.targetMap={}}findPropertyOverride(e,t){}removePropertyOverride(e,t){}}).prototype,"fileId",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),VS=Bc(HS.prototype,"prefabRootNode",[il,LS],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),jS=Bc(HS.prototype,"mountedChildren",[il,zS],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),WS=Bc(HS.prototype,"mountedComponents",[il,FS],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),qS=Bc(HS.prototype,"propertyOverrides",[il,BS],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),XS=Bc(HS.prototype,"removedComponents",[il,US],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),GS=HS))||GS),pC=(YS=Zc("cc.PrefabInfo"),KS=Ol(Yx),$S=Ol(uC),ZS=Ol([aC]),YS((eC=Bc((JS=class{constructor(){Fc(this,"root",eC,this),Fc(this,"asset",tC,this),Fc(this,"fileId",nC,this),Fc(this,"instance",iC,this),Fc(this,"targetOverrides",sC,this),Fc(this,"nestedPrefabInstanceRoots",rC,this)}}).prototype,"root",[il,KS],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),tC=Bc(JS.prototype,"asset",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),nC=Bc(JS.prototype,"fileId",[il,dl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),iC=Bc(JS.prototype,"instance",[il,$S],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),sC=Bc(JS.prototype,"targetOverrides",[il,ZS],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),rC=Bc(JS.prototype,"nestedPrefabInstanceRoots",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),QS=JS))||QS);function dC(e){const t=e._prefab;if(!t)return;if(!t.instance)return;if(!t.asset)return E(3701,e.name),void(t.instance=void 0);const n=e._objFlags,s=e._parent,r=e._id,o=e._prefab;e[wt],i.game._isCloning=!0,t.asset._doInstantiate(e),i.game._isCloning=!1,e._objFlags=n,e._parent=s,e._id=r,e._prefab&&(e._prefab.instance=null==o?void 0:o.instance)}function fC(e,t,n){var i;if(!t)return;if(!e)return;let s=t;const r=null===(i=e._prefab)||void 0===i?void 0:i.instance;!n&&r&&(t[r.fileId]={},s=t[r.fileId]);const o=e._prefab;o&&(s[o.fileId]=e);const a=e.components;for(let e=0;e<a.length;e++){const t=a[e];t.__prefab&&(s[t.__prefab.fileId]=t)}for(let t=0;t<e.children.length;t++)fC(e.children[t],s,!1)}function mC(e,t){if(!e)return null;let n=null,i=t;for(let t=0;t<e.length;t++){if(!i)return null;i=i[e[t]]}return n=i,n}function gC(e,t,n){if(t)for(let e=0;e<t.length;e++){const i=t[e];if(i&&i.targetInfo){const e=mC(i.targetInfo.localID,n);if(!e)continue;let t=n;const s=i.targetInfo.localID;if(s.length>0)for(let e=0;e<s.length-1;e++)t=t[s[e]];if(i.nodes)for(let n=0;n<i.nodes.length;n++){const s=i.nodes[n];s&&(e._children.push(s),s._parent=e,fC(s,t,!1),s._siblingIndex=e._children.length-1,CC(s,!0))}}}}function vC(e,t,n){if(t)for(let e=0;e<t.length;e++){const i=t[e];if(i&&i.targetInfo){const e=mC(i.targetInfo.localID,n);if(!e)continue;if(i.components)for(let t=0;t<i.components.length;t++){const n=i.components[t];n&&(n.node=e,e._components.push(n))}}}}function yC(e,t,n){if(t)for(let e=0;e<t.length;e++){const i=t[e];if(i){const e=mC(i.localID,n);if(!e||!e.node)continue;const t=e.node.components.indexOf(e);t>=0&&e.node._components.splice(t,1)}}}function xC(e,t,n){if(t.length<=0)return;let i=null;for(let e=0;e<t.length;e++){const s=t[e];if(s&&s.targetInfo){if(i=mC(s.targetInfo.localID,n),!i)continue;let e=i;const t=s.propertyPath.slice();if(t.length>0){const n=t.pop();if(!n)continue;for(let n=0;n<t.length&&(e=e[t[n]],e);n++);if(!e)continue;if(Array.isArray(e))if("length"===n)e[n]=s.value;else{const t=Number.parseInt(n);Number.isInteger(t)&&t<e.length&&(e[n]=s.value)}else e[n]instanceof Be?e[n].set(s.value):e[n]=s.value}}}}function SC(e){var t;const n=null===(t=e._prefab)||void 0===t?void 0:t.targetOverrides;if(n)for(let e=0;e<n.length;e++){var i,s;const t=n[e];let a=t.source;const c=t.sourceInfo;if(c){var r,o;const e=null===(r=t.source)||void 0===r||null===(o=r._prefab)||void 0===o?void 0:o.instance;e&&e.targetMap&&(a=mC(c.localID,e.targetMap))}if(!a)continue;let l=null;const h=t.targetInfo;if(!h)continue;const _=null===(i=t.target)||void 0===i||null===(s=i._prefab)||void 0===s?void 0:s.instance;if(!_||!_.targetMap)continue;if(l=mC(h.localID,_.targetMap),!l)continue;const u=t.propertyPath.slice();let p=a;if(u.length>0){const e=u.pop();if(!e)return;for(let e=0;e<u.length&&(p=p[u[e]],p);e++);if(!p)continue;p[e]=l}}}function CC(e,t=!1){const n=e._prefab,i=null==n?void 0:n.instance;if(i){dC(e);const t={};i.targetMap=t,fC(e,t,!0),gC(0,i.mountedChildren,t),yC(0,i.removedComponents,t),vC(0,i.mountedComponents,t),xC(0,i.propertyOverrides,t)}t&&e&&e.children&&e.children.forEach((e=>{CC(e,!0)}))}function TC(e){const t=e._prefab;t&&t.nestedPrefabInstanceRoots&&t.nestedPrefabInstanceRoots.forEach((e=>{CC(e)}))}i._PrefabInfo=pC;var bC,EC,AC,PC,wC,IC,RC,DC=Object.freeze({__proto__:null,TargetInfo:oC,TargetOverrideInfo:aC,CompPrefabInfo:cC,PropertyOverrideInfo:lC,MountedChildrenInfo:hC,MountedComponentsInfo:_C,PrefabInstance:uC,PrefabInfo:pC,createNodeWithPrefab:dC,generateTargetMap:fC,getTarget:mC,applyMountedChildren:gC,applyMountedComponents:vC,applyRemovedComponents:yC,applyPropertyOverrides:xC,applyTargetOverrides:SC,expandPrefabInstanceNode:CC,expandNestedPrefabInstanceNode:TC});const OC=Ne({AUTO:0,SINGLE_INSTANCE:1,MULTI_INSTANCE:2});let MC=e("Prefab",Zc("cc.Prefab")((RC=IC=class e extends bh{constructor(){super(),Fc(this,"data",AC,this),Fc(this,"optimizationPolicy",PC,this),Fc(this,"persistent",wC,this),this._createFunction=void 0,this._instantiatedTimes=void 0,this._createFunction=null,this._instantiatedTimes=0}createNode(e){const t=i.instantiate(this);t.name=this.name,e(null,t)}compileCreateFunction(){this._createFunction=function(e){const t=e instanceof i._BaseNode&&e;return new rx(e,t).result}(this.data)}_doInstantiate(e){return this.data._prefab||T(3700),this._createFunction||this.compileCreateFunction(),this._createFunction(e)}_instantiate(){let t,n=!1;return n=this.optimizationPolicy!==OC.SINGLE_INSTANCE&&(this.optimizationPolicy===OC.MULTI_INSTANCE||this._instantiatedTimes+1>=e.OptimizationPolicyThreshold),n?(t=this._doInstantiate(),this.data._instantiate(t)):t=this.data._instantiate(),++this._instantiatedTimes,t}initDefault(e){super.initDefault(e),this.data=new Yx,this.data.name="(Missing Node)";const t=new i._PrefabInfo;t.asset=this,t.root=this.data,this.data._prefab=t}validate(){return!!this.data}onLoaded(){const e=this.data;TC(e),SC(e)}},IC.OptimizationPolicy=OC,IC.OptimizationPolicyThreshold=3,AC=Bc((EC=RC).prototype,"data",[il,dl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),PC=Bc(EC.prototype,"optimizationPolicy",[il,dl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return OC.AUTO}}),wC=Bc(EC.prototype,"persistent",[il,dl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),bC=EC))||bC);var NC,LC,zC,FC,BC,UC;Ae.value(MC,"_utils",DC),i.Prefab=MC,J(i,"cc._Prefab","Prefab"),e("PrefabLink",(NC=Zc("cc.PrefabLink"),LC=Ol(MC),zC=fl(),NC((UC=Bc((BC=class extends jh{constructor(...e){super(...e),Fc(this,"prefab",UC,this)}}).prototype,"prefab",[LC,il,zC],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),FC=BC))||FC));const GC=new ri;function HC(e,t,n,i){i||(i=new ri),e.convertToUINode(t,n,i);const s=n.position;return i.add(s),i}function kC(e,t,n){return n||(n=new ri),e.worldToScreen(t,n),n.x/=i.view.getScaleX(),n.y/=i.view.getScaleY(),n}const VC=e("convertUtils",{WorldNode3DToLocalNodeUI:HC,WorldNode3DToWorldNodeUI:kC});var jC;i.pipelineUtils=VC,Cn(i.pipelineUtils,"cc.pipelineUtils",[{name:"WorldNode3DToLocalNodeUI",newName:"convertToUINode",targetName:"cc.Camera.prototype",customFunction(...e){const t=e[0],n=e[3]||GC;return t.convertToUINode(e[1],e[2],n),n.add(e[2].position),e[3]||n.clone()}}]);const WC=new to;WC.format=zs.RGBA8,WC.beginAccesses=[rr.FRAGMENT_SHADER_READ_TEXTURE],WC.endAccesses=[rr.FRAGMENT_SHADER_READ_TEXTURE];const qC=new no;qC.format=zs.DEPTH_STENCIL;const XC=new ro([WC],qC),YC={width:1,height:1,renderPassInfo:XC};let KC=e("RenderTexture",Zc("cc.RenderTexture")(jC=class extends sm{constructor(...e){super(...e),this._window=null}get window(){return this._window}initialize(e){this._name=e.name||"",this._width=e.width,this._height=e.height,this._initWindow(e)}reset(e){this.initialize(e)}destroy(){if(this._window){const e=i.director.root;null==e||e.destroyWindow(this._window),this._window=null}return super.destroy()}resize(e,t){this._width=Math.floor(zn(e,1,2048)),this._height=Math.floor(zn(t,1,2048)),this._window&&this._window.resize(this._width,this._height),this.emit("resize",this._window)}_serialize(e){return{}}_deserialize(e,t){const n=e;this._width=n.w,this._height=n.h,this._name=n.n,super._deserialize(n.base,t)}getGFXTexture(){return this._window&&this._window.framebuffer.colorTextures[0]}onLoaded(){this._initWindow()}_initWindow(e){const t=i.director.root;YC.title=this._name,YC.width=this._width,YC.height=this._height,YC.renderPassInfo=e&&e.passInfo?e.passInfo:XC,this._window?(this._window.destroy(),this._window.initialize(t.device,YC)):this._window=t.createWindow(YC)}initDefault(e){super.initDefault(e),this._width=this._height=1,this._initWindow()}validate(){return this.width>=1&&this.width<=2048&&this.height>=1&&this.height<=2048}readPixels(e=0,t=0,n,i,s){n=n||this.width,i=i||this.height;const r=this.getGFXTexture();if(!r)return E(7606),null;const o=4*n*i;if(void 0===s)s=new Uint8Array(o);else if(s.length<o)return E(7607,o),null;const a=this._getGFXDevice(),c=[],l=[],h=new Ir;return h.texOffset.x=e,h.texOffset.y=t,h.texExtent.width=n,h.texExtent.height=i,l.push(h),c.push(s),null==a||a.copyTextureToBuffers(r,c,l),s}})||jC);var $C,ZC;i.RenderTexture=KC,Tn(sm.prototype,"TextureBase.prototype",[{name:"hasPremultipliedAlpha"},{name:"setPremultiplyAlpha"},{name:"setFlipY"}]),Cn(KC.prototype,"RenderTexture.prototype",[{name:"getGFXWindow",customFunction(){return this._window}}]);let QC=e("BufferAsset",Zc("cc.BufferAsset")((Bc((ZC=class extends bh{constructor(...e){super(...e),this._buffer=null}get _nativeAsset(){return this._buffer}set _nativeAsset(e){e instanceof ArrayBuffer?this._buffer=e:this._buffer=e.buffer}buffer(){return this._buffer}validate(){return!!this.buffer}}).prototype,"_nativeAsset",[Ml],Object.getOwnPropertyDescriptor(ZC.prototype,"_nativeAsset"),ZC.prototype),$C=ZC))||$C);i.BufferAsset=QC;const JC={[Fs.UNORM]:"Uint",[Fs.SNORM]:"Int",[Fs.UINT]:"Uint",[Fs.INT]:"Int",[Fs.UFLOAT]:"Float",[Fs.FLOAT]:"Float",default:"Uint"};function eT(e){return`${JC[e.type]||JC.default}${e.size/e.count*8}`}function tT(e,t,n=zs.R32F,i=0,s=0){const r=To[n];s||(s=r.size);const o=`set${eT(r)}`,a=r.size/r.count,c=Math.floor(t.length/r.count),l=e_.isLittleEndian;for(let n=0;n<c;++n){const c=i+s*n;for(let i=0;i<r.count;++i){const s=c+a*i;e[o](s,t[r.count*n+i],l)}}}function nT(e,t=zs.R32F,n=0,i=e.byteLength-n,s=0,r=[]){const o=To[t];s||(s=o.size);const a=`get${eT(o)}`,c=o.size/o.count,l=Math.floor(i/s),h=e_.isLittleEndian;for(let t=0;t<l;++t){const i=n+s*t;for(let n=0;n<o.count;++n){const s=i+c*n;r[o.count*t+n]=e[a](s,h)}}return r}function iT(e,t,n=zs.R32F,i=0,s=e.byteLength-i,r=0,o){o||(o=new DataView(e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)));const a=To[n];r||(r=a.size);const c=`set${eT(a)}`,l=`get${eT(a)}`,h=a.size/a.count,_=Math.floor(s/r),u=e_.isLittleEndian;for(let n=0;n<_;++n){const s=i+r*n;for(let n=0;n<a.count;++n){const i=s+h*n,r=e[l](i,u);o[c](i,t(r,n,e),u)}}return o}class sT{_init(){}constructor(e,t,n,i=null,s=null){this.mesh=void 0,this.subMeshIdx=void 0,this._flatBuffers=[],this._jointMappedBuffers=void 0,this._jointMappedBufferIndices=void 0,this._vertexIdChannel=void 0,this._geometricInfo=void 0,this._vertexBuffers=void 0,this._attributes=void 0,this._indexBuffer=null,this._indirectBuffer=null,this._primitiveMode=void 0,this._iaInfo=void 0,this._attributes=t,this._vertexBuffers=e,this._indexBuffer=i,this._indirectBuffer=s,this._primitiveMode=n,this._iaInfo=new eo(t,e,i,s),this._init()}get attributes(){return this._attributes}get vertexBuffers(){return this._vertexBuffers}get indexBuffer(){return this._indexBuffer}get indirectBuffer(){return this._indirectBuffer}get primitiveMode(){return this._primitiveMode}get geometricInfo(){if(this._geometricInfo)return this._geometricInfo;if(void 0===this.mesh)return{positions:new Float32Array,indices:new Uint8Array,boundingBox:{min:ri.ZERO,max:ri.ZERO}};if(void 0===this.subMeshIdx)return{positions:new Float32Array,indices:new Uint8Array,boundingBox:{min:ri.ZERO,max:ri.ZERO}};const{mesh:e}=this,t=this.subMeshIdx,n=e.readAttribute(t,yr.ATTR_POSITION),i=e.readIndices(t),s=new ri,r=new ri,o=this.attributes.find((e=>e.name===yr.ATTR_POSITION));if(o){const e=To[o.format].count;2===e?(s.set(n[0],n[1],0),r.set(n[0],n[1],0)):(s.set(n[0],n[1],n[2]),r.set(n[0],n[1],n[2]));for(let t=0;t<n.length;t+=e)2===e?(s.x=n[t]>s.x?n[t]:s.x,s.y=n[t+1]>s.y?n[t+1]:s.y,r.x=n[t]<r.x?n[t]:r.x,r.y=n[t+1]<r.y?n[t+1]:r.y):(s.x=n[t]>s.x?n[t]:s.x,s.y=n[t+1]>s.y?n[t+1]:s.y,s.z=n[t+2]>s.z?n[t+2]:s.z,r.x=n[t]<r.x?n[t]:r.x,r.y=n[t+1]<r.y?n[t+1]:r.y,r.z=n[t+2]<r.z?n[t+2]:r.z)}return this._geometricInfo={positions:n,indices:i,boundingBox:{max:s,min:r}},this._geometricInfo}get flatBuffers(){return this._flatBuffers}genFlatBuffers(){if(this._flatBuffers.length||!this.mesh||void 0===this.subMeshIdx)return;const{mesh:e}=this;let t=0;const n=e.struct.primitives[this.subMeshIdx];n.indexView&&(t=n.indexView.count);for(let i=0;i<n.vertexBundelIndices.length;i++){const s=n.vertexBundelIndices[i],r=e.struct.vertexBundles[s],o=n.indexView?n.indexView.count:r.view.count,a=r.view.stride,c=a*o,l=new Uint8Array(e.data.buffer,r.view.offset,r.view.length),h=new Uint8Array(n.indexView?c:r.view.length);if(!n.indexView){h.set(e.data.subarray(r.view.offset,r.view.offset+r.view.length)),this._flatBuffers.push({stride:a,count:o,buffer:h});continue}const _=e.readIndices(this.subMeshIdx);for(let e=0;e<t;++e){const t=e*a,n=_[e]*a;for(let e=0;e<a;++e)h[t+e]=l[n+e]}this._flatBuffers.push({stride:a,count:o,buffer:h})}}get jointMappedBuffers(){if(this._jointMappedBuffers)return this._jointMappedBuffers;const e=this._jointMappedBuffers=[],t=this._jointMappedBufferIndices=[];if(!this.mesh||void 0===this.subMeshIdx)return this._jointMappedBuffers=this.vertexBuffers;const{struct:n}=this.mesh,s=n.primitives[this.subMeshIdx];if(!n.jointMaps||void 0===s.jointMapIndex||!n.jointMaps[s.jointMapIndex])return this._jointMappedBuffers=this.vertexBuffers;let r,o;const{device:a}=i.director.root;for(let i=0;i<s.vertexBundelIndices.length;i++){const c=n.vertexBundles[s.vertexBundelIndices[i]];o=0,r=zs.UNKNOWN;for(let e=0;e<c.attributes.length;e++){const t=c.attributes[e];if(t.name===yr.ATTR_JOINTS){r=t.format;break}o+=To[t.format].size}if(r){const l=new Uint8Array(this.mesh.data.buffer,c.view.offset,c.view.length),h=new DataView(l.slice().buffer),_=n.jointMaps[s.jointMapIndex];iT(h,(e=>_.indexOf(e)),r,o,c.view.length,c.view.stride,h);const u=a.createBuffer(new Lr(Us.VERTEX|Us.TRANSFER_DST,ks.DEVICE,c.view.length,c.view.stride));u.update(h.buffer),e.push(u),t.push(i)}else e.push(this.vertexBuffers[s.vertexBundelIndices[i]])}return this._vertexIdChannel&&e.push(this._allocVertexIdBuffer(a)),e}get iaInfo(){return this._iaInfo}destroy(){for(let e=0;e<this.vertexBuffers.length;e++)this.vertexBuffers[e].destroy();if(this.vertexBuffers.length=0,this._indexBuffer&&(this._indexBuffer.destroy(),this._indexBuffer=null),this._jointMappedBuffers&&this._jointMappedBufferIndices){for(let e=0;e<this._jointMappedBufferIndices.length;e++)this._jointMappedBuffers[this._jointMappedBufferIndices[e]].destroy();this._jointMappedBuffers=void 0,this._jointMappedBufferIndices=void 0}this._indirectBuffer&&(this._indirectBuffer.destroy(),this._indirectBuffer=null)}enableVertexIdChannel(e){if(this._vertexIdChannel)return;const t=this.vertexBuffers.length,n=this.attributes.length,i=this._allocVertexIdBuffer(e);this._vertexBuffers.push(i),this._attributes.push(new Qr("a_vertexId",zs.R32F,!1,t)),this._iaInfo.attributes=this._attributes,this._iaInfo.vertexBuffers=this._vertexBuffers,this._vertexIdChannel={stream:t,index:n}}_allocVertexIdBuffer(e){const t=0===this.vertexBuffers.length||0===this.vertexBuffers[0].stride?0:this.vertexBuffers[0].size/this.vertexBuffers[0].stride,n=new Float32Array(t);for(let e=0;e<t;++e)n[e]=e+.5;const i=e.createBuffer(new Lr(Us.VERTEX|Us.TRANSFER_DST,ks.DEVICE,n.byteLength,n.BYTES_PER_ELEMENT));return i.update(n),i}}let rT,oT;e("RenderingSubMesh",sT),function(e){e.TOUCH_START="touch-start",e.TOUCH_MOVE="touch-move",e.TOUCH_END="touch-end",e.TOUCH_CANCEL="touch-cancel",e.MOUSE_DOWN="mouse-down",e.MOUSE_MOVE="mouse-move",e.MOUSE_UP="mouse-up",e.MOUSE_WHEEL="mouse-wheel",e.MOUSE_ENTER="mouse-enter",e.MOUSE_LEAVE="mouse-leave",e.KEY_DOWN="keydown",e.KEY_UP="keyup",e.DEVICEMOTION="devicemotion",e.TRANSFORM_CHANGED="transform-changed",e.SCENE_CHANGED_FOR_PERSISTS="scene-changed-for-persists",e.SIZE_CHANGED="size-changed",e.ANCHOR_CHANGED="anchor-changed",e.COLOR_CHANGED="color-changed",e.CHILD_ADDED="child-added",e.CHILD_REMOVED="child-removed",e.PARENT_CHANGED="parent-changed",e.NODE_DESTROYED="node-destroyed",e.LAYER_CHANGED="layer-changed",e.SIBLING_ORDER_CHANGED="sibling-order-changed"}(rT||(rT=e("SystemEventType",{}))),function(e){e.TOUCH_START="touch-start",e.TOUCH_MOVE="touch-move",e.TOUCH_END="touch-end",e.TOUCH_CANCEL="touch-cancel",e.MOUSE_DOWN="mouse-down",e.MOUSE_MOVE="mouse-move",e.MOUSE_UP="mouse-up",e.MOUSE_WHEEL="mouse-wheel",e.KEY_DOWN="keydown",e.KEY_PRESSING="key-pressing",e.KEY_UP="keyup",e.DEVICEMOTION="devicemotion"}(oT||(oT={})),i.SystemEventType=rT;const aT=new Array(16);let cT=null,lT=new bi;const hT=[cx.TOUCH_START,cx.TOUCH_MOVE,cx.TOUCH_END,cx.TOUCH_CANCEL],_T=[cx.MOUSE_DOWN,cx.MOUSE_ENTER,cx.MOUSE_MOVE,cx.MOUSE_LEAVE,cx.MOUSE_UP,cx.MOUSE_WHEEL];let uT;!function(e){e[e.ADD_POINTER_EVENT_PROCESSOR=0]="ADD_POINTER_EVENT_PROCESSOR",e[e.REMOVE_POINTER_EVENT_PROCESSOR=1]="REMOVE_POINTER_EVENT_PROCESSOR",e[e.MARK_LIST_DIRTY=2]="MARK_LIST_DIRTY"}(uT||(uT={}));class pT{get isEnabled(){return this._isEnabled}setEnabled(e,t=!1){if(this._isEnabled===e)return;this._isEnabled=e;const n=this.node.children;if(e&&this._attachMask(),pT.callbacksInvoker.emit(uT.MARK_LIST_DIRTY),t&&n.length>0)for(let t=0;t<n.length;++t)n[t]._eventProcessor.setEnabled(e,!0)}get node(){return this._node}constructor(e){this._isEnabled=!1,this.claimedTouchIdList=[],this.maskList=null,this.cachedCameraPriority=0,this.previousMouseIn=!1,this.bubblingTarget=null,this.capturingTarget=null,this.shouldHandleEventMouse=!1,this.shouldHandleEventTouch=!1,this._node=void 0,this._node=e}_searchComponentsInParent(e){const t=this.node;if(e){let n=0,i=[];for(let s=t;s&&Yx.isNode(s);s=s.parent,++n){const t=s.getComponent(e);if(t){const e={index:n,comp:t};i?i.push(e):i=[e]}}return i.length>0?i:null}return null}_attachMask(){this.maskList=this._searchComponentsInParent(pT._maskComp)}reattach(){let e;this.node.walk((t=>{e||(e=this._searchComponentsInParent(pT._maskComp)),t.eventProcessor.maskList=e}))}destroy(){cT===this._node&&(cT=null),this.capturingTarget&&this.capturingTarget.clear(),this.bubblingTarget&&this.bubblingTarget.clear(),pT.callbacksInvoker.emit(uT.REMOVE_POINTER_EVENT_PROCESSOR,this)}_isTouchEvent(e){return-1!==hT.indexOf(e)}_isMouseEvent(e){return-1!==_T.indexOf(e)}_hasTouchListeners(){for(let e=0;e<hT.length;++e){const t=hT[e];if(this.hasEventListener(t))return!0}return!1}_hasMouseListeners(){for(let e=0;e<_T.length;++e){const t=_T[e];if(this.hasEventListener(t))return!0}return!1}_hasPointerListeners(){return!!this._hasTouchListeners()||this._hasMouseListeners()}_tryEmittingAddEvent(e){const t=this._isTouchEvent(e),n=this._isMouseEvent(e);t?this.shouldHandleEventTouch=!0:n&&(this.shouldHandleEventMouse=!0),!t&&!n||this._hasPointerListeners()||pT.callbacksInvoker.emit(uT.ADD_POINTER_EVENT_PROCESSOR,this)}_newCallbacksInvoker(){const e=new Gt;return e._registerOffCallback((()=>{this.shouldHandleEventTouch&&!this._hasTouchListeners()&&(this.shouldHandleEventTouch=!1),this.shouldHandleEventMouse&&!this._hasMouseListeners()&&(this.shouldHandleEventMouse=!1),this._hasPointerListeners()||pT.callbacksInvoker.emit(uT.REMOVE_POINTER_EVENT_PROCESSOR,this)})),e}on(e,t,n,i){let s;var r,o;return this._tryEmittingAddEvent(e),s=(i=!!i)?null!==(r=this.capturingTarget)&&void 0!==r?r:this.capturingTarget=this._newCallbacksInvoker():null!==(o=this.bubblingTarget)&&void 0!==o?o:this.bubblingTarget=this._newCallbacksInvoker(),s.on(e,t,n),t}once(e,t,n,i){let s;var r,o;return this._tryEmittingAddEvent(e),s=(i=!!i)?null!==(r=this.capturingTarget)&&void 0!==r?r:this.capturingTarget=this._newCallbacksInvoker():null!==(o=this.bubblingTarget)&&void 0!==o?o:this.bubblingTarget=this._newCallbacksInvoker(),s.on(e,t,n,!0),t}off(e,t,n,i){var s;let r;r=(i=!!i)?this.capturingTarget:this.bubblingTarget,null===(s=r)||void 0===s||s.off(e,t,n)}targetOff(e){var t,n;null===(t=this.capturingTarget)||void 0===t||t.removeAll(e),null===(n=this.bubblingTarget)||void 0===n||n.removeAll(e),this.shouldHandleEventTouch&&!this._hasTouchListeners()&&(this.shouldHandleEventTouch=!1),this.shouldHandleEventMouse&&!this._hasMouseListeners()&&(this.shouldHandleEventMouse=!1),this._hasPointerListeners()||pT.callbacksInvoker.emit(uT.REMOVE_POINTER_EVENT_PROCESSOR,this)}emit(e,t,n,i,s,r){var o;null===(o=this.bubblingTarget)||void 0===o||o.emit(e,t,n,i,s,r)}dispatchEvent(e){const t=this.node;let n,i=0;for(e.target=t,aT.length=0,this.getCapturingTargets(e.type,aT),e.eventPhase=1,i=aT.length-1;i>=0;--i)if(n=aT[i],n.eventProcessor.capturingTarget&&(e.currentTarget=n,n.eventProcessor.capturingTarget.emit(e.type,e,aT),e.propagationStopped))return void(aT.length=0);if(aT.length=0,e.eventPhase=2,e.currentTarget=t,this.capturingTarget&&this.capturingTarget.emit(e.type,e),!e.propagationImmediateStopped&&this.bubblingTarget&&this.bubblingTarget.emit(e.type,e),!e.propagationStopped&&e.bubbles)for(this.getBubblingTargets(e.type,aT),e.eventPhase=3,i=0;i<aT.length;++i)if(n=aT[i],n.eventProcessor.bubblingTarget&&(e.currentTarget=n,n.eventProcessor.bubblingTarget.emit(e.type,e),e.propagationStopped))return void(aT.length=0);aT.length=0}hasEventListener(e,t,n){let i=!1;return this.bubblingTarget&&(i=this.bubblingTarget.hasEventListener(e,t,n)),!i&&this.capturingTarget&&(i=this.capturingTarget.hasEventListener(e,t,n)),i}getCapturingTargets(e,t){let n=this._node.parent;for(;n;){var i;(null===(i=n.eventProcessor.capturingTarget)||void 0===i?void 0:i.hasEventListener(e))&&t.push(n),n=n.parent}}getBubblingTargets(e,t){let n=this._node.parent;for(;n;){var i;(null===(i=n.eventProcessor.bubblingTarget)||void 0===i?void 0:i.hasEventListener(e))&&t.push(n),n=n.parent}}_handleEventMouse(e){switch(e.type){case oT.MOUSE_DOWN:return this._handleMouseDown(e);case oT.MOUSE_MOVE:return this._handleMouseMove(e);case oT.MOUSE_UP:return this._handleMouseUp(e);case oT.MOUSE_WHEEL:return this._handleMouseWheel(e);default:return!1}}_handleMouseDown(e){const t=this._node;return!(!t||!t._uiProps.uiTransformComp||(lT=e.getUILocation(),!t._uiProps.uiTransformComp.isHit(lT)||(e.type=cx.MOUSE_DOWN,e.bubbles=!0,t.dispatchEvent(e),e.propagationStopped=!0,0)))}_handleMouseMove(e){const t=this._node;return!(!t||!t._uiProps.uiTransformComp)&&(lT=e.getUILocation(),t._uiProps.uiTransformComp.isHit(lT)?(this.previousMouseIn||(cT&&cT!==t&&(e.type=cx.MOUSE_LEAVE,cT.dispatchEvent(e),cT.eventProcessor.previousMouseIn=!1),cT=t,e.type=cx.MOUSE_ENTER,t.dispatchEvent(e),this.previousMouseIn=!0),e.type=cx.MOUSE_MOVE,e.bubbles=!0,t.dispatchEvent(e),e.propagationStopped=!0,!0):(this.previousMouseIn&&(e.type=cx.MOUSE_LEAVE,t.dispatchEvent(e),this.previousMouseIn=!1,cT=null),!1))}_handleMouseUp(e){const t=this._node;return!(!t||!t._uiProps.uiTransformComp||(lT=e.getUILocation(),!t._uiProps.uiTransformComp.isHit(lT)||(e.type=cx.MOUSE_UP,e.bubbles=!0,t.dispatchEvent(e),e.propagationStopped=!0,0)))}_handleMouseWheel(e){const t=this._node;return!(!t||!t._uiProps.uiTransformComp||(lT=e.getUILocation(),!t._uiProps.uiTransformComp.isHit(lT)||(e.type=cx.MOUSE_WHEEL,e.bubbles=!0,t.dispatchEvent(e),e.propagationStopped=!0,0)))}_handleEventTouch(e){switch(e.type){case oT.TOUCH_START:return this._handleTouchStart(e);case oT.TOUCH_MOVE:return this._handleTouchMove(e);case oT.TOUCH_END:return this._handleTouchEnd(e);case oT.TOUCH_CANCEL:return this._handleTouchCancel(e);default:return!1}}_handleTouchStart(e){const t=this.node;return!(!t||!t._uiProps.uiTransformComp||(e.getUILocation(lT),!t._uiProps.uiTransformComp.isHit(lT)||(e.type=cx.TOUCH_START,e.bubbles=!0,t.dispatchEvent(e),0)))}_handleTouchMove(e){const t=this.node;return!(!t||!t._uiProps.uiTransformComp||(e.type=cx.TOUCH_MOVE,e.bubbles=!0,t.dispatchEvent(e),0))}_handleTouchEnd(e){const t=this.node;t&&t._uiProps.uiTransformComp&&(e.getUILocation(lT),t._uiProps.uiTransformComp.isHit(lT)?e.type=cx.TOUCH_END:e.type=cx.TOUCH_CANCEL,e.bubbles=!0,t.dispatchEvent(e))}_handleTouchCancel(e){const t=this.node;t&&t._uiProps.uiTransformComp&&(e.type=cx.TOUCH_CANCEL,e.bubbles=!0,t.dispatchEvent(e))}}pT._maskComp=null,pT.callbacksInvoker=new Gt,i.NodeEventProcessor=pT;const dT=new wi,fT=Ne({LINEAR:0,EXP:1,EXP_SQUARED:2,LAYERED:3}),mT=fT.LAYERED+1;class gT{set enabled(e){this._setEnable(e),e?this.activate():(this._type=mT,this._updatePipeline())}get enabled(){return this._enabled}set accurate(e){this._setAccurate(e),this._updatePipeline()}get accurate(){return this._accurate}set fogColor(e){this._fogColor.set(e),dT.set(e.x,e.y,e.z,e.w),wg(this._colorArray,dT),this._nativeObj.color=this._fogColor}get fogColor(){return this._fogColor}get type(){return this._type}set type(e){this._setType(e),this.enabled&&this._updatePipeline()}get fogDensity(){return this._fogDensity}set fogDensity(e){this._fogDensity=e,this._nativeObj.density=e}get fogStart(){return this._fogStart}set fogStart(e){this._fogStart=e,this._nativeObj.start=e}get fogEnd(){return this._fogEnd}set fogEnd(e){this._fogEnd=e,this._nativeObj.end=e}get fogAtten(){return this._fogAtten}set fogAtten(e){this._fogAtten=e,this._nativeObj.atten=e}get fogTop(){return this._fogTop}set fogTop(e){this._fogTop=e,this._nativeObj.top=e}get fogRange(){return this._fogRange}set fogRange(e){this._fogRange=e,this._nativeObj.range=e}get colorArray(){return this._colorArray}get native(){return this._nativeObj}constructor(){this._fogColor=new ti("#C8C8C8"),this._colorArray=new wi(.2,.2,.2,1),this._enabled=!1,this._accurate=!1,this._type=0,this._fogDensity=.3,this._fogStart=.5,this._fogEnd=300,this._fogAtten=5,this._fogTop=1.5,this._fogRange=1.2,this._nativeObj=new qi}_setType(e){this._type=this.enabled?e:mT,this._nativeObj.type=this._type}_setEnable(e){this._enabled=e,this._nativeObj.enabled=e}_setAccurate(e){this._accurate=e,this._nativeObj.accurate=e}initialize(e){this.fogColor=e.fogColor,this._setEnable(e.enabled),this._setAccurate(e.accurate),this._setType(e.type),this.fogDensity=e.fogDensity,this.fogStart=e.fogStart,this.fogEnd=e.fogEnd,this.fogAtten=e.fogAtten,this.fogTop=e.fogTop,this.fogRange=e.fogRange}activate(){this._updatePipeline()}_updatePipeline(){const e=i.director.root,t=this.enabled?this.type:mT,n=this.accurate?1:0,s=e.pipeline;s.macros.CC_USE_FOG===t&&s.macros.CC_USE_ACCURATE_FOG===n||(s.macros.CC_USE_FOG=t,s.macros.CC_USE_ACCURATE_FOG=n,e.onGlobalPipelineStateChanged())}_destroy(){this._nativeObj=null}destroy(){this._destroy()}}var vT,yT,xT,ST,CT,TT,bT,ET,AT,PT,wT,IT,RT,DT,OT,MT,NT,LT,zT,FT,BT,UT,GT,HT,kT,VT,jT,WT,qT,XT,YT,KT,$T,ZT,QT,JT,eb,tb,nb,ib,sb,rb,ob,ab,cb,lb,hb,_b,ub,pb,db,fb,mb,gb,vb,yb,xb,Sb,Cb,Tb,bb,Eb,Ab,Pb,wb,Ib,Rb,Db,Ob,Mb,Nb,Lb,zb,Fb,Bb,Ub,Gb,Hb,kb,Vb,jb,Wb,qb,Xb,Yb,Kb,$b,Zb,Qb,Jb,eE,tE,nE,iE,sE,rE,oE,aE,cE,lE,hE,_E,uE,pE,dE,fE,mE,gE,vE,yE,xE,SE,CE,TE,bE,EE,AE,PE,wE,IE,RE,DE,OE,ME,NE,LE,zE,FE,BE,UE,GE,HE,kE,VE,jE,WE,qE,XE,YE,KE,$E,ZE,QE,JE,eA,tA,nA,iA,sA,rA,oA,aA,cA,lA,hA,_A,uA,pA,dA,fA,mA,gA,vA,yA,xA,SA,CA,TA,bA,EA,AA,PA,wA,IA,RA,DA,OA,MA,NA,LA,zA,FA,BA,UA,GA,HA,kA,VA,jA,WA,qA;i.Fog=gT;const XA=new ri(0,1,0),YA=new ri,KA=new wi,$A=new ti,ZA=new ui,QA=e=>{const t=1/Math.max(Math.max(Math.max(e.x,e.y),e.z),1e-4);t<1&&(e.x*=t,e.y*=t,e.z*=t)};let JA=(vT=Zc("cc.AmbientInfo"),yT=pl(),xT=sl("_skyColor"),ST=sl("_skyIllum"),CT=sl("_groundAlbedo"),TT=fl(),bT=vl(),ET=Ol(ot),AT=vl(),PT=fl(),wT=vl(),vT(IT=yT((DT=Bc((RT=class{constructor(){Fc(this,"_skyColorHDR",DT,this),Fc(this,"_skyIllumHDR",OT,this),Fc(this,"_groundAlbedoHDR",MT,this),Fc(this,"_skyColorLDR",NT,this),Fc(this,"_skyIllumLDR",LT,this),Fc(this,"_groundAlbedoLDR",zT,this),this._resource=null}get skyColorHDR(){return this._skyColorHDR}get groundAlbedoHDR(){return this._groundAlbedoHDR}get skyIllumHDR(){return this._skyIllumHDR}get skyColorLDR(){return this._skyColorLDR}get groundAlbedoLDR(){return this._groundAlbedoLDR}get skyIllumLDR(){return this._skyIllumLDR}set skyLightingColor(e){KA.set(e.x,e.y,e.z,e.w),i.director.root.pipeline.pipelineSceneData.isHDR?this._skyColorHDR.set(KA):this._skyColorLDR.set(KA),this._resource&&this._resource.skyColor.set(KA)}get skyLightingColor(){const e=i.director.root.pipeline.pipelineSceneData.isHDR;return KA.set(e?this._skyColorHDR:this._skyColorLDR),QA(KA),$A.set(255*KA.x,255*KA.y,255*KA.z,255)}set skyColor(e){i.director.root.pipeline.pipelineSceneData.isHDR?this._skyColorHDR.set(e):this._skyColorLDR.set(e),this._resource&&this._resource.skyColor.set(e)}set skyIllum(e){i.director.root.pipeline.pipelineSceneData.isHDR?this._skyIllumHDR=e:this._skyIllumLDR=e,this._resource&&(this._resource.skyIllum=e)}get skyIllum(){return i.director.root.pipeline.pipelineSceneData.isHDR?this._skyIllumHDR:this._skyIllumLDR}set groundLightingColor(e){KA.set(e.x,e.y,e.z,e.w),i.director.root.pipeline.pipelineSceneData.isHDR?this._groundAlbedoHDR.set(KA):this._groundAlbedoLDR.set(KA),this._resource&&this._resource.groundAlbedo.set(KA)}get groundLightingColor(){const e=i.director.root.pipeline.pipelineSceneData.isHDR;return KA.set(e?this._groundAlbedoHDR:this._groundAlbedoLDR),QA(KA),$A.set(255*KA.x,255*KA.y,255*KA.z,255)}set groundAlbedo(e){i.director.root.pipeline.pipelineSceneData.isHDR?this._groundAlbedoHDR.set(e):this._groundAlbedoLDR.set(e),this._resource&&this._resource.groundAlbedo.set(e)}activate(e){this._resource=e,this._resource.initialize(this)}}).prototype,"_skyColorHDR",[il,xT],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new wi(.2,.5,.8,1)}}),OT=Bc(RT.prototype,"_skyIllumHDR",[il,ST],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return os.SKY_ILLUM}}),MT=Bc(RT.prototype,"_groundAlbedoHDR",[il,CT],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new wi(.2,.2,.2,1)}}),NT=Bc(RT.prototype,"_skyColorLDR",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new wi(.2,.5,.8,1)}}),LT=Bc(RT.prototype,"_skyIllumLDR",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return os.SKY_ILLUM}}),zT=Bc(RT.prototype,"_groundAlbedoLDR",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new wi(.2,.2,.2,1)}}),Bc(RT.prototype,"skyLightingColor",[TT,dl,bT],Object.getOwnPropertyDescriptor(RT.prototype,"skyLightingColor"),RT.prototype),Bc(RT.prototype,"skyIllum",[dl,ET,AT],Object.getOwnPropertyDescriptor(RT.prototype,"skyIllum"),RT.prototype),Bc(RT.prototype,"groundLightingColor",[PT,dl,wT],Object.getOwnPropertyDescriptor(RT.prototype,"groundLightingColor"),RT.prototype),IT=RT))||IT)||IT);i.AmbientInfo=JA;let eP=(FT=Zc("cc.SkyboxInfo"),BT=pl(),UT=Ol(Pm),GT=sl("_envmap"),HT=Ol(Pm),kT=Ol(Pm),VT=Ol(Pm),jT=fl(),WT=vl(),qT=vl(),XT=vl(),YT=vl(),KT=Ol(Pm),$T=vl(),ZT=fl(),QT=Ol(Pm),FT(JT=BT((tb=Bc((eb=class{constructor(){Fc(this,"_applyDiffuseMap",tb,this),Fc(this,"_envmapHDR",nb,this),Fc(this,"_envmapLDR",ib,this),Fc(this,"_diffuseMapHDR",sb,this),Fc(this,"_diffuseMapLDR",rb,this),Fc(this,"_enabled",ob,this),Fc(this,"_useIBL",ab,this),Fc(this,"_useHDR",cb,this),this._resource=null}set applyDiffuseMap(e){this._applyDiffuseMap=e,this._resource&&(this._resource.useDiffuseMap=e)}get applyDiffuseMap(){return this._applyDiffuseMap}set enabled(e){this._enabled!==e&&(this._enabled=e,this._resource&&(this._resource.enabled=this._enabled))}get enabled(){return this._enabled}set useIBL(e){this._useIBL=e,this._resource&&(this._resource.useIBL=this._useIBL)}get useIBL(){return this._useIBL}set useHDR(e){i.director.root.pipeline.pipelineSceneData.isHDR=e,this._useHDR=e,this._resource&&(this.envmap=this._resource.envmap,this.diffuseMap=this._resource.diffuseMap,null==this.diffuseMap&&(this.applyDiffuseMap=!1)),this._resource&&(this._resource.useHDR=this._useHDR)}get useHDR(){return i.director.root.pipeline.pipelineSceneData.isHDR=this._useHDR,this._useHDR}set envmap(e){i.director.root.pipeline.pipelineSceneData.isHDR?this._envmapHDR=e:this._envmapLDR=e,this._envmapHDR||(this._diffuseMapHDR=null,this._applyDiffuseMap=!1,this.useIBL=!1),this._resource&&(this._resource.setEnvMaps(this._envmapHDR,this._envmapLDR),this._resource.setDiffuseMaps(this._diffuseMapHDR,this._diffuseMapLDR),this._resource.useDiffuseMap=this._applyDiffuseMap,this._resource.envmap=e)}get envmap(){return i.director.root.pipeline.pipelineSceneData.isHDR?this._envmapHDR:this._envmapLDR}set diffuseMap(e){i.director.root.pipeline.pipelineSceneData.isHDR?this._diffuseMapHDR=e:this._diffuseMapLDR=e,this._resource&&this._resource.setDiffuseMaps(this._diffuseMapHDR,this._diffuseMapLDR)}get diffuseMap(){return i.director.root.pipeline.pipelineSceneData.isHDR?this._diffuseMapHDR:this._diffuseMapLDR}activate(e){this._resource=e,this._resource.initialize(this),this._resource.setEnvMaps(this._envmapHDR,this._envmapLDR),this._resource.setDiffuseMaps(this._diffuseMapHDR,this._diffuseMapLDR),this._resource.activate()}}).prototype,"_applyDiffuseMap",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),nb=Bc(eb.prototype,"_envmapHDR",[il,UT,GT],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),ib=Bc(eb.prototype,"_envmapLDR",[il,HT],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),sb=Bc(eb.prototype,"_diffuseMapHDR",[il,kT],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),rb=Bc(eb.prototype,"_diffuseMapLDR",[il,VT],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),ob=Bc(eb.prototype,"_enabled",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),ab=Bc(eb.prototype,"_useIBL",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),cb=Bc(eb.prototype,"_useHDR",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),Bc(eb.prototype,"applyDiffuseMap",[jT,dl,WT],Object.getOwnPropertyDescriptor(eb.prototype,"applyDiffuseMap"),eb.prototype),Bc(eb.prototype,"enabled",[dl,qT],Object.getOwnPropertyDescriptor(eb.prototype,"enabled"),eb.prototype),Bc(eb.prototype,"useIBL",[dl,XT],Object.getOwnPropertyDescriptor(eb.prototype,"useIBL"),eb.prototype),Bc(eb.prototype,"useHDR",[dl,YT],Object.getOwnPropertyDescriptor(eb.prototype,"useHDR"),eb.prototype),Bc(eb.prototype,"envmap",[dl,KT,$T],Object.getOwnPropertyDescriptor(eb.prototype,"envmap"),eb.prototype),Bc(eb.prototype,"diffuseMap",[ZT,dl,ml,QT],Object.getOwnPropertyDescriptor(eb.prototype,"diffuseMap"),eb.prototype),JT=eb))||JT)||JT);i.SkyboxInfo=eP;let tP=(lb=Zc("cc.FogInfo"),hb=pl(),_b=vl(),ub=vl(),pb=vl(),db=Ol(fT),fb=vl(),mb=fl(),gb=Ol(ot),vb=yl(),yb=Cl(),xb=bl(),Sb=vl(),Cb=fl(),Tb=Ol(ot),bb=Cl(),Eb=bl(),Ab=vl(),Pb=fl(),wb=Ol(ot),Ib=Cl(),Rb=bl(),Db=vl(),Ob=fl(),Mb=Ol(ot),Nb=xl(),Lb=Cl(),zb=bl(),Fb=vl(),Bb=fl(),Ub=Ol(ot),Gb=Cl(),Hb=bl(),kb=vl(),Vb=fl(),jb=Ol(ot),Wb=Cl(),qb=bl(),Xb=vl(),lb(Yb=hb((aE=oE=class{constructor(){Fc(this,"_type",$b,this),Fc(this,"_fogColor",Zb,this),Fc(this,"_enabled",Qb,this),Fc(this,"_fogDensity",Jb,this),Fc(this,"_fogStart",eE,this),Fc(this,"_fogEnd",tE,this),Fc(this,"_fogAtten",nE,this),Fc(this,"_fogTop",iE,this),Fc(this,"_fogRange",sE,this),Fc(this,"_accurate",rE,this),this._resource=null}set enabled(e){this._enabled!==e&&(this._enabled=e,this._resource&&(this._resource.enabled=e,e&&(this._resource.type=this._type)))}get enabled(){return this._enabled}set accurate(e){this._accurate!==e&&(this._accurate=e,this._resource&&(this._resource.accurate=e,e&&(this._resource.type=this._type)))}get accurate(){return this._accurate}set fogColor(e){this._fogColor.set(e),this._resource&&(this._resource.fogColor=this._fogColor)}get fogColor(){return this._fogColor}get type(){return this._type}set type(e){this._type=e,this._resource&&(this._resource.type=e)}get fogDensity(){return this._fogDensity}set fogDensity(e){this._fogDensity=e,this._resource&&(this._resource.fogDensity=e)}get fogStart(){return this._fogStart}set fogStart(e){this._fogStart=e,this._resource&&(this._resource.fogStart=e)}get fogEnd(){return this._fogEnd}set fogEnd(e){this._fogEnd=e,this._resource&&(this._resource.fogEnd=e)}get fogAtten(){return this._fogAtten}set fogAtten(e){this._fogAtten=e,this._resource&&(this._resource.fogAtten=e)}get fogTop(){return this._fogTop}set fogTop(e){this._fogTop=e,this._resource&&(this._resource.fogTop=e)}get fogRange(){return this._fogRange}set fogRange(e){this._fogRange=e,this._resource&&(this._resource.fogRange=e)}activate(e){this._resource=e,this._resource.initialize(this),this._resource.activate()}},oE.FogType=fT,$b=Bc((Kb=aE).prototype,"_type",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return fT.LINEAR}}),Zb=Bc(Kb.prototype,"_fogColor",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new ti("#C8C8C8")}}),Qb=Bc(Kb.prototype,"_enabled",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Jb=Bc(Kb.prototype,"_fogDensity",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.3}}),eE=Bc(Kb.prototype,"_fogStart",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.5}}),tE=Bc(Kb.prototype,"_fogEnd",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 300}}),nE=Bc(Kb.prototype,"_fogAtten",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 5}}),iE=Bc(Kb.prototype,"_fogTop",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1.5}}),sE=Bc(Kb.prototype,"_fogRange",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1.2}}),rE=Bc(Kb.prototype,"_accurate",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Bc(Kb.prototype,"enabled",[dl,_b],Object.getOwnPropertyDescriptor(Kb.prototype,"enabled"),Kb.prototype),Bc(Kb.prototype,"accurate",[dl,ub],Object.getOwnPropertyDescriptor(Kb.prototype,"accurate"),Kb.prototype),Bc(Kb.prototype,"fogColor",[dl,pb],Object.getOwnPropertyDescriptor(Kb.prototype,"fogColor"),Kb.prototype),Bc(Kb.prototype,"type",[dl,db,fb],Object.getOwnPropertyDescriptor(Kb.prototype,"type"),Kb.prototype),Bc(Kb.prototype,"fogDensity",[mb,gb,vb,yb,Tl,xb,Sb],Object.getOwnPropertyDescriptor(Kb.prototype,"fogDensity"),Kb.prototype),Bc(Kb.prototype,"fogStart",[Cb,Tb,bb,Eb,Ab],Object.getOwnPropertyDescriptor(Kb.prototype,"fogStart"),Kb.prototype),Bc(Kb.prototype,"fogEnd",[Pb,wb,Ib,Rb,Db],Object.getOwnPropertyDescriptor(Kb.prototype,"fogEnd"),Kb.prototype),Bc(Kb.prototype,"fogAtten",[Ob,Mb,Nb,Lb,zb,Fb],Object.getOwnPropertyDescriptor(Kb.prototype,"fogAtten"),Kb.prototype),Bc(Kb.prototype,"fogTop",[Bb,Ub,Gb,Hb,kb],Object.getOwnPropertyDescriptor(Kb.prototype,"fogTop"),Kb.prototype),Bc(Kb.prototype,"fogRange",[Vb,jb,Wb,qb,Xb],Object.getOwnPropertyDescriptor(Kb.prototype,"fogRange"),Kb.prototype),Yb=Kb))||Yb)||Yb),nP=(cE=Zc("cc.ShadowsInfo"),lE=pl(),hE=vl(),_E=Ol(Hg),uE=fl(),pE=fl(),dE=vl(),fE=Ol(ot),mE=vl(),gE=fl(),vE=yl(),yE=Ol(ot),xE=vl(),SE=fl(),CE=Ol(kg),TE=vl(),bE=fl(),EE=Ol(rt),AE=fl(),PE=Ol(ot),wE=vl(),IE=fl(),RE=Ol(ot),DE=vl(),OE=fl(),ME=Ol(Gg),NE=vl(),LE=fl(),zE=Ol(at),FE=vl(),BE=fl(),UE=Ol(ot),GE=vl(),HE=fl(),kE=Ol(ot),VE=vl(),jE=fl(),WE=yl(),qE=Ol(ot),XE=vl(),YE=fl(),KE=yl(),$E=Ol(ot),ZE=vl(),QE=fl(),JE=Ol(ot),eA=vl(),tA=fl(),cE(nA=lE((sA=Bc((iA=class{constructor(){Fc(this,"_type",sA,this),Fc(this,"_enabled",rA,this),Fc(this,"_normal",oA,this),Fc(this,"_distance",aA,this),Fc(this,"_shadowColor",cA,this),Fc(this,"_firstSetCSM",lA,this),Fc(this,"_fixedArea",hA,this),Fc(this,"_pcf",_A,this),Fc(this,"_bias",uA,this),Fc(this,"_normalBias",pA,this),Fc(this,"_near",dA,this),Fc(this,"_far",fA,this),Fc(this,"_shadowDistance",mA,this),Fc(this,"_invisibleOcclusionRange",gA,this),Fc(this,"_orthoSize",vA,this),Fc(this,"_maxReceived",yA,this),Fc(this,"_size",xA,this),Fc(this,"_saturation",SA,this),this._resource=null}set enabled(e){this._enabled!==e&&(this._enabled=e,this._resource&&(this._resource.enabled=e,e&&(this._resource.type=this._type)))}get enabled(){return this._enabled}set type(e){this._type=e,this._resource&&(this._resource.type=e)}get type(){return this._type}set shadowColor(e){this._shadowColor.set(e),this._resource&&(this._resource.shadowColor=e)}get shadowColor(){return this._shadowColor}set normal(e){ri.copy(this._normal,e),this._resource&&(this._resource.normal=e)}get normal(){return this._normal}set distance(e){this._distance=e,this._resource&&(this._resource.distance=e)}get distance(){return this._distance}set saturation(e){e>1?(this._saturation=e/e,this._resource&&(this._resource.saturation=e/e)):(this._saturation=e,this._resource&&(this._resource.saturation=e))}get saturation(){return this._saturation}set pcf(e){this._pcf=e,this._resource&&(this._resource.pcf=e)}get pcf(){return this._pcf}set maxReceived(e){this._maxReceived=e,this._resource&&(this._resource.maxReceived=e)}get maxReceived(){return this._maxReceived}set bias(e){this._bias=e,this._resource&&(this._resource.bias=e)}get bias(){return this._bias}set normalBias(e){this._normalBias=e,this._resource&&(this._resource.normalBias=e)}get normalBias(){return this._normalBias}set shadowMapSize(e){this._size.set(e,e),this._resource&&(this._resource.size.set(e,e),this._resource.shadowMapDirty=!0)}get shadowMapSize(){return this._size.x}get size(){return this._size}set fixedArea(e){this._fixedArea=e,this._resource&&(this._resource.fixedArea=e)}get fixedArea(){return this._fixedArea}set near(e){this._near=e,this._resource&&(this._resource.near=e)}get near(){return this._near}set far(e){this._far=Math.min(e,jg.MAX_FAR),this._resource&&(this._resource.far=this._far)}get far(){return this._far}set invisibleOcclusionRange(e){this._invisibleOcclusionRange=Math.min(e,jg.MAX_FAR),this._resource&&(this._resource.invisibleOcclusionRange=this._invisibleOcclusionRange)}get invisibleOcclusionRange(){return this._invisibleOcclusionRange}set shadowDistance(e){this._shadowDistance=Math.min(e,jg.MAX_FAR),this._resource&&(this._resource.shadowDistance=this._shadowDistance)}get shadowDistance(){return this._shadowDistance}set orthoSize(e){this._orthoSize=e,this._resource&&(this._resource.orthoSize=e)}get orthoSize(){return this._orthoSize}setPlaneFromNode(e){e.getWorldRotation(ZA),this.normal=ri.transformQuat(YA,XA,ZA),e.getWorldPosition(YA),this.distance=ri.dot(this._normal,YA)}activate(e){this.pcf=Math.min(this._pcf,kg.SOFT_2X),this._resource=e,this._resource.initialize(this),this._resource.activate()}}).prototype,"_type",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Hg.Planar}}),rA=Bc(iA.prototype,"_enabled",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),oA=Bc(iA.prototype,"_normal",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new ri(0,1,0)}}),aA=Bc(iA.prototype,"_distance",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),cA=Bc(iA.prototype,"_shadowColor",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new ti(0,0,0,76)}}),lA=Bc(iA.prototype,"_firstSetCSM",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),hA=Bc(iA.prototype,"_fixedArea",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),_A=Bc(iA.prototype,"_pcf",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return kg.HARD}}),uA=Bc(iA.prototype,"_bias",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1e-5}}),pA=Bc(iA.prototype,"_normalBias",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),dA=Bc(iA.prototype,"_near",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.1}}),fA=Bc(iA.prototype,"_far",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 10}}),mA=Bc(iA.prototype,"_shadowDistance",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 100}}),gA=Bc(iA.prototype,"_invisibleOcclusionRange",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 200}}),vA=Bc(iA.prototype,"_orthoSize",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 5}}),yA=Bc(iA.prototype,"_maxReceived",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 4}}),xA=Bc(iA.prototype,"_size",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new bi(512,512)}}),SA=Bc(iA.prototype,"_saturation",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.75}}),Bc(iA.prototype,"enabled",[dl,hE],Object.getOwnPropertyDescriptor(iA.prototype,"enabled"),iA.prototype),Bc(iA.prototype,"type",[dl,_E],Object.getOwnPropertyDescriptor(iA.prototype,"type"),iA.prototype),Bc(iA.prototype,"shadowColor",[uE],Object.getOwnPropertyDescriptor(iA.prototype,"shadowColor"),iA.prototype),Bc(iA.prototype,"normal",[pE,dE],Object.getOwnPropertyDescriptor(iA.prototype,"normal"),iA.prototype),Bc(iA.prototype,"distance",[fE,mE,gE],Object.getOwnPropertyDescriptor(iA.prototype,"distance"),iA.prototype),Bc(iA.prototype,"saturation",[dl,vE,Tl,yE,xE,SE],Object.getOwnPropertyDescriptor(iA.prototype,"saturation"),iA.prototype),Bc(iA.prototype,"pcf",[CE,TE,bE],Object.getOwnPropertyDescriptor(iA.prototype,"pcf"),iA.prototype),Bc(iA.prototype,"maxReceived",[EE,AE],Object.getOwnPropertyDescriptor(iA.prototype,"maxReceived"),iA.prototype),Bc(iA.prototype,"bias",[PE,wE,IE],Object.getOwnPropertyDescriptor(iA.prototype,"bias"),iA.prototype),Bc(iA.prototype,"normalBias",[RE,DE,OE],Object.getOwnPropertyDescriptor(iA.prototype,"normalBias"),iA.prototype),Bc(iA.prototype,"shadowMapSize",[ME,NE,LE],Object.getOwnPropertyDescriptor(iA.prototype,"shadowMapSize"),iA.prototype),Bc(iA.prototype,"fixedArea",[zE,FE,BE],Object.getOwnPropertyDescriptor(iA.prototype,"fixedArea"),iA.prototype),Bc(iA.prototype,"near",[UE,GE,HE],Object.getOwnPropertyDescriptor(iA.prototype,"near"),iA.prototype),Bc(iA.prototype,"far",[kE,VE,jE],Object.getOwnPropertyDescriptor(iA.prototype,"far"),iA.prototype),Bc(iA.prototype,"invisibleOcclusionRange",[dl,WE,Tl,qE,XE,YE],Object.getOwnPropertyDescriptor(iA.prototype,"invisibleOcclusionRange"),iA.prototype),Bc(iA.prototype,"shadowDistance",[dl,KE,Tl,$E,ZE,QE],Object.getOwnPropertyDescriptor(iA.prototype,"shadowDistance"),iA.prototype),Bc(iA.prototype,"orthoSize",[JE,eA,tA],Object.getOwnPropertyDescriptor(iA.prototype,"orthoSize"),iA.prototype),nA=iA))||nA)||nA);i.ShadowsInfo=nP;const iP=new ri(-1024,-1024,-1024),sP=new ri(1024,1024,1024);let rP=(CA=Zc("cc.OctreeInfo"),TA=pl(),bA=vl(),EA=vl(),AA=gl(),PA=vl(),wA=gl(),IA=yl(),RA=Ol(rt),DA=vl(),CA(OA=TA((NA=Bc((MA=class{constructor(){Fc(this,"_enabled",NA,this),Fc(this,"_minPos",LA,this),Fc(this,"_maxPos",zA,this),Fc(this,"_depth",FA,this),this._resource=null}set enabled(e){this._enabled!==e&&(this._enabled=e,this._resource&&(this._resource.enabled=e))}get enabled(){return this._enabled}set minPos(e){this._minPos=e,this._resource&&(this._resource.minPos=e)}get minPos(){return this._minPos}set maxPos(e){this._maxPos=e,this._resource&&(this._resource.maxPos=e)}get maxPos(){return this._maxPos}set depth(e){this._depth=e,this._resource&&(this._resource.depth=e)}get depth(){return this._depth}activate(e){this._resource=e,this._resource.initialize(this)}}).prototype,"_enabled",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),LA=Bc(MA.prototype,"_minPos",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new ri(iP)}}),zA=Bc(MA.prototype,"_maxPos",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new ri(sP)}}),FA=Bc(MA.prototype,"_depth",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 8}}),Bc(MA.prototype,"enabled",[dl,bA],Object.getOwnPropertyDescriptor(MA.prototype,"enabled"),MA.prototype),Bc(MA.prototype,"minPos",[dl,EA,AA],Object.getOwnPropertyDescriptor(MA.prototype,"minPos"),MA.prototype),Bc(MA.prototype,"maxPos",[dl,PA,wA],Object.getOwnPropertyDescriptor(MA.prototype,"maxPos"),MA.prototype),Bc(MA.prototype,"depth",[dl,IA,RA,DA],Object.getOwnPropertyDescriptor(MA.prototype,"depth"),MA.prototype),OA=MA))||OA)||OA),oP=(BA=Zc("cc.SceneGlobals"),UA=Ol(eP),BA((kA=Bc((HA=class{constructor(){Fc(this,"ambient",kA,this),Fc(this,"shadows",VA,this),Fc(this,"_skybox",jA,this),Fc(this,"fog",WA,this),Fc(this,"octree",qA,this)}get skybox(){return this._skybox}set skybox(e){this._skybox=e}activate(){const e=i.director.root.pipeline.pipelineSceneData;this.skybox.activate(e.skybox),this.ambient.activate(e.ambient),this.shadows.activate(e.shadows),this.fog.activate(e.fog),this.octree.activate(e.octree)}}).prototype,"ambient",[il,dl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new JA}}),VA=Bc(HA.prototype,"shadows",[il,dl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new nP}}),jA=Bc(HA.prototype,"_skybox",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new eP}}),WA=Bc(HA.prototype,"fog",[dl,il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new tP}}),Bc(HA.prototype,"skybox",[dl,UA],Object.getOwnPropertyDescriptor(HA.prototype,"skybox"),HA.prototype),qA=Bc(HA.prototype,"octree",[dl,il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new rP}}),GA=HA))||GA);i.SceneGlobals=oP;class aP{constructor(e,t){this.type=void 0,this.bubbles=void 0,this.target=null,this.currentTarget=null,this.eventPhase=0,this.propagationStopped=!1,this.propagationImmediateStopped=!1,this.type=e,this.bubbles=!!t}unuse(){this.type=aP.NO_TYPE,this.target=null,this.currentTarget=null,this.eventPhase=aP.NONE,this.propagationStopped=!1,this.propagationImmediateStopped=!1}reuse(e,t){this.type=e,this.bubbles=t||!1}isStopped(){return this.propagationStopped||this.propagationImmediateStopped}getCurrentTarget(){return this.currentTarget}getType(){return this.type}}e("Event",aP),aP.NO_TYPE="no_type",aP.TOUCH="touch",aP.MOUSE="mouse",aP.KEYBOARD="keyboard",aP.ACCELERATION="acceleration",aP.NONE=0,aP.CAPTURING_PHASE=1,aP.AT_TARGET=2,aP.BUBBLING_PHASE=3,i.Event=aP;class cP extends aP{constructor(e,t){super(rT.DEVICEMOTION,t),this.acc=void 0,this.acc=e}}e("EventAcceleration",cP),aP.EventAcceleration=cP;class lP extends aP{get isPressed(){return this._isPressed}constructor(e,t,n){"boolean"==typeof t&&(t=t?rT.KEY_DOWN:rT.KEY_UP),super(t,n),this.keyCode=void 0,this.rawEvent=void 0,this._isPressed=void 0,this._isPressed=t!==rT.KEY_UP,"number"==typeof e?this.keyCode=e:(this.keyCode=e.keyCode,this.rawEvent=e)}}e("EventKeyboard",lP),aP.EventKeyboard=lP;class hP extends aP{get eventType(){return this._eventType}constructor(e,t,n){super(e,t),this.movementX=0,this.movementY=0,this.preventSwallow=!1,this._eventType=void 0,this._button=hP.BUTTON_MISSING,this._x=0,this._y=0,this._prevX=0,this._prevY=0,this._scrollX=0,this._scrollY=0,this._eventType=e,n&&(this._prevX=n.x,this._prevY=n.y)}setScrollData(e,t){this._scrollX=e,this._scrollY=t}getScrollX(){return this._scrollX}getScrollY(){return this._scrollY}setLocation(e,t){this._x=e,this._y=t}getLocation(e){return e||(e=new bi),bi.set(e,this._x,this._y),e}getLocationInView(e){return e||(e=new bi),bi.set(e,this._x,i.view._designResolutionSize.height-this._y),e}getUILocation(e){return e||(e=new bi),bi.set(e,this._x,this._y),i.view._convertToUISpace(e),e}getPreviousLocation(e){return e||(e=new bi),bi.set(e,this._prevX,this._prevY),e}getUIPreviousLocation(e){return e||(e=new bi),bi.set(e,this._prevX,this._prevY),i.view._convertToUISpace(e),e}getDelta(e){return e||(e=new bi),bi.set(e,this._x-this._prevX,this._y-this._prevY),e}getDeltaX(){return this._x-this._prevX}getDeltaY(){return this._y-this._prevY}getUIDelta(e){return e||(e=new bi),bi.set(e,(this._x-this._prevX)/i.view.getScaleX(),(this._y-this._prevY)/i.view.getScaleY()),e}getUIDeltaX(){return(this._x-this._prevX)/i.view.getScaleX()}getUIDeltaY(){return(this._y-this._prevY)/i.view.getScaleY()}setButton(e){this._button=e}getButton(){return this._button}getLocationX(){return this._x}getLocationY(){return this._y}getUILocationX(){const e=i.view.getViewportRect();return(this._x-e.x)/i.view.getScaleX()}getUILocationY(){const e=i.view.getViewportRect();return(this._y-e.y)/i.view.getScaleY()}}e("EventMouse",hP),hP.BUTTON_MISSING=-1,hP.BUTTON_LEFT=0,hP.BUTTON_RIGHT=2,hP.BUTTON_MIDDLE=1,hP.BUTTON_4=3,hP.BUTTON_5=4,hP.BUTTON_6=5,hP.BUTTON_7=6,hP.BUTTON_8=7,aP.EventMouse=hP;const _P=new bi;class uP extends aP{constructor(e,t,n,i=[]){super(n,t),this.touch=null,this.simulate=!1,this.preventSwallow=!1,this._eventCode=void 0,this._touches=void 0,this._allTouches=void 0,this._eventCode=n,this._touches=e||[],this._allTouches=i}getEventCode(){return this._eventCode}getTouches(){return this._touches}getAllTouches(){return this._allTouches}setLocation(e,t){this.touch&&this.touch.setTouchInfo(this.touch.getID(),e,t)}getLocation(e){return this.touch?this.touch.getLocation(e):new bi}getUILocation(e){return this.touch?this.touch.getUILocation(e):new bi}getLocationInView(e){return this.touch?this.touch.getLocationInView(e):new bi}getPreviousLocation(e){return this.touch?this.touch.getPreviousLocation(e):new bi}getStartLocation(e){return this.touch?this.touch.getStartLocation(e):new bi}getUIStartLocation(e){return this.touch?this.touch.getUIStartLocation(e):new bi}getID(){return this.touch?this.touch.getID():null}getDelta(e){return this.touch?this.touch.getDelta(e):new bi}getUIDelta(e){return this.touch?this.touch.getUIDelta(e):new bi}getDeltaX(){return this.touch?this.touch.getDelta(_P).x:0}getDeltaY(){return this.touch?this.touch.getDelta(_P).y:0}getLocationX(){return this.touch?this.touch.getLocationX():0}getLocationY(){return this.touch?this.touch.getLocationY():0}}e("EventTouch",uP),uP.MAX_TOUCHES=5,aP.EventTouch=uP;class pP{constructor(e=0,t=0,n=0,i=0){this.x=void 0,this.y=void 0,this.z=void 0,this.timestamp=void 0,this.x=e,this.y=t,this.z=n,this.timestamp=i}}let dP;e("Acceleration",pP),function(e){e[e.NONE=0]="NONE",e[e.MOBILE_BACK=6]="MOBILE_BACK",e[e.BACKSPACE=8]="BACKSPACE",e[e.TAB=9]="TAB",e[e.ENTER=13]="ENTER",e[e.SHIFT_LEFT=16]="SHIFT_LEFT",e[e.CTRL_LEFT=17]="CTRL_LEFT",e[e.ALT_LEFT=18]="ALT_LEFT",e[e.PAUSE=19]="PAUSE",e[e.CAPS_LOCK=20]="CAPS_LOCK",e[e.ESCAPE=27]="ESCAPE",e[e.SPACE=32]="SPACE",e[e.PAGE_UP=33]="PAGE_UP",e[e.PAGE_DOWN=34]="PAGE_DOWN",e[e.END=35]="END",e[e.HOME=36]="HOME",e[e.ARROW_LEFT=37]="ARROW_LEFT",e[e.ARROW_UP=38]="ARROW_UP",e[e.ARROW_RIGHT=39]="ARROW_RIGHT",e[e.ARROW_DOWN=40]="ARROW_DOWN",e[e.INSERT=45]="INSERT",e[e.DELETE=46]="DELETE",e[e.DIGIT_0=48]="DIGIT_0",e[e.DIGIT_1=49]="DIGIT_1",e[e.DIGIT_2=50]="DIGIT_2",e[e.DIGIT_3=51]="DIGIT_3",e[e.DIGIT_4=52]="DIGIT_4",e[e.DIGIT_5=53]="DIGIT_5",e[e.DIGIT_6=54]="DIGIT_6",e[e.DIGIT_7=55]="DIGIT_7",e[e.DIGIT_8=56]="DIGIT_8",e[e.DIGIT_9=57]="DIGIT_9",e[e.KEY_A=65]="KEY_A",e[e.KEY_B=66]="KEY_B",e[e.KEY_C=67]="KEY_C",e[e.KEY_D=68]="KEY_D",e[e.KEY_E=69]="KEY_E",e[e.KEY_F=70]="KEY_F",e[e.KEY_G=71]="KEY_G",e[e.KEY_H=72]="KEY_H",e[e.KEY_I=73]="KEY_I",e[e.KEY_J=74]="KEY_J",e[e.KEY_K=75]="KEY_K",e[e.KEY_L=76]="KEY_L",e[e.KEY_M=77]="KEY_M",e[e.KEY_N=78]="KEY_N",e[e.KEY_O=79]="KEY_O",e[e.KEY_P=80]="KEY_P",e[e.KEY_Q=81]="KEY_Q",e[e.KEY_R=82]="KEY_R",e[e.KEY_S=83]="KEY_S",e[e.KEY_T=84]="KEY_T",e[e.KEY_U=85]="KEY_U",e[e.KEY_V=86]="KEY_V",e[e.KEY_W=87]="KEY_W",e[e.KEY_X=88]="KEY_X",e[e.KEY_Y=89]="KEY_Y",e[e.KEY_Z=90]="KEY_Z",e[e.NUM_0=96]="NUM_0",e[e.NUM_1=97]="NUM_1",e[e.NUM_2=98]="NUM_2",e[e.NUM_3=99]="NUM_3",e[e.NUM_4=100]="NUM_4",e[e.NUM_5=101]="NUM_5",e[e.NUM_6=102]="NUM_6",e[e.NUM_7=103]="NUM_7",e[e.NUM_8=104]="NUM_8",e[e.NUM_9=105]="NUM_9",e[e.NUM_MULTIPLY=106]="NUM_MULTIPLY",e[e.NUM_PLUS=107]="NUM_PLUS",e[e.NUM_SUBTRACT=109]="NUM_SUBTRACT",e[e.NUM_DECIMAL=110]="NUM_DECIMAL",e[e.NUM_DIVIDE=111]="NUM_DIVIDE",e[e.F1=112]="F1",e[e.F2=113]="F2",e[e.F3=114]="F3",e[e.F4=115]="F4",e[e.F5=116]="F5",e[e.F6=117]="F6",e[e.F7=118]="F7",e[e.F8=119]="F8",e[e.F9=120]="F9",e[e.F10=121]="F10",e[e.F11=122]="F11",e[e.F12=123]="F12",e[e.NUM_LOCK=144]="NUM_LOCK",e[e.SCROLL_LOCK=145]="SCROLL_LOCK",e[e.SEMICOLON=186]="SEMICOLON",e[e.EQUAL=187]="EQUAL",e[e.COMMA=188]="COMMA",e[e.DASH=189]="DASH",e[e.PERIOD=190]="PERIOD",e[e.SLASH=191]="SLASH",e[e.BACK_QUOTE=192]="BACK_QUOTE",e[e.BRACKET_LEFT=219]="BRACKET_LEFT",e[e.BACKSLASH=220]="BACKSLASH",e[e.BRACKET_RIGHT=221]="BRACKET_RIGHT",e[e.QUOTE=222]="QUOTE",e[e.SHIFT_RIGHT=2e3]="SHIFT_RIGHT",e[e.CTRL_RIGHT=2001]="CTRL_RIGHT",e[e.ALT_RIGHT=2002]="ALT_RIGHT",e[e.NUM_ENTER=2003]="NUM_ENTER"}(dP||(dP=e("KeyCode",{})));const fP=new bi;class mP{get lastModified(){return this._lastModified}constructor(e,t,n=0){this._point=new bi,this._prevPoint=new bi,this._lastModified=0,this._id=0,this._startPoint=new bi,this._startPointCaptured=!1,this.setTouchInfo(n,e,t)}getLocation(e){return e||(e=new bi),e.set(this._point.x,this._point.y),e}getLocationX(){return this._point.x}getLocationY(){return this._point.y}getUILocation(e){return e||(e=new bi),e.set(this._point.x,this._point.y),i.view._convertToUISpace(e),e}getUILocationX(){const e=i.view.getViewportRect();return(this._point.x-e.x)/i.view.getScaleX()}getUILocationY(){const e=i.view.getViewportRect();return(this._point.y-e.y)/i.view.getScaleY()}getPreviousLocation(e){return e||(e=new bi),e.set(this._prevPoint.x,this._prevPoint.y),e}getUIPreviousLocation(e){return e||(e=new bi),e.set(this._prevPoint.x,this._prevPoint.y),i.view._convertToUISpace(e),e}getStartLocation(e){return e||(e=new bi),e.set(this._startPoint.x,this._startPoint.y),e}getUIStartLocation(e){return e||(e=new bi),e.set(this._startPoint.x,this._startPoint.y),i.view._convertToUISpace(e),e}getDelta(e){return e||(e=new bi),e.set(this._point),e.subtract(this._prevPoint),e}getUIDelta(e){return e||(e=new bi),fP.set(this._point),fP.subtract(this._prevPoint),e.set(i.view.getScaleX(),i.view.getScaleY()),bi.divide(e,fP,e),e}getLocationInView(e){return e||(e=new bi),e.set(this._point.x,i.view._designResolutionSize.height-this._point.y),e}getPreviousLocationInView(e){return e||(e=new bi),e.set(this._prevPoint.x,i.view._designResolutionSize.height-this._prevPoint.y),e}getStartLocationInView(e){return e||(e=new bi),e.set(this._startPoint.x,i.view._designResolutionSize.height-this._startPoint.y),e}getID(){return this._id}setTouchInfo(e=0,t,n){this._prevPoint=this._point,this._point=new bi(t||0,n||0),this._id=e,this._startPointCaptured||(this._startPoint=new bi(this._point),this._startPointCaptured=!0)}setPoint(e,t){"object"==typeof e?(this._point.x=e.x,this._point.y=e.y):(this._point.x=e||0,this._point.y=t||0),this._lastModified=i.game.frameStartTime}setPrevPoint(e,t){this._prevPoint="object"==typeof e?new bi(e.x,e.y):new bi(e||0,t||0),this._lastModified=i.game.frameStartTime}}e("Touch",mP),i.Touch=mP;class gP{constructor(){this._intervalInSeconds=.2,this._intervalId=void 0,this._isEnabled=!1,this._eventTarget=new kt,this._didAccelerateFunc=void 0,this._didAccelerateFunc=this._didAccelerate.bind(this)}_didAccelerate(){const e=jsb.device.getDeviceMotionValue();let t=.1*e[3],n=.1*e[4];const i=.1*e[5],s=Qh.orientation,r=t;s===Kh.LANDSCAPE_RIGHT?(t=-n,n=r):s===Kh.LANDSCAPE_LEFT?(t=n,n=-r):s===Kh.PORTRAIT_UPSIDE_DOWN&&(t=-t,n=-n),Zt.os!==qt.ANDROID&&Zt.os!==qt.OHOS||(t=-t,n=-n);const o=performance.now(),a=new pP(t,n,i,o),c=new cP(a);this._eventTarget.emit(oT.DEVICEMOTION,c)}start(){this._intervalId&&clearInterval(this._intervalId),this._intervalId=setInterval(this._didAccelerateFunc,1e3*this._intervalInSeconds),jsb.device.setAccelerometerInterval(this._intervalInSeconds),jsb.device.setAccelerometerEnabled(!0),this._isEnabled=!0}stop(){this._intervalId&&(clearInterval(this._intervalId),this._intervalId=void 0),jsb.device.setAccelerometerEnabled(!1),this._isEnabled=!1}setInterval(e){this._intervalInSeconds=e/1e3,jsb.device.setAccelerometerInterval(this._intervalInSeconds),this._isEnabled&&(jsb.device.setAccelerometerEnabled(!1),jsb.device.setAccelerometerEnabled(!0))}on(e,t,n){this._eventTarget.on(e,t,n)}}const vP={12:dP.NUM_LOCK,10048:dP.NUM_0,10049:dP.NUM_1,10050:dP.NUM_2,10051:dP.NUM_3,10052:dP.NUM_4,10053:dP.NUM_5,10054:dP.NUM_6,10055:dP.NUM_7,10056:dP.NUM_8,10057:dP.NUM_9,20013:dP.NUM_ENTER,20016:dP.SHIFT_RIGHT,20017:dP.CTRL_RIGHT,20018:dP.ALT_RIGHT};function yP(e){return vP[e]||e}class xP{constructor(){this._eventTarget=new kt,this._keyStateMap={},this._registerEvent()}_registerEvent(){jsb.onKeyDown=e=>{const t=yP(e.keyCode);if(this._keyStateMap[t]){const t=this._getInputEvent(e,oT.KEY_PRESSING);this._eventTarget.emit(oT.KEY_PRESSING,t)}else{const t=this._getInputEvent(e,oT.KEY_DOWN);this._eventTarget.emit(oT.KEY_DOWN,t)}this._keyStateMap[t]=!0},jsb.onKeyUp=e=>{const t=yP(e.keyCode),n=this._getInputEvent(e,oT.KEY_UP);this._keyStateMap[t]=!1,this._eventTarget.emit(oT.KEY_UP,n)}}_getInputEvent(e,t){const n=yP(e.keyCode);return new lP(n,t)}on(e,t,n){this._eventTarget.on(e,t,n)}}class SP{constructor(){this._eventTarget=new kt,this._preMousePos=new bi,this._isPressed=!1,this._registerEvent()}_getLocation(e){const t=Qh.windowSize,n=Qh.devicePixelRatio,i=e.x*n,s=t.height-e.y*n;return new bi(i,s)}_registerEvent(){jsb.onMouseDown=this._createCallback(oT.MOUSE_DOWN),jsb.onMouseMove=this._createCallback(oT.MOUSE_MOVE),jsb.onMouseUp=this._createCallback(oT.MOUSE_UP),jsb.onMouseWheel=this._handleMouseWheel.bind(this)}_createCallback(e){return t=>{const n=this._getLocation(t);let i=t.button;switch(e){case oT.MOUSE_DOWN:this._isPressed=!0;break;case oT.MOUSE_UP:this._isPressed=!1;break;case oT.MOUSE_MOVE:this._isPressed||(i=hP.BUTTON_MISSING)}const s=new hP(e,!1,this._preMousePos);s.setLocation(n.x,n.y),s.setButton(i),s.movementX=n.x-this._preMousePos.x,s.movementY=this._preMousePos.y-n.y,this._preMousePos.set(n.x,n.y),this._eventTarget.emit(e,s)}}_handleMouseWheel(e){const t=oT.MOUSE_WHEEL,n=this._getLocation(e),i=e.button,s=new hP(t,!1,this._preMousePos);s.setLocation(n.x,n.y),s.setButton(i),s.movementX=n.x-this._preMousePos.x,s.movementY=this._preMousePos.y-n.y,s.setScrollData(120*e.wheelDeltaX,120*e.wheelDeltaY),this._preMousePos.set(n.x,n.y),this._eventTarget.emit(t,s)}on(e,t,n){this._eventTarget.on(e,t,n)}}const CP=new bi,TP=new class{constructor(){this._touchMap=void 0,this._maxTouches=8,this._touchMap=new Map}_cloneTouch(e){const t=e.getID();e.getStartLocation(CP);const n=new mP(CP.x,CP.y,t);return e.getLocation(CP),n.setPoint(CP.x,CP.y),e.getPreviousLocation(CP),n.setPrevPoint(CP),n}_createTouch(e,t,n){if(this._touchMap.has(e))return void console.log("Cannot create the same touch object.");if(this._checkTouchMapSizeMoreThanMax(e))return void console.log("The touches is more than MAX_TOUCHES.");const i=new mP(t,n,e);return this._touchMap.set(e,i),this._updateTouch(i,t,n),this._cloneTouch(i)}releaseTouch(e){this._touchMap.has(e)&&this._touchMap.delete(e)}getTouch(e,t,n){let i=this._touchMap.get(e);return i?this._updateTouch(i,t,n):i=this._createTouch(e,t,n),i?this._cloneTouch(i):void 0}getAllTouches(){const e=[];return this._touchMap.forEach((t=>{if(t){const n=this._cloneTouch(t);e.push(n)}})),e}_updateTouch(e,t,n){e.getLocation(CP),e.setPrevPoint(CP),e.setPoint(t,n)}_checkTouchMapSizeMoreThanMax(e){if(this._touchMap.has(e))return!1;const t=Ue.ENABLE_MULTI_TOUCH?this._maxTouches:1;if(this._touchMap.size<t)return!1;const n=performance.now();return this._touchMap.forEach((e=>{n-e.lastModified>Ue.TOUCH_TIMEOUT&&(console.log(`The touches is more than MAX_TOUCHES, release touch id ${e.getID()}.`),this.releaseTouch(e.getID()))})),t>=this._touchMap.size}};class bP{constructor(){this._eventTarget=new kt,this._registerEvent()}_registerEvent(){jsb.onTouchStart=this._createCallback(oT.TOUCH_START),jsb.onTouchMove=this._createCallback(oT.TOUCH_MOVE),jsb.onTouchEnd=this._createCallback(oT.TOUCH_END),jsb.onTouchCancel=this._createCallback(oT.TOUCH_CANCEL)}_createCallback(e){return t=>{const n=[],i=t.length,s=Qh.windowSize;for(let r=0;r<i;++r){const i=t[r],o=i.identifier;if(null===o)continue;const a=this._getLocation(i,s),c=TP.getTouch(o,a.x,a.y);c&&(e!==oT.TOUCH_END&&e!==oT.TOUCH_CANCEL||TP.releaseTouch(o),n.push(c))}if(n.length>0){const t=new uP(n,!1,e,Ue.ENABLE_MULTI_TOUCH?TP.getAllTouches():n);this._eventTarget.emit(e,t)}}}_getLocation(e,t){const n=Qh.devicePixelRatio,i=e.clientX*n,s=t.height-e.clientY*n;return new bi(i,s)}on(e,t,n){this._eventTarget.on(e,t,n)}}let EP;!function(e){e[e.GLOBAL=0]="GLOBAL",e[e.UI=1]="UI"}(EP||(EP={}));class AP{constructor(e){this.priority=EP.GLOBAL,this._inputEventTarget=void 0,this._inputEventTarget=e}dispatchEvent(e){return this._inputEventTarget.emit(e.type,e),!0}}const PP={[oT.MOUSE_DOWN]:oT.TOUCH_START,[oT.MOUSE_MOVE]:oT.TOUCH_MOVE,[oT.MOUSE_UP]:oT.TOUCH_END};class wP{constructor(){this._dispatchImmediately=!1,this._eventTarget=new kt,this._touchInput=new bP,this._mouseInput=new SP,this._keyboardInput=new xP,this._accelerometerInput=new gP,this._eventTouchList=[],this._eventMouseList=[],this._eventKeyboardList=[],this._eventAccelerationList=[],this._needSimulateTouchMoveEvent=!1,this._inputEventDispatcher=void 0,this._eventDispatcherList=[],this._registerEvent(),this._inputEventDispatcher=new AP(this._eventTarget),this._registerEventDispatcher(this._inputEventDispatcher)}on(e,t,n){return this._eventTarget.on(e,t,n),t}once(e,t,n){return this._eventTarget.once(e,t,n),t}off(e,t,n){this._eventTarget.off(e,t,n)}setAccelerometerEnabled(e){e?this._accelerometerInput.start():this._accelerometerInput.stop()}setAccelerometerInterval(e){this._accelerometerInput.setInterval(e)}_simulateEventTouch(e){const t=PP[e.type],n=TP.getTouch(0,e.getLocationX(),e.getLocationY());if(!n)return;const i=[n],s=new uP(i,!1,t,i);t===oT.TOUCH_END&&TP.releaseTouch(0),this._dispatchOrPushEventTouch(s,this._eventTouchList)}_registerEventDispatcher(e){this._eventDispatcherList.push(e),this._eventDispatcherList.sort(((e,t)=>t.priority-e.priority))}_emitEvent(e){const t=this._eventDispatcherList.length;for(let n=0;n<t&&this._eventDispatcherList[n].dispatchEvent(e);++n);}_registerEvent(){if(e_.hasFeature(e_.Feature.INPUT_TOUCH)){const e=this._eventTouchList;this._touchInput.on(oT.TOUCH_START,(t=>{this._dispatchOrPushEventTouch(t,e)})),this._touchInput.on(oT.TOUCH_MOVE,(t=>{this._dispatchOrPushEventTouch(t,e)})),this._touchInput.on(oT.TOUCH_END,(t=>{this._dispatchOrPushEventTouch(t,e)})),this._touchInput.on(oT.TOUCH_CANCEL,(t=>{this._dispatchOrPushEventTouch(t,e)}))}if(e_.hasFeature(e_.Feature.EVENT_MOUSE)){const e=this._eventMouseList;this._mouseInput.on(oT.MOUSE_DOWN,(t=>{this._needSimulateTouchMoveEvent=!0,this._simulateEventTouch(t),this._dispatchOrPushEvent(t,e)})),this._mouseInput.on(oT.MOUSE_MOVE,(t=>{this._needSimulateTouchMoveEvent&&this._simulateEventTouch(t),this._dispatchOrPushEvent(t,e)})),this._mouseInput.on(oT.MOUSE_UP,(t=>{this._needSimulateTouchMoveEvent=!1,this._simulateEventTouch(t),this._dispatchOrPushEvent(t,e)})),this._mouseInput.on(oT.MOUSE_WHEEL,(t=>{this._dispatchOrPushEvent(t,e)}))}if(e_.hasFeature(e_.Feature.EVENT_KEYBOARD)){const e=this._eventKeyboardList;this._keyboardInput.on(oT.KEY_DOWN,(t=>{this._dispatchOrPushEvent(t,e)})),this._keyboardInput.on(oT.KEY_PRESSING,(t=>{this._dispatchOrPushEvent(t,e)})),this._keyboardInput.on(oT.KEY_UP,(t=>{this._dispatchOrPushEvent(t,e)}))}if(e_.hasFeature(e_.Feature.EVENT_ACCELEROMETER)){const e=this._eventAccelerationList;this._accelerometerInput.on(oT.DEVICEMOTION,(t=>{this._dispatchOrPushEvent(t,e)}))}}_clearEvents(){this._eventMouseList.length=0,this._eventTouchList.length=0,this._eventKeyboardList.length=0,this._eventAccelerationList.length=0}_dispatchOrPushEvent(e,t){this._dispatchImmediately?this._emitEvent(e):t.push(e)}_dispatchOrPushEventTouch(e,t){if(this._dispatchImmediately){const t=e.getTouches(),n=t.length;for(let i=0;i<n;++i)e.touch=t[i],e.propagationStopped=e.propagationImmediateStopped=!1,this._emitEvent(e)}else t.push(e)}_frameDispatchEvents(){const e=this._eventMouseList;for(let t=0,n=e.length;t<n;++t){const n=e[t];this._emitEvent(n)}const t=this._eventTouchList;for(let e=0,n=t.length;e<n;++e){const n=t[e],i=n.getTouches(),s=i.length;for(let e=0;e<s;++e)n.touch=i[e],n.propagationStopped=n.propagationImmediateStopped=!1,this._emitEvent(n)}const n=this._eventKeyboardList;for(let e=0,t=n.length;e<t;++e){const t=n[e];this._emitEvent(t)}const i=this._eventAccelerationList;for(let e=0,t=i.length;e<t;++e){const t=i[e];this._emitEvent(t)}this._clearEvents()}}e("Input",wP),wP.EventType=oT;const IP=e("input",new wP);class RP extends kt{constructor(){super(),IP.on(oT.MOUSE_DOWN,(e=>{this.emit(rT.MOUSE_DOWN,e)})),IP.on(oT.MOUSE_MOVE,(e=>{this.emit(rT.MOUSE_MOVE,e)})),IP.on(oT.MOUSE_UP,(e=>{this.emit(rT.MOUSE_UP,e)})),IP.on(oT.MOUSE_WHEEL,(e=>{this.emit(rT.MOUSE_WHEEL,e)})),IP.on(oT.TOUCH_START,(e=>{this.emit(rT.TOUCH_START,e.touch,e)})),IP.on(oT.TOUCH_MOVE,(e=>{this.emit(rT.TOUCH_MOVE,e.touch,e)})),IP.on(oT.TOUCH_END,(e=>{this.emit(rT.TOUCH_END,e.touch,e)})),IP.on(oT.TOUCH_CANCEL,(e=>{this.emit(rT.TOUCH_CANCEL,e.touch,e)})),IP.on(oT.KEY_DOWN,(e=>{this.emit(rT.KEY_DOWN,e)})),IP.on(oT.KEY_PRESSING,(e=>{this.emit(rT.KEY_DOWN,e)})),IP.on(oT.KEY_UP,(e=>{this.emit(rT.KEY_UP,e)})),IP.on(oT.DEVICEMOTION,(e=>{this.emit(rT.DEVICEMOTION,e)}))}setAccelerometerEnabled(e){IP.setAccelerometerEnabled(e)}setAccelerometerInterval(e){IP.setAccelerometerInterval(e)}on(e,t,n,i){return super.on(e,t,n,i),t}off(e,t,n){super.off(e,t,n)}}e("SystemEvent",RP),RP.EventType=rT,i.SystemEvent=RP;const DP=e("systemEvent",new RP);var OP;i.systemEvent=DP,Cn(rT,"Node.EventType",[{name:"POSITION_PART",newName:"TRANSFORM_CHANGED"},{name:"ROTATION_PART",newName:"TRANSFORM_CHANGED"},{name:"SCALE_PART",newName:"TRANSFORM_CHANGED"}]),Cn(aP,"Event",[{name:"ACCELERATION",newName:"DEVICEMOTION",target:RP.EventType,targetName:"SystemEvent.EventType"}]),bn(aP,"Event",[{name:"TOUCH",suggest:"please use SystemEvent.EventType.TOUCH_START, SystemEvent.EventType.TOUCH_MOVE, SystemEvent.EventType.TOUCH_END and SystemEvent.EventType.TOUCH_CANCEL instead"},{name:"MOUSE",suggest:"please use SystemEvent.EventType.MOUSE_DOWN, SystemEvent.EventType.MOUSE_MOVE, SystemEvent.EventType.MOUSE_UP, SystemEvent.EventType.MOUSE_WHEEL, Node.EventType.MOUSE_ENTER and Node.EventType.MOUSE_LEAVE instead"},{name:"KEYBOARD",suggest:"please use SystemEvent.EventType.KEY_DOWN and SystemEvent.EventType.KEY_UP instead"}]),Cn(hP,"EventMouse",["DOWN","UP","MOVE"].map((e=>({name:e,newName:`MOUSE_${e}`,target:RP.EventType,targetName:"SystemEvent.EventType"})))),Cn(hP,"EventMouse",[{name:"SCROLL",newName:"MOUSE_WHEEL",target:RP.EventType,targetName:"SystemEvent.EventType"}]),bn(hP.prototype,"EventMouse.prototype",[{name:"eventType",suggest:"please use EventMouse.prototype.type instead"}]),Cn(uP,"EventTouch",[{name:"BEGAN",newName:"TOUCH_START",target:RP.EventType,targetName:"SystemEvent.EventType"}]),Cn(uP,"EventTouch",[{name:"MOVED",newName:"TOUCH_MOVE",target:RP.EventType,targetName:"SystemEvent.EventType"}]),Cn(uP,"EventTouch",[{name:"ENDED",newName:"TOUCH_END",target:RP.EventType,targetName:"SystemEvent.EventType"}]),Cn(uP,"EventTouch",[{name:"CANCELLED",newName:"TOUCH_CANCEL",target:RP.EventType,targetName:"SystemEvent.EventType"}]),bn(uP.prototype,"EventTouch.prototype",[{name:"getEventCode",suggest:"please use EventTouch.prototype.type instead"}]),Cn(uP.prototype,"EventTouch.prototype",[{name:"getUILocationInView",newName:"getLocationInView",target:uP,targetName:"EventTouch"}]),bn(Ue.KEY,"macro.KEY",["back","menu","0","1","2","3","4","5","6","7","8","9","0","*","+","-","/",";","=",",",".","[","]","dpadLeft","dpadRight","dpadUp","dpadDown","dpadCenter"].map((e=>({name:e})))),bn(Ue.KEY,"macro.KEY",[{name:"shift",suggest:"please use KeyCode.SHIFT_LEFT instead"}]),bn(Ue.KEY,"macro.KEY",[{name:"ctrl",suggest:"please use KeyCode.CTRL_LEFT instead"}]),bn(Ue.KEY,"macro.KEY",[{name:"alt",suggest:"please use KeyCode.ALT_LEFT instead"}]),bn(Ue,"macro",[{name:"KEY",suggest:"please use KeyCode instead"}]),Cn(Tx.prototype,"BaseNode",[{name:"childrenCount",newName:"children.length",customGetter(){return this.children.length}}]),Cn(Yx.prototype,"Node",[{name:"width",targetName:"node.getComponent(UITransform)",customGetter(){return this._uiProps.uiTransformComp.width},customSetter(e){this._uiProps.uiTransformComp.width=e}},{name:"height",targetName:"node.getComponent(UITransform)",customGetter(){return this._uiProps.uiTransformComp.height},customSetter(e){this._uiProps.uiTransformComp.height=e}},{name:"anchorX",targetName:"node.getComponent(UITransform)",customGetter(){return this._uiProps.uiTransformComp.anchorX},customSetter(e){this._uiProps.uiTransformComp.anchorX=e}},{name:"anchorY",targetName:"node.getComponent(UITransform)",customGetter(){return this._uiProps.uiTransformComp.anchorY},customSetter(e){this._uiProps.uiTransformComp.anchorY=e}},{name:"getAnchorPoint",targetName:"node.getComponent(UITransform)",customFunction(e){return e||(e=new bi),e.set(this._uiProps.uiTransformComp.anchorPoint),e}},{name:"setAnchorPoint",targetName:"node.getComponent(UITransform)",customFunction(e,t){this._uiProps.uiTransformComp.setAnchorPoint(e,t)}},{name:"getContentSize",targetName:"node.getComponent(UITransform)",customFunction(e){return e||(e=new Di),e.set(this._uiProps.uiTransformComp.contentSize),e}},{name:"setContentSize",targetName:"node.getComponent(UITransform)",customFunction(e,t){"number"==typeof e?this._uiProps.uiTransformComp.setContentSize(e,t):this._uiProps.uiTransformComp.setContentSize(e)}}]),Tn(oP.prototype,"SceneGlobals.prototype",[{name:"aspect"},{name:"selfShadow"},{name:"linear"},{name:"packing"},{name:"autoAdapt"}]),Tn(Yx.prototype,"Node.prototype",[{name:"addLayer"},{name:"removeLayer"}]),Cn(ax.prototype,"NodeUIProperties",[{name:"opacityDirty",newName:"colorDirty"}]),Tn(_d,"Layers",[{name:"All"},{name:"RaycastMask"},{name:"check"}]),Cn(_d,"Layers",[{name:"Default",newName:"DEFAULT",target:_d.Enum,targetName:"Layers.Enum"},{name:"Always",newName:"ALWAYS",target:_d.Enum,targetName:"Layers.Enum"},{name:"IgnoreRaycast",newName:"IGNORE_RAYCAST",target:_d.Enum,targetName:"Layers.Enum"},{name:"Gizmos",newName:"GIZMOS",target:_d.Enum,targetName:"Layers.Enum"},{name:"Editor",newName:"EDITOR",target:_d.Enum,targetName:"Layers.Enum"},{name:"UI",newName:"UI_3D",target:_d.Enum,targetName:"Layers.Enum"},{name:"UI2D",newName:"UI_2D",target:_d.Enum,targetName:"Layers.Enum"},{name:"SceneGizmo",newName:"SCENE_GIZMO",target:_d.Enum,targetName:"Layers.Enum"},{name:"makeInclusiveMask",newName:"makeMaskInclude",target:_d,targetName:"Layers"},{name:"makeExclusiveMask",newName:"makeMaskExclude",target:_d,targetName:"Layers"}]),Tn(_d.Enum,"Layers.Enum",[{name:"ALWAYS"}]),Tn(_d.BitMask,"Layers.BitMask",[{name:"ALWAYS"}]);const MP=Dt.Flags.HideInHierarchy,NP=Dt.Flags.DontSave;let LP=e("PrivateNode",Zc("cc.PrivateNode")(OP=class extends Yx{constructor(e){super(e),T(12003,this.name),this.hideFlags|=NP|MP}})||OP);var zP,FP,BP,UP;Cn(rT,"SystemEventType",["MOUSE_ENTER","MOUSE_LEAVE","TRANSFORM_CHANGED","SCENE_CHANGED_FOR_PERSISTS","SIZE_CHANGED","ANCHOR_CHANGED","COLOR_CHANGED","CHILD_ADDED","CHILD_REMOVED","PARENT_CHANGED","NODE_DESTROYED","LAYER_CHANGED","SIBLING_ORDER_CHANGED"].map((e=>({name:e,target:Yx.EventType,targetName:"Node.EventType"})))),Cn(Yx.EventType,"Node.EventType",[{name:"DEVICEMOTION",target:RP.EventType,targetName:"SystemEvent.EventType"},{name:"KEY_DOWN",target:RP.EventType,targetName:"SystemEvent.EventType"},{name:"KEY_UP",target:RP.EventType,targetName:"SystemEvent.EventType"}]),i.PrivateNode=LP;let GP=e("Scene",Zc("cc.Scene")((Bc((FP=class extends Tx{get renderScene(){return this._renderScene}get globals(){return this._globals}_updateScene(){this._scene=this}get native(){return this._nativeObj}_init(){this._nativeObj=new Fi}constructor(e){super(e),Fc(this,"autoReleaseAssets",BP,this),Fc(this,"_globals",UP,this),this.dependAssets=null,this._renderScene=null,this._inited=void 0,this._prefabSyncedInLiveReload=!1,this._pos=ri.ZERO,this._rot=ui.IDENTITY,this._scale=ri.ONE,this._mat=xi.IDENTITY,this._dirtyFlags=0,this._lpos=ri.ZERO,this._lrot=ui.IDENTITY,this._lscale=ri.ONE,this._activeInHierarchy=!1,i.director&&i.director.root&&(this._renderScene=i.director.root.createScene({})),this._inited=!i.game||!i.game._isCloning,this._init()}destroy(){const e=Dt.prototype.destroy.call(this);if(e){const e=this._children;for(let t=0;t<e.length;++t)e[t].active=!1}return this._renderScene&&i.director.root.destroyScene(this._renderScene),this._active=!1,this._activeInHierarchy=!1,e}addComponent(){throw new Error(I(3822))}_onHierarchyChanged(){}_onBatchCreated(e){super._onBatchCreated(e);const t=this._children.length;for(let n=0;n<t;++n)this.children[n]._siblingIndex=n,this._children[n]._onBatchCreated(e)}getPosition(e){return ri.copy(e||new ri,ri.ZERO)}getRotation(e){return ui.copy(e||new ui,ui.IDENTITY)}getScale(e){return ri.copy(e||new ri,ri.ONE)}getWorldPosition(e){return ri.copy(e||new ri,ri.ZERO)}getWorldRotation(e){return ui.copy(e||new ui,ui.IDENTITY)}getWorldScale(e){return ri.copy(e||new ri,ri.ONE)}getWorldMatrix(e){return xi.copy(e||new xi,xi.IDENTITY)}getWorldRS(e){return xi.copy(e||new xi,xi.IDENTITY)}getWorldRT(e){return xi.copy(e||new xi,xi.IDENTITY)}get position(){return ri.ZERO}get worldPosition(){return ri.ZERO}get rotation(){return ui.IDENTITY}get worldRotation(){return ui.IDENTITY}get scale(){return ri.ONE}get worldScale(){return ri.ONE}get eulerAngles(){return ri.ZERO}get worldMatrix(){return xi.IDENTITY}updateWorldTransform(){}_instantiate(){}_load(){this._inited||(TC(this),SC(this),this._onBatchCreated(false),this._inited=!0),this.walk(Tx._setScene)}_activate(e){e=!1!==e,i.director._nodeActivator.activateNode(this,e),this._globals.activate(),this._renderScene&&this._renderScene.activate()}}).prototype,"globals",[dl],Object.getOwnPropertyDescriptor(FP.prototype,"globals"),FP.prototype),BP=Bc(FP.prototype,"autoReleaseAssets",[il,dl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),UP=Bc(FP.prototype,"_globals",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new oP}}),zP=FP))||zP);function HP(e,t){if(!t){const e=i.director.getScene();if(!e)return null;t=e}return t.getChildByPath(e)}i.Scene=GP,i.find=HP;const kP=Ee.fastRemoveAt,VP=Dt.Flags.IsStartCalled,jP=Dt.Flags.IsOnEnableCalled;function WP(e,t){const n=t.constructor._executionOrder,i=t._id;let s=0;for(let t=e.length-1,r=t>>>1;s<=t;r=s+t>>>1){const o=e[r],a=o.constructor._executionOrder;if(a>n)t=r-1;else if(a<n)s=r+1;else{const e=o._id;if(e>i)t=r-1;else{if(!(e<i))return r;s=r+1}}}return~s}function qP(e,t){const n=e.array;let i=e.i+1;for(;i<n.length;){const s=n[i];s.node._activeInHierarchy?++i:(e.removeAt(i),t&&(s._objFlags&=~t))}}Dt.Flags.IsEditorOnEnableCalled;class XP{constructor(e){this._zero=void 0,this._neg=void 0,this._pos=void 0,this._invoke=void 0;const t=M;this._zero=new t([]),this._neg=new t([]),this._pos=new t([]),this._invoke=e}}function YP(e,t){return e.constructor._executionOrder-t.constructor._executionOrder}XP.stableRemoveInactive=qP;class KP extends XP{add(e){const t=e.constructor._executionOrder;(0===t?this._zero:t<0?this._neg:this._pos).array.push(e)}remove(e){const t=e.constructor._executionOrder;(0===t?this._zero:t<0?this._neg:this._pos).fastRemove(e)}cancelInactive(e){qP(this._zero,e),qP(this._neg,e),qP(this._pos,e)}invoke(){const e=this._neg;e.array.length>0&&(e.array.sort(YP),this._invoke(e),e.array.length=0),this._invoke(this._zero),this._zero.array.length=0;const t=this._pos;t.array.length>0&&(t.array.sort(YP),this._invoke(t),t.array.length=0)}}class $P extends XP{add(e){const t=e.constructor._executionOrder;if(0===t)this._zero.array.push(e);else{const n=t<0?this._neg.array:this._pos.array,i=WP(n,e);i<0&&n.splice(~i,0,e)}}remove(e){const t=e.constructor._executionOrder;if(0===t)this._zero.fastRemove(e);else{const n=t<0?this._neg:this._pos,i=WP(n.array,e);i>=0&&n.removeAt(i)}}invoke(e){this._neg.array.length>0&&this._invoke(this._neg,e),this._invoke(this._zero,e),this._pos.array.length>0&&this._invoke(this._pos,e)}}function ZP(e,t,n){const s=`var a=it.array;for(it.i=0;it.i<a.length;++it.i){var c=a[it.i];${e}}`,r=t?Function("it","dt",s):Function("it",s);return function(e,t,n){return(s,r)=>{try{t(s,r)}catch(t){i._throw(t);const o=s.array;for(n&&(o[s.i]._objFlags|=n),++s.i;s.i<o.length;++s.i)try{e(o[s.i],r)}catch(e){i._throw(e),n&&(o[s.i]._objFlags|=n)}}}}(Function("c","dt",e),r,n)}const QP=ZP(`c.start();c._objFlags|=${VP}`,!1,VP),JP=ZP("c.update(dt)",!0),ew=ZP("c.lateUpdate(dt)",!0),tw=e=>{const t=i.director._compScheduler,n=e.array;for(e.i=0;e.i<n.length;++e.i){const i=n[e.i];i._enabled&&(i.onEnable(),!i.node._activeInHierarchy||t._onEnabled(i))}};class nw{constructor(){this._deferredComps=[],this.unscheduleAll()}unscheduleAll(){this.startInvoker=new KP(QP),this.updateInvoker=new $P(JP),this.lateUpdateInvoker=new $P(ew),this._updating=!1}_onEnabled(e){i.director.getScheduler().resumeTarget(e),e._objFlags|=jP,this._updating?this._deferredComps.push(e):this._scheduleImmediate(e)}_onDisabled(e){i.director.getScheduler().pauseTarget(e),e._objFlags&=~jP;const t=this._deferredComps.indexOf(e);t>=0?kP(this._deferredComps,t):(!e.start||e._objFlags&VP||this.startInvoker.remove(e),e.update&&this.updateInvoker.remove(e),e.lateUpdate&&this.lateUpdateInvoker.remove(e))}enableComp(e,t){if(!(e._objFlags&jP)){if(e.onEnable){if(t)return void t.add(e);if(e.onEnable(),!e.node._activeInHierarchy)return}this._onEnabled(e)}}disableComp(e){e._objFlags&jP&&(e.onDisable&&e.onDisable(),this._onDisabled(e))}startPhase(){this._updating=!0,this.startInvoker.invoke(),this._startForNewComps()}updatePhase(e){this.updateInvoker.invoke(e)}lateUpdatePhase(e){this.lateUpdateInvoker.invoke(e),this._updating=!1,this._startForNewComps()}_startForNewComps(){this._deferredComps.length>0&&(this._deferredSchedule(),this.startInvoker.invoke())}_scheduleImmediate(e){"function"!=typeof e.start||e._objFlags&VP||this.startInvoker.add(e),"function"==typeof e.update&&this.updateInvoker.add(e),"function"==typeof e.lateUpdate&&this.lateUpdateInvoker.add(e)}_deferredSchedule(){const e=this._deferredComps;for(let t=0,n=e.length;t<n;t++)this._scheduleImmediate(e[t]);e.length=0}}const iw=Dt.Flags.IsPreloadStarted,sw=Dt.Flags.IsOnLoadStarted,rw=Dt.Flags.IsOnLoadCalled,ow=Dt.Flags.Deactivating;class aw extends XP{add(e){this._zero.array.push(e)}remove(e){this._zero.fastRemove(e)}cancelInactive(e){XP.stableRemoveInactive(this._zero,e)}invoke(){this._invoke(this._zero),this._zero.array.length=0}}const cw=ZP("c.__preload();"),lw=ZP(`c.onLoad();c._objFlags|=${rw}`,!1,rw),hw=new be(4);function _w(e,t,n){E(3817,e.name,n),console.log("Corrupted component value:",t),t?e._removeComponent(t):Ee.removeAt(e._components,n)}hw.get=function(){const e=this._get()||{preload:new aw(cw),onLoad:new KP(lw),onEnable:new KP(tw)};e.preload._zero.i=-1;let t=e.onLoad;return t._zero.i=-1,t._neg.i=-1,t._pos.i=-1,t=e.onEnable,t._zero.i=-1,t._neg.i=-1,t._pos.i=-1,e};class uw{constructor(){this.resetComp=void 0,this.reset()}reset(){this._activatingStack=[]}activateNode(e,t){if(t){const t=hw.get();this._activatingStack.push(t),this._activateNodeRecursively(e,t.preload,t.onLoad,t.onEnable),t.preload.invoke(),t.onLoad.invoke(),t.onEnable.invoke(),this._activatingStack.pop(),hw.put(t)}else{this._deactivateNodeRecursively(e);const t=this._activatingStack;for(const e of t)e.preload.cancelInactive(iw),e.onLoad.cancelInactive(sw),e.onEnable.cancelInactive()}e.emit(cx.ACTIVE_IN_HIERARCHY_CHANGED,e)}activateComp(e,t,n,s){if(Mt(e,!0)&&(e._objFlags&iw||(e._objFlags|=iw,e.__preload&&(t?t.add(e):e.__preload())),e._objFlags&sw||(e._objFlags|=sw,e.onLoad?n?n.add(e):(e.onLoad(),e._objFlags|=rw):e._objFlags|=rw),e._enabled)){if(!e.node._activeInHierarchy)return;i.director._compScheduler.enableComp(e,s)}}destroyComp(e){i.director._compScheduler.disableComp(e),e.onDestroy&&e._objFlags&rw&&e.onDestroy()}_activateNodeRecursively(e,t,n,s){if(e._objFlags&ow)return void E(3816,e.name);e._activeInHierarchy=!0;let r=e._components.length;for(let o=0;o<r;++o){const a=e._components[o];a instanceof i.Component?this.activateComp(a,t,n,s):(_w(e,a,o),--o,--r)}for(let i=0,r=e._children.length;i<r;++i){const r=e._children[i];r._active&&this._activateNodeRecursively(r,t,n,s)}e._onPostActivated(!0)}_deactivateNodeRecursively(e){e._objFlags|=ow,e._activeInHierarchy=!1;const t=e._components.length;for(let n=0;n<t;++n){const t=e._components[n];if(t._enabled&&(i.director._compScheduler.disableComp(t),e._activeInHierarchy))return void(e._objFlags&=~ow)}for(let t=0,n=e._children.length;t<n;++t){const n=e._children[t];if(n._activeInHierarchy&&(this._deactivateNodeRecursively(n),e._activeInHierarchy))return void(e._objFlags&=~ow)}e._onPostActivated(!1),e._objFlags&=~ow}}var pw,dw,fw;e("NodeActivator",uw);let mw=e("SceneAsset",Zc("cc.SceneAsset")((fw=Bc((dw=class extends bh{constructor(...e){super(...e),Fc(this,"scene",fw,this)}initDefault(e){super.initDefault(e),this.scene=new GP("New Scene")}validate(){return!!this.scene}}).prototype,"scene",[dl,il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),pw=dw))||pw);var gw,vw,yw;i.SceneAsset=mw;let xw=e("TextAsset",Zc("cc.TextAsset")((yw=Bc((vw=class extends bh{constructor(...e){super(...e),Fc(this,"text",yw,this)}toString(){return this.text}}).prototype,"text",[il,dl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),gw=vw))||gw);var Sw,Cw,Tw;i.TextAsset=xw;let bw,Ew=e("JsonAsset",Zc("cc.JsonAsset")((Tw=Bc((Cw=class extends bh{constructor(...e){super(...e),Fc(this,"json",Tw,this)}}).prototype,"json",[il,dl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Sw=Cw))||Sw);i.JsonAsset=Ew;class Aw{_init(){this._nativeObj=new ss,this._nativeObj.fog=this.fog.native,this._nativeObj.ambient=this.ambient.native,this._nativeObj.skybox=this.skybox.native,this._nativeObj.shadow=this.shadows.native,this._nativeObj.octree=this.octree.native}get native(){return this._nativeObj}get isHDR(){return this._isHDR}set isHDR(e){this._isHDR=e,this._nativeObj.isHDR=e}get shadingScale(){return this._shadingScale}set shadingScale(e){this._shadingScale!==e&&(this._shadingScale=e,this._nativeObj.shadingScale=e,this._pipeline.emit(Iy.ATTACHMENT_SCALE_CAHNGED,e))}constructor(){this.fog=new gT,this.ambient=new os,this.skybox=new sv,this.shadows=new jg,this.octree=new as,this.validPunctualLights=[],this.renderObjects=[],this.castShadowObjects=[],this.dirShadowObjects=[],this.shadowFrameBufferMap=new Map,this._occlusionQueryVertexBuffer=null,this._occlusionQueryIndicesBuffer=null,this._occlusionQueryInputAssembler=null,this._occlusionQueryMaterial=null,this._occlusionQueryShader=null,this._isHDR=!0,this._shadingScale=1,this._init(),this.shadingScale=1}activate(e,t){return this._device=e,this._pipeline=t,this.initOcclusionQuery(),!0}initOcclusionQuery(){if(this._occlusionQueryInputAssembler||(this._occlusionQueryInputAssembler=this._createOcclusionQueryIA(),this._nativeObj.occlusionQueryInputAssembler=this._occlusionQueryInputAssembler),!this._occlusionQueryMaterial){const e=new Ug;e._uuid="default-occlusion-query-material",e.initialize({effectName:"occlusion-query"}),this._occlusionQueryMaterial=e,this._occlusionQueryShader=e.passes[0].getShaderVariant(),this._nativeObj.occlusionQueryPass=this._occlusionQueryMaterial.passes[0].native,this._nativeObj.occlusionQueryShader=this._occlusionQueryShader}}getOcclusionQueryPass(){return this._occlusionQueryMaterial.passes[0]}onGlobalPipelineStateChanged(){}destroy(){var e,t,n;this.ambient.destroy(),this.skybox.destroy(),this.fog.destroy(),this.shadows.destroy(),this.octree.destroy(),this.validPunctualLights.length=0,null===(e=this._occlusionQueryInputAssembler)||void 0===e||e.destroy(),this._occlusionQueryInputAssembler=null,null===(t=this._occlusionQueryVertexBuffer)||void 0===t||t.destroy(),this._occlusionQueryVertexBuffer=null,null===(n=this._occlusionQueryIndicesBuffer)||void 0===n||n.destroy(),this._occlusionQueryIndicesBuffer=null,this._nativeObj=null}_createOcclusionQueryIA(){const e=this._device,t=new Float32Array([-1,-1,-1,1,-1,-1,-1,1,-1,1,1,-1,-1,-1,1,1,-1,1,-1,1,1,1,1,1]),n=3*Float32Array.BYTES_PER_ELEMENT,i=8*n;this._occlusionQueryVertexBuffer=e.createBuffer(new Lr(Us.VERTEX|Us.TRANSFER_DST,ks.DEVICE,i,n)),this._occlusionQueryVertexBuffer.update(t);const s=new Uint16Array([0,2,1,1,2,3,4,5,6,5,7,6,1,3,7,1,7,5,0,4,6,0,6,2,0,1,5,0,5,4,2,6,7,2,7,3]),r=Uint16Array.BYTES_PER_ELEMENT,o=36*r;this._occlusionQueryIndicesBuffer=e.createBuffer(new Lr(Us.INDEX|Us.TRANSFER_DST,ks.DEVICE,o,r)),this._occlusionQueryIndicesBuffer.update(s);const a=[new Qr("a_position",zs.RGB32F)],c=new eo(a,[this._occlusionQueryVertexBuffer],this._occlusionQueryIndicesBuffer);return e.createInputAssembler(c)}}!function(e){e[e.NONE=0]="NONE",e[e.FXAA=1]="FXAA"}(bw||(bw={}));class Pw extends Aw{constructor(...e){super(...e),this._antiAliasing=bw.NONE}set antiAliasing(e){if(this._antiAliasing=e,this._postprocessMaterial){const t=this._postprocessMaterial.passes[0].defines;Object.assign(t,{ANTIALIAS_TYPE:e});const n=new Ug;n.initialize({effectAsset:this._postprocessMaterial.effectAsset,defines:t});for(let e=0;e<n.passes.length;++e)n.passes[e].tryCompile();this._postprocessMaterial=n}}get antiAliasing(){return this._antiAliasing}get bloomMaterial(){return this._bloomMaterial}set bloomMaterial(e){this._bloomMaterial!==e&&e&&(this._bloomMaterial=e,this.updatePipelinePassInfo())}get postprocessMaterial(){return this._postprocessMaterial}set postprocessMaterial(e){this._postprocessMaterial!==e&&e&&(this._postprocessMaterial=e,this.updatePipelinePassInfo())}onGlobalPipelineStateChanged(){this.updatePipelinePassInfo()}updateBloomPass(){if(!this._bloomMaterial)return;const e=this._bloomMaterial.passes[0];e.beginChangeStatesSilently(),e.tryCompile(),e.endChangeStatesSilently();const t=[],n=[];for(let e=0;e<6;++e){const i=this._bloomMaterial.passes[1+e];i.beginChangeStatesSilently(),i.tryCompile(),i.endChangeStatesSilently();const s=this._bloomMaterial.passes[7+e];s.beginChangeStatesSilently(),s.tryCompile(),s.endChangeStatesSilently(),t.push(i.native),n.push(s.native)}const i=this._bloomMaterial.passes[13];i.beginChangeStatesSilently(),i.tryCompile(),i.endChangeStatesSilently(),this._nativeObj.bloomPrefilterPassShader=e.getShaderVariant(),this._nativeObj.bloomPrefilterPass=e.native,this._nativeObj.bloomDownsamplePassShader=this._bloomMaterial.passes[1].getShaderVariant(),this._nativeObj.bloomDownsamplePass=t,this._nativeObj.bloomUpsamplePassShader=this._bloomMaterial.passes[7].getShaderVariant(),this._nativeObj.bloomUpsamplePass=n,this._nativeObj.bloomCombinePassShader=i.getShaderVariant(),this._nativeObj.bloomCombinePass=i.native}updatePostProcessPass(){if(!this.postprocessMaterial)return;const e=this.postprocessMaterial.passes[0];e.beginChangeStatesSilently(),e.tryCompile(),e.endChangeStatesSilently(),this._nativeObj.pipelinePostPassShader=e.getShaderVariant(),this._nativeObj.pipelinePostPass=e.native}initPipelinePassInfo(){const e=new Ug;e._uuid="builtin-deferred-material",e.initialize({effectName:"deferred-lighting"});for(let t=0;t<e.passes.length;++t)e.passes[t].tryCompile();this._deferredLightingMaterial=e;const t=new Ug;t._uuid="builtin-bloom-material",t.initialize({effectName:"bloom"});for(let e=0;e<t.passes.length;++e)t.passes[e].tryCompile();this._bloomMaterial=t;const n=new Ug;n._uuid="builtin-post-process-material",Ue.ENABLE_ANTIALIAS_FXAA&&(this._antiAliasing=bw.FXAA),n.initialize({effectName:"post-process",defines:{ANTIALIAS_TYPE:this._antiAliasing}});for(let e=0;e<n.passes.length;++e)n.passes[e].tryCompile();this._postprocessMaterial=n,this.updatePipelinePassInfo()}get deferredLightingMaterial(){return this._deferredLightingMaterial}set deferredLightingMaterial(e){this._deferredLightingMaterial!==e&&e&&(this._deferredLightingMaterial=e,this.updatePipelinePassInfo())}updatePipelinePassInfo(){this.updateBloomPass(),this.updatePostProcessPass(),this.updateDeferredPassInfo()}activate(e,t){return super.activate(e,t),this.initPipelinePassInfo(),!0}updateDeferredPassInfo(){this.updateDeferredLightPass()}updateDeferredLightPass(){if(!this._deferredLightingMaterial)return;this.shadows.enabled&&(this._pipeline.macros.CC_RECEIVE_SHADOW=1);const e=this._deferredLightingMaterial.passes[0];e.beginChangeStatesSilently(),e.tryCompile(),e.endChangeStatesSilently(),this._nativeObj.deferredLightPassShader=e.getShaderVariant(),this._nativeObj.deferredLightPass=e.native}}nr.getPhaseID=eg;const ww=e("RenderPipeline",nr.RenderPipeline),Iw=(e("RenderFlow",nr.RenderFlow),e("RenderStage",nr.RenderStage),e("InstancedBuffer",nr.InstancedBuffer),e("PipelineStateManager",nr.PipelineStateManager));nr.InstancedBuffer.get;let Rw=nr.PipelineStateManager.getOrCreatePipelineState;function Dw(){const e=new Ow;return e.init(),e}nr.PipelineStateManager.getOrCreatePipelineState=function(e,t,n,i,s){return Rw.call(e,t.native,n,i,s)};class Ow extends nr.ForwardPipeline{constructor(){super(),this.pipelineSceneData=new Aw,this._tag=0,this._flows=[],this.renderTextures=[],this.materials=[]}on(e,t,n,i){}once(e,t,n){}off(e,t,n){}emit(e,t,n,i,s,r){}targetOff(e){}removeAll(e){}hasEventListener(e,t,n){return!1}init(){this.setPipelineSharedSceneData(this.pipelineSceneData.native);for(let e=0;e<this._flows.length;e++)this._flows[e].init(this);const e=new nr.RenderPipelineInfo(this._tag,this._flows);this.initialize(e)}activate(e){return super.activate(e)&&this.pipelineSceneData.activate(i.director.root.device,this)}render(e){let t=[];for(let n=0,i=e.length;n<i;++n)t.push(e[n].native);super.render(t)}set profiler(e){this.setProfiler(e&&e.native)}destroy(){this.pipelineSceneData.destroy(),super.destroy()}}e("ForwardPipeline",Ow),ae(Ow.prototype,bh.prototype);const Mw=Ow.prototype.onLoaded;Ow.prototype.onLoaded=function(){Mw&&Mw.call(this),this.init()};class Nw extends nr.ForwardFlow{constructor(){super(),this._name=0,this._priority=0,this._tag=0,this._stages=[]}init(e){for(let t=0;t<this._stages.length;t++)this._stages[t].init(e);const t=new nr.RenderFlowInfo(this._name,this._priority,this._tag,this._stages);this.initialize(t)}}e("ForwardFlow",Nw);class Lw extends nr.ShadowFlow{constructor(){super(),this._name=0,this._priority=0,this._tag=0,this._stages=[]}init(e){for(let t=0;t<this._stages.length;t++)this._stages[t].init(e);const t=new nr.RenderFlowInfo(this._name,this._priority,this._tag,this._stages);this.initialize(t)}}e("ShadowFlow",Lw);class zw extends nr.ForwardStage{constructor(){super(),this._name=0,this._priority=0,this._tag=0,this.renderQueues=[]}init(e){const t=[];for(let e=0;e<this.renderQueues.length;e++)t.push(this.renderQueues[e].init());const n=new nr.RenderStageInfo(this._name,this._priority,this._tag,t);this.initialize(n)}}e("ForwardStage",zw);class Fw extends nr.ShadowStage{constructor(){super(),this._name=0,this._priority=0,this._tag=0}init(e){const t=new nr.RenderStageInfo(this._name,this._priority,this._tag,[]);this.initialize(t)}}e("ShadowStage",Fw);class Bw{constructor(){this.isTransparent=!1,this.sortMode=0,this.stages=[],this.isTransparent=!1,this.sortMode=0,this.stages=[]}init(){return new nr.RenderQueueDesc(this.isTransparent,this.sortMode,this.stages)}}e("RenderQueueDesc",Bw);class Uw extends nr.DeferredPipeline{constructor(){super(),this.pipelineSceneData=new Pw,this._tag=0,this._flows=[],this.renderTextures=[],this.materials=[]}on(e,t,n,i){}once(e,t,n){}off(e,t,n){}emit(e,t,n,i,s,r){}targetOff(e){}removeAll(e){}hasEventListener(e,t,n){return!1}init(){this.setPipelineSharedSceneData(this.pipelineSceneData.native);for(let e=0;e<this._flows.length;e++)this._flows[e].init(this);let e=new nr.RenderPipelineInfo(this._tag,this._flows);this.initialize(e)}activate(e){return super.activate(e)&&this.pipelineSceneData.activate(i.director.root.device,this)}render(e){let t=[];for(let n=0,i=e.length;n<i;++n)t.push(e[n].native);super.render(t)}set profiler(e){this.setProfiler(e&&e.native)}destroy(){this.fog.destroy(),this.ambient.destroy(),this.skybox.destroy(),this.shadows.destroy(),this.pipelineSceneData.destroy(),super.destroy()}}e("DeferredPipeline",Uw),ae(Uw.prototype,bh.prototype);const Gw=Uw.prototype.onLoaded;Uw.prototype.onLoaded=function(){Gw&&Gw.call(this),this.init()};class Hw extends nr.MainFlow{constructor(){super(),this._name=0,this._priority=0,this._tag=0,this._stages=[]}init(e){for(let t=0;t<this._stages.length;t++)this._stages[t].init(e);let t=new nr.RenderFlowInfo(this._name,this._priority,this._tag,this._stages);this.initialize(t)}}e("MainFlow",Hw);class kw extends nr.GbufferStage{constructor(){super(),this._name=0,this._priority=0,this._tag=0,this.renderQueues=[]}init(e){const t=[];for(let e=0;e<this.renderQueues.length;e++)t.push(this.renderQueues[e].init());let n=new nr.RenderStageInfo(this._name,this._priority,this._tag,t);this.initialize(n)}}e("GbufferStage",kw);class Vw extends nr.LightingStage{constructor(){super(),this._name=0,this._priority=0,this._tag=0,this.renderQueues=[],this._deferredMaterial=null}init(e){const t=[];for(let e=0;e<this.renderQueues.length;e++)t.push(this.renderQueues[e].init());e.pipelineSceneData.deferredLightingMaterial=this._deferredMaterial;let n=new nr.RenderStageInfo(this._name,this._priority,this._tag,t);this.initialize(n)}}e("LightingStage",Vw);class jw extends nr.BloomStage{constructor(){super(),this._name=0,this._priority=0,this._tag=0,this.renderQueues=[],this._bloomMaterial=null}init(e){const t=[];for(let e=0;e<this.renderQueues.length;e++)t.push(this.renderQueues[e].init());e.pipelineSceneData.bloomMaterial=this._bloomMaterial;let n=new nr.RenderStageInfo(this._name,this._priority,this._tag,t);this.initialize(n)}}e("BloomStage",jw);class Ww extends nr.PostProcessStage{constructor(){super(),this._name=0,this._priority=0,this._tag=0,this.renderQueues=[],this._postProcessMaterial=null}init(e){const t=[];for(let e=0;e<this.renderQueues.length;e++)t.push(this.renderQueues[e].init());e.pipelineSceneData.postprocessMaterial=this._postProcessMaterial;let n=new nr.RenderStageInfo(this._name,this._priority,this._tag,t);this.initialize(n)}}e("PostProcessStage",Ww),ve("DeferredPipeline",Uw),ve("MainFlow",Hw),ve("GbufferStage",kw),ve("LightingStage",Vw),ve("BloomStage",jw),ve("PostProcessStage",Ww),ve("ForwardPipeline",Ow),ve("ForwardFlow",Nw),ve("ShadowFlow",Lw),ve("ForwardStage",zw),ve("ShadowStage",Fw),ve("RenderQueueDesc",Bw);const qw=new bi;class Xw{set splashFinish(e){this._splashFinish=e,this._tryToStart()}set loadFinish(e){this._loadFinish=e,this._tryToStart()}pauseRendering(){this.isPause=!0}resumeRendering(){this.isPause=!1}main(e){if(null!=e){if(window._CCSettings&&window._CCSettings.splashScreen){const e=this.settings=window._CCSettings.splashScreen;e.totalTime=null!=this.settings.totalTime?this.settings.totalTime:3e3,e.base64src=this.settings.base64src||"",e.effect=this.settings.effect||"FADE-INOUT",e.clearColor=this.settings.clearColor||new Dr(.88,.88,.88,1),e.displayRatio=null!=this.settings.displayRatio?this.settings.displayRatio:.4,e.displayWatermark=null==this.settings.displayWatermark||this.settings.displayWatermark}else this.settings={totalTime:3e3,base64src:"",effect:"FADE-INOUT",clearColor:new Dr(.88,.88,.88,1),displayRatio:.4,displayWatermark:!0};if(""===this.settings.base64src||this.settings.totalTime<=0)this.callBack&&this.callBack(),this.callBack=null,this.settings=null,this._directCall=!0;else{i.view.resizeWithBrowserSize(!0);const t=window._CCSettings.designResolution;t?i.view.setDesignResolutionSize(t.width,t.height,t.policy):i.view.setDesignResolutionSize(960,640,4),this.device=e.device,this.swapchain=e.mainWindow.swapchain,this.framebuffer=e.mainWindow.framebuffer,i.game.once(i.Game.EVENT_GAME_INITED,(()=>{i.director._lateUpdate=performance.now()}),i.director),this.callBack=null,this.cancelAnimate=!1,this.startTime=-1,this.preInit(),this.logoImage=new Image,this.logoImage.onload=this.init.bind(this),this.logoImage.src=this.settings.base64src}}else d("RENDER ROOT IS NULL.")}setOnFinish(e){if(this._directCall&&e)return Xw._ins=void 0,void e();this.callBack=e}_tryToStart(){this._splashFinish&&this._loadFinish&&this.callBack&&(this.callBack(),this.hide(),i.game.resume())}preInit(){const e=this.settings.clearColor;this.clearColors=[new Dr(e.x,e.y,e.z,e.w)];const{device:t,swapchain:n}=this;this.renderArea=new Tr(0,0,n.width,n.height),this.cmdBuff=t.commandBuffer;const i=new Float32Array([.5,.5,1,0,-.5,.5,0,0,.5,-.5,1,1,-.5,-.5,0,1]),s=4*Float32Array.BYTES_PER_ELEMENT,r=4*s;this.vertexBuffers=t.createBuffer(new Lr(Us.VERTEX|Us.TRANSFER_DST,ks.DEVICE,r,s)),this.vertexBuffers.update(i);const o=new Uint16Array([0,1,2,1,3,2]),a=Uint16Array.BYTES_PER_ELEMENT,c=6*a;this.indicesBuffers=t.createBuffer(new Lr(Us.INDEX|Us.TRANSFER_DST,ks.DEVICE,c,a)),this.indicesBuffers.update(o);const l=[new Qr("a_position",zs.RG32F),new Qr("a_texCoord",zs.RG32F)],h=new eo(l,[this.vertexBuffers],this.indicesBuffers);this.quadAssmebler=t.createInputAssembler(h),this.projection=new xi,xi.ortho(this.projection,-1,1,-1,1,-1,1,t.capabilities.clipSpaceMinZ,t.capabilities.clipSpaceSignY,n.surfaceTransform)}init(){this.initLogo(),this.settings.displayWatermark&&this.initWarterMark();const e=t=>{if(this.cancelAnimate)return;const n=this.settings,{device:i,swapchain:s}=this;xi.ortho(this.projection,-1,1,-1,1,-1,1,i.capabilities.clipSpaceMinZ,i.capabilities.clipSpaceSignY,s.surfaceTransform);const r=s.width,o=s.height,a=r<o?r:o;this.startTime<0&&(this.startTime=t);const c=t-this.startTime;let l=iu(Fn(c/n.totalTime));"NONE"===n.effect&&(l=1);const h=this.logoTexture.width,_=this.logoTexture.height,u=a*n.displayRatio;let p=u*h/_,d=u;if(s.surfaceTransform!==Ns.ROTATE_90&&s.surfaceTransform!==Ns.ROTATE_270||(p=u*r/o,d=u*_/h*o/r),this.logoMat.setProperty("resolution",qw.set(r,o),0),this.logoMat.setProperty("scale",qw.set(p,d),0),this.logoMat.setProperty("translate",qw.set(.5*r,.5*o),0),this.logoMat.setProperty("percent",l),this.logoMat.setProperty("u_projection",this.projection),this.logoMat.passes[0].update(),n.displayWatermark&&this.watermarkMat){const e=.5*a,t=this.watermarkTexture.width;let n=e,i=e*this.watermarkTexture.height/t;s.surfaceTransform!==Ns.ROTATE_90&&s.surfaceTransform!==Ns.ROTATE_270||(n=.5*e,i=e*r/o*.5),this.watermarkMat.setProperty("resolution",qw.set(r,o),0),this.watermarkMat.setProperty("scale",qw.set(n,i),0),this.watermarkMat.setProperty("translate",qw.set(.5*r,.1*o),0),this.watermarkMat.setProperty("percent",l),this.watermarkMat.setProperty("u_projection",this.projection),this.watermarkMat.passes[0].update()}this.isPause||(this.frame(),c>n.totalTime&&(this.splashFinish=!0)),requestAnimationFrame(e)};i.game.pause(),this.handle=requestAnimationFrame(e)}hide(){cancelAnimationFrame(this.handle),this.cancelAnimate=!0,setTimeout(this.destroy.bind(this))}initLogo(){const e=this.device;this.logoMat=new Ug,this.logoMat.initialize({effectName:"splash-screen"});const t=new kr;t.addressU=Ks.CLAMP,t.addressV=Ks.CLAMP,t.addressW=Ks.CLAMP,this.sampler=e.getSampler(t),this.logoTexture=e.createTexture(new Gr(Vs.TEX2D,js.SAMPLED|js.TRANSFER_DST,zs.RGBA8,this.logoImage.width,this.logoImage.height));const n=this.logoMat.passes[0],i=n.getBinding("mainTexture");n.bindTexture(i,this.logoTexture),this.shader=n.getShaderVariant();const s=n.descriptorSet;s.bindSampler(i,this.sampler),s.update();const r=new Ir;r.texExtent.width=this.logoImage.width,r.texExtent.height=this.logoImage.height,r.texExtent.depth=1,e.copyTexImagesToTexture([this.logoImage],this.logoTexture,[r])}initWarterMark(){const e=document.createElement("canvas");e.width=330,e.height=30,e.style.width=`${e.width}`,e.style.height=`${e.height}`;const t=e.getContext("2d");t.font="18px Arial",t.textBaseline="top",t.textAlign="left",t.fillStyle="`#424242`";const n="Powered by Cocos Creator",i=t.measureText(n);t.fillText(n,(330-i.width)/2,6);const s=new Ir;s.texExtent.width=e.width,s.texExtent.height=e.height,s.texExtent.depth=1,this.watermarkTexture=this.device.createTexture(new Gr(Vs.TEX2D,js.SAMPLED|js.TRANSFER_DST,zs.RGBA8,e.width,e.height)),this.device.copyTexImagesToTexture([e],this.watermarkTexture,[s]),this.watermarkMat=new Ug,this.watermarkMat.initialize({effectName:"splash-screen"});const r=this.watermarkMat.passes[0],o=r.getBinding("mainTexture");r.bindTexture(o,this.watermarkTexture),r.descriptorSet.update()}frame(){const{device:e,swapchain:t}=this;e.acquire([t]);const n=this.cmdBuff,i=this.framebuffer,s=this.renderArea;s.width=t.width,s.height=t.height,n.begin(),n.beginRenderPass(i.renderPass,i,s,this.clearColors,1,0);const r=this.logoMat.passes[0],o=Iw.getOrCreatePipelineState(e,r,this.shader,i.renderPass,this.quadAssmebler);if(n.bindPipelineState(o),n.bindDescriptorSet(Cd.MATERIAL,r.descriptorSet),n.bindInputAssembler(this.quadAssmebler),n.draw(this.quadAssmebler),this.settings.displayWatermark&&this.watermarkMat){const t=this.watermarkMat.passes[0],s=Iw.getOrCreatePipelineState(e,t,this.shader,i.renderPass,this.quadAssmebler);n.bindPipelineState(s),n.bindDescriptorSet(Cd.MATERIAL,t.descriptorSet),n.bindInputAssembler(this.quadAssmebler),n.draw(this.quadAssmebler)}n.endRenderPass(),n.end(),e.flushCommands([n]),e.queue.submit([n]),e.present()}destroy(){this.callBack=null,this.device=null,this.swapchain=null,this.clearColors=null,this.logoImage.destroy&&this.logoImage.destroy(),this.logoImage=null,this.framebuffer=null,this.renderArea=null,this.cmdBuff=null,this.shader=null,this.logoMat.destroy(),this.logoMat=null,this.logoTexture.destroy(),this.logoTexture=null,this.quadAssmebler.destroy(),this.quadAssmebler=null,this.vertexBuffers.destroy(),this.vertexBuffers=null,this.indicesBuffers.destroy(),this.indicesBuffers=null,this.sampler=null,this.watermarkTexture&&(this.watermarkMat.destroy(),this.watermarkMat=null,this.watermarkTexture.destroy(),this.watermarkTexture=null),this.settings=null,Xw._ins=void 0}static get instance(){return Xw._ins||(Xw._ins=new Xw),Xw._ins}constructor(){this.handle=0,this.callBack=null,this.cancelAnimate=!1,this.startTime=-1,this.isPause=!1,this._splashFinish=!1,this._loadFinish=!1,this._directCall=!1}}Xw._ins=void 0,i.internal.SplashScreen=Xw;class Yw{constructor(){this._id="",this._priority=0,this._executeInEditMode=!1}set priority(e){this._priority=e}get priority(){return this._priority}set id(e){this._id=e}get id(){return this._id}static sortByPriority(e,t){return e._priority<t._priority?1:e._priority>t.priority?-1:0}init(){}update(e){}postUpdate(e){}}e("System",Yw),Yw.Priority=Ne({LOW:0,MEDIUM:100,HIGH:200,SCHEDULER:1<<31>>>0});const Kw=new G("Scheduler");class $w{constructor(e,t,n,i){this.target=void 0,this.priority=void 0,this.paused=void 0,this.markedForDeletion=void 0,this.target=e,this.priority=t,this.paused=n,this.markedForDeletion=i}}$w.get=(e,t,n,i)=>{let s=$w._listEntries.pop();return s?(s.target=e,s.priority=t,s.paused=n,s.markedForDeletion=i):s=new $w(e,t,n,i),s},$w.put=e=>{$w._listEntries.length<20&&(e.target=null,$w._listEntries.push(e))},$w._listEntries=[];class Zw{constructor(e,t,n,i){this.list=void 0,this.entry=void 0,this.target=void 0,this.callback=void 0,this.list=e,this.entry=t,this.target=n,this.callback=i}}Zw.get=(e,t,n,i)=>{let s=Zw._hashUpdateEntries.pop();return s?(s.list=e,s.entry=t,s.target=n,s.callback=i):s=new Zw(e,t,n,i),s},Zw.put=e=>{Zw._hashUpdateEntries.length<20&&(e.list=e.entry=e.target=e.callback=null,Zw._hashUpdateEntries.push(e))},Zw._hashUpdateEntries=[];class Qw{constructor(e,t,n,i,s,r){this.timers=void 0,this.target=void 0,this.timerIndex=void 0,this.currentTimer=void 0,this.currentTimerSalvaged=void 0,this.paused=void 0,this.timers=e,this.target=t,this.timerIndex=n,this.currentTimer=i,this.currentTimerSalvaged=s,this.paused=r}}Qw.get=(e,t,n,i,s,r)=>{let o=Qw._hashTimerEntries.pop();return o?(o.timers=e,o.target=t,o.timerIndex=n,o.currentTimer=i,o.currentTimerSalvaged=s,o.paused=r):o=new Qw(e,t,n,i,s,r),o},Qw.put=e=>{Qw._hashTimerEntries.length<20&&(e.timers=e.target=e.currentTimer=null,Qw._hashTimerEntries.push(e))},Qw._hashTimerEntries=[];class Jw{constructor(){this._lock=void 0,this._scheduler=void 0,this._elapsed=void 0,this._runForever=void 0,this._useDelay=void 0,this._timesExecuted=void 0,this._repeat=void 0,this._delay=void 0,this._interval=void 0,this._target=void 0,this._callback=void 0,this._lock=!1,this._scheduler=null,this._elapsed=-1,this._runForever=!1,this._useDelay=!1,this._timesExecuted=0,this._repeat=0,this._delay=0,this._interval=0,this._target=null,this._callback=null}initWithCallback(e,t,n,s,r,o){return this._lock=!1,this._scheduler=e,this._target=n,this._callback=t,this._elapsed=-1,this._interval=s,this._delay=o,this._useDelay=this._delay>0,this._repeat=r,this._runForever=this._repeat===i.macro.REPEAT_FOREVER,!0}getInterval(){return this._interval}setInterval(e){this._interval=e}update(e){-1===this._elapsed?(this._elapsed=0,this._timesExecuted=0):(this._elapsed+=e,this._runForever&&!this._useDelay?this._elapsed>=this._interval&&(this.trigger(),this._elapsed=0):(this._useDelay?this._elapsed>=this._delay&&(this.trigger(),this._elapsed-=this._delay,this._timesExecuted+=1,this._useDelay=!1):this._elapsed>=this._interval&&(this.trigger(),this._elapsed=0,this._timesExecuted+=1),this._callback&&!this._runForever&&this._timesExecuted>this._repeat&&this.cancel()))}getCallback(){return this._callback}trigger(){this._target&&this._callback&&(this._lock=!0,this._callback.call(this._target,this._elapsed),this._lock=!1)}cancel(){this._scheduler.unschedule(this._callback,this._target)}}Jw._timers=[],Jw.get=()=>Jw._timers.pop()||new Jw,Jw.put=e=>{Jw._timers.length<20&&!e._lock&&(e._scheduler=e._target=e._callback=null,Jw._timers.push(e))};class eI extends Yw{static enableForTarget(e){let t=!1;(e.uuid||e.id)&&(t=!0),t||(e.__instanceId?T(1513):e.id=Kw.getNewId())}constructor(){super(),this._timeScale=void 0,this._updatesNegList=void 0,this._updates0List=void 0,this._updatesPosList=void 0,this._hashForUpdates=void 0,this._hashForTimers=void 0,this._currentTarget=void 0,this._currentTargetSalvaged=void 0,this._updateHashLocked=void 0,this._arrayForTimers=void 0,this._timeScale=1,this._updatesNegList=[],this._updates0List=[],this._updatesPosList=[],this._hashForUpdates=Z(!0),this._hashForTimers=Z(!0),this._currentTarget=null,this._currentTargetSalvaged=!1,this._updateHashLocked=!1,this._arrayForTimers=[]}setTimeScale(e){this._timeScale=e}getTimeScale(){return this._timeScale}update(e){let t,n,i,s,r;for(this._updateHashLocked=!0,1!==this._timeScale&&(e*=this._timeScale),t=0,n=this._updatesNegList,i=n.length;t<i;t++)s=n[t],s.paused||s.markedForDeletion||s.target.update(e);for(t=0,n=this._updates0List,i=n.length;t<i;t++)s=n[t],s.paused||s.markedForDeletion||s.target.update(e);for(t=0,n=this._updatesPosList,i=n.length;t<i;t++)s=n[t],s.paused||s.markedForDeletion||s.target.update(e);const o=this._arrayForTimers;for(t=0;t<o.length;t++){if(r=o[t],this._currentTarget=r,this._currentTargetSalvaged=!1,!r.paused)for(r.timerIndex=0;r.timerIndex<r.timers.length;++r.timerIndex)r.currentTimer=r.timers[r.timerIndex],r.currentTimerSalvaged=!1,r.currentTimer.update(e),r.currentTimer=null;this._currentTargetSalvaged&&0===this._currentTarget.timers.length&&(this._removeHashElement(this._currentTarget),--t)}for(t=0,n=this._updatesNegList;t<n.length;)s=n[t],s.markedForDeletion?this._removeUpdateFromHash(s):t++;for(t=0,n=this._updates0List;t<n.length;)s=n[t],s.markedForDeletion?this._removeUpdateFromHash(s):t++;for(t=0,n=this._updatesPosList;t<n.length;)s=n[t],s.markedForDeletion?this._removeUpdateFromHash(s):t++;this._updateHashLocked=!1,this._currentTarget=null}schedule(e,t,n,s,r,o){if("function"!=typeof e){const n=e;e=t,t=n}3!==arguments.length&&4!==arguments.length&&5!==arguments.length||(o=!!s,s=i.macro.REPEAT_FOREVER,r=0),P(t,1502);const a=t.uuid||t.id;if(!a)return void E(1510);let c,l,h=this._hashForTimers[a];if(h?h.paused!==o&&T(1511):(h=Qw.get(null,t,0,null,null,o),this._arrayForTimers.push(h),this._hashForTimers[a]=h),null==h.timers)h.timers=[];else for(l=0;l<h.timers.length;++l)if(c=h.timers[l],c&&e===c._callback)return S(1507,c.getInterval(),n),void(c._interval=n);c=Jw.get(),c.initWithCallback(this,e,t,n,s,r),h.timers.push(c),this._currentTarget===h&&this._currentTargetSalvaged&&(this._currentTargetSalvaged=!1)}scheduleUpdate(e,t,n){const i=e.uuid||e.id;if(!i)return void E(1510);const s=this._hashForUpdates[i];if(s&&s.entry){if(s.entry.priority===t)return s.entry.markedForDeletion=!1,void(s.entry.paused=n);if(this._updateHashLocked)return S(1506),s.entry.markedForDeletion=!1,void(s.entry.paused=n);this.unscheduleUpdate(e)}const r=$w.get(e,t,n,!1);let o;0===t?(o=this._updates0List,this._appendIn(o,r)):(o=t<0?this._updatesNegList:this._updatesPosList,this._priorityIn(o,r,t)),this._hashForUpdates[i]=Zw.get(o,r,e,null)}unschedule(e,t){if(!t||!e)return;const n=t.uuid||t.id;if(!n)return void E(1510);const i=this._hashForTimers[n];if(i){const t=i.timers;for(let n=0,s=t.length;n<s;n++){const s=t[n];if(e===s._callback)return s!==i.currentTimer||i.currentTimerSalvaged||(i.currentTimerSalvaged=!0),t.splice(n,1),Jw.put(s),i.timerIndex>=n&&i.timerIndex--,void(0===t.length&&(this._currentTarget===i?this._currentTargetSalvaged=!0:this._removeHashElement(i)))}}}unscheduleUpdate(e){if(!e)return;const t=e.uuid||e.id;if(!t)return void E(1510);const n=this._hashForUpdates[t];n&&(this._updateHashLocked?n.entry.markedForDeletion=!0:this._removeUpdateFromHash(n.entry))}unscheduleAllForTarget(e){if(!e)return;const t=e.uuid||e.id;if(!t)return void E(1510);const n=this._hashForTimers[t];if(n){const e=n.timers;e.indexOf(n.currentTimer)>-1&&!n.currentTimerSalvaged&&(n.currentTimerSalvaged=!0);for(let t=0,n=e.length;t<n;t++)Jw.put(e[t]);e.length=0,this._currentTarget===n?this._currentTargetSalvaged=!0:this._removeHashElement(n)}this.unscheduleUpdate(e)}unscheduleAll(){this.unscheduleAllWithMinPriority(Yw.Priority.SCHEDULER)}unscheduleAllWithMinPriority(e){let t,n;const i=this._arrayForTimers;for(t=i.length-1;t>=0;t--)n=i[t],this.unscheduleAllForTarget(n.target);let s,r=0;if(e<0)for(t=0;t<this._updatesNegList.length;)r=this._updatesNegList.length,s=this._updatesNegList[t],s&&s.priority>=e&&this.unscheduleUpdate(s.target),r===this._updatesNegList.length&&t++;if(e<=0)for(t=0;t<this._updates0List.length;)r=this._updates0List.length,s=this._updates0List[t],s&&this.unscheduleUpdate(s.target),r===this._updates0List.length&&t++;for(t=0;t<this._updatesPosList.length;)r=this._updatesPosList.length,s=this._updatesPosList[t],s&&s.priority>=e&&this.unscheduleUpdate(s.target),r===this._updatesPosList.length&&t++}isScheduled(e,t){P(e,1508),P(t,1509);const n=t.uuid||t.id;if(!n)return E(1510),!1;const i=this._hashForTimers[n];if(!i)return!1;if(null==i.timers)return!1;{const t=i.timers;for(let n=0;n<t.length;++n)if(e===t[n]._callback)return!0;return!1}}pauseAllTargets(){return this.pauseAllTargetsWithMinPriority(Yw.Priority.SCHEDULER)}pauseAllTargetsWithMinPriority(e){const t=[];let n;const i=this._arrayForTimers;let s,r,o;for(s=0,r=i.length;s<r;s++)n=i[s],n&&(n.paused=!0,t.push(n.target));if(e<0)for(s=0;s<this._updatesNegList.length;s++)o=this._updatesNegList[s],o&&o.priority>=e&&(o.paused=!0,t.push(o.target));if(e<=0)for(s=0;s<this._updates0List.length;s++)o=this._updates0List[s],o&&(o.paused=!0,t.push(o.target));for(s=0;s<this._updatesPosList.length;s++)o=this._updatesPosList[s],o&&o.priority>=e&&(o.paused=!0,t.push(o.target));return t}resumeTargets(e){if(e)for(let t=0;t<e.length;t++)this.resumeTarget(e[t])}pauseTarget(e){P(e,1503);const t=e.uuid||e.id;if(!t)return void E(1510);const n=this._hashForTimers[t];n&&(n.paused=!0);const i=this._hashForUpdates[t];i&&(i.entry.paused=!0)}resumeTarget(e){P(e,1504);const t=e.uuid||e.id;if(!t)return void E(1510);const n=this._hashForTimers[t];n&&(n.paused=!1);const i=this._hashForUpdates[t];i&&(i.entry.paused=!1)}isTargetPaused(e){P(e,1505);const t=e.uuid||e.id;if(!t)return E(1510),!1;const n=this._hashForTimers[t];if(n)return n.paused;const i=this._hashForUpdates[t];return!!i&&i.entry.paused}_removeHashElement(e){const t=e.target.uuid||e.target.id;delete this._hashForTimers[t];const n=this._arrayForTimers;for(let t=0,i=n.length;t<i;t++)if(n[t]===e){n.splice(t,1);break}Qw.put(e)}_removeUpdateFromHash(e){const t=e.target.uuid||e.target.id,n=this._hashForUpdates[t];if(n){const e=n.list,i=n.entry;for(let t=0,n=e.length;t<n;t++)if(e[t]===i){e.splice(t,1);break}delete this._hashForUpdates[t],$w.put(i),Zw.put(n)}}_priorityIn(e,t,n){for(let i=0;i<e.length;i++)if(n<e[i].priority)return void e.splice(i,0,t);e.push(t)}_appendIn(e,t){e.push(t)}}e("Scheduler",eI),eI.ID="scheduler",i.Scheduler=eI;const tI={[Kh.PORTRAIT]:Ns.IDENTITY,[Kh.LANDSCAPE_RIGHT]:Ns.ROTATE_90,[Kh.PORTRAIT_UPSIDE_DOWN]:Ns.ROTATE_180,[Kh.LANDSCAPE_LEFT]:Ns.ROTATE_270};class nI{get width(){return this._width}get height(){return this._height}get swapchain(){return this._swapchain}get framebuffer(){return this._framebuffer}get cameras(){return this._cameras}static registerCreateFunc(e){e._createWindowFun=e=>new nI(e)}get native(){return this._nativeObj}constructor(e){this._title="",this._width=1,this._height=1,this._swapchain=null,this._renderPass=null,this._colorTextures=[],this._depthStencilTexture=null,this._cameras=[],this._hasOnScreenAttachments=!1,this._hasOffScreenAttachments=!1,this._framebuffer=null}initialize(e,t){if(this._init(),void 0!==t.title&&(this._title=t.title),void 0!==t.swapchain&&(this._swapchain=t.swapchain),this._width=t.width,this._height=t.height,this._renderPass=e.createRenderPass(t.renderPassInfo),t.swapchain)this._setSwapchain(t.swapchain),this._colorTextures.push(t.swapchain.colorTexture),this._depthStencilTexture=t.swapchain.depthStencilTexture;else{for(let n=0;n<t.renderPassInfo.colorAttachments.length;n++)this._colorTextures.push(e.createTexture(new Gr(Vs.TEX2D,js.COLOR_ATTACHMENT|js.SAMPLED|js.TRANSFER_SRC,t.renderPassInfo.colorAttachments[n].format,this._width,this._height)));t.renderPassInfo.depthStencilAttachment.format!==zs.UNKNOWN&&(this._depthStencilTexture=e.createTexture(new Gr(Vs.TEX2D,js.DEPTH_STENCIL_ATTACHMENT|js.SAMPLED,t.renderPassInfo.depthStencilAttachment.format,this._width,this._height)))}return this._setFrameBuffer(e.createFramebuffer(new co(this._renderPass,this._colorTextures,this._depthStencilTexture))),!0}destroy(){this.clearCameras(),this._framebuffer&&(this._framebuffer.destroy(),this._framebuffer=null),this._depthStencilTexture&&(this._depthStencilTexture.destroy(),this._depthStencilTexture=null);for(let e=0;e<this._colorTextures.length;e++){const t=this._colorTextures[e];t&&t.destroy()}this._colorTextures.length=0,this._destroy()}resize(e,t){if(this._swapchain)this._swapchain.resize(e,t,tI[Qh.orientation]),this._width=this._swapchain.width,this._height=this._swapchain.height;else{for(let n=0;n<this._colorTextures.length;n++)this._colorTextures[n].resize(e,t);this._depthStencilTexture&&this._depthStencilTexture.resize(e,t),this._width=e,this._height=t}this.framebuffer&&(this.framebuffer.destroy(),this.framebuffer.initialize(new co(this._renderPass,this._colorTextures,this._depthStencilTexture)));for(const n of this._cameras)n.resize(e,t)}extractRenderCameras(e){for(let t=0;t<this._cameras.length;t++){const n=this._cameras[t];n.enabled&&(n.update(),e.push(n))}}attachCamera(e){for(let t=0;t<this._cameras.length;t++)if(this._cameras[t]===e)return;this._cameras.push(e),this.sortCameras()}detachCamera(e){for(let t=0;t<this._cameras.length;++t)if(this._cameras[t]===e)return void this._cameras.splice(t,1)}clearCameras(){this._cameras.length=0}sortCameras(){this._cameras.sort(((e,t)=>e.priority-t.priority))}_init(){this._nativeObj=new Zi}_destroy(){this._nativeObj=null}_setSwapchain(e){this._swapchain=e,this._nativeObj.swapchain=e}_setFrameBuffer(e){this._framebuffer=e,this._nativeObj.frameBuffer=e}}class iI{_init(){this._naitveObj=new is}_destroy(){this._naitveObj=null}_setCumulativeTime(e){this._cumulativeTime+=e,this._naitveObj.cumulativeTime=this._cumulativeTime}_setFrameTime(e){this._frameTime=e,this._naitveObj.frameTime=e}get device(){return this._device}get mainWindow(){return this._mainWindow}set curWindow(e){this._curWindow=e}get curWindow(){return this._curWindow}set tempWindow(e){this._tempWindow=e}get tempWindow(){return this._tempWindow}get windows(){return this._windows}get pipeline(){return this._pipeline}get batcher2D(){return this._batcher}get scenes(){return this._scenes}get cumulativeTime(){return this._cumulativeTime}get frameTime(){return this._frameTime}get frameCount(){return this._frameCount}get fps(){return this._fps}set fixedFPS(e){e>0?(this._fixedFPS=e,this._fixedFPSFrameTime=1e3/e):this._fixedFPSFrameTime=0}get fixedFPS(){return this._fixedFPS}get dataPoolManager(){return this._dataPoolMgr}get useDeferredPipeline(){return this._useDeferredPipeline}constructor(e){this._createSceneFun=null,this._createWindowFun=null,this._device=void 0,this._windows=[],this._mainWindow=null,this._curWindow=null,this._tempWindow=null,this._pipeline=null,this._batcher=null,this._dataPoolMgr=void 0,this._scenes=[],this._modelPools=new Map,this._cameraPool=null,this._lightPools=new Map,this._fpsTime=0,this._frameCount=0,this._fps=0,this._fixedFPS=0,this._useDeferredPipeline=!1,this._fixedFPSFrameTime=0,this._cumulativeTime=0,this._frameTime=0,this._device=e,this._dataPoolMgr=i.internal.DataPoolManager&&new i.internal.DataPoolManager(e),vg.registerCreateFunc(this),nI.registerCreateFunc(this),this._cameraPool=new Ie((()=>new Nf(this._device)),4,(e=>e.destroy()))}initialize(e){this._init();const t=i.game._swapchain,n=new to;n.format=t.colorTexture.format;const s=new no;s.format=t.depthStencilTexture.format,s.depthStoreOp=sr.DISCARD,s.stencilStoreOp=sr.DISCARD;const r=new ro([n],s);return this._mainWindow=this.createWindow({title:"rootMainWindow",width:t.width,height:t.height,renderPassInfo:r,swapchain:t}),this._curWindow=this._mainWindow,Promise.resolve(Jm.initBuiltinRes(this._device))}destroy(){this.destroyScenes(),this._pipeline&&(this._pipeline.destroy(),this._pipeline=null),this._batcher&&(this._batcher.destroy(),this._batcher=null),this._curWindow=null,this._mainWindow=null,this.dataPoolManager.clear(),this._destroy()}resize(e,t){for(const n of this._windows)n.swapchain&&n.resize(e,t)}setRenderPipeline(e){e instanceof Uw&&(this._useDeferredPipeline=!0);let t=!1;if(e||(e=Dw(),t=!0),this._pipeline=e,this._useDeferredPipeline&&this.device.hasFeature(Ls.COMPUTE_SHADER)||(this._pipeline.clusterEnabled=!1),this._pipeline.bloomEnabled=!1,!this._pipeline.activate(this._mainWindow.swapchain))return t&&this._pipeline.destroy(),this._pipeline=null,!1;const n=i.director.getScene();return n&&n.globals.activate(),this.onGlobalPipelineStateChanged(),!(!this._batcher&&i.internal.Batcher2D&&(this._batcher=new i.internal.Batcher2D(this),!this._batcher.initialize())&&(this.destroy(),1))}onGlobalPipelineStateChanged(){for(let e=0;e<this._scenes.length;e++)this._scenes[e].onGlobalPipelineStateChanged();this._pipeline.pipelineSceneData.onGlobalPipelineStateChanged()}activeWindow(e){this._curWindow=e}resetCumulativeTime(){this._setCumulativeTime(0)}frameMove(e){this._setFrameTime(e),++this._frameCount,this._setCumulativeTime(e),this._fpsTime+=e,this._fpsTime>1&&(this._fps=this._frameCount,this._frameCount=0,this._fpsTime=0);for(let e=0;e<this._scenes.length;++e)this._scenes[e].removeBatches();const t=this._windows,n=[];for(let e=0;e<t.length;e++)t[e].extractRenderCameras(n);if(this._pipeline&&n.length>0){this._device.acquire([i.game._swapchain]);const e=this._scenes,t=i.director.getTotalFrames();this._batcher&&(this._batcher.update(),this._batcher.uploadBuffers());for(let n=0;n<e.length;n++)e[n].update(t);i.director.emit(i.Director.EVENT_BEFORE_COMMIT),n.sort(((e,t)=>e.priority-t.priority)),this._pipeline.render(n),this._device.present()}this._batcher&&this._batcher.reset()}createWindow(e){const t=this._createWindowFun(this);return t.initialize(this.device,e),this._windows.push(t),t}destroyWindow(e){for(let t=0;t<this._windows.length;++t)if(this._windows[t]===e)return e.destroy(),void this._windows.splice(t,1)}destroyWindows(){for(const e of this._windows)e.destroy();this._windows.length=0}createScene(e){const t=this._createSceneFun(this);return t.initialize(e),this._scenes.push(t),t}destroyScene(e){for(let t=0;t<this._scenes.length;++t)if(this._scenes[t]===e)return e.destroy(),void this._scenes.splice(t,1)}destroyScenes(){for(const e of this._scenes)e.destroy();this._scenes.length=0}createModel(e){let t=this._modelPools.get(e);t||(this._modelPools.set(e,new Ie((()=>new e),10,(e=>e.destroy()))),t=this._modelPools.get(e));const n=t.alloc();return n.initialize(),n}destroyModel(e){const t=this._modelPools.get(e.constructor);t?(t.free(e),e.scene&&e.scene.removeModel(e)):T(1300,e.constructor.name),e.destroy()}createCamera(){return this._cameraPool.alloc()}createLight(e){let t=this._lightPools.get(e);t||(this._lightPools.set(e,new Ie((()=>new e),4,(e=>e.destroy()))),t=this._lightPools.get(e));const n=t.alloc();return n.initialize(),n}destroyLight(e){const t=this._lightPools.get(e.constructor);if(t&&(t.free(e),e.scene))switch(e.type){case Yg.SPHERE:e.scene.removeSphereLight(e);break;case Yg.SPOT:e.scene.removeSpotLight(e)}e.destroy()}}i.Root=iI;class sI extends kt{constructor(...e){super(...e),this.frame=null,this.container=null,this.canvas=null,this.renderType=-1,this.eventTargetOn=super.on,this.eventTargetOnce=super.once,this.config={},this.onStart=null,this.frameTime=1e3/60,this.collisionMatrix=[],this.groupList=[],this._persistRootNodes={},this._gfxDevice=null,this._swapchain=null,this._configLoaded=!1,this._isCloning=!1,this._inited=!1,this._engineInited=!1,this._rendererInitialized=!1,this._paused=!0,this._frameRate=60,this._intervalId=0,this._initTime=0,this._startTime=0,this._deltaTime=0,this._onEngineInitedCallback=[]}get inited(){return this._inited}get frameRate(){return this._frameRate}set frameRate(e){"number"!=typeof e&&(e=parseInt(e,10),Number.isNaN(e)&&(e=60)),this._frameRate=e,this.frameTime=1e3/e,this._setAnimFrame()}get deltaTime(){return this._deltaTime}get totalTime(){return performance.now()-this._initTime}get frameStartTime(){return this._startTime}setFrameRate(e){this.frameRate=e}getFrameRate(){return this.frameRate}step(){i.director.tick(this.frameTime/1e3)}pause(){this._paused||(this._paused=!0,this._intervalId&&(window.cAF(this._intervalId),this._intervalId=0))}resume(){this._paused&&(IP._clearEvents(),this._intervalId&&(window.cAF(this._intervalId),this._intervalId=0),this._paused=!1,this._updateCallback(),this._intervalId=window.rAF(this._frameCB))}isPaused(){return this._paused}restart(){return new Promise((e=>i.director.once(i.Director.EVENT_END_FRAME,(()=>e())))).then((()=>{for(const e in this._persistRootNodes)this.removePersistRootNode(this._persistRootNodes[e]);return i.director.getScene().destroy(),i.Object._deferredDestroy(),i.director.reset(),i.profiler.reset(),this.pause(),this._setRenderPipelineNShowSplash().then((()=>{this.resume(),this._safeEmit(sI.EVENT_RESTART)}))}))}end(){Zt.close()}on(e,t,n,i){return(this._engineInited&&e===sI.EVENT_ENGINE_INITED||this._inited&&e===sI.EVENT_GAME_INITED||this._rendererInitialized&&e===sI.EVENT_RENDERER_INITED)&&t.call(n),this.eventTargetOn(e,t,n,i)}once(e,t,n){return this._engineInited&&e===sI.EVENT_ENGINE_INITED?t.call(n):this.eventTargetOnce(e,t,n)}init(e){if(this._initConfig(e),this.config.assetOptions&&i.assetManager.init(this.config.assetOptions),this.config.layers){const e=this.config.layers;for(let t=0;t<e.length;t++){const n=e[t],i=gn(n.value);_d.addLayer(n.name,i)}}return this._initEngine().then((()=>(this._initEvents(),i.director.root&&i.director.root.dataPoolManager&&i.director.root.dataPoolManager.jointTexturePool.registerCustomTextureLayouts(e.customJointTextureLayouts),this._engineInited)))}run(e,t){let n;return"function"!=typeof e&&e?(n=this.init(e),this.onStart=null!=t?t:null):this.onStart=null!=e?e:null,gh.init(),Promise.resolve(n).then((()=>this._setRenderPipelineNShowSplash())).then((()=>{Jh._init({configOrientation:"auto",exactFitScreen:!0})}))}addPersistRootNode(e){if(!i.Node.isNode(e)||!e.uuid)return void T(3800);const t=e.uuid;if(!this._persistRootNodes[t]){const n=i.director._scene;if(i.isValid(n))if(e.parent){if(!(e.parent instanceof i.Scene))return void T(3801);if(e.parent!==n)return void T(3802);e._originalSceneId=n.uuid}else e.parent=n;this._persistRootNodes[t]=e,e._persistNode=!0,i.assetManager._releaseManager._addPersistNodeRef(e)}}removePersistRootNode(e){const t=e.uuid||"";e===this._persistRootNodes[t]&&(delete this._persistRootNodes[t],e._persistNode=!1,e._originalSceneId="",i.assetManager._releaseManager._removePersistNodeRef(e))}isPersistRootNode(e){return!!e._persistNode}onEngineInitedAsync(e){this._onEngineInitedCallback.push(e)}_initEngine(){this._initDevice();const e=i.director;return Promise.resolve(e._init()).then((()=>{i.view.init(),u(`Cocos Creator v${s}`),this.emit(sI.EVENT_ENGINE_INITED),this._engineInited=!0,i.internal.dynamicAtlasManager&&(i.internal.dynamicAtlasManager.enabled=!Ue.CLEANUP_IMAGE_CACHE)})).then((()=>{const e=this._onEngineInitedCallback.map((e=>e())).filter(Boolean);return this._onEngineInitedCallback.length=0,Promise.all(e)}))}_setAnimFrame(){const e=this._frameRate;jsb.setPreferredFramesPerSecond(e),window.rAF=window.requestAnimationFrame,window.cAF=window.cancelAnimationFrame}_stTime(e){const t=performance.now(),n=Math.max(0,t-this._startTime),i=Math.max(0,this.frameTime-n);return window.setTimeout(e,i)}_ctTime(e){window.clearTimeout(e)}_calculateDT(e){return e||(e=performance.now()),this._deltaTime=e>this._startTime?(e-this._startTime)/1e3:0,this._deltaTime>sI.DEBUG_DT_THRESHOLD&&(this._deltaTime=this.frameTime/1e3),this._startTime=e,this._deltaTime}_updateCallback(){const e=i.director;let t;t=t=>{e.tick(this._calculateDT(t)),this._intervalId=window.rAF(this._frameCB)},this._frameCB=t}_runMainLoop(){if(!this._inited)return;const e=this.config,t=i.director;D(!!e.showFPS),t.startAnimation(),this.resume()}_initConfig(e){"number"!=typeof e.debugMode&&(e.debugMode=w.NONE),e.exposeClassName=!!e.exposeClassName,"number"!=typeof e.frameRate&&(e.frameRate=60);const t=e.renderMode;("number"!=typeof t||t>3||t<0)&&(e.renderMode=0),e.showFPS=!!e.showFPS,g(e.debugMode),this.config=e,this._configLoaded=!0,this.frameRate=e.frameRate}_determineRenderType(){const e=this.config,t=parseInt(e.renderMode,10);this.renderType=sI.RENDER_TYPE_CANVAS;let n=!1;if(1===t?(this.renderType=sI.RENDER_TYPE_CANVAS,n=!0):0===t||2===t?(this.renderType=sI.RENDER_TYPE_WEBGL,n=!0):3===t&&(this.renderType=sI.RENDER_TYPE_HEADLESS,n=!0),!n)throw new Error(I(3820,t))}_initDevice(){if(this._rendererInitialized)return;const e=this.config.adapter;if(e&&(this.canvas=e.canvas,this.frame=e.frame,this.container=e.container),this._determineRenderType(),this.renderType===sI.RENDER_TYPE_WEBGL){const e=new Nr(Td);if(window.gfx)this._gfxDevice=gfx.DeviceManager.create(e);else{let t=!!window.WebGL2RenderingContext;const n=window.navigator.userAgent.toLowerCase();(-1!==n.indexOf("safari")&&-1===n.indexOf("chrome")||e_.browserType===Vt.UC)&&(t=!1);const s=[];t&&i.WebGL2Device&&s.push(i.WebGL2Device),i.WebGLDevice&&s.push(i.WebGLDevice),i.EmptyDevice&&s.push(i.EmptyDevice),jo.canvas=this.canvas;for(let t=0;t<s.length&&(this._gfxDevice=new s[t],!this._gfxDevice.initialize(e));t++);}}else this.renderType===sI.RENDER_TYPE_HEADLESS&&i.EmptyDevice&&(this._gfxDevice=new i.EmptyDevice,this._gfxDevice.initialize(new Nr(Td)));if(!this._gfxDevice)return d("can not support canvas rendering in 3D"),void(this.renderType=sI.RENDER_TYPE_CANVAS);const t=new Mr(this.canvas),n=Jh.windowSize;t.width=n.width,t.height=n.height,this._swapchain=this._gfxDevice.createSwapchain(t),this.canvas.oncontextmenu=()=>!1}_initEvents(){Zt.on("show",this._onShow,this),Zt.on("hide",this._onHide,this)}_onHide(){this.emit(sI.EVENT_HIDE),this.pause()}_onShow(){this.emit(sI.EVENT_SHOW),this.resume()}_setRenderPipelineNShowSplash(){return Promise.resolve(this._setupRenderPipeline()).then((()=>Promise.resolve(this._showSplashScreen()).then((()=>{this._inited=!0,this._initTime=performance.now(),this._runMainLoop(),this._safeEmit(sI.EVENT_GAME_INITED),this.onStart&&this.onStart()}))))}_setupRenderPipeline(){const{renderPipeline:e}=this.config;return e?new Promise(((t,n)=>{i.assetManager.loadAny(e,((e,i)=>!e&&i instanceof ww?t(i):n(e)))})).then((e=>{this._setRenderPipeline(e)})).catch((t=>{p(t),p(`Failed load render pipeline: ${e}, engine failed to initialize, will fallback to default pipeline`),this._setRenderPipeline()})):this._setRenderPipeline()}_showSplashScreen(){if(i.internal.SplashScreen){const e=i.internal.SplashScreen.instance;return e.main(i.director.root),new Promise((t=>{e.setOnFinish((()=>t())),e.loadFinish=!0}))}return null}_setRenderPipeline(e){i.director.root.setRenderPipeline(e)||this._setRenderPipeline(),this._rendererInitialized=!0,this._safeEmit(sI.EVENT_RENDERER_INITED)}_safeEmit(e){this.emit(e)}}e("Game",sI),sI.EVENT_HIDE="game_on_hide",sI.EVENT_SHOW="game_on_show",sI.EVENT_LOW_MEMORY="game_on_low_memory",sI.EVENT_GAME_INITED="game_inited",sI.EVENT_ENGINE_INITED="engine_inited",sI.EVENT_RENDERER_INITED="renderer_inited",sI.EVENT_RESTART="game_on_restart",sI.RENDER_TYPE_CANVAS=0,sI.RENDER_TYPE_WEBGL=1,sI.RENDER_TYPE_OPENGL=2,sI.RENDER_TYPE_HEADLESS=3,sI.DEBUG_DT_THRESHOLD=1,i.Game=sI;const rI=e("game",i.game=new sI);class oI extends kt{constructor(){super(),this._compScheduler=void 0,this._nodeActivator=void 0,this._invalid=void 0,this._paused=void 0,this._root=void 0,this._loadingScene=void 0,this._scene=void 0,this._totalFrames=void 0,this._scheduler=void 0,this._systems=void 0,this._invalid=!1,this._paused=!1,this._root=null,this._loadingScene="",this._scene=null,this._totalFrames=0,this._scheduler=new eI,this._compScheduler=new nw,this._nodeActivator=new uw,this._systems=[],rI.once(sI.EVENT_RENDERER_INITED,this._initOnRendererInitialized,this)}calculateDeltaTime(e){}end(){this.once(oI.EVENT_END_FRAME,(()=>{this.purgeDirector()}))}pause(){this._paused||(this._paused=!0)}purgeDirector(){this._scheduler.unscheduleAll(),this._compScheduler.unscheduleAll(),this._nodeActivator.reset(),i.isValid(this._scene)&&this._scene.destroy(),this._scene=null,this.stopAnimation(),i.assetManager.releaseAll()}reset(){this.purgeDirector(),this.emit(oI.EVENT_RESET),this.startAnimation()}runSceneImmediate(e,t,n){e instanceof mw&&(e=e.scene),P(e instanceof GP,1216),e._load();const s=Object.keys(rI._persistRootNodes).map((e=>rI._persistRootNodes[e]));for(let t=0;t<s.length;t++){const n=s[t];n.emit(i.Node.SCENE_CHANGED_FOR_PERSISTS,e.renderScene);const r=e.uuid===n._originalSceneId&&e.getChildByUuid(n.uuid);if(r){const t=r.getSiblingIndex();r._destroyImmediate(),e.insertChild(n,t)}else n.parent=e}const r=this._scene;i.isValid(r)&&r.destroy(),i.assetManager._releaseManager._autoRelease(r,e,rI._persistRootNodes),this._scene=null,Dt._deferredDestroy(),t&&t(),this.emit(i.Director.EVENT_BEFORE_SCENE_LAUNCH,e),this._scene=e,e._activate(),this._root&&this._root.resetCumulativeTime(),this.startAnimation(),n&&n(null,e),this.emit(i.Director.EVENT_AFTER_SCENE_LAUNCH,e)}runScene(e,t,n){e instanceof mw&&(e=e.scene),P(e,1205),P(e instanceof GP,1216),e._load(),this.once(i.Director.EVENT_END_FRAME,(()=>{this.runSceneImmediate(e,t,n)}))}loadScene(e,t,n){if(this._loadingScene)return T(1208,e,this._loadingScene),!1;const s=i.assetManager.bundles.find((t=>!!t.getSceneInfo(e)));return s?(this.emit(i.Director.EVENT_BEFORE_SCENE_LOADING,e),this._loadingScene=e,console.time(`LoadScene ${e}`),s.loadScene(e,((i,s)=>{console.timeEnd(`LoadScene ${e}`),this._loadingScene="",i?(d(i),t&&t(i)):this.runSceneImmediate(s,n,t)})),!0):(E(1209,e),!1)}preloadScene(e,t,n){const s=i.assetManager.bundles.find((t=>!!t.getSceneInfo(e)));if(s)s.preloadScene(e,null,t,n);else{const t=`Can not preload the scene "${e}" because it is not in the build settings.`;n&&n(new Error(t)),d(`preloadScene: ${t}`)}}resume(){this._paused&&(this._paused=!1)}get root(){return this._root}getScene(){return this._scene}getDeltaTime(){return rI.deltaTime}getTotalTime(){return rI.totalTime}getCurrentTime(){return rI.frameStartTime}getTotalFrames(){return this._totalFrames}isPaused(){return this._paused}getScheduler(){return this._scheduler}setScheduler(e){this._scheduler!==e&&(this.unregisterSystem(this._scheduler),this._scheduler=e,this.registerSystem(eI.ID,e,200))}registerSystem(e,t,n){t.id=e,t.priority=n,t.init(),this._systems.push(t),this._systems.sort(Yw.sortByPriority)}unregisterSystem(e){Ee.fastRemove(this._systems,e),this._systems.sort(Yw.sortByPriority)}getSystem(e){return this._systems.find((t=>t.id===e))}getAnimationManager(){return this.getSystem(i.AnimationManager.ID)}startAnimation(){this._invalid=!1}stopAnimation(){this._invalid=!0}mainLoop(e){let t;t=rI._calculateDT(e),this.tick(t)}tick(e){if(!this._invalid){if(this.emit(oI.EVENT_BEGIN_FRAME),IP._frameDispatchEvents(),!this._paused){this.emit(oI.EVENT_BEFORE_UPDATE),this._compScheduler.startPhase(),this._compScheduler.updatePhase(e);for(let t=0;t<this._systems.length;++t)this._systems[t].update(e);this._compScheduler.lateUpdatePhase(e),this.emit(oI.EVENT_AFTER_UPDATE),Dt._deferredDestroy();for(let t=0;t<this._systems.length;++t)this._systems[t].postUpdate(e)}this.emit(oI.EVENT_BEFORE_DRAW),this._root.frameMove(e),this.emit(oI.EVENT_AFTER_DRAW),Yx.resetHasChangedFlags(),Yx.clearNodeArray(),Pe.update(e),this.emit(oI.EVENT_END_FRAME),this._totalFrames++}}_initOnRendererInitialized(){this._totalFrames=0,this._paused=!1,this.registerSystem(eI.ID,this._scheduler,200),this.emit(oI.EVENT_INIT)}_init(){return this._root=new iI(rI._gfxDevice),this._root.initialize({}).catch((e=>(E(1217),Promise.reject(e))))}}e("Director",oI),oI.EVENT_INIT="director_init",oI.EVENT_RESET="director_reset",oI.EVENT_BEFORE_SCENE_LOADING="director_before_scene_loading",oI.EVENT_BEFORE_SCENE_LAUNCH="director_before_scene_launch",oI.EVENT_AFTER_SCENE_LAUNCH="director_after_scene_launch",oI.EVENT_BEFORE_UPDATE="director_before_update",oI.EVENT_AFTER_UPDATE="director_after_update",oI.EVENT_BEFORE_DRAW="director_before_draw",oI.EVENT_AFTER_DRAW="director_after_draw",oI.EVENT_BEFORE_COMMIT="director_before_commit",oI.EVENT_BEFORE_PHYSICS="director_before_physics",oI.EVENT_AFTER_PHYSICS="director_after_physics",oI.EVENT_BEGIN_FRAME="director_begin_frame",oI.EVENT_END_FRAME="director_end_frame",oI.instance=void 0,i.Director=oI;const aI=e("director",oI.instance=i.director=new oI),cI={};Cn(cI,"vmath",[{name:"vec2",newName:"Vec2",target:Li,targetName:"math"},{name:"vec3",newName:"Vec3",target:Li,targetName:"math"},{name:"vec4",newName:"Vec4",target:Li,targetName:"math"},{name:"quat",newName:"Quat",target:Li,targetName:"math"},{name:"mat3",newName:"Mat3",target:Li,targetName:"math"},{name:"mat4",newName:"Mat4",target:Li,targetName:"math"},{name:"color4",newName:"Color",target:Li,targetName:"math"},{name:"rect",newName:"Rect",target:Li,targetName:"math"},{name:"approx",newName:"approx",target:Li,targetName:"math"},{name:"EPSILON",newName:"EPSILON",target:Li,targetName:"math"},{name:"equals",newName:"equals",target:Li,targetName:"math"},{name:"clamp",newName:"clamp",target:Li,targetName:"math"},{name:"clamp01",newName:"clamp01",target:Li,targetName:"math"},{name:"lerp",newName:"lerp",target:Li,targetName:"math"},{name:"toRadian",newName:"toRadian",target:Li,targetName:"math"},{name:"toDegree",newName:"toDegree",target:Li,targetName:"math"},{name:"random",newName:"random",target:Li,targetName:"math"},{name:"randomRange",newName:"randomRange",target:Li,targetName:"math"},{name:"randomRangeInt",newName:"randomRangeInt",target:Li,targetName:"math"},{name:"pseudoRandom",newName:"pseudoRandom",target:Li,targetName:"math"},{name:"pseudoRandomRangeInt",newName:"pseudoRandomRangeInt",target:Li,targetName:"math"},{name:"nextPow2",newName:"nextPow2",target:Li,targetName:"math"},{name:"repeat",newName:"repeat",target:Li,targetName:"math"},{name:"pingPong",newName:"pingPong",target:Li,targetName:"math"},{name:"inverseLerp",newName:"inverseLerp",target:Li,targetName:"math"}]),i.vmath=cI,Cn(eI.prototype,"Scheduler.prototype",[{name:"enableForTarget",newName:"enableForTarget",target:eI,targetName:"Scheduler"}]),Cn(eI,"Scheduler",[{name:"PRIORITY_SYSTEM",newName:"System.Priority.SCHEDULER",customGetter:()=>Yw.Priority.SCHEDULER}]),Tn(eI,"Scheduler",[{name:"PRIORITY_NON_SYSTEM",suggest:"Use enum` System.Priority` instead"}]),Cn(lg.prototype,"SubModel.prototype",[{name:"subMeshData",newName:"subMesh"}]),Tn(lg.prototype,"SubModel.prototype",[{name:"getSubModel",suggest:"Use `subModels[i]` instead"},{name:"subModelNum",suggest:"Use `subModels.length` instead"}]),Cn(iI.prototype,"Root.prototype",[{name:"ui",newName:"batcher2D"}]),bn(rI,"game",[{name:"collisionMatrix"},{name:"groupList"}]),bn(oI.prototype,"director",[{name:"calculateDeltaTime"},{name:"getDeltaTime",suggest:"Use game.deltaTime instead"},{name:"getTotalTime",suggest:"Use game.totalTime instead"},{name:"getCurrentTime",suggest:"Use game.frameStartTime instead"}]),Tn(oI.prototype,"director",[{name:"setAnimationInterval",suggest:"please use game.frameRate instead"},{name:"getAnimationInterval",suggest:"please use game.frameRate instead"},{name:"getRunningScene",suggest:"please use getScene instead"},{name:"setDepthTest",suggest:"please use camera API instead"},{name:"setClearColor",suggest:"please use camera API instead"},{name:"getWinSize",suggest:"please use view.getVisibleSize instead"},{name:"getWinSizeInPixels"},{name:"purgeCachedData",suggest:"please use assetManager.releaseAll instead"},{name:"convertToGL"},{name:"convertToUI"}]);const lI={topLeft:i.v2(0,0),topRight:i.v2(0,0),top:i.v2(0,0),bottomLeft:i.v2(0,0),bottomRight:i.v2(0,0),bottom:i.v2(0,0),center:i.v2(0,0),left:i.v2(0,0),right:i.v2(0,0),width:0,height:0,init(e){const t=this.width=e.width,n=this.height=e.height,i=e.x,s=e.y,r=s+n,o=i+t;this.topLeft.x=i,this.topLeft.y=r,this.topRight.x=o,this.topRight.y=r,this.top.x=i+t/2,this.top.y=r,this.bottomLeft.x=i,this.bottomLeft.y=s,this.bottomRight.x=o,this.bottomRight.y=s,this.bottom.x=i+t/2,this.bottom.y=s,this.center.x=i+t/2,this.center.y=s+n/2,this.left.x=i,this.left.y=s+n/2,this.right.x=o,this.right.y=s+n/2}};i.visibleRect=lI;const hI=new Di,_I={[Ue.ORIENTATION_AUTO]:Kh.AUTO,[Ue.ORIENTATION_LANDSCAPE]:Kh.LANDSCAPE,[Ue.ORIENTATION_PORTRAIT]:Kh.PORTRAIT};class uI extends kt{constructor(){super(),this._designResolutionSize=void 0,this._scaleX=void 0,this._scaleY=void 0,this._viewportRect=void 0,this._visibleRect=void 0,this._autoFullScreen=void 0,this._retinaEnabled=void 0,this._resizeCallback=void 0,this._resolutionPolicy=void 0,this._rpExactFit=void 0,this._rpShowAll=void 0,this._rpNoBorder=void 0,this._rpFixedHeight=void 0,this._rpFixedWidth=void 0;const e=pI,t=dI;this._designResolutionSize=new Di(0,0),this._scaleX=1,this._scaleY=1,this._viewportRect=new Mi(0,0,0,0),this._visibleRect=new Mi(0,0,0,0),this._autoFullScreen=!1,this._retinaEnabled=!1,this._resizeCallback=null,this._rpExactFit=new fI(e.EQUAL_TO_FRAME,t.EXACT_FIT),this._rpShowAll=new fI(e.EQUAL_TO_FRAME,t.SHOW_ALL),this._rpNoBorder=new fI(e.EQUAL_TO_FRAME,t.NO_BORDER),this._rpFixedHeight=new fI(e.EQUAL_TO_FRAME,t.FIXED_HEIGHT),this._rpFixedWidth=new fI(e.EQUAL_TO_FRAME,t.FIXED_WIDTH),this._resolutionPolicy=this._rpShowAll}init(){const e=Jh.windowSize,t=e.width,n=e.height;this._designResolutionSize.width=t,this._designResolutionSize.height=n,this._viewportRect.width=t,this._viewportRect.height=n,this._visibleRect.width=t,this._visibleRect.height=n,hI.width=this._visibleRect.width,hI.height=this._visibleRect.height,lI&&lI.init(this._visibleRect),Qh.on("window-resize",this._updateAdaptResult,this),Qh.on("orientation-change",this._updateAdaptResult,this),Qh.on("fullscreen-change",this._updateAdaptResult,this)}resizeWithBrowserSize(e){Qh.handleResizeEvent=e}setResizeCallback(e){"function"!=typeof e&&null!=e||(this._resizeCallback=e)}setOrientation(e){Qh.orientation=_I[e]}adjustViewportMeta(e){}enableRetina(e){this._retinaEnabled=!!e}isRetinaEnabled(){return this._retinaEnabled}enableAutoFullScreen(e){e!==this._autoFullScreen&&(this._autoFullScreen=e,e&&Jh.requestFullScreen().catch((()=>{})))}isAutoFullScreenEnabled(){return this._autoFullScreen}setCanvasSize(e,t){Qh.resolutionScale=1;const n=Qh.devicePixelRatio,i=new Di(e*n,t*n);Jh.windowSize=i}getCanvasSize(){return Jh.windowSize}getFrameSize(){const e=Qh.devicePixelRatio,t=Jh.windowSize;return t.width/=e,t.height/=e,t}setFrameSize(e,t){const n=Qh.devicePixelRatio;Jh.windowSize=new Di(e*n,t*n)}getVisibleSize(){return new Di(this._visibleRect.width,this._visibleRect.height)}getVisibleSizeInPixel(){return new Di(this._visibleRect.width*this._scaleX,this._visibleRect.height*this._scaleY)}getVisibleOrigin(){return new bi(this._visibleRect.x,this._visibleRect.y)}getVisibleOriginInPixel(){return new bi(this._visibleRect.x*this._scaleX,this._visibleRect.y*this._scaleY)}getResolutionPolicy(){return this._resolutionPolicy}_updateResolutionPolicy(e){if(e instanceof fI)this._resolutionPolicy=e;else{const t=fI;e===t.EXACT_FIT&&(this._resolutionPolicy=this._rpExactFit),e===t.SHOW_ALL&&(this._resolutionPolicy=this._rpShowAll),e===t.NO_BORDER&&(this._resolutionPolicy=this._rpNoBorder),e===t.FIXED_HEIGHT&&(this._resolutionPolicy=this._rpFixedHeight),e===t.FIXED_WIDTH&&(this._resolutionPolicy=this._rpFixedWidth)}}setResolutionPolicy(e){this._updateResolutionPolicy(e);const t=mI.getDesignResolutionSize();mI.setDesignResolutionSize(t.width,t.height,e)}setDesignResolutionSize(e,t,n){if(!(e>0&&t>0))return void E(2200);this._updateResolutionPolicy(n);const i=this._resolutionPolicy;i&&i.preApply(this),this._designResolutionSize.width=e,this._designResolutionSize.height=t;const s=i.apply(this,this._designResolutionSize);if(s.scale&&2===s.scale.length&&(this._scaleX=s.scale[0],this._scaleY=s.scale[1]),s.viewport){const e=this._viewportRect,t=this._visibleRect,n=s.viewport;e.x=n.x,e.y=n.y,e.width=n.width,e.height=n.height,t.x=0,t.y=0,t.width=n.width/this._scaleX,t.height=n.height/this._scaleY}i.postApply(this),hI.width=this._visibleRect.width,hI.height=this._visibleRect.height,lI&&lI.init(this._visibleRect),this.emit("design-resolution-changed")}getDesignResolutionSize(){return new Di(this._designResolutionSize.width,this._designResolutionSize.height)}setRealPixelResolution(e,t,n){this.setDesignResolutionSize(e,t,n)}getViewportRect(){return this._viewportRect}getScaleX(){return this._scaleX}getScaleY(){return this._scaleY}getDevicePixelRatio(){return Qh.devicePixelRatio}convertToLocationInView(e,t,n,i=new bi){const s=Qh.devicePixelRatio*(e-n.left),r=Qh.devicePixelRatio*(n.top+n.height-t);return Qh.isFrameRotated?(i.x=Jh.windowSize.width-r,i.y=s):(i.x=s,i.y=r),i}_convertToUISpace(e){const t=this._viewportRect;e.x=(e.x-t.x)/this._scaleX,e.y=(e.y-t.y)/this._scaleY}_updateAdaptResult(){var e;i.director.root.resize(Jh.windowSize.width,Jh.windowSize.height);const t=this._designResolutionSize.width,n=this._designResolutionSize.height;t>0&&this.setDesignResolutionSize(t,n,this._resolutionPolicy),this.emit("canvas-resize"),null===(e=this._resizeCallback)||void 0===e||e.call(this)}}e("View",uI),uI.instance=void 0;class pI{constructor(){this.name="ContainerStrategy"}preApply(e){}apply(e,t){}postApply(e){}_setupCanvas(){const e=rI.canvas;if(e){const t=Jh.windowSize;e.width=t.width,e.height=t.height}}}pI.EQUAL_TO_FRAME=void 0,pI.PROPORTION_TO_FRAME=void 0;class dI{constructor(){this.name="ContentStrategy",this._result=void 0,this._result={scale:[1,1],viewport:null}}preApply(e){}apply(e,t){return{scale:[1,1]}}postApply(e){}_buildResult(e,t,n,i,s,r){Math.abs(e-n)<2&&(n=e),Math.abs(t-i)<2&&(i=t);const o=new Mi(Math.round((e-n)/2),Math.round((t-i)/2),n,i);return this._result.scale=[s,r],this._result.viewport=o,this._result}}dI.EXACT_FIT=void 0,dI.SHOW_ALL=void 0,dI.NO_BORDER=void 0,dI.FIXED_HEIGHT=void 0,dI.FIXED_WIDTH=void 0,pI.EQUAL_TO_FRAME=new class extends pI{constructor(...e){super(...e),this.name="EqualToFrame"}apply(e,t){Qh.isProportionalToFrame=!1,this._setupCanvas()}},pI.PROPORTION_TO_FRAME=new class extends pI{constructor(...e){super(...e),this.name="ProportionalToFrame"}apply(e,t){Qh.isProportionalToFrame=!0,this._setupCanvas()}},dI.EXACT_FIT=new class extends dI{constructor(...e){super(...e),this.name="ExactFit"}apply(e,t){const n=Jh.windowSize,i=n.width,s=n.height,r=i/t.width,o=s/t.height;return this._buildResult(i,s,i,s,r,o)}},dI.SHOW_ALL=new class extends dI{constructor(...e){super(...e),this.name="ShowAll"}apply(e,t){const n=Jh.windowSize,i=n.width,s=n.height,r=t.width,o=t.height,a=i/r,c=s/o;let l,h,_=0;return a<c?(_=a,l=i,h=o*_):(_=c,l=r*_,h=s),this._buildResult(i,s,l,h,_,_)}},dI.NO_BORDER=new class extends dI{constructor(...e){super(...e),this.name="NoBorder"}apply(e,t){const n=Jh.windowSize,i=n.width,s=n.height,r=t.width,o=t.height,a=i/r,c=s/o;let l,h,_;return a<c?(l=c,h=r*l,_=s):(l=a,h=i,_=o*l),this._buildResult(i,s,h,_,l,l)}},dI.FIXED_HEIGHT=new class extends dI{constructor(...e){super(...e),this.name="FixedHeight"}apply(e,t){const n=Jh.windowSize,i=n.width,s=n.height,r=s/t.height,o=i,a=s;return this._buildResult(i,s,o,a,r,r)}},dI.FIXED_WIDTH=new class extends dI{constructor(...e){super(...e),this.name="FixedWidth"}apply(e,t){const n=Jh.windowSize,i=n.width,s=n.height,r=i/t.width,o=i,a=s;return this._buildResult(i,s,o,a,r,r)}};class fI{constructor(e,t){this.name="ResolutionPolicy",this._containerStrategy=void 0,this._contentStrategy=void 0,this._containerStrategy=null,this._contentStrategy=null,this.setContainerStrategy(e),this.setContentStrategy(t)}get canvasSize(){return Jh.windowSize}preApply(e){this._contentStrategy.preApply(e)}apply(e,t){return this._containerStrategy.apply(e,t),this._contentStrategy.apply(e,t)}postApply(e){this._contentStrategy.postApply(e)}setContainerStrategy(e){e instanceof pI&&(this._containerStrategy=e)}setContentStrategy(e){e instanceof dI&&(this._contentStrategy=e)}}e("ResolutionPolicy",fI),fI.EXACT_FIT=0,fI.NO_BORDER=1,fI.SHOW_ALL=2,fI.FIXED_HEIGHT=3,fI.FIXED_WIDTH=4,fI.UNKNOWN=5,fI.ContainerStrategy=pI,fI.ContentStrategy=dI,i.ResolutionPolicy=fI;const mI=e("view",uI.instance=i.view=new uI);i.winSize=hI,Tn(uI.prototype,"View.prototype",[{name:"isAntiAliasEnabled",suggest:"The API of Texture2d have been largely modified, no alternative"},{name:"enableAntiAlias",suggest:"The API of Texture2d have been largely modified, no alternative"}]),bn(uI.prototype,"View.prototype",[{name:"adjustViewportMeta"},{name:"enableAutoFullScreen",suggest:"use screen.requestFullScreen() instead."},{name:"isAutoFullScreenEnabled"},{name:"setCanvasSize",suggest:"setting size in CSS pixels is not recommended, please use screen.windowSize instead."},{name:"getCanvasSize",suggest:"please use screen.windowSize instead."},{name:"getFrameSize",suggest:"getting size in CSS pixels is not recommended, please use screen.windowSize instead."},{name:"setFrameSize",suggest:"setting size in CSS pixels is not recommended, please use screen.windowSize instead."},{name:"getDevicePixelRatio",suggest:"use screen.devicePixelRatio instead."},{name:"convertToLocationInView"},{name:"enableRetina"},{name:"isRetinaEnabled"}]),bn(i,"cc",[{name:"winSize",suggest:"please use view.getVisibleSize() instead."}]),bn(e_,"sys",[{name:"capabilities",suggest:"please use sys.hasFeature() method instead."}]),Cn(e_,"sys",["UNKNOWN","ENGLISH","CHINESE","FRENCH","ITALIAN","GERMAN","SPANISH","DUTCH","RUSSIAN","KOREAN","JAPANESE","HUNGARIAN","PORTUGUESE","ARABIC","NORWEGIAN","POLISH","TURKISH","UKRAINIAN","ROMANIAN","BULGARIAN"].map((e=>({name:`LANGUAGE_${e}`,newName:e,target:e_.Language,targetName:"sys.Language"})))),Cn(e_,"sys",["UNKNOWN","IOS","ANDROID","WINDOWS","LINUX","OSX"].map((e=>({name:`OS_${e}`,newName:e,target:e_.OS,targetName:"sys.OS"})))),Cn(e_,"sys",["UNKNOWN","WECHAT","ANDROID","IE","EDGE","QQ","MOBILE_QQ","UC","UCBS","BAIDU_APP","BAIDU","MAXTHON","OPERA","OUPENG","MIUI","FIREFOX","SAFARI","CHROME","LIEBAO","QZONE","SOUGOU","HUAWEI"].map((e=>({name:`BROWSER_TYPE_${e}`,newName:e,target:e_.BrowserType,targetName:"sys.BrowserType"})))),Cn(e_,"sys",[{name:"BROWSER_TYPE_360",newName:"BROWSER_360",target:e_.BrowserType,targetName:"sys.BrowserType"}]),Cn(e_,"sys",["UNKNOWN","EDITOR_PAGE","EDITOR_CORE","MOBILE_BROWSER","DESKTOP_BROWSER","WIN32","MACOS","IOS","ANDROID","OHOS","WECHAT_GAME","BAIDU_MINI_GAME","XIAOMI_QUICK_GAME","ALIPAY_MINI_GAME","BYTEDANCE_MINI_GAME","OPPO_MINI_GAME","VIVO_MINI_GAME","HUAWEI_QUICK_GAME","COCOSPLAY","LINKSURE_MINI_GAME","QTT_MINI_GAME"].map((e=>({name:e,target:e_.Platform,targetName:"sys.Platform"})))),Cn(e_,"sys",[{name:"IPHONE",newName:"IOS",target:e_.Platform,targetName:"sys.Platform"},{name:"IPAD",newName:"IOS",target:e_.Platform,targetName:"sys.Platform"}]),Tn(e_,"sys",["LINUX","BLACKBERRY","NACL","EMSCRIPTEN","TIZEN","WINRT","WP8","QQ_PLAY","FB_PLAYABLE_ADS"].map((e=>({name:e})))),Cn(e_,"sys",[{name:"windowPixelResolution",target:Jh,targetName:"screen",newName:"windowSize"}]),bn(Jh,"screen",[{name:"autoFullScreen",suggest:"please use screen.requestFullScreen() instead."},{name:"disableAutoFullScreen"}]);class gI{constructor(){this.name="",this.base="",this.importBase="",this.nativeBase="",this.deps=null,this.assetInfos=new ql,this.scenes=new ql,this.paths=new ql}init(e){(e=>{let t=e.uuids;const n=e.paths,i=e.types,s=e.deps,r=e.paths=Object.create(null);if(!1===e.debug){for(let e=0,n=t.length;e<n;e++)t[e]=lh(t[e]);for(const e in n){const t=n[e],s=t[1];t[1]=i[s]}}else{const e=Object.create(null);for(let n=0,i=t.length;n<i;n++){const i=t[n];t[n]=e[i]=lh(i)}t=e}for(const e in n){const i=n[e];r[t[e]]=i}const o=e.scenes;for(const e in o){const n=o[e];o[e]=t[n]}const a=e.packs;for(const e in a){const n=a[e];for(let e=0;e<n.length;++e)n[e]=t[n[e]]}const c=e.versions;if(c)for(const e in c){const n=c[e];for(let e=0;e<n.length;e+=2){const i=n[e];n[e]=t[i]||i}}const l=e.redirect;if(l)for(let e=0;e<l.length;e+=2)l[e]=t[l[e]],l[e+1]=s[l[e+1]];if(e.extensionMap)for(const n in e.extensionMap)Object.prototype.hasOwnProperty.call(e.extensionMap,n)&&e.extensionMap[n].forEach(((i,s)=>{e.extensionMap[n][s]=t[i]||i}))})(e),this.importBase=e.importBase||"",this.nativeBase=e.nativeBase||"",this.base=e.base||"",this.name=e.name||"",this.deps=e.deps||[],this._initUuid(e.uuids),this._initPath(e.paths),this._initScene(e.scenes),this._initPackage(e.packs),this._initVersion(e.versions),this._initRedirect(e.redirect);for(const t in e.extensionMap)Object.prototype.hasOwnProperty.call(e.extensionMap,t)&&e.extensionMap[t].forEach((e=>{const n=this.assetInfos.get(e);n&&(n.extension=t)}))}getInfoWithPath(e,t){if(!e)return null;e=dh(e);const n=this.paths.get(e);if(n){if(!t)return n[0];for(let e=0,i=n.length;e<i;e++){const i=n[e];if(Ae.isChildClassOf(i.ctor,t))return i}}return null}getDirWithPath(e,t,n){"/"===(e=dh(e))[e.length-1]&&(e=e.slice(0,-1));const i=n||[];return this.paths.forEach(((n,s)=>{if(s.startsWith(e)&&((e,t)=>!(e.length>t.length)||47===e.charCodeAt(t.length))(s,e)||!e)for(let e=0,s=n.length;e<s;e++){const s=n[e];t&&!Ae.isChildClassOf(s.ctor,t)||i.push(s)}})),i}getAssetInfo(e){return this.assetInfos.get(e)||null}getSceneInfo(e){return e.endsWith(".scene")||(e+=".scene"),"/"===e[0]||e.startsWith("db://")||(e=`/${e}`),this.scenes.find(((t,n)=>n.endsWith(e)))}destroy(){this.paths.destroy(),this.scenes.destroy(),this.assetInfos.destroy()}_initUuid(e){if(e){this.assetInfos.clear();for(let t=0,n=e.length;t<n;t++){const n=e[t];this.assetInfos.add(n,{uuid:n})}}}_initPath(e){if(!e)return;const t=this.paths;t.clear();for(const n in e){const i=e[n],s=i[0],r=i[1],o=3===i.length,a=this.assetInfos.get(n);a.path=s,a.ctor=Ae._getClassById(r),t.has(s)?o?t.get(s).push(a):t.get(s).unshift(a):t.add(s,[a])}}_initScene(e){if(!e)return;const t=this.scenes;t.clear();const n=this.assetInfos;for(const i in e){const s=e[i],r=n.get(s);r.url=i,t.add(i,r)}}_initPackage(e){if(!e)return;const t=this.assetInfos;for(const n in e){const i=e[n],s={uuid:n,packedUuids:i,ext:".json"};t.add(n,s);for(let e=0,n=i.length;e<n;e++){const r=i[e],o=t.get(r),a=o.packs;a?1===n?a.unshift(s):a.push(s):o.packs=[s]}}}_initVersion(e){if(!e)return;const t=this.assetInfos;let n=e.import;if(n)for(let e=0,i=n.length;e<i;e+=2){const i=n[e];t.get(i).ver=n[e+1]}if(n=e.native,n)for(let e=0,i=n.length;e<i;e+=2){const i=n[e];t.get(i).nativeVer=n[e+1]}}_initRedirect(e){if(!e)return;const t=this.assetInfos;for(let n=0,i=e.length;n<i;n+=2){const i=e[n];t.get(i).redirect=e[n+1]}}}function vI(e,t){e._uuid&&t.push(e._uuid)}function yI(e,t){const n=Object.getOwnPropertyNames(e);for(let i=0;i<n.length;i++){const s=n[i];if("node"===s||"__eventTargets"===s)continue;const r=e[s];if("object"==typeof r&&r)if(Array.isArray(r))for(let e=0;e<r.length;e++){const n=r[e];n instanceof bh&&vI(n,t)}else if(r.constructor&&r.constructor!==Object)r instanceof bh&&vI(r,t);else{const e=Object.getOwnPropertyNames(r);for(let n=0;n<e.length;n++){const i=r[e[n]];i instanceof bh&&vI(i,t)}}}}function xI(e,t){for(let n=0;n<e._components.length;n++)yI(e._components[n],t);for(let n=0;n<e._children.length;n++)xI(e._children[n],t)}function SI(e,t,n,i){n.push(e._uuid);const s=hm.getDeps(e._uuid);for(let e=0,r=s.length;e<r;e++){const r=Yl.get(s[e]);if(!r)continue;const o=r._uuid;o in t?t[o]+=i:t[o]=r.refCount+i,n.includes(o)||SI(r,t,n,i)}}const CI=[];var TI=new class{constructor(){this._persistNodeDeps=new ql,this._toDelete=new ql,this._eventListener=!1}init(){this._persistNodeDeps.clear(),this._toDelete.clear()}_addPersistNodeRef(e){const t=[];xI(e,t);for(let e=0,n=t.length;e<n;e++){const n=Yl.get(t[e]);n&&n.addRef()}this._persistNodeDeps.add(e.uuid,t)}_removePersistNodeRef(e){if(!this._persistNodeDeps.has(e.uuid))return;const t=this._persistNodeDeps.get(e.uuid);for(let e=0,n=t.length;e<n;e++){const n=Yl.get(t[e]);n&&n.decRef()}this._persistNodeDeps.remove(e.uuid)}_autoRelease(e,t,n){if(e){const n=hm.getDeps(e.uuid);for(let t=0,i=n.length;t<i;t++){const i=Yl.get(n[t]);i&&i.decRef(e.autoReleaseAssets)}const i=hm._depends.get(e.uuid);if(i&&i.persistDeps){const t=i.persistDeps;for(let n=0,i=t.length;n<i;n++){const i=Yl.get(t[n]);i&&i.decRef(e.autoReleaseAssets)}}e.uuid!==t.uuid&&hm.remove(e.uuid)}const i=hm._depends.get(t.uuid);i&&(i.persistDeps=[]);for(const e in n){const t=n[e],s=this._persistNodeDeps.get(t.uuid);for(const e of s){const t=Yl.get(e);t&&t.addRef()}i&&i.persistDeps.push(...s)}}tryRelease(e,t=!1){e instanceof bh&&(t?this._free(e,t):(this._toDelete.add(e._uuid,e),this._eventListener||(this._eventListener=!0,Xe(this._freeAssets.bind(this)))))}_freeAssets(){this._eventListener=!1,this._toDelete.forEach((e=>{this._free(e)})),this._toDelete.clear()}_free(e,t=!1){const n=e._uuid;if(this._toDelete.remove(n),!Mt(e,!0))return;if(!t&&e.refCount>0&&function(e){const t=Object.create(null);if(t[e._uuid]=e.refCount,SI(e,t,CI,-1),CI.length=0,0!==t[e._uuid])return t[e._uuid];for(const e in t)0!==t[e]&&SI(Yl.get(e),t,CI,1);return CI.length=0,t[e._uuid]}(e)>0)return;Yl.remove(n);const i=hm.getDeps(n);for(let e=0,t=i.length;e<t;e++){const t=Yl.get(i[e]);t&&(t.decRef(!1),this._free(t,!1))}e.destroy(),hm.remove(n)}};let bI=null;function EI(e,t){for(let n=0,i=e.input.length;n<i;n++){const i=e.input[n];t&&!i.isNative&&i.content instanceof bh&&i.content.decRef(!1),i.recycle()}e.input=null}function AI(e,t){return t?/\?/.test(e)?`${e}&_t=${Date.now()}`:`${e}?_t=${Date.now()}`:e}function PI(e,t,n,i,s=0){e(s,((r,o)=>{s++,!r||s>t?i&&i(r,o):setTimeout((()=>{PI(e,t,n,i,s)}),n)}))}function wI(e,t,n,i,s){try{const r=hm.parse(e,t);for(let e=0,t=r.deps.length;e<t;e++){const t=r.deps[e];t in n||(n[t]=!0,i.push({uuid:t,bundle:s&&s.name}))}r.nativeDep&&(s&&(r.nativeDep.bundle=s.name),i.push({...r.nativeDep}))}catch(e){d(e.message,e.stack)}}function II(e,t,n){t&&(n=void 0!==n?n:i.assetManager.cacheAsset,ph(t)||!n||t.isDefault||Yl.add(e,t))}function RI(e,t,n){let i=0;const s=[],r=e.length;0===r&&n&&n(s);const o=e=>{e&&s.push(e),i++,i===r&&n&&n(s)};for(let n=0;n<r;n++)t(e[n],o)}function DI(e,t,n){let i=e,s=t,r=n;if(void 0===n){const n="function"==typeof e;t?(r=t,n||(s=null)):void 0===t&&n&&(r=e,i=null,s=null),void 0!==t&&n&&(s=e,i=null)}return{options:i||Object.create(null),onProgress:s,onComplete:r}}function OI(e,t,n){let i=e,s=t,r=n;if(void 0===n){const n=Ae.isChildClassOf(e,bh);t?(r=t,n&&(s=null)):void 0!==t||n||(r=e,s=null,i=null),void 0===t||n||(s=e,i=null)}return{type:i,onProgress:s||bI,onComplete:r}}function MI(e,t,n,i={}){if(!n[t]||i[t])return!1;i[t]=!0;let s=!1;const r=hm.getDeps(t);if(r)for(let t=0,o=r.length;t<o;t++){const o=r[t];if(o===e||MI(e,o,n,i)){s=!0;break}}return s}function NI(e){return(t,n)=>{if(!e)return;const i=[];Array.isArray(n)?n.forEach((e=>e instanceof bh&&i.push(e.addRef()))):n instanceof bh&&i.push(n.addRef()),Xe((()=>{i.forEach((e=>e.decRef(!1))),e(t,n)}))}}class LI{constructor(){this._config=new gI}get config(){return this._config}get name(){return this._config.name}get deps(){return this._config.deps}get base(){return this._config.base}getInfoWithPath(e,t){return this._config.getInfoWithPath(e,t)}getDirWithPath(e,t,n){return this._config.getDirWithPath(e,t,n)}getAssetInfo(e){return this._config.getAssetInfo(e)}getSceneInfo(e){return this._config.getSceneInfo(e)}init(e){this._config.init(e),Zl.add(e.name,this)}load(e,t,n,s){const{type:r,onProgress:o,onComplete:a}=OI(t,n,s),c={__requestType__:th.PATH,type:r,bundle:this.name,__outputAsArray__:Array.isArray(e)};i.assetManager.loadAny(e,c,o,a)}preload(e,t,n,s){const{type:r,onProgress:o,onComplete:a}=OI(t,n,s);i.assetManager.preloadAny(e,{__requestType__:th.PATH,type:r,bundle:this.name},o,a)}loadDir(e,t,n,s){const{type:r,onProgress:o,onComplete:a}=OI(t,n,s);i.assetManager.loadAny(e,{__requestType__:th.DIR,type:r,bundle:this.name,__outputAsArray__:!0},o,a)}preloadDir(e,t,n,s){const{type:r,onProgress:o,onComplete:a}=OI(t,n,s);i.assetManager.preloadAny(e,{__requestType__:th.DIR,type:r,bundle:this.name},o,a)}loadScene(e,t,n,s){const{options:r,onProgress:o,onComplete:a}=DI(t,n,s);r.preset=r.preset||"scene",r.bundle=this.name,i.assetManager.loadAny({scene:e},r,o,((e,t)=>{if(e)d(e.message,e.stack);else if(t instanceof mw&&t.scene){const e=t.scene;e._id=t._uuid,e.name=t.name}else e=new Error(`The asset ${t._uuid} is not a scene`);a&&a(e,t)}))}preloadScene(e,t,n,s){const{options:r,onProgress:o,onComplete:a}=DI(t,n,s);r.bundle=this.name,i.assetManager.preloadAny({scene:e},r,o,(t=>{t&&E(1210,e,t.message),a&&a(t)}))}get(e,t){const n=this.getInfoWithPath(e,t);return n&&Yl.get(n.uuid)||null}release(e,t){const n=this.get(e,t);n&&TI.tryRelease(n,!0)}releaseUnusedAssets(){Yl.forEach((e=>{const t=this.getAssetInfo(e._uuid);t&&!t.redirect&&TI.tryRelease(e)}))}releaseAll(){Yl.forEach((e=>{const t=this.getAssetInfo(e._uuid);t&&!t.redirect&&TI.tryRelease(e,!0)}))}_destroy(){this._config.destroy()}}const zI=e("resources",new LI);function FI(e,t,n){const i=new Image;function s(){i.removeEventListener("load",s),i.removeEventListener("error",r),n&&n(null,i)}function r(){i.removeEventListener("load",s),i.removeEventListener("error",r),n&&n(new Error(I(4930,e)))}return"file:"!==window.location.protocol&&(i.crossOrigin="anonymous"),i.addEventListener("load",s),i.addEventListener("error",r),i.src=e,i}function BI(e,t,n,i){const s=new XMLHttpRequest,r=`download failed: ${e}, status: `;if(s.open("GET",e,!0),void 0!==t.xhrResponseType&&(s.responseType=t.xhrResponseType),void 0!==t.xhrWithCredentials&&(s.withCredentials=t.xhrWithCredentials),void 0!==t.xhrMimeType&&s.overrideMimeType&&s.overrideMimeType(t.xhrMimeType),void 0!==t.xhrTimeout&&(s.timeout=t.xhrTimeout),t.xhrHeader)for(const e in t.xhrHeader)s.setRequestHeader(e,t.xhrHeader[e]);return s.onload=()=>{200===s.status||0===s.status?i&&i(null,s.response):i&&i(new Error(`${r}${s.status}(no response)`))},n&&(s.onprogress=e=>{e.lengthComputable&&n(e.loaded,e.total)}),s.onerror=()=>{i&&i(new Error(`${r}${s.status}(error)`))},s.ontimeout=()=>{i&&i(new Error(`${r}${s.status}(time out)`))},s.onabort=()=>{i&&i(new Error(`${r}${s.status}(abort)`))},s.send(null),s}i.resources=zI;const UI={};function GI(e,t,n){if(UI[e])return n&&n(null),null;const i=document.createElement("script");function s(){i.parentNode.removeChild(i),i.removeEventListener("load",s,!1),i.removeEventListener("error",r,!1),UI[e]=!0,n&&n(null)}function r(){i.parentNode.removeChild(i),i.removeEventListener("load",s,!1),i.removeEventListener("error",r,!1),n&&n(new Error(I(4928,e)))}return"file:"!==window.location.protocol&&(i.crossOrigin="anonymous"),i.async=t.scriptAsyncLoading||!1,i.src=e,i.addEventListener("load",s,!1),i.addEventListener("error",r,!1),document.body.appendChild(i),i}const HI=/^(?:\w+:\/\/|\.+\/).+/,kI=(e,t,n)=>{(e_.hasFeature(e_.Feature.IMAGE_BITMAP)&&i.assetManager.allowImageBitmap?VI:FI)(e,t,n)},VI=(e,t,n)=>{t.xhrResponseType="blob",BI(e,t,t.onFileProgress,n)},jI=(e,t,n)=>{t.xhrResponseType="json",BI(e,t,t.onFileProgress,n)},WI=(e,t,n)=>{t.xhrResponseType="arraybuffer",BI(e,t,t.onFileProgress,n)},qI=(e,t,n)=>{jI(e,t,((t,i)=>{if(t)return void n(t);const s=s_(i);Promise.all(s.chunks.map((n=>new Promise(((i,s)=>{WI(`${sn(e)}${n}`,{},((e,n)=>{t?s(t):i(new Uint8Array(n))}))}))))).then((e=>{const t=new i_(s.document,e);n(null,t)})).catch((e=>{n(e)}))}))},XI=(e,t,n)=>{WI(e,t,((e,t)=>{if(e)n(e);else try{const e=r_(new Uint8Array(t));n(null,e)}catch(e){n(e)}}))},YI=(e,t,n)=>{t.xhrResponseType="text",BI(e,t,t.onFileProgress,n)},KI=(e,t,n)=>{const i=rn(e);let s=e;HI.test(s)||(s=-1!==$I.remoteBundles.indexOf(i)?`${$I.remoteServerAddress}remote/${i}`:`assets/${i}`);const r=t.version||$I.bundleVers[i];let o=0,a=null,c=null;jI(`${s}/config.${r?`${r}.`:""}json`,t,((e,t)=>{c=e,a=t,a&&(a.base=`${s}/`),2==++o&&n(c,a)})),GI(`${s}/index.${r?`${r}.`:""}js`,t,(e=>{c=e,2==++o&&n(e,a)}))},$I=new class{constructor(){this.maxConcurrency=6,this.maxRequestsPerFrame=6,this.maxRetryCount=3,this.appendTimeStamp=!1,this.limited=!0,this.retryInterval=2e3,this.bundleVers=null,this.remoteBundles=[],this.downloadDomImage=FI,this.downloadDomAudio=null,this.downloadFile=BI,this.downloadScript=GI,this._downloaders={".png":kI,".jpg":kI,".bmp":kI,".jpeg":kI,".gif":kI,".ico":kI,".tiff":kI,".webp":kI,".image":kI,".pvr":WI,".pkm":WI,".astc":WI,".txt":YI,".xml":YI,".vsh":YI,".fsh":YI,".atlas":YI,".tmx":YI,".tsx":YI,".json":jI,".ExportJson":jI,".plist":YI,".ccon":qI,".cconb":XI,".fnt":YI,".binary":WI,".bin":WI,".dbbin":WI,".skel":WI,".js":GI,bundle:KI,default:YI},this._downloading=new ql,this._queue=[],this._queueDirty=!1,this._totalNum=0,this._totalNumThisPeriod=0,this._lastDate=-1,this._checkNextPeriod=!1,this._remoteServerAddress="",this._maxInterval=1/30}get remoteServerAddress(){return this._remoteServerAddress}init(e="",t={},n=[]){this._downloading.clear(),this._queue.length=0,this._remoteServerAddress=e,this.bundleVers=t,this.remoteBundles=n}register(e,t){"object"==typeof e?ce(this._downloaders,e):this._downloaders[e]=t}download(e,t,n,i,s){const r=Kl.get(e);if(r)return void s(null,r);const o=this._downloading.get(e);if(o){o.push(s);const t=this._queue.find((t=>t.id===e));if(!t)return;const n=i.priority||0;return void(t.priority<n&&(t.priority=n,this._queueDirty=!0))}const a=void 0!==i.maxRetryCount?i.maxRetryCount:this.maxRetryCount,c=void 0!==i.maxConcurrency?i.maxConcurrency:this.maxConcurrency,l=void 0!==i.maxRequestsPerFrame?i.maxRequestsPerFrame:this.maxRequestsPerFrame,h=this._downloaders[n]||this._downloaders.default;PI(((n,r)=>{if(0===n&&this._downloading.add(e,[s]),!this.limited)return void h(AI(t,this.appendTimeStamp),i,r);this._updateTime();const o=(e,t)=>{this._totalNum--,this._handleQueueInNextFrame(c,l),r(e,t)};this._totalNum<c&&this._totalNumThisPeriod<l?(h(AI(t,this.appendTimeStamp),i,o),this._totalNum++,this._totalNumThisPeriod++):(this._queue.push({id:e,priority:i.priority||0,url:t,options:i,done:o,handler:h}),this._queueDirty=!0,this._totalNum<c&&this._handleQueueInNextFrame(c,l))}),a,this.retryInterval,((t,n)=>{t||Kl.add(e,n);const i=this._downloading.remove(e);for(let e=0,s=i.length;e<s;e++)i[e](t,n)}))}loadSubpackage(e,t){i.assetManager.loadBundle(e,null,t)}_updateTime(){const e=performance.now(),t=i.game.deltaTime,n=t>this._maxInterval?this._maxInterval:t;e-this._lastDate>1e3*n&&(this._totalNumThisPeriod=0,this._lastDate=e)}_handleQueue(e,t){for(this._checkNextPeriod=!1,this._updateTime();this._queue.length>0&&this._totalNum<e&&this._totalNumThisPeriod<t;){this._queueDirty&&(this._queue.sort(((e,t)=>e.priority-t.priority)),this._queueDirty=!1);const e=this._queue.pop();if(!e)break;this._totalNum++,this._totalNumThisPeriod++,e.handler(AI(e.url,this.appendTimeStamp),e.options,e.done)}this._handleQueueInNextFrame(e,t)}_handleQueueInNextFrame(e,t){!this._checkNextPeriod&&this._queue.length>0&&(Xe(this._handleQueue.bind(this),e,t),this._checkNextPeriod=!0)}};function ZI(e,t,n,i){let s=null,r=null;try{s=new jf,s._nativeUrl=e,s._nativeAsset=t}catch(e){r=e}i(r,s)}function QI(e,t,n,i){const s=new Ew;s.json=t,i(null,s)}function JI(e,t,n,i){const s=new xw;s.text=t,i(null,s)}function eR(e,t,n,i){const s=new QC;s._nativeUrl=e,s._nativeAsset=t,i(null,s)}function tR(e,t,n,i){const s=new bh;s._nativeUrl=e,s._nativeAsset=t,i(null,s)}function nR(e,n,i,s){let r=Zl.get(n.name);r||(r=n.name===ih.RESOURCES?zI:new LI,n.base=n.base||`${e}/`,r.init(n)),t.import(`virtual:///prerequisite-imports/${r.name}`).then((()=>{s(null,r)})).catch(s)}var iR=new class{constructor(){this._creating=new ql,this._producers={".png":ZI,".jpg":ZI,".bmp":ZI,".jpeg":ZI,".gif":ZI,".ico":ZI,".tiff":ZI,".webp":ZI,".image":ZI,".pvr":ZI,".pkm":ZI,".txt":JI,".xml":JI,".vsh":JI,".fsh":JI,".atlas":JI,".tmx":JI,".tsx":JI,".fnt":JI,".json":QI,".ExportJson":QI,".binary":eR,".bin":eR,".dbbin":eR,".skel":eR,bundle:nR,default:tR}}register(e,t){"object"==typeof e?Ae.mixin(this._producers,e):this._producers[e]=t}create(e,t,n,i,s){const r=this._producers[n]||this._producers.default,o=Yl.get(e);if(!i.reloadAsset&&o)return void s(null,o);const a=this._creating.get(e);a?a.push(s):(this._creating.add(e,[s]),r(e,t,i,((t,n)=>{!t&&n instanceof bh&&(n._uuid=e,II(e,n,i.cacheAsset));const s=this._creating.remove(e);for(let e=0,i=s.length;e<i;e++)s[e](t,n)})))}},sR=new class{constructor(){this._loading=new ql,this._unpackers={".json":this.unpackJson}}unpackJson(e,t,n,i){let s=Ae.createMap(!0),r=null;if(Array.isArray(t)){(t=function(e){if(e[0]<1)throw new Error(I(5304,e[0]));E_(e,!0,void 0,P_.reportMissingClass),A_(e);const t=new w_(e[0]),n=e[1],i=e[2],s=e[3],r=e[4],o=e[5];for(let e=0;e<o.length;++e)o[e].unshift(t,n,i,s,r);return o}(t)).length!==e.length&&E(4915);for(let n=0;n<e.length;n++)s[`${e[n]}@import`]=t[n]}else{const n=Ae._getClassId(ym),i=Ae._getClassId(jf);if(t.type===n&&t.data){const i=t.data;i.length!==e.length&&E(4915);for(let t=0;t<e.length;t++)s[`${e[t]}@import`]=I_(n,{base:i[t][0],mipmaps:i[t][1]})}else if(t.type===i&&t.data){const n=t.data;n.length!==e.length&&E(4915);for(let t=0;t<e.length;t++)s[`${e[t]}@import`]=n[t]}else r=new Error("unmatched type pack!"),s=null}i(r,s)}init(){this._loading.clear()}register(e,t){"object"==typeof e?Ae.mixin(this._unpackers,e):this._unpackers[e]=t}unpack(e,t,n,i,s){t?(0,this._unpackers[n])(e,t,i,s):s(new Error("package data is wrong!"))}load(e,t,n){if(e.isNative||!e.info||!e.info.packs)return void $I.download(e.id,e.url,e.ext,e.options,n);if(Kl.has(e.id))return void n(null,Kl.get(e.id));const i=e.info.packs;let s=i.find((e=>this._loading.has(e.uuid)));if(s)return void this._loading.get(s.uuid).push({onComplete:n,id:e.id});s=i[0],this._loading.add(s.uuid,[{onComplete:n,id:e.id}]);const r=fh(s.uuid,{ext:s.ext,bundle:e.config.name});$I.download(s.uuid,r,s.ext,e.options,((t,n)=>{Kl.remove(s.uuid),t&&d(t.message,t.stack),this.unpack(s.packedUuids,n,s.ext,e.options,((e,n)=>{if(!e)for(const e in n)Kl.add(e,n[e]);const i=this._loading.remove(s.uuid);for(let s=0,r=i.length;s<r;s++){const r=i[s];if(t||e){r.onComplete(t||e);continue}const o=n[r.id];o?r.onComplete(null,o):r.onComplete(new Error("can not retrieve data from package"))}}))}))}};function rR(e,t){let n=!1;e.progress||(e.progress={finish:0,total:e.input.length,canInvoke:!0},n=!0);const{options:s,progress:r}=e,o=[],a=r.total,c=s.__exclude__=s.__exclude__||Object.create(null);e.output=[],RI(e.input,((s,l)=>{if(!s.isNative&&Yl.has(s.uuid)){const t=Yl.get(s.uuid);return s.content=t.addRef(),e.output.push(s),r.canInvoke&&e.dispatch("progress",++r.finish,r.total,s),void l()}sR.load(s,e.options,((h,_)=>{h?e.isFinish||(!i.assetManager.force||n?(d(h.message,h.stack),r.canInvoke=!1,t(h)):(e.output.push(s),r.canInvoke&&e.dispatch("progress",++r.finish,r.total,s))):e.isFinish||(s.file=_,e.output.push(s),s.isNative||(c[s.uuid]=!0,wI(s.uuid,_,c,o,s.config),r.total=a+o.length),r.canInvoke&&e.dispatch("progress",++r.finish,r.total,s)),l()}))}),(()=>{if(e.isFinish)return EI(e,!0),void e.dispatch("error");if(o.length>0){const i=sh.create({input:o,progress:r,options:s,onProgress:e.onProgress,onError:sh.prototype.recycle,onComplete:s=>{s||(e.output.push(...i.output),i.recycle()),n&&oR(e),t(s)}});Jl.async(i)}else n&&oR(e),t()}))}function oR(e){const t=e.output;for(let e=0,n=t.length;e<n;e++)t[e].content&&t[e].content.decRef(!1)}const aR=new class extends class{constructor(){this._parser=null,window.DOMParser&&(this._parser=new DOMParser)}parse(e){return this._parseXML(e)}_parseXML(e){if(this._parser)return this._parser.parseFromString(e,"text/xml");throw new Error("Dom parser is not supported in this platform!")}}{parse(e){const t=this._parseXML(e).documentElement;if("plist"!==t.tagName)return T(5100),{};let n=null;for(let e=0,i=t.childNodes.length;e<i&&(n=t.childNodes[e],1!==n.nodeType);e++);return this._parseNode(n)}_parseNode(e){let t=null;const n=e.tagName;if("dict"===n)t=this._parseDict(e);else if("array"===n)t=this._parseArray(e);else if("string"===n)if(1===e.childNodes.length)t=e.firstChild.nodeValue;else{t="";for(let n=0;n<e.childNodes.length;n++)t+=e.childNodes[n].nodeValue}else"false"===n?t=!1:"true"===n?t=!0:"real"===n?t=parseFloat(e.firstChild.nodeValue):"integer"===n&&(t=parseInt(e.firstChild.nodeValue,10));return t}_parseArray(e){const t=[];for(let n=0,i=e.childNodes.length;n<i;n++){const i=e.childNodes[n];1===i.nodeType&&t.push(this._parseNode(i))}return t}_parseDict(e){const t={};let n="";for(let i=0,s=e.childNodes.length;i<s;i++){const s=e.childNodes[i];1===s.nodeType&&("key"===s.tagName?n=s.firstChild.nodeValue:t[n]=this._parseNode(s))}return t}};function cR(e,t){return e[t]<<8|e[t+1]}var lR=new class{constructor(){this._parsing=new ql,this._parsers={".png":this.parseImage,".jpg":this.parseImage,".bmp":this.parseImage,".jpeg":this.parseImage,".gif":this.parseImage,".ico":this.parseImage,".tiff":this.parseImage,".webp":this.parseImage,".image":this.parseImage,".pvr":this.parsePVRTex,".pkm":this.parsePKMTex,".astc":this.parseASTCTex,".plist":this.parsePlist,import:this.parseImport,".ccon":this.parseImport,".cconb":this.parseImport}}parseImage(e,t,n){e instanceof HTMLImageElement?n(null,e):createImageBitmap(e,{premultiplyAlpha:"none"}).then((e=>{n(null,e)}),(e=>{n(e,null)}))}parsePVRTex(e,t,n){let i=null,s=null;try{const t=e instanceof ArrayBuffer?e:e.buffer,n=new Int32Array(t,0,13);if(55727696===n[0]){const e=n[7],i=n[6],r=n[12]+52;s={_data:new Uint8Array(t,r),_compressed:!0,width:e,height:i,format:0}}else{if(559044176!==n[11])throw new Error("Invalid magic number in PVR header");{const e=n[0],i=n[1],r=n[2];s={_data:new Uint8Array(t,e),_compressed:!0,width:r,height:i,format:0}}}}catch(e){i=e}n(i,s)}parsePKMTex(e,t,n){let i=null,s=null;try{const t=e instanceof ArrayBuffer?e:e.buffer,n=new Uint8Array(t),i=cR(n,6);if(0!==i&&1!==i&&3!==i)throw new Error("Invalid magic number in ETC header");const r=cR(n,12),o=cR(n,14);cR(n,8),cR(n,10),s={_data:new Uint8Array(t,16),_compressed:!0,width:r,height:o,format:0}}catch(e){i=e}n(i,s)}parseASTCTex(e,t,n){let i=null,s=null;try{const t=e instanceof ArrayBuffer?e:e.buffer,n=new Uint8Array(t);if(1554098963!==n[0]+(n[1]<<8)+(n[2]<<16)+(n[3]<<24))throw new Error("Invalid magic number in ASTC header");const i=n[4],r=n[5],o=n[6];if((i<3||i>6||r<3||r>6||o<3||o>6)&&(i<4||7===i||9===i||11===i||i>12||r<4||7===r||9===r||11===r||r>12||1!==o))throw new Error("Invalid block number in ASTC header");const a=function(e,t){return 4===e?Lf.RGBA_ASTC_4x4:5===e?4===t?Lf.RGBA_ASTC_5x4:Lf.RGBA_ASTC_5x5:6===e?5===t?Lf.RGBA_ASTC_6x5:Lf.RGBA_ASTC_6x6:8===e?5===t?Lf.RGBA_ASTC_8x5:6===t?Lf.RGBA_ASTC_8x6:Lf.RGBA_ASTC_8x8:10===e?5===t?Lf.RGBA_ASTC_10x5:6===t?Lf.RGBA_ASTC_10x6:8===t?Lf.RGBA_ASTC_10x8:Lf.RGBA_ASTC_10x10:10===t?Lf.RGBA_ASTC_12x10:Lf.RGBA_ASTC_12x12}(i,r),c=n[7]+(n[8]<<8)+(n[9]<<16),l=n[10]+(n[11]<<8)+(n[12]<<16);n[13],n[14],n[15],s={_data:new Uint8Array(t,16),_compressed:!0,width:c,height:l,format:a}}catch(e){i=e}n(i,s)}parsePlist(e,t,n){let i=null;const s=aR.parse(e);s||(i=new Error("parse failed")),n(i,s)}parseImport(e,t,n){if(!e)return void n(new Error(`The json file of asset ${t.__uuid__} is empty or missing`));let i=null,s=null;try{i=cm(e,t)}catch(e){s=e}n(s,i)}init(){this._parsing.clear()}register(e,t){"object"==typeof e?ce(this._parsers,e):this._parsers[e]=t}parse(e,t,n,i,s){const r=$l.get(e);if(r)return void s(null,r);const o=this._parsing.get(e);if(o)return void o.push(s);const a=this._parsers[n];a?(this._parsing.add(e,[s]),a(t,i,((t,n)=>{t?Kl.remove(e):ph(n)||$l.add(e,n);const i=this._parsing.remove(e);for(let e=0,s=i.length;e<s;e++)i[e](t,n)}))):s(null,t)}};function hR(e,t){let n=!1;e.progress||(e.progress={finish:0,total:e.input.length,canInvoke:!0},n=!0);const{options:s,progress:r}=e;s.__exclude__=s.__exclude__||Object.create(null),e.output=[],RI(e.input,((o,a)=>{const c=sh.create({input:o,onProgress:e.onProgress,options:s,progress:r,onComplete:(s,l)=>{s&&!e.isFinish&&(!i.assetManager.force||n?(d(s.message,s.stack),r.canInvoke=!1,t(s)):r.canInvoke&&e.dispatch("progress",++r.finish,r.total,o)),e.output.push(l),c.recycle(),a(null)}});_R.async(c)}),(()=>{if(s.__exclude__=null,e.isFinish)return EI(e,!0),void e.dispatch("error");!function(e){const t=e.source;if(e.options.__outputAsArray__||1!==t.length){const n=e.output=[];for(let e=0,i=t.length;e<i;e++)n.push(t[e].content)}else e.output=t[0].content}(e),EI(e,!0),t()}))}const _R=new Xl("loadOneAsset",[function(e,t){const n=e.output=e.input,{options:i,isNative:s,uuid:r,file:o}=n,{reloadAsset:a}=i;o||!a&&!s&&Yl.has(r)?t():sR.load(n,e.options,((e,i)=>{n.file=i,t(e)}))},function(e,t){const n=e.output=e.input,i=e.progress,s=e.options.__exclude__,{id:r,file:o,options:a}=n;if(n.isNative)lR.parse(r,o,n.ext,a,((s,o)=>{s?t(s):(n.content=o,i.canInvoke&&e.dispatch("progress",++i.finish,i.total,n),Kl.remove(r),$l.remove(r),t())}));else{const{uuid:c}=n;if(c in s){const{finish:r,content:o,err:a,callbacks:l}=s[c];i.canInvoke&&e.dispatch("progress",++i.finish,i.total,n),r||MI(c,c,s)?(o&&o.addRef(),n.content=o,t(a)):l.push({done:t,item:n})}else if(!a.reloadAsset&&Yl.has(c)){const s=Yl.get(c);n.content=s.addRef(),i.canInvoke&&e.dispatch("progress",++i.finish,i.total,n),t()}else a.__uuid__=c,lR.parse(r,o,"import",a,((n,i)=>{n?t(n):function(e,t,n){const{input:i,progress:s}=e,{uuid:r,id:o,options:a,config:c}=i,{cacheAsset:l}=a,h=[];t.addRef&&t.addRef(),wI(r,t,Object.create(null),h,c),s.canInvoke&&e.dispatch("progress",++s.finish,s.total+=h.length,i);const _=e.options.__exclude__[r]={content:t,finish:!1,callbacks:[{done:n,item:i}]},u=sh.create({input:h,options:e.options,onProgress:e.onProgress,onError:sh.prototype.recycle,progress:s,onComplete:e=>{if(t.decRef&&t.decRef(!1),_.finish=!0,_.err=e,!e){const e=Array.isArray(u.output)?u.output:[u.output],n=Object.create(null);for(const t of e)t&&(n[t instanceof bh?`${t._uuid}@import`:`${r}@native`]=t);!function(e,t,n){let i=!1;const s=rm.get(t);if(s){for(let e=0,t=s.length;e<t;e++){const t=s[e],r=n[`${t.uuid}@import`];if(r)t.owner[t.prop]=r.addRef();else{if(d(`The asset ${t.uuid} is missing!`),t.type&&t.type!==bh){const e=new t.type;e.initDefault(t.uuid),t.owner[t.prop]=e}i=!0}}rm.delete(t)}om.has(t)&&(n[`${e}@native`]?t._nativeAsset=n[`${e}@native`]:(i=!0,console.error(`the native asset of ${e} is missing!`)),om.delete(t))}(r,t,n);try{"function"!=typeof t.onLoaded||am.has(t)||om.has(t)||(t.onLoaded(),am.add(t))}catch(e){d(`The asset ${r} is invalid for some reason, detail message: ${e.message}, stack: ${e.stack}`)}Kl.remove(o),$l.remove(o),II(r,t,l),u.recycle()}const n=_.callbacks;for(let i=0,s=n.length;i<s;i++){const s=n[i];t.addRef&&t.addRef(),s.item.content=t,s.done(e)}n.length=0}});Ql.async(u)}(e,i,t)}))}}]);function uR(e,t){const n=e.options,i=Object.create(null),s=Object.create(null);for(const e in n)switch(e){case th.PATH:case th.UUID:case th.DIR:case th.SCENE:case th.URL:break;case"__requestType__":case"__isNative__":case"ext":case"type":case"__nativeName__":case"audioLoadMode":case"bundle":i[e]=n[e];break;case"__exclude__":case"__outputAsArray__":s[e]=n[e];break;default:i[e]=n[e],s[e]=n[e]}e.options=s;const r=sh.create({input:e.input,options:i});let o=null;try{e.output=e.source=eh.sync(r)}catch(e){o=e;for(let e=0,t=r.output.length;e<t;e++)r.output[e].recycle()}r.recycle(),t(o)}class pR{constructor(){this.uuid="",this.url="",this.ext=".json",this.content=null,this.file=null,this.info=null,this.config=null,this.isNative=!1,this.options=Object.create(null),this._id=""}get id(){return this._id||(this._id=`${this.uuid}@${this.isNative?"native":"import"}`),this._id}static create(){let e;return e=0!==pR._deadPool.length?pR._deadPool.pop():new pR,e}recycle(){pR._deadPool.length!==pR.MAX_DEAD_NUM&&(this._id="",this.uuid="",this.url="",this.ext=".json",this.content=null,this.file=null,this.info=null,this.config=null,this.isNative=!1,this.options=Object.create(null),pR._deadPool.push(this))}}pR.MAX_DEAD_NUM=500,pR._deadPool=[];const dR=[];function fR(e){var t;const n=e.options,i=Array.isArray(e.input)?e.input:[e.input];e.output=[];for(let r=0;r<i.length;r++){let o=i[r],a=pR.create(),c=null,l=null;if("string"==typeof o&&(o=Object.create(null),o[n.__requestType__||th.UUID]=i[r]),"object"==typeof o){ae(o,n),o.preset&&ae(o,nh[o.preset]);for(const e in o){switch(e){case th.UUID:{var s;const e=a.uuid=lh(o.uuid);if(!o.bundle){const t=Zl.find((t=>!!t.getAssetInfo(e)));o.bundle=t&&t.name}if(Zl.has(o.bundle)){if(c=Zl.get(o.bundle).config,l=c.getAssetInfo(e),l&&l.redirect){if(!Zl.has(l.redirect))throw new Error(`Please load bundle ${l.redirect} first`);c=Zl.get(l.redirect).config,l=c.getAssetInfo(e)}a.config=c,a.info=l}a.ext=o.ext||(null===(s=l)||void 0===s?void 0:s.extension)||".json";break}case"__requestType__":case"ext":case"bundle":case"preset":case"type":break;case th.DIR:if(Zl.has(o.bundle)){Zl.get(o.bundle).config.getDirWithPath(o.dir,o.type,dR);for(const e of dR)i.push({uuid:e.uuid,__isNative__:!1,ext:e.extension||".json",bundle:o.bundle});dR.length=0}a.recycle(),a=null;break;case th.PATH:if(Zl.has(o.bundle)){if(c=Zl.get(o.bundle).config,l=c.getInfoWithPath(o.path,o.type),l&&l.redirect){if(!Zl.has(l.redirect))throw new Error(`you need to load bundle ${l.redirect} first`);c=Zl.get(l.redirect).config,l=c.getAssetInfo(l.uuid)}if(!l)throw a.recycle(),new Error(`Bundle ${o.bundle} doesn't contain ${o.path}`);a.config=c,a.uuid=l.uuid,a.info=l}a.ext=o.ext||(null===(t=l)||void 0===t?void 0:t.extension)||".json";break;case th.SCENE:if(!o.bundle){const e=Zl.find((e=>!!e.getSceneInfo(o.scene)));o.bundle=e&&e.name}if(Zl.has(o.bundle)){if(c=Zl.get(o.bundle).config,l=c.getSceneInfo(o.scene),l&&l.redirect){if(!Zl.has(l.redirect))throw new Error(`you need to load bundle ${l.redirect} first`);c=Zl.get(l.redirect).config,l=c.getAssetInfo(l.uuid)}if(!l)throw a.recycle(),new Error(`Bundle ${c.name} doesn't contain scene ${o.scene}`);a.config=c,a.uuid=l.uuid,a.info=l}break;case"__isNative__":a.isNative=o.__isNative__;break;case th.URL:a.url=o.url,a.uuid=o.uuid||o.url,a.ext=o.ext||nn(o.url),a.isNative=void 0===o.__isNative__||o.__isNative__;break;default:a.options[e]=o[e]}if(!a)break}}if(a&&(e.output.push(a),!a.uuid&&!a.url))throw new Error(`Can not parse this input:${JSON.stringify(o)}`)}return null}function mR(e){const t=e.output=e.input;for(let e=0;e<t.length;e++){const n=t[e];if(n.url)continue;let s="",r="";const o=n.config;r=n.isNative?o&&o.nativeBase?o.base+o.nativeBase:i.assetManager.generalNativeBase:o&&o.importBase?o.base+o.importBase:i.assetManager.generalImportBase;const a=n.uuid;let c="";n.info&&(c=n.isNative?n.info.nativeVer?`.${n.info.nativeVer}`:"":n.info.ver?`.${n.info.ver}`:""),s=".ttf"===n.ext?`${r}/${a.slice(0,2)}/${a}${c}/${n.options.__nativeName__}`:`${r}/${a.slice(0,2)}/${a}${c}${n.ext}`,n.url=s}return null}class gR{constructor(){this.pipeline=Ql.append(uR).append(hR),this.fetchPipeline=Jl.append(uR).append(rR),this.transformPipeline=eh.append(fR).append(mR),this.bundles=Zl,this.assets=Yl,this.generalImportBase="",this.generalNativeBase="",this.dependUtil=hm,this.force=!1,this.allowImageBitmap=!e_.isMobile,this.utils=mh,this.downloader=$I,this.parser=lR,this.packManager=sR,this.cacheAsset=!0,this.cacheManager=null,this.presets=nh,this.factory=iR,this.preprocessPipe=uR,this.fetchPipe=rR,this.loadPipe=hR,this.references=null,this._releaseManager=TI,this._files=Kl,this._parsed=$l,this._parsePipeline=null}get main(){return Zl.get(ih.MAIN)||null}get resources(){return Zl.get(ih.RESOURCES)||null}init(e={}){this._files.clear(),this._parsed.clear(),this._releaseManager.init(),this.assets.clear(),this.bundles.clear(),this.packManager.init(),this.downloader.init(e.server,e.bundleVers,e.remoteBundles),this.parser.init(),this.dependUtil.init();let t=e.importBase||"";t&&t.endsWith("/")&&(t=t.substr(0,t.length-1));let n=e.nativeBase||"";n&&n.endsWith("/")&&(n=n.substr(0,n.length-1)),this.generalImportBase=t,this.generalNativeBase=n}getBundle(e){return Zl.get(e)||null}removeBundle(e){e._destroy(),Zl.remove(e.name)}loadAny(e,t,n,i){const{options:s,onProgress:r,onComplete:o}=DI(t,n,i);s.preset=s.preset||"default",e=Array.isArray(e)?e.slice():e;const a=sh.create({input:e,onProgress:r,onComplete:NI(o),options:s});Ql.async(a)}preloadAny(e,t,n,i){const{options:s,onProgress:r,onComplete:o}=DI(t,n,i);s.preset=s.preset||"preload",e=Array.isArray(e)?e.slice():e;const a=sh.create({input:e,onProgress:r,onComplete:NI(o),options:s});Jl.async(a)}loadRemote(e,t,n){const{options:i,onComplete:s}=DI(t,void 0,n);i.reloadAsset||!this.assets.has(e)?(i.__isNative__=!0,i.preset=i.preset||"remote",this.loadAny({url:e},i,null,((t,n)=>{t?(d(t.message,t.stack),s&&s(t,n)):iR.create(e,n,i.ext||nn(e),i,((e,t)=>{s&&s(e,t)}))}))):NI(s)(null,this.assets.get(e))}loadBundle(e,t,n){const{options:i,onComplete:s}=DI(t,void 0,n),r=rn(e);this.bundles.has(r)?NI(s)(null,this.getBundle(r)):(i.preset=i.preset||"bundle",i.ext="bundle",i.__isNative__=!0,this.loadAny({url:e},i,null,((t,n)=>{t?(d(t.message,t.stack),s&&s(t,n)):iR.create(e,n,"bundle",i,((e,t)=>{s&&s(e,t)}))})))}releaseAsset(e){TI.tryRelease(e,!0)}releaseUnusedAssets(){Yl.forEach((e=>{TI.tryRelease(e)}))}releaseAll(){Yl.forEach((e=>{TI.tryRelease(e,!0)}))}loadWithJson(e,t,n,i){throw new Error("Only valid in Editor")}}e("AssetManager",gR),gR.Pipeline=Xl,gR.Task=sh,gR.Cache=ql,gR.RequestItem=pR,gR.Bundle=LI,gR.BuiltinBundleName=ih;var vR=e("assetManager",i.assetManager=new gR);i.AssetManager=gR;const yR=[".png",".jpg",".bmp",".jpeg",".gif",".ico",".tiff",".webp",".image",".pvr",".pkm",".astc"],xR=[".mp3",".ogg",".wav",".m4a"];function SR(){return!0}const CR={transformURL(e){const t=_h(e);if(!t)return e;const n=Zl.find((e=>!!e.getAssetInfo(t)));if(!n)return e;let i="";const s=n.getAssetInfo(t);if(i=e.startsWith(n.base+n.config.nativeBase)?s.nativeVer||"":s.ver||"",!i||-1!==e.indexOf(i))return e;let r=!1;if(".ttf"===nn(e)&&(r=!0),r){const t=on(e),n=rn(e);e=`${t}.${i}/${n}`}else e=e.replace(/.*[/\\][0-9a-fA-F]{2}[/\\]([0-9a-fA-F-@]{8,})/,(e=>`${e}.${i}`));return e}};class TR{constructor(){this._autoReleaseSetting=Object.create(null),this._parseLoadResArgs=OI}set onProgress(e){bI=e}get _cache(){if(Yl instanceof ql)return Yl._map;{const e={};return Yl.forEach(((t,n)=>{e[n]=t})),e}}load(e,t,n){void 0===n&&void 0!==t&&(n=t,t=null);const i=Array.isArray(e)?e:[e];for(let e=0;e<i.length;e++){const t=i[e];"string"==typeof t?i[e]={url:t,__isNative__:!0}:(t.type&&(t.ext=`.${t.type}`,t.type=void 0),t.url&&(t.__isNative__=!0))}const s=[],r=[];vR.loadAny(i,null,((e,n,i)=>{i.content&&(yR.includes(i.ext)?s.push(i.content):xR.includes(i.ext)&&r.push(i.content)),t&&t(e,n,i)}),((e,t)=>{let o=null;if(!e){t=Array.isArray(t)?t:[t];for(let e=0;e<t.length;e++){const n=t[e];if(!(n instanceof bh)){let o=n;const a=i[e].url;s.includes(o)?iR.create(a,n,".png",{},((n,i)=>{o=t[e]=i})):r.includes(o)&&iR.create(a,n,".mp3",{},((n,i)=>{o=t[e]=i})),Yl.add(a,o)}}if(t.length>1){const e=Object.create(null);t.forEach((t=>{e[t._uuid]=t})),o={isCompleted:SR,_map:e}}else o=t[0]}n&&n(e,o)}))}getXMLHttpRequest(){return new XMLHttpRequest}getItem(e){return vR.assets.has(e)?{content:vR.assets.get(e)}:null}loadRes(e,t,n,i){const{type:s,onProgress:r,onComplete:o}=this._parseLoadResArgs(t,n,i),a=nn(e);a&&!zI.getInfoWithPath(e,s)&&(e=e.slice(0,-a.length)),zI.load(e,s,r,o)}loadResArray(e,t,n,i){const{type:s,onProgress:r,onComplete:o}=this._parseLoadResArgs(t,n,i);e.forEach(((t,n)=>{const i=nn(t);i&&!zI.getInfoWithPath(t,s)&&(e[n]=t.slice(0,-i.length))})),zI.load(e,s,r,o)}loadResDir(e,t,n,i){const{type:s,onProgress:r,onComplete:o}=this._parseLoadResArgs(t,n,i);zI.loadDir(e,s,r,((t,n)=>{let i=[];t||(i=zI.getDirWithPath(e,s).map((e=>e.path))),o&&o(t,n,i)}))}getRes(e,t){return Yl.has(e)?Yl.get(e):zI.get(e,t)}getResCount(){return Yl.count}getDependsRecursively(e){if(!e)return[];const t="string"==typeof e?e:e._uuid;return hm.getDepsRecursively(t).concat([t])}get md5Pipe(){return CR}get downloader(){return $I}get loader(){return vR.parser}addDownloadHandlers(e){const t=Object.create(null);for(const n in e){const i=e[n];t[`.${n}`]=(e,t,n)=>{i({url:e},n)}}$I.register(t)}addLoadHandlers(e){const t=Object.create(null);for(const n in e){const i=e[n];t[`.${n}`]=(e,t,n)=>{i({content:e},n)}}lR.register(t)}release(e){if(Array.isArray(e))for(let t=0;t<e.length;t++){let n=e[t];"string"==typeof n&&(n=Yl.get(n)),vR.releaseAsset(n)}else e&&("string"==typeof e&&(e=Yl.get(e)),vR.releaseAsset(e))}releaseAsset(e){vR.releaseAsset(e)}releaseRes(e,t){zI.release(e,t)}releaseAll(){vR.releaseAll(),Yl.clear()}removeItem(e){return!!Yl.remove(e)}setAutoRelease(e,t){"object"==typeof e&&(e=e._uuid),this._autoReleaseSetting[e]=!!t}setAutoReleaseRecursively(e,t){"object"==typeof e&&(e=e._uuid),t=!!t,this._autoReleaseSetting[e]=t;const n=hm.getDepsRecursively(e);for(let e=0;e<n.length;e++)this._autoReleaseSetting[n[e]]=t}isAutoRelease(e){return"object"==typeof e&&(e=e._uuid),!!this._autoReleaseSetting[e]}}e("CCLoader",TR);const bR=e("loader",new TR),ER=e("AssetLibrary",{init(e){e.importBase=e.libraryPath,e.nativeBase=e.rawAssetsBase,vR.init(e),e.rawAssets&&zI.init({base:"",deps:[],scenes:{},redirect:[],debug:!0,packs:{},types:[],versions:{import:[],native:[]},name:ih.RESOURCES,importBase:e.importBase,nativeBase:e.nativeBase,paths:e.rawAssets.assets,uuids:Object.keys(e.rawAssets.assets),extensionMap:{}})},loadAsset(e,t,n){vR.loadAny(e,t)}}),AR=e("url",{});Cn(AR,"url",[{name:"normalize",target:vR.utils,targetName:"assetManager.utils",newName:"normalize"},{name:"raw",targetName:"Asset.prototype",newName:"nativeUrl",customFunction:e=>e.startsWith("resources/")?fh({path:an(e.substr(10)),bundle:ih.RESOURCES,__isNative__:!0,ext:nn(e)}):""}]),Tn(ER,"AssetLibrary",[{name:"getLibUrlNoExt",suggest:"AssetLibrary.getLibUrlNoExt was removed, if you want to transform url, please use cc.assetManager.utils.getUrlWithUuid instead"},{name:"queryAssetInfo",suggest:"AssetLibrary.queryAssetInfo was removed"}]),Tn(bR,"loader",[{name:"releaseResDir",suggest:"loader.releaseResDir was removed, please use assetManager.releaseAsset instead"},{name:"flowInDeps",suggest:"loader.flowInDeps was removed"},{name:"assetLoader",suggest:"cc.loader.assetLoader was removed, assetLoader and md5Pipe were merged into cc.assetManager.transformPipeline"}]),Cn(i,"cc",[{name:"loader",newName:"assetManager",logTimes:1,customGetter:()=>bR},{name:"AssetLibrary",newName:"assetManager",logTimes:1,customGetter:()=>ER},{name:"Pipeline",target:gR,targetName:"AssetManager",newName:"Pipeline",logTimes:1},{name:"url",targetName:"assetManager",newName:"utils",logTimes:1,customGetter:()=>AR}]),Tn(i,"cc",[{name:"LoadingItems",suggest:I(1400,"cc.LoadingItems","cc.AssetManager.Task")}]),Cn(Ue,"macro",[{name:"DOWNLOAD_MAX_CONCURRENT",target:$I,targetName:"assetManager.downloader",newName:"maxConcurrency"}]),Cn(aI,"director",[{name:"_getSceneUuid",targetName:"assetManager.main",newName:"getSceneInfo",customFunction:e=>{var t;return vR.main?null===(t=vR.main.getSceneInfo(e))||void 0===t?void 0:t.uuid:""}}]),Cn(rI,"game",[{name:"_sceneInfos",targetName:"assetManager.main",newName:"getSceneInfo",customGetter:()=>{const e=[];return vR.main&&vR.main.config.scenes.forEach((t=>{e.push(t)})),e}}]);const PR=TI._autoRelease;var wR,IR,RR,DR,OR,MR,NR,LR,zR,FR,BR,UR,GR;TI._autoRelease=function(e,t,n){PR.call(TI,e,t,n);const i=bR._autoReleaseSetting,s=Object.keys(i);for(let e=0;e<s.length;e++){const t=s[e];if(!0===i[t]){const e=Yl.get(t);e&&TI.tryRelease(e)}}};let HR=e("EventHandler",(wR=Zc("cc.ClickEvent"),IR=Ol(i.Node),RR=vl(),DR=vl(),OR=vl(),MR=vl(),wR((zR=Bc((LR=class e{constructor(){Fc(this,"target",zR,this),Fc(this,"component",FR,this),Fc(this,"_componentId",BR,this),Fc(this,"handler",UR,this),Fc(this,"customEventData",GR,this)}get _componentName(){return this._genCompIdIfNeeded(),this._compId2Name(this._componentId)}set _componentName(e){this._componentId=this._compName2Id(e)}static emitEvents(t,...n){for(let i=0,s=t.length;i<s;i++){const s=t[i];s instanceof e&&s.emit(n)}}emit(e){const t=this.target;if(!i.isValid(t))return;this._genCompIdIfNeeded();const n=i.js._getClassById(this._componentId),s=t.getComponent(n);if(!i.isValid(s))return;const r=s[this.handler];"function"==typeof r&&(null!=this.customEventData&&""!==this.customEventData&&(e=e.slice()).push(this.customEventData),r.apply(s,e))}_compName2Id(e){const t=i.js.getClassByName(e);return i.js._getClassId(t)}_compId2Name(e){const t=i.js._getClassById(e);return i.js.getClassName(t)}_genCompIdIfNeeded(){this._componentId||(this._componentName=this.component,this.component="")}}).prototype,"target",[il,IR,il,RR],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),FR=Bc(LR.prototype,"component",[il,dl,DR],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),BR=Bc(LR.prototype,"_componentId",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),UR=Bc(LR.prototype,"handler",[il,dl,OR],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),GR=Bc(LR.prototype,"customEventData",[il,dl,MR],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),NR=LR))||NR));var kR,VR,jR,WR,qR,XR,YR,KR,$R,ZR,QR,JR,eD,tD,nD,iD,sD,rD,oD,aD,cD,lD,hD,_D,uD,pD,dD,fD,mD,gD,vD,yD,xD,SD,CD,TD,bD,ED,AD,PD,wD,ID,RD,DD,OD,MD,ND,LD,zD,FD,BD,UD,GD,HD,kD,VD,jD,WD,qD,XD,YD,KD,$D,ZD,QD,JD,eO;i.Component.EventHandler=HR;const tO=new ri,nO=Ne(Cf),iO=Ne(Sf),sO=Ne(Tf),rO=Ne(Ef),oO=Ne(bf),aO=Ne({SKYBOX:Of|vr.DEPTH_STENCIL,SOLID_COLOR:vr.ALL,DEPTH_ONLY:vr.DEPTH_STENCIL,DONT_CLEAR:vr.NONE});let cO=(kR=Zc("cc.Camera"),VR=pl(),jR=ll(),WR=bl(),qR=vl(),XR=Ol(_d.BitMask),YR=bl(),KR=vl(),$R=Ol(aO),ZR=bl(),QR=vl(),JR=bl(),eD=vl(),tD=bl(),nD=vl(),iD=bl(),sD=vl(),rD=Ol(nO),oD=bl(),aD=vl(),cD=Ol(iO),lD=bl(),hD=vl(),_D=bl(),uD=vl(),pD=bl(),dD=vl(),fD=bl(),mD=vl(),gD=bl(),vD=vl(),yD=Ol(sO),xD=bl(),SD=vl(),CD=Ol(rO),TD=bl(),bD=vl(),ED=Ol(oO),AD=bl(),PD=vl(),wD=bl(),ID=vl(),RD=Ol(KC),DD=bl(),OD=vl(),lO=kR(MD=VR(MD=jR(MD=cl((eO=JD=class e extends jh{constructor(...e){super(...e),Fc(this,"_projection",LD,this),Fc(this,"_priority",zD,this),Fc(this,"_fov",FD,this),Fc(this,"_fovAxis",BD,this),Fc(this,"_orthoHeight",UD,this),Fc(this,"_near",GD,this),Fc(this,"_far",HD,this),Fc(this,"_color",kD,this),Fc(this,"_depth",VD,this),Fc(this,"_stencil",jD,this),Fc(this,"_clearFlags",WD,this),Fc(this,"_rect",qD,this),Fc(this,"_aperture",XD,this),Fc(this,"_shutter",YD,this),Fc(this,"_iso",KD,this),Fc(this,"_screenScale",$D,this),Fc(this,"_visibility",ZD,this),Fc(this,"_targetTexture",QD,this),this._camera=null,this._inEditorMode=!1,this._flows=void 0}get camera(){return this._camera}get priority(){return this._priority}set priority(e){this._priority=e,this._camera&&(this._camera.priority=e)}get visibility(){return this._visibility}set visibility(e){this._visibility=e,this._camera&&(this._camera.visibility=e)}get clearFlags(){return this._clearFlags}set clearFlags(e){this._clearFlags=e,this._camera&&(this._camera.clearFlag=e)}get clearColor(){return this._color}set clearColor(e){this._color.set(e),this._camera&&(this._camera.clearColor=this._color)}get clearDepth(){return this._depth}set clearDepth(e){this._depth=e,this._camera&&(this._camera.clearDepth=e)}get clearStencil(){return this._stencil}set clearStencil(e){this._stencil=e,this._camera&&(this._camera.clearStencil=e)}get projection(){return this._projection}set projection(e){this._projection=e,this._camera&&(this._camera.projectionType=e)}get fovAxis(){return this._fovAxis}set fovAxis(e){e!==this._fovAxis&&(this._fovAxis=e,this._camera&&(this._camera.fovAxis=e,e===Sf.VERTICAL?this.fov=this._fov*this._camera.aspect:this.fov=this._fov/this._camera.aspect))}get fov(){return this._fov}set fov(e){this._fov=e,this._camera&&(this._camera.fov=Un(e))}get orthoHeight(){return this._orthoHeight}set orthoHeight(e){this._orthoHeight=e,this._camera&&(this._camera.orthoHeight=e)}get near(){return this._near}set near(e){this._near=e,this._camera&&(this._camera.nearClip=e)}get far(){return this._far}set far(e){this._far=e,this._camera&&(this._camera.farClip=e)}get aperture(){return this._aperture}set aperture(e){this._aperture=e,this._camera&&(this._camera.aperture=e)}get shutter(){return this._shutter}set shutter(e){this._shutter=e,this._camera&&(this._camera.shutter=e)}get iso(){return this._iso}set iso(e){this._iso=e,this._camera&&(this._camera.iso=e)}get rect(){return this._rect}set rect(e){this._rect=e,this._camera&&this._camera.setViewportInOrientedSpace(e)}get targetTexture(){return this._targetTexture}set targetTexture(t){if(this._targetTexture===t)return;const n=this._targetTexture;this._targetTexture=t,this._checkTargetTextureEvent(n),this._updateTargetTexture(),!t&&this._camera&&(this._camera.changeTargetWindow(null),this._camera.isWindowSize=!0),this.node.emit(e.TARGET_TEXTURE_CHANGE,this)}get screenScale(){return this._screenScale}set screenScale(e){this._screenScale=e,this._camera&&(this._camera.screenScale=e)}get inEditorMode(){return this._inEditorMode}set inEditorMode(e){this._inEditorMode=e,this._camera&&this._camera.changeTargetWindow(e?i.director.root&&i.director.root.mainWindow:i.director.root&&i.director.root.tempWindow)}onLoad(){this._createCamera()}onEnable(){this.node.hasChangedFlags|=gg.POSITION,this._camera&&this._attachToScene()}onDisable(){this._camera&&this._detachFromScene()}onDestroy(){this._camera&&(this._camera.destroy(),this._camera=null),this._targetTexture&&this._targetTexture.off("resize")}screenPointToRay(e,t,n){return n||(n=Cs.create()),this._camera&&this._camera.screenPointToRay(n,e,t),n}worldToScreen(e,t){return t||(t=new ri),this._camera&&this._camera.worldToScreen(t,e),t}screenToWorld(e,t){return t||(t=this.node.getWorldPosition()),this._camera&&this._camera.screenToWorld(t,e),t}convertToUINode(e,t,n){if(n||(n=new ri),!this._camera)return n;this.worldToScreen(e,tO);const s=t.getComponent("cc.UITransform"),r=mI.getVisibleSize(),o=tO.x-.5*this._camera.width,a=tO.y-.5*this._camera.height;return tO.x=o/i.view.getScaleX()+.5*r.width,tO.y=a/i.view.getScaleY()+.5*r.height,s&&s.convertToNodeSpaceAR(tO,n),n}_createCamera(){this._camera||(this._camera=i.director.root.createCamera(),this._camera.initialize({name:this.node.name,node:this.node,projection:this._projection,window:this._inEditorMode?i.director.root&&i.director.root.mainWindow:i.director.root&&i.director.root.tempWindow,priority:this._priority}),this._camera.setViewportInOrientedSpace(this._rect),this._camera.fovAxis=this._fovAxis,this._camera.fov=Un(this._fov),this._camera.orthoHeight=this._orthoHeight,this._camera.nearClip=this._near,this._camera.farClip=this._far,this._camera.clearColor=this._color,this._camera.clearDepth=this._depth,this._camera.clearStencil=this._stencil,this._camera.clearFlag=this._clearFlags,this._camera.visibility=this._visibility,this._camera.aperture=this._aperture,this._camera.shutter=this._shutter,this._camera.iso=this._iso),this._updateTargetTexture()}_attachToScene(){this.node.scene&&this._camera&&(this._camera&&this._camera.scene&&this._camera.scene.removeCamera(this._camera),this._getRenderScene().addCamera(this._camera))}_detachFromScene(){this._camera&&this._camera.scene&&this._camera.scene.removeCamera(this._camera)}_checkTargetTextureEvent(e){e&&e.off("resize"),this._targetTexture&&this._targetTexture.on("resize",(e=>{this._camera&&this._camera.setFixedSize(e.width,e.height)}),this)}_updateTargetTexture(){if(this._camera&&this._targetTexture){const e=this._targetTexture.window;this._camera.changeTargetWindow(e),this._camera.setFixedSize(e.width,e.height)}}},JD.ProjectionType=nO,JD.FOVAxis=iO,JD.ClearFlag=aO,JD.Aperture=sO,JD.Shutter=rO,JD.ISO=oO,JD.TARGET_TEXTURE_CHANGE="tex-change",LD=Bc((ND=eO).prototype,"_projection",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return nO.PERSPECTIVE}}),zD=Bc(ND.prototype,"_priority",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),FD=Bc(ND.prototype,"_fov",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 45}}),BD=Bc(ND.prototype,"_fovAxis",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return iO.VERTICAL}}),UD=Bc(ND.prototype,"_orthoHeight",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 10}}),GD=Bc(ND.prototype,"_near",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),HD=Bc(ND.prototype,"_far",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1e3}}),kD=Bc(ND.prototype,"_color",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new ti("#333333")}}),VD=Bc(ND.prototype,"_depth",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),jD=Bc(ND.prototype,"_stencil",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),WD=Bc(ND.prototype,"_clearFlags",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return aO.SOLID_COLOR}}),qD=Bc(ND.prototype,"_rect",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Mi(0,0,1,1)}}),XD=Bc(ND.prototype,"_aperture",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return sO.F16_0}}),YD=Bc(ND.prototype,"_shutter",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return rO.D125}}),KD=Bc(ND.prototype,"_iso",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return oO.ISO100}}),$D=Bc(ND.prototype,"_screenScale",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),ZD=Bc(ND.prototype,"_visibility",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return yf}}),QD=Bc(ND.prototype,"_targetTexture",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Bc(ND.prototype,"priority",[WR,qR],Object.getOwnPropertyDescriptor(ND.prototype,"priority"),ND.prototype),Bc(ND.prototype,"visibility",[XR,YR,KR],Object.getOwnPropertyDescriptor(ND.prototype,"visibility"),ND.prototype),Bc(ND.prototype,"clearFlags",[$R,ZR,QR],Object.getOwnPropertyDescriptor(ND.prototype,"clearFlags"),ND.prototype),Bc(ND.prototype,"clearColor",[JR,eD],Object.getOwnPropertyDescriptor(ND.prototype,"clearColor"),ND.prototype),Bc(ND.prototype,"clearDepth",[tD,nD],Object.getOwnPropertyDescriptor(ND.prototype,"clearDepth"),ND.prototype),Bc(ND.prototype,"clearStencil",[iD,sD],Object.getOwnPropertyDescriptor(ND.prototype,"clearStencil"),ND.prototype),Bc(ND.prototype,"projection",[rD,oD,aD],Object.getOwnPropertyDescriptor(ND.prototype,"projection"),ND.prototype),Bc(ND.prototype,"fovAxis",[cD,lD,hD],Object.getOwnPropertyDescriptor(ND.prototype,"fovAxis"),ND.prototype),Bc(ND.prototype,"fov",[_D,uD],Object.getOwnPropertyDescriptor(ND.prototype,"fov"),ND.prototype),Bc(ND.prototype,"orthoHeight",[pD,dD],Object.getOwnPropertyDescriptor(ND.prototype,"orthoHeight"),ND.prototype),Bc(ND.prototype,"near",[fD,mD],Object.getOwnPropertyDescriptor(ND.prototype,"near"),ND.prototype),Bc(ND.prototype,"far",[gD,vD],Object.getOwnPropertyDescriptor(ND.prototype,"far"),ND.prototype),Bc(ND.prototype,"aperture",[yD,xD,SD],Object.getOwnPropertyDescriptor(ND.prototype,"aperture"),ND.prototype),Bc(ND.prototype,"shutter",[CD,TD,bD],Object.getOwnPropertyDescriptor(ND.prototype,"shutter"),ND.prototype),Bc(ND.prototype,"iso",[ED,AD,PD],Object.getOwnPropertyDescriptor(ND.prototype,"iso"),ND.prototype),Bc(ND.prototype,"rect",[wD,ID],Object.getOwnPropertyDescriptor(ND.prototype,"rect"),ND.prototype),Bc(ND.prototype,"targetTexture",[RD,DD,OD],Object.getOwnPropertyDescriptor(ND.prototype,"targetTexture"),ND.prototype),MD=ND))||MD)||MD)||MD)||MD,e({Camera:lO,CameraComponent:lO}),lO);var lO,hO,_O,uO,pO,dO,fO,mO,gO,vO;i.Camera=cO;const yO={parent:null,owner:null,subModelIdx:0};let xO=e("RenderableComponent",(hO=Zc("cc.RenderableComponent"),_O=Ol([Ug]),uO=Ol(Ug),pO=bl(),dO=gl(),hO((gO=Bc((mO=class extends jh{constructor(...e){super(...e),Fc(this,"_materials",gO,this),Fc(this,"_visFlags",vO,this),this._materialInstances=[],this._models=[]}get visibility(){return this._visFlags}set visibility(e){this._visFlags=e,this._onVisibilityChange(e)}get sharedMaterials(){return this._materials}set sharedMaterials(e){for(let t=0;t<e.length;t++)e[t]!==this._materials[t]&&this.setMaterial(e[t],t);if(e.length<this._materials.length){for(let t=e.length;t<this._materials.length;t++)this.setMaterial(null,t);this._materials.splice(e.length)}}get materials(){for(let e=0;e<this._materials.length;e++)this._materialInstances[e]=this.getMaterialInstance(e);return this._materialInstances}set materials(e){const t=e.length-this._materials.length;if(t>0)this._materials.length=e.length,this._materialInstances.length=e.length;else if(t<0)for(let e=this._materials.length-t;e<this._materials.length;++e)this.setMaterialInstance(null,e);for(let t=0;t<this._materialInstances.length;t++)this._materialInstances[t]!=e[t]&&this.setMaterialInstance(e[t],t)}get sharedMaterial(){return this.getMaterial(0)}getMaterial(e){return e<0||e>=this._materials.length?null:this._materials[e]}setMaterial(e,t){e&&e instanceof tv&&console.error("Can't set a material instance to a sharedMaterial slot"),this._materials[t]=e;const n=this._materialInstances[t];n&&(n.destroy(),this._materialInstances[t]=null),this._onMaterialModified(t,this._materials[t])}get material(){return this.getMaterialInstance(0)}set material(e){(1!==this._materials.length||this._materialInstances[0]||this._materials[0]!==e)&&this.setMaterialInstance(e,0)}getMaterialInstance(e){if(!this._materials[e])return null;if(!this._materialInstances[e]){yO.parent=this._materials[e],yO.owner=this,yO.subModelIdx=e;const t=new tv(yO);yO.parent=null,yO.owner=null,yO.subModelIdx=0,this.setMaterialInstance(t,e)}return this._materialInstances[e]}setMaterialInstance(e,t){if("number"==typeof e){T(12007);const n=e;e=t,t=n}const n=this._materialInstances[t];e&&e.parent?e!==n&&(this._materialInstances[t]=e,this._onMaterialModified(t,e)):(e!==this._materials[t]||n)&&this.setMaterial(e,t)}getRenderMaterial(e){return this._materialInstances[e]||this._materials[e]}_collectModels(){return this._models}_attachToScene(){}_detachFromScene(){}_onMaterialModified(e,t){}_onRebuildPSO(e,t){}_clearMaterials(){}_onVisibilityChange(e){}}).prototype,"_materials",[_O],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),vO=Bc(mO.prototype,"_visFlags",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return _d.Enum.NONE}}),Bc(mO.prototype,"sharedMaterials",[uO,pO,dO],Object.getOwnPropertyDescriptor(mO.prototype,"sharedMaterials"),mO.prototype),fO=mO))||fO));var SO,CO,TO,bO,EO,AO;function PO(e){return"string"==typeof e||"number"==typeof e}i.RenderableComponent=xO,Cn(cO,"Camera",[{name:"CameraClearFlag",newName:"ClearFlag"}]),Cn(cO.prototype,"Camera.prototype",[{name:"color",newName:"clearColor"},{name:"depth",newName:"clearDepth"},{name:"stencil",newName:"clearStencil"}]),i.CameraComponent=cO,Ae.setClassAlias(cO,"cc.CameraComponent");let wO=Zc("cc.animation.HierarchyPath")((TO=Bc((CO=class{constructor(e){Fc(this,"path",TO,this),this.path=e||""}get(e){if(!(e instanceof Yx))return T(3925),null;return e.getChildByPath(this.path)||(T(3926,e.name,this.path),null)}}).prototype,"path",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),SO=CO))||SO,IO=Zc("cc.animation.ComponentPath")((AO=Bc((EO=class{constructor(e){Fc(this,"component",AO,this),this.component=e||""}get(e){if(!(e instanceof Yx))return T(3927),null;return e.getComponent(this.component)||(T(3928,e.name,this.component),null)}}).prototype,"component",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),bO=EO))||bO;var RO,DO,OO,MO,NO;let LO=Zc("cc.animation.UniformProxyFactory")((OO=Bc((DO=class{constructor(e,t){Fc(this,"passIndex",OO,this),Fc(this,"uniformName",MO,this),Fc(this,"channelIndex",NO,this),this.passIndex=t||0,this.uniformName=e||""}forTarget(e){const t=e.passes[this.passIndex],n=t.getHandle(this.uniformName);if(!n)throw new Error(`Material "${e.name}" has no uniform "${this.uniformName}"`);if(ag.getTypeFromHandle(n)<Bs.SAMPLER1D){const i=void 0===this.channelIndex?n:t.getHandle(this.uniformName,this.channelIndex,Bs.FLOAT);if(!i)throw new Error(`Uniform "${this.uniformName} (in material ${e.name}) has no channel ${this.channelIndex}"`);return function(e,t){for(const n of e.shaderInfo.blocks)for(const e of n.members)if(e.name===t)return e.count>1;return!1}(t,this.uniformName)?{set:e=>{t.setUniformArray(i,e)}}:{set:e=>{t.setUniform(i,e)}}}{const e=ag.getBindingFromHandle(n),s=t.properties[this.uniformName],r=s&&s.value?`${s.value}-texture`:km(s.type);let o=Jm.get(r);return o||(p(`Illegal texture default value: ${r}.`),o=Jm.get("default-texture")),{set:n=>{n||(n=o);const s=n.getGFXTexture();s&&s.width&&s.height&&(t.bindTexture(e,s),n instanceof sm&&t.bindSampler(e,i.game._gfxDevice.getSampler(n.getSamplerInfo())))}}}}}).prototype,"passIndex",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),MO=Bc(DO.prototype,"uniformName",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),NO=Bc(DO.prototype,"channelIndex",[Il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){}}),RO=DO))||RO;var zO,FO,BO,UO,GO,HO,kO,VO;let jO=Zc("cc.animation.MorphWeightValueProxy")((BO=Bc((FO=class{constructor(){Fc(this,"subMeshIndex",BO,this),Fc(this,"shapeIndex",UO,this)}forTarget(e){return{set:t=>{e.setWeight(t,this.subMeshIndex,this.shapeIndex)}}}}).prototype,"subMeshIndex",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),UO=Bc(FO.prototype,"shapeIndex",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),zO=FO))||zO,WO=Zc("cc.animation.MorphWeightsValueProxy")((kO=Bc((HO=class{constructor(){Fc(this,"subMeshIndex",kO,this)}forTarget(e){return{set:t=>{e.setWeights(t,this.subMeshIndex)}}}}).prototype,"subMeshIndex",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),GO=HO))||GO,qO=Zc("cc.animation.MorphWeightsAllValueProxy")(VO=class{forTarget(e){return{set:t=>{var n,i;const s=null!==(n=null===(i=e.mesh)||void 0===i?void 0:i.struct.primitives.length)&&void 0!==n?n:0;for(let n=0;n<s;++n)e.setWeights(t,n)}}}})||VO;var XO,YO,KO,$O,ZO;function QO(e,t,n,i){var s,r,o,a,c;let l=new t,h=new t,_=new t,u=Zc(e)((o=Bc((r=class{constructor(e,n,i){Fc(this,"dataPoint",o,this),Fc(this,"inTangent",a,this),Fc(this,"outTangent",c,this),this.dataPoint=e||new t,this.inTangent=n||new t,this.outTangent=i||new t}lerp(e,t,s){const r=this.dataPoint,o=e.dataPoint;h=n(h,this.inTangent,s),_=n(_,e.outTangent,s);const a=t*t*t,c=t*t,u=a-2*c+t,p=-2*a+3*c,d=a-c;return l=n(l,r,2*a-3*c+1),l=i(l,l,h,u),l=i(l,l,o,p),l=i(l,l,_,d),l}getNoLerp(){return this.dataPoint}}).prototype,"dataPoint",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new t}}),a=Bc(r.prototype,"inTangent",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new t}}),c=Bc(r.prototype,"outTangent",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new t}}),s=r))||s;if(t===ui){const e=u.prototype.lerp;u.prototype.lerp=function(t,n,i){const s=e.call(this,t,n,i);return ui.normalize(s,s),s}}return u}const JO=e("CubicSplineVec2Value",QO("cc.CubicSplineVec2Value",bi,bi.multiplyScalar,bi.scaleAndAdd));i.CubicSplineVec2Value=JO;const eM=e("CubicSplineVec3Value",QO("cc.CubicSplineVec3Value",ri,ri.multiplyScalar,ri.scaleAndAdd));i.CubicSplineVec3Value=eM;const tM=e("CubicSplineVec4Value",QO("cc.CubicSplineVec4Value",wi,wi.multiplyScalar,wi.scaleAndAdd));i.CubicSplineVec4Value=tM;const nM=e("CubicSplineQuatValue",QO("cc.CubicSplineQuatValue",ui,ui.multiplyScalar,ui.scaleAndAdd));i.CubicSplineQuatValue=nM;let iM=e("CubicSplineNumberValue",Zc("cc.CubicSplineNumberValue")((KO=Bc((YO=class{constructor(e,t,n){Fc(this,"dataPoint",KO,this),Fc(this,"inTangent",$O,this),Fc(this,"outTangent",ZO,this),this.dataPoint=e,this.inTangent=t,this.outTangent=n}lerp(e,t,n){const i=this.dataPoint,s=e.dataPoint,r=t*t*t,o=t*t;return i*(2*r-3*o+1)+this.outTangent*n*(r-2*o+t)+s*(-2*r+3*o)+e.inTangent*n*(r-o)}getNoLerp(){return this.dataPoint}}).prototype,"dataPoint",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),$O=Bc(YO.prototype,"inTangent",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),ZO=Bc(YO.prototype,"outTangent",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),XO=YO))||XO);i.CubicSplineNumberValue=iM;const sM=Symbol("CreateEval");var rM,oM,aM,cM,lM,hM,_M,uM,pM,dM,fM,mM,gM,vM,yM,xM;const SM=Symbol("NormalizedFollow"),CM=Symbol("ConvertAsTrsPath"),TM=Symbol("TrackBinding");let bM=Zc("cc.animation.TrackPath")((aM=Bc((oM=class e{constructor(){Fc(this,"_paths",aM,this)}get length(){return this._paths.length}toProperty(e){return this._paths.push(e),this}toElement(e){return this._paths.push(e),this}toHierarchy(e){return this._paths.push(new wO(e)),this}toComponent(e){const t=new IO("string"==typeof e?e:Ae.getClassName(e));return this._paths.push(t),this}toCustomized(e){return this._paths.push(e),this}append(...e){const t=this._paths.concat(...e.map((e=>e._paths)));return this._paths=t,this}isPropertyAt(e){return"string"==typeof this._paths[e]}parsePropertyAt(e){return this._paths[e]}isElementAt(e){return"number"==typeof this._paths[e]}parseElementAt(e){return this._paths[e]}isHierarchyAt(e){return this._paths[e]instanceof wO}parseHierarchyAt(e){return this.isHierarchyAt(e),this._paths[e].path}isComponentAt(e){return this._paths[e]instanceof IO}parseComponentAt(e){return this.isComponentAt(e),this._paths[e].component}slice(t,n){const i=new e;return i._paths=this._paths.slice(t,n),i}trace(e,t,n){var i,s;return null!==(i=t)&&void 0!==i||(t=0),null!==(s=n)&&void 0!==s||(n=this._paths.length),this[SM](e,t,n)}[CM](){const{_paths:e}=this,t=e.length;let n,i=0,s="";for(;i<t;++i){const t=e[i];if(!(t instanceof wO))break;t.path&&(s?s+=`/${t.path}`:s=t.path)}if(i===t)return null;if(i!==t-1)return null;switch(e[i]){case"position":case"scale":case"rotation":case"eulerAngles":n=e[i];break;default:return null}return{node:s,property:n}}[SM](e,t,n){const{_paths:i}=this;let s=e;for(let e=t;e<n;++e){const t=i[e];if(PO(t)){if(!(t in s))return T(3929,t),null;s=s[t]}else s=t.get(s);if(null===s)break}return s}}).prototype,"_paths",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),rM=oM))||rM,EM=Zc("cc.animation.TrackBinding")(cM=al((hM=Bc((lM=class{constructor(){Fc(this,"path",hM,this),Fc(this,"proxy",_M,this)}parseTrsPath(){return this.proxy?null:this.path[CM]()}createRuntimeBinding(e,t,n){const{path:i,proxy:s}=this,r=i.length,o=r-1;if(0===r||!i.isPropertyAt(o)&&!i.isElementAt(o)||s){if(s){const t=i[SM](e,0,r);if(null===t)return null;const n=s.forTarget(t),o={setValue:e=>{n.set(e)}},a=n.get;return a&&(o.getValue=()=>a.call(n)),o}return E(3921),null}{const s=i.isPropertyAt(o)?i.parsePropertyAt(o):i.parseElementAt(o),c=i[SM](e,0,r-1);return null===c?null:t&&c instanceof Yx&&("position"===(a=s)||"rotation"===a||"scale"===a||"eulerAngles"===a)?t.createPoseWriter(c,s,n):{setValue:e=>{c[s]=e},getValue:()=>c[s]}}var a}}).prototype,"path",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new bM}}),_M=Bc(lM.prototype,"proxy",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),cM=lM))||cM)||cM,AM=Zc("cc.animation.Track")((dM=Bc((pM=class{constructor(){Fc(this,"_binding",dM,this)}get path(){return this._binding.path}set path(e){this._binding.path=e}get proxy(){return this._binding.proxy}set proxy(e){this._binding.proxy=e}get[TM](){return this._binding}channels(){return[]}range(){const e={min:1/0,max:-1/0};for(const t of this.channels())e.min=Math.min(e.min,t.curve.rangeMin),e.max=Math.max(e.max,t.curve.rangeMax);return e}}).prototype,"_binding",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new EM}}),uM=pM))||uM,PM=Zc("cc.animation.Channel")((gM=Bc((mM=class{constructor(e){this.name="",Fc(this,"_curve",gM,this),this._curve=e}get curve(){return this._curve}}).prototype,"_curve",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),fM=mM))||fM,wM=Zc("cc.animation.SingleChannelTrack")((xM=Bc((yM=class extends AM{constructor(){super(),Fc(this,"_channel",xM,this),this._channel=new PM(this.createCurve())}get channel(){return this._channel}channels(){return[this._channel]}createCurve(){throw new Error("Not impl")}[sM](e){const{curve:t}=this._channel;return new IM(t)}}).prototype,"_channel",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),vM=yM))||vM;class IM{constructor(e){this._curve=e}evaluate(e){return this._curve.evaluate(e)}}var RM;let DM=Zc("cc.animation.RealTrack")(RM=class extends wM{createCurve(){return new tp}})||RM;function OM(e){return 0===e.keyFramesCount?void 0:e}var MM,NM,LM,zM;const FM=["X","Y","Z","W"];let BM=Zc("cc.animation.VectorTrack")((LM=Bc((NM=class extends AM{constructor(){super(),Fc(this,"_channels",LM,this),Fc(this,"_nComponents",zM,this),this._channels=new Array(4);for(let e=0;e<this._channels.length;++e){const t=new PM(new tp);t.name=FM[e],this._channels[e]=t}}get componentsCount(){return this._nComponents}set componentsCount(e){this._nComponents=e}channels(){return this._channels}[sM](){switch(this._nComponents){default:case 2:return new UM(OM(this._channels[0].curve),OM(this._channels[1].curve));case 3:return new GM(OM(this._channels[0].curve),OM(this._channels[1].curve),OM(this._channels[2].curve));case 4:return new HM(OM(this._channels[0].curve),OM(this._channels[1].curve),OM(this._channels[2].curve),OM(this._channels[3].curve))}}}).prototype,"_channels",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),zM=Bc(NM.prototype,"_nComponents",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 4}}),MM=NM))||MM;class UM{constructor(e,t){this._result=new bi,this._x=e,this._y=t}evaluate(e,t){return this._x&&this._y||!t.getValue||bi.copy(this._result,t.getValue()),this._x&&(this._result.x=this._x.evaluate(e)),this._y&&(this._result.y=this._y.evaluate(e)),this._result}}class GM{constructor(e,t,n){this._result=new ri,this._x=e,this._y=t,this._z=n}evaluate(e,t){return this._x&&this._y&&this._z||!t.getValue||ri.copy(this._result,t.getValue()),this._x&&(this._result.x=this._x.evaluate(e)),this._y&&(this._result.y=this._y.evaluate(e)),this._z&&(this._result.z=this._z.evaluate(e)),this._result}}class HM{constructor(e,t,n,i){this._result=new wi,this._x=e,this._y=t,this._z=n,this._w=i}evaluate(e,t){return this._x&&this._y&&this._z&&this._w||!t.getValue||wi.copy(this._result,t.getValue()),this._x&&(this._result.x=this._x.evaluate(e)),this._y&&(this._result.y=this._y.evaluate(e)),this._z&&(this._result.z=this._z.evaluate(e)),this._w&&(this._result.w=this._w.evaluate(e)),this._result}}var kM;let VM=Zc("cc.animation.QuatTrack")(kM=class extends wM{createCurve(){return new Up}[sM](){return new jM(this.channels()[0].curve)}})||kM;class jM{constructor(e){this._result=new ui,this._curve=e}evaluate(e){return this._curve.evaluate(e,this._result),this._result}}var WM,qM,XM;const YM=["Red","Green","Blue","Alpha"];let KM=Zc("cc.animation.ColorTrack")((XM=Bc((qM=class extends AM{constructor(){super(),Fc(this,"_channels",XM,this),this._channels=new Array(4);for(let e=0;e<this._channels.length;++e){const t=new PM(new tp);t.name=YM[e],this._channels[e]=t}}channels(){return this._channels}[sM](){return new $M(OM(this._channels[0].curve),OM(this._channels[1].curve),OM(this._channels[2].curve),OM(this._channels[3].curve))}}).prototype,"_channels",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),WM=qM))||WM;class $M{constructor(e,t,n,i){this._result=new ti,this._x=e,this._y=t,this._z=n,this._w=i}evaluate(e,t){return this._x&&this._y&&this._z&&this._w||!t.getValue||ti.copy(this._result,t.getValue()),this._x&&(this._result.r=this._x.evaluate(e)),this._y&&(this._result.g=this._y.evaluate(e)),this._z&&(this._result.b=this._z.evaluate(e)),this._w&&(this._result.a=this._w.evaluate(e)),this._result}}var ZM,QM,JM;const eN=["Width","Height"];let tN=Zc("cc.animation.SizeTrack")((JM=Bc((QM=class extends AM{constructor(){super(),Fc(this,"_channels",JM,this),this._channels=new Array(2);for(let e=0;e<this._channels.length;++e){const t=new PM(new tp);t.name=eN[e],this._channels[e]=t}}channels(){return this._channels}[sM](){return new nN(OM(this._channels[0].curve),OM(this._channels[1].curve))}}).prototype,"_channels",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),ZM=QM))||ZM;class nN{constructor(e,t){this._result=new Di,this._width=e,this._height=t}evaluate(e,t){if((!this._width||!this._height)&&t.getValue){const e=t.getValue();this._result.x=e.x,this._result.y=e.y}return this._width&&(this._result.width=this._width.evaluate(e)),this._height&&(this._result.height=this._height.evaluate(e)),this._result}}var iN;let sN=Zc("cc.animation.ObjectTrack")(iN=class extends wM{createCurve(){return new $p}})||iN;const rN=Symbol("[[Owner]]");function oN(e){e[rN]}class aN extends Error{constructor(e){super(`${e} transition is invalid`),this.name="TransitionRejectError"}}class cN extends Error{constructor(e){super(`Graph variable ${e} is not defined`)}}class lN extends Error{constructor(e,t,n){super(`Expect graph variable ${e} to have type '${t}' instead of received '${null!=n?n:typeof n}'`)}}const hN=Symbol("[[createEval]]");var _N,uN,pN,dN,fN,mN;const gN=Symbol("[[Outgoing transitions]]"),vN=Symbol("[[Incoming transitions]]");let yN=Zc("cc.animation.State")((pN=Bc((uN=class extends jl{constructor(){super(),Fc(this,"name",pN,this),this[gN]=[],this[vN]=[]}}).prototype,"name",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),_N=uN))||_N,xN=Zc("cc.animation.InteractiveState")((mN=Bc((fN=class extends yN{constructor(...e){super(...e),Fc(this,"_components",mN,this)}get components(){return this._components}addComponent(e){const t=new e;return this._components.push(t),t}removeComponent(e){z(this._components,e)}instantiateComponents(){return this._components.map((e=>M_(e)))}}).prototype,"_components",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),dN=fN))||dN;var SN,CN,TN,bN,EN,AN,PN,wN;let IN;!function(e){e[e.FLOAT=0]="FLOAT",e[e.BOOLEAN=1]="BOOLEAN",e[e.TRIGGER=2]="TRIGGER",e[e.INTEGER=3]="INTEGER"}(IN||(IN={}));let RN=Zc("cc.animation.BindableNumber")((TN=Bc((CN=class e{constructor(e=0){Fc(this,"variable",TN,this),Fc(this,"value",bN,this),this.value=e}clone(){const t=new e;return t.value=this.value,t.variable=this.variable,t}}).prototype,"variable",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),bN=Bc(CN.prototype,"value",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),SN=CN))||SN,DN=Zc("cc.animation.BindableBoolean")((PN=Bc((AN=class e{constructor(e=!1){Fc(this,"variable",PN,this),Fc(this,"value",wN,this),this.value=e}clone(){const t=new e;return t.value=this.value,t.variable=this.variable,t}}).prototype,"variable",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),wN=Bc(AN.prototype,"value",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),EN=AN))||EN;function ON(e,t,n,i,s,...r){const{variable:o,value:a}=t;if(!o)return a;const c=e.getVar(o);if(!NN(c,o))return a;if(c.type!==n)throw new lN(o,"number");return c.bind(i,s,...r)}function MN(e,t,n,i,s,...r){const{variable:o,value:a}=t;if(!o)return a;const c=e.getVar(o);if(!NN(c,o))return a;if(n!==IN.FLOAT&&n!==IN.INTEGER)throw new lN(o,"number or integer");return c.bind(i,s,...r)}function NN(e,t){if(e)return!0;throw new cN(t)}var LN,zN,FN,BN;let UN=Zc("cc.animation.Motion")((FN=Bc((zN=class e extends xN{constructor(...e){super(...e),Fc(this,"motion",FN,this),Fc(this,"speed",BN,this)}clone(){var t,n;const i=new e;return i.motion=null!==(t=null===(n=this.motion)||void 0===n?void 0:n.clone())&&void 0!==t?t:null,i.speed=this.speed.clone(),i}}).prototype,"motion",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),BN=Bc(zN.prototype,"speed",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new RN(1)}}),LN=zN))||LN;const GN=Symbol("[[OnAfterDeserialized]]");var HN,kN,VN,jN,WN,qN,XN,YN,KN,$N,ZN,QN,JN,eL,tL,nL,iL,sL,rL,oL,aL,cL,lL,hL,_L,uL,pL,dL,fL,mL,gL,vL,yL,xL,SL,CL;let TL=Zc("cc.animation.Transition")((VN=Bc((kN=class extends jl{constructor(e,t,n){super(),Fc(this,"from",VN,this),Fc(this,"to",jN,this),Fc(this,"conditions",WN,this),this[rN]=void 0,this.from=e,this.to=t,n&&(this.conditions=n)}}).prototype,"from",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),jN=Bc(kN.prototype,"to",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),WN=Bc(kN.prototype,"conditions",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),HN=kN))||HN,bL=Zc("cc.animation.AnimationTransition")((YN=Bc((XN=class extends TL{constructor(...e){super(...e),Fc(this,"duration",YN,this),Fc(this,"relativeDuration",KN,this),Fc(this,"exitConditionEnabled",$N,this),Fc(this,"_exitCondition",ZN,this)}get exitCondition(){return this._exitCondition}set exitCondition(e){this._exitCondition=e}}).prototype,"duration",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.3}}),KN=Bc(XN.prototype,"relativeDuration",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),$N=Bc(XN.prototype,"exitConditionEnabled",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),ZN=Bc(XN.prototype,"_exitCondition",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),qN=XN))||qN;function EL(e){return e instanceof bL}let AL,PL=Zc("cc.animation.StateMachine")((eL=Bc((JN=class e extends jl{__callOnAfterDeserializeRecursive(){this[GN]();const e=this._states.length;for(let t=0;t<e;++t){const e=this._states[t];e instanceof wL&&e.stateMachine.__callOnAfterDeserializeRecursive()}}constructor(){super(),Fc(this,"_states",eL,this),Fc(this,"_transitions",tL,this),Fc(this,"_entryState",nL,this),Fc(this,"_exitState",iL,this),Fc(this,"_anyState",sL,this),this._entryState=this._addState(new yN),this._entryState.name="Entry",this._exitState=this._addState(new yN),this._exitState.name="Exit",this._anyState=this._addState(new yN),this._anyState.name="Any"}[GN](){this._states.forEach((()=>{})),this._transitions.forEach((e=>{e.from[gN].push(e),e.to[vN].push(e)}))}[hN](e){throw new Error("Method not implemented.")}get entryState(){return this._entryState}get exitState(){return this._exitState}get anyState(){return this._anyState}states(){return this._states}transitions(){return this._transitions}getTransitionsBetween(e,t){return oN(e),oN(t),e[gN].filter((e=>e.to===t))}getOutgoings(e){return oN(e),e[gN]}getIncomings(e){return oN(e),e[vN]}addMotion(){return this._addState(new UN)}addSubStateMachine(){return this._addState(new wL)}remove(e){oN(e),e!==this.entryState&&e!==this.exitState&&e!==this.anyState&&(this.eraseTransitionsIncludes(e),z(this._states,e))}connect(e,t,n){if(oN(e),oN(t),t===this.entryState)throw new aN("to-entry");if(t===this.anyState)throw new aN("to-any");if(e===this.exitState)throw new aN("from-exit");const i=e instanceof UN||e===this._anyState?new bL(e,t,n):new TL(e,t,n);return this._transitions.push(i),e[gN].push(i),t[vN].push(i),i}disconnect(e,t){oN(e),oN(t);const n=e[gN],i=t[vN],s=this._transitions,r=n.filter((e=>e.to===t)),o=r.length;for(let e=0;e<o;++e){const t=r[e];z(n,t),z(s,t),F(i,(e=>e===t))}}removeTransition(e){z(this._transitions,e),F(e.from[gN],(t=>t===e)),F(e.to[vN],(t=>t===e))}eraseOutgoings(e){oN(e);const t=e[gN];for(let e=0;e<t.length;++e){const n=t[e],i=n.to;z(this._transitions,n),F(i[vN],(e=>e===n))}t.length=0}eraseIncomings(e){oN(e);const t=e[vN];for(let e=0;e<t.length;++e){const n=t[e],i=n.from;z(this._transitions,n),F(i[gN],(e=>e===n))}t.length=0}eraseTransitionsIncludes(e){this.eraseIncomings(e),this.eraseOutgoings(e)}clone(){const t=new e,n=new Map;for(const e of this._states)switch(e){case this._entryState:n.set(e,t._entryState);break;case this._exitState:n.set(e,t._exitState);break;case this._anyState:n.set(e,t._anyState);break;default:if(e instanceof UN||e instanceof wL){const i=e.clone();t._addState(i),n.set(e,i)}}for(const e of this._transitions){const i=n.get(e.from),s=n.get(e.to),r=t.connect(i,s);r.conditions=e.conditions.map((e=>e.clone())),r instanceof bL&&(r.duration=e.duration,r.exitConditionEnabled=e.exitConditionEnabled,r.exitCondition=e.exitCondition)}return t}_addState(e){return this._states.push(e),e}}).prototype,"_states",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),tL=Bc(JN.prototype,"_transitions",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),nL=Bc(JN.prototype,"_entryState",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),iL=Bc(JN.prototype,"_exitState",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),sL=Bc(JN.prototype,"_anyState",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),QN=JN))||QN,wL=Zc("cc.animation.SubStateMachine")((aL=Bc((oL=class e extends xN{constructor(...e){super(...e),Fc(this,"_stateMachine",aL,this)}get stateMachine(){return this._stateMachine}clone(){const t=new e;return t._stateMachine=this._stateMachine.clone(),t}}).prototype,"_stateMachine",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new PL}}),rL=oL))||rL,IL=Zc("cc.animation.Layer")((hL=Bc((lL=class{constructor(){this[rN]=void 0,Fc(this,"_stateMachine",hL,this),Fc(this,"name",_L,this),Fc(this,"weight",uL,this),Fc(this,"mask",pL,this),Fc(this,"blending",dL,this),this._stateMachine=new PL}get stateMachine(){return this._stateMachine}}).prototype,"_stateMachine",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),_L=Bc(lL.prototype,"name",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),uL=Bc(lL.prototype,"weight",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),pL=Bc(lL.prototype,"mask",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),dL=Bc(lL.prototype,"blending",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return AL.additive}}),cL=lL))||cL;!function(e){e[e.override=0]="override",e[e.additive=1]="additive"}(AL||(AL={}));let RL=Zc("cc.animation.Variable")((gL=Bc((mL=class{constructor(e){if(Fc(this,"_type",gL,this),Fc(this,"_value",vL,this),void 0!==e)switch(this._type=e,e){default:break;case IN.FLOAT:case IN.INTEGER:this._value=0;break;case IN.BOOLEAN:case IN.TRIGGER:this._value=!1}}get type(){return this._type}get value(){return this._value}set value(e){this._value=e}}).prototype,"_type",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return IN.FLOAT}}),vL=Bc(mL.prototype,"_value",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),fL=mL))||fL,DL=Zc("cc.animation.AnimationGraph")((SL=Bc((xL=class extends bh{constructor(){super(),Fc(this,"_layers",SL,this),Fc(this,"_variables",CL,this)}onLoaded(){const{_layers:e}=this,t=e.length;for(let n=0;n<t;++n)e[n].stateMachine.__callOnAfterDeserializeRecursive()}get layers(){return this._layers}get variables(){return Object.entries(this._variables)}addLayer(){const e=new IL;return this._layers.push(e),e}removeLayer(e){Ee.removeAt(this._layers,e)}moveLayer(e,t){!function(e,t,n){if(Me(e,t),Me(e,n),t===n)return e;const i=e[t];if(t<n)for(let i=t+1;i<=n;++i)e[i-1]=e[i];else for(let i=t;i!==n;--i)e[i]=e[i-1];e[n]=i}(this._layers,e,t)}addVariable(e,t,n){const i=new RL(t);void 0!==n&&(i.value=n),this._variables[e]=i}removeVariable(e){delete this._variables[e]}getVariable(e){return this._variables[e]}}).prototype,"_layers",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),CL=Bc(xL.prototype,"_variables",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return{}}}),yL=xL))||yL;const OL=Symbol("BakeNodeCurves");class ML{static getOrExtract(e){let t=ML.pool.get(e);if(!t||t.samples!==e.sample){t&&i.director.root.dataPoolManager.releaseAnimationClip(e);const n=Math.ceil(e.sample*e.duration)+1,s=e.sample;t=e[OL](0,s,n),ML.pool.set(e,t)}return t}static destroy(e){ML.pool.delete(e)}}e("SkelAnimDataHub",ML),ML.pool=new Map;class NL{constructor(e){let t,n;this.ratios=void 0,this._findRatio=void 0,this.ratios=e;let i=!0;for(let s=1,r=e.length;s<r;s++)if(t=e[s]-e[s-1],1===s)n=t;else if(Math.abs(t-n)>1e-6){i=!1;break}this._findRatio=i?BL:kc}sample(e){return this._findRatio(this.ratios,e)}}e("RatioSampler",NL),i.RatioSampler=NL;class LL{static Bezier(e){return e}constructor(e,t){this.types=void 0,this.type=null,this._values=[],this._lerp=void 0,this._duration=void 0,this._array=void 0,this._duration=t,this._values=e.values;const n=e=>"string"==typeof e?e:Array.isArray(e)?e[0]===e[1]&&e[2]===e[3]?LL.Linear:LL.Bezier(e):LL.Linear;if(void 0!==e.easingMethod)this.type=n(e.easingMethod);else if(Array.isArray(e.easingMethods))this.types=e.easingMethods.map(n);else if(void 0!==e.easingMethods){this.types=new Array(this._values.length).fill(null);for(const t of Object.keys(e.easingMethods))this.types[t]=n(e.easingMethods[t])}else this.type=null;const i=e.values[0];(void 0===e.interpolate||e.interpolate)&&(this._lerp=UL(i)),void 0!==e._arrayLength&&(this._array=new Array(e._arrayLength))}hasLerp(){return!!this._lerp}valueAt(e){if(void 0===this._array){const t=this._values[e];return t&&t.getNoLerp?t.getNoLerp():t}for(let t=0;t<this._array.length;++t)this._array[t]=this._values[this._array.length*e+t];return this._array}valueBetween(e,t,n,i,s){if(this._lerp){const r=this.types?this.types[t]:this.type,o=s-n;let a=(e-n)/o;if(r&&(a=FL(a,r)),void 0===this._array){const e=this._values[t],n=this._values[i];return this._lerp(e,n,a,o*this._duration)}for(let e=0;e<this._array.length;++e){const n=this._values[this._array.length*t+e],s=this._values[this._array.length*i+e];this._array[e]=this._lerp(n,s,a,o*this._duration)}return this._array}if(void 0===this._array)return this.valueAt(t);for(let e=0;e<this._array.length;++e)this._array[e]=this._values[this._array.length*t+e];return this._array}empty(){return 0===this._values.length}constant(){return 1===this._values.length}}function zL(e,t,n){let i=t.sample(n);if(i<0)if(i=~i,i<=0)i=0;else{if(!(i>=t.ratios.length))return e.valueBetween(n,i-1,t.ratios[i-1],i,t.ratios[i]);i=t.ratios.length-1}return e.valueAt(i)}function FL(e,t){if("string"==typeof t){const n=ku[t];n?e=n(e):E(3906,t)}else Array.isArray(t)&&(e=Ap(t,e));return e}function BL(e,t){const n=e.length-1;if(0===n)return 0;const i=e[0];if(t<i)return 0;const s=e[n];if(t>s)return n;const r=(t=(t-i)/(s-i))/(1/n),o=0|r,a=1e-6;return r-o<a?o:o+1-r<a?o+1:~(o+1)}e("AnimCurve",LL),LL.Linear=null,i.AnimCurve=LL,e("EventInfo",class{constructor(){this.events=[]}add(e,t){this.events.push({func:e||"",params:t||[]})}}),i.sampleAnimationCurve=zL;const UL=(()=>{function e(e,t,n,i){return e.lerp(t,n,i)}return t=>{if(null!==t){if("number"==typeof t)return Bn;if("object"==typeof t&&t.constructor){if(t instanceof ui)return function(){const e=new ui;return(t,n,i)=>ui.slerp(e,t,n,i)}();if(t instanceof Be)return function(e){const t=new e;return(n,i,s)=>(e.lerp(t,n,i,s),t)}(t.constructor);if(t.constructor===Number)return Bn;if("function"==typeof t.lerp)return e}}}})();var GL,HL,kL,VL,jL,WL;let qL=Zc("cc.animation.UntypedTrackChannel")((kL=Bc((HL=class extends PM{constructor(){super(new tp),Fc(this,"property",kL,this)}}).prototype,"property",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),GL=HL))||GL,XL=Zc("cc.animation.UntypedTrack")((WL=Bc((jL=class extends AM{constructor(...e){super(...e),Fc(this,"_channels",WL,this)}channels(){return this._channels}[sM](e){if(!e.getValue)throw new Error(I(3930));const t=e=>{var t;return null===(t=this._channels.find((t=>t.property===e)))||void 0===t?void 0:t.curve},n=e.getValue();switch(!0){default:throw new Error(I(3931));case n instanceof bi:return new UM(t("x"),t("y"));case n instanceof ri:return new GM(t("x"),t("y"),t("z"));case n instanceof wi:return new HM(t("x"),t("y"),t("z"),t("w"));case n instanceof ti:return new $M(t("r"),t("g"),t("b"),t("a"));case n instanceof Di:return new nN(t("width"),t("height"))}}addChannel(e){const t=new qL;return t.property=e,this._channels.push(t),t}upgrade(e){const t=(e,t)=>{const n=this.channels().find((t=>t.property===e));n&&(t.name=n.name,t.curve.assignSorted(Array.from(n.curve.times()),Array.from(n.curve.values())))},n=e(this.path,this.proxy);switch(n){default:break;case"vec2":case"vec3":case"vec4":{const e=new BM;e.path=this.path,e.proxy=this.proxy,e.componentsCount="vec2"===n?2:"vec3"===n?3:4;const[i,s,r,o]=e.channels();switch(n){case"vec4":t("w",o);case"vec3":t("z",r);default:case"vec2":t("x",i),t("y",s)}return e}case"color":{const e=new KM,[n,i,s,r]=e.channels();return t("r",n),t("g",i),t("b",s),t("a",r),t("x",n),t("y",i),t("z",s),t("w",r),e}case"size":}return null}}).prototype,"_channels",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),VL=jL))||VL;class YL{constructor(e){this._keys=[],this._curves=[],this._commonTargets=[],this._ratioSamplers=[],this._runtimeCurves=void 0,this._data=null,this._duration=void 0,this._duration=e}get keys(){return this._keys}set keys(e){this._keys=e}get curves(){return this._curves}set curves(e){this._curves=e,delete this._runtimeCurves}get commonTargets(){return this._commonTargets}set commonTargets(e){this._commonTargets=e}get data(){return this._data}getPropertyCurves(){return this._runtimeCurves||this._createPropertyCurves(),this._runtimeCurves}toTracks(){const e=[],{keys:t,curves:n,commonTargets:i}=this,s=(e,t,n)=>{const i=new bM;for(const e of t)"string"==typeof e?i.toProperty(e):"number"==typeof e?i.toElement(e):e instanceof wO?i.toHierarchy(e.path):e instanceof IO?i.toComponent(e.component):i.toCustomized(e);e.path=i,e.proxy=n},r=i.map((t=>{const n=new XL;return s(n,t.modifiers,t.valueAdapter),e.push(n),n}));for(const i of n){var o;const n=i.data,a=n.values;if(0===a.length)continue;const c=n.keys<0?[0]:t[n.keys],l=a[0],h=null===(o=n.interpolate)||void 0===o||o;n._arrayLength;const _=new $L(n,c.length),u=e=>{s(e,i.modifiers,i.valueAdapter)};let p;if("number"==typeof i.commonTarget){if(!a.every((e=>"number"==typeof e))){T(3932);continue}if(i.valueAdapter||1!==i.modifiers.length||"string"!=typeof i.modifiers[0]){T(3933);continue}const e=i.modifiers[0],t=r[i.commonTarget],{curve:n}=t.addChannel(e);p=n}(()=>{if("number"==typeof l){if(!a.every((e=>"number"==typeof e)))return void T(3934);let t;if(p)t=p;else{const n=new DM;u(n),e.push(n),t=n.channel.curve}const n=h?Ul.LINEAR:Ul.CONSTANT;return t.assignSorted(c,a.map((e=>({value:e,interpolationMode:n})))),void _.convert(t)}if("object"==typeof l)switch(!0){default:break;case KL(a,bi):case KL(a,ri):case KL(a,wi):{const t=l instanceof bi?2:l instanceof ri?3:4,n=new BM;u(n),n.componentsCount=t;const[{curve:i},{curve:s},{curve:r},{curve:o}]=n.channels(),p=h?Ul.LINEAR:Ul.CONSTANT,d=e=>({value:e,interpolationMode:p});switch(t){case 4:o.assignSorted(c,a.map((e=>d(e.w)))),_.convert(o);case 3:r.assignSorted(c,a.map((e=>d(e.z)))),_.convert(r);default:i.assignSorted(c,a.map((e=>d(e.x)))),_.convert(i),s.assignSorted(c,a.map((e=>d(e.y)))),_.convert(s)}return void e.push(n)}case KL(a,ui):{const t=new VM;u(t);const n=h?zp.SLERP:zp.CONSTANT;return t.channel.curve.assignSorted(c,a.map((e=>({value:ui.clone(e),interpolationMode:n})))),_.convertQuatCurve(t.channel.curve),void e.push(t)}case KL(a,ti):{const t=new KM;u(t);const[{curve:n},{curve:i},{curve:s},{curve:r}]=t.channels(),o=h?Ul.LINEAR:Ul.CONSTANT,l=e=>({value:e,interpolationMode:o});return n.assignSorted(c,a.map((e=>l(e.r)))),_.convert(n),i.assignSorted(c,a.map((e=>l(e.g)))),_.convert(i),s.assignSorted(c,a.map((e=>l(e.b)))),_.convert(s),r.assignSorted(c,a.map((e=>l(e.a)))),_.convert(r),void e.push(t)}case KL(a,Di):{const t=new tN;u(t);const[{curve:n},{curve:i}]=t.channels(),s=h?Ul.LINEAR:Ul.CONSTANT,r=e=>({value:e,interpolationMode:s});return n.assignSorted(c,a.map((e=>r(e.width)))),_.convert(n),i.assignSorted(c,a.map((e=>r(e.height)))),_.convert(i),void e.push(t)}case KL(a,iM):{const t=new DM;u(t);const n=h?Ul.CUBIC:Ul.CONSTANT;return t.channel.curve.assignSorted(c,a.map((e=>({value:e.dataPoint,leftTangent:e.inTangent,rightTangent:e.outTangent,interpolationMode:n})))),void e.push(t)}case KL(a,JO):case KL(a,eM):case KL(a,tM):{const t=l instanceof JO?2:l instanceof eM?3:4,n=new BM;u(n),n.componentsCount=t;const[i,s,r,o]=n.channels(),_=h?Ul.LINEAR:Ul.CONSTANT,p=(e,t,n)=>({value:e,leftTangent:t,rightTangent:n,interpolationMode:_});switch(t){case 4:o.curve.assignSorted(c,a.map((e=>p(e.dataPoint.w,e.inTangent.w,e.outTangent.w))));case 3:r.curve.assignSorted(c,a.map((e=>p(e.dataPoint.z,e.inTangent.z,e.outTangent.z))));default:i.curve.assignSorted(c,a.map((e=>p(e.dataPoint.y,e.inTangent.y,e.outTangent.y)))),s.curve.assignSorted(c,a.map((e=>p(e.dataPoint.x,e.inTangent.x,e.outTangent.x))))}return void e.push(n)}case a.every((e=>e instanceof nM)):T(3935)}const t=new sN;u(t),t.channel.curve.assignSorted(c,a),e.push(t)})()}return e}_createPropertyCurves(){this._ratioSamplers=this._keys.map((e=>new NL(e.map((e=>e/this._duration))))),this._runtimeCurves=this._curves.map((e=>({curve:new LL(e.data,this._duration),modifiers:e.modifiers,valueAdapter:e.valueAdapter,sampler:this._ratioSamplers[e.data.keys],commonTarget:e.commonTarget})))}}function KL(e,t){return e.every((e=>e instanceof t))}class $L{constructor(e,t){this._easingMethods=void 0;const{easingMethods:n}=e;Array.isArray(n)?0===n.length&&0!==t?this._easingMethods=new Array(t).fill(null):this._easingMethods=n:this._easingMethods=void 0===n?new Array(t).fill(e.easingMethod):Array.from({length:t},((e,t)=>{var i;return null!==(i=n[t])&&void 0!==i?i:null}))}get nil(){return!this._easingMethods||this._easingMethods.every((e=>null==e))}convert(e){const{_easingMethods:t}=this;if(!t)return;const n=e.keyFramesCount;if(e.keyFramesCount<2)return;Array.isArray(t)&&t.length;const i=n-1;for(let n=0;n<i;++n){const i=t[n];i&&(Array.isArray(i)?ez(i,e.getKeyframeTime(n),e.getKeyframeValue(n),e.getKeyframeTime(n+1),e.getKeyframeValue(n+1)):ZL(i,e,n))}}convertQuatCurve(e){const{_easingMethods:t}=this;if(!t)return;const n=e.keyFramesCount;if(e.keyFramesCount<2)return;Array.isArray(t)&&t.length;const i=n-1;for(let n=0;n<i;++n){const i=t[n];i&&(Array.isArray(i)?e.getKeyframeValue(n).easingMethod=i.slice():QL(i,e,n))}}}function ZL(e,t,n){t.keyFramesCount;const i=t.getKeyframeValue(n),s=JL[e];s===Vu.CONSTANT?i.interpolationMode=Ul.CONSTANT:(i.interpolationMode=Ul.LINEAR,i.easingMethod=s)}function QL(e,t,n){t.keyFramesCount;const i=t.getKeyframeValue(n),s=JL[e];i.easingMethod=s}const JL={constant:Vu.CONSTANT,linear:Vu.LINEAR,quadIn:Vu.QUAD_IN,quadOut:Vu.QUAD_OUT,quadInOut:Vu.QUAD_IN_OUT,quadOutIn:Vu.QUAD_OUT_IN,cubicIn:Vu.CUBIC_IN,cubicOut:Vu.CUBIC_OUT,cubicInOut:Vu.CUBIC_IN_OUT,cubicOutIn:Vu.CUBIC_OUT_IN,quartIn:Vu.QUART_IN,quartOut:Vu.QUART_OUT,quartInOut:Vu.QUART_IN_OUT,quartOutIn:Vu.QUART_OUT_IN,quintIn:Vu.QUINT_IN,quintOut:Vu.QUINT_OUT,quintInOut:Vu.QUINT_IN_OUT,quintOutIn:Vu.QUINT_OUT_IN,sineIn:Vu.SINE_IN,sineOut:Vu.SINE_OUT,sineInOut:Vu.SINE_IN_OUT,sineOutIn:Vu.SINE_OUT_IN,expoIn:Vu.EXPO_IN,expoOut:Vu.EXPO_OUT,expoInOut:Vu.EXPO_IN_OUT,expoOutIn:Vu.EXPO_OUT_IN,circIn:Vu.CIRC_IN,circOut:Vu.CIRC_OUT,circInOut:Vu.CIRC_IN_OUT,circOutIn:Vu.CIRC_OUT_IN,elasticIn:Vu.ELASTIC_IN,elasticOut:Vu.ELASTIC_OUT,elasticInOut:Vu.ELASTIC_IN_OUT,elasticOutIn:Vu.ELASTIC_OUT_IN,backIn:Vu.BACK_IN,backOut:Vu.BACK_OUT,backInOut:Vu.BACK_IN_OUT,backOutIn:Vu.BACK_OUT_IN,bounceIn:Vu.BOUNCE_IN,bounceOut:Vu.BOUNCE_OUT,bounceInOut:Vu.BOUNCE_IN_OUT,bounceOutIn:Vu.BOUNCE_OUT_IN,smooth:Vu.SMOOTH,fade:Vu.FADE};function ez(e,t,n,i,s){const[r,o,a,c]=e,{value:l}=n,{value:h}=s,_=3*(i-t),u=3*(h-l),p=r*_,d=o*u,f=(1-a)*_,m=(1-c)*u,g=1/3,v=d/p,y=Math.sqrt(p*p+d*d)*g,x=m/f,S=Math.sqrt(f*f+m*m)*g;var C;n.interpolationMode=Ul.CUBIC,n.tangentWeightMode=(C=n.tangentWeightMode)===Hl.NONE?Hl.RIGHT:C===Hl.LEFT?Hl.BOTH:C,n.rightTangent=v,n.rightTangentWeight=y,s.tangentWeightMode=function(e){return e===Hl.NONE?Hl.LEFT:e===Hl.RIGHT?Hl.BOTH:e}(s.tangentWeightMode),s.leftTangent=x,s.leftTangentWeight=S}var tz,nz,iz,sz,rz,oz,az,cz,lz,hz,_z,uz,pz,dz,fz,mz,gz,vz,yz,xz,Sz,Cz,Tz,bz;function Ez(){throw new Error("split() only valid in Editor.")}Zc("cc.animation.ExoticAnimation")((nz=Bc((tz=class{constructor(){Fc(this,"_nodeAnimations",nz,this)}createEvaluator(e){return new Mz(this._nodeAnimations,e)}addNodeAnimation(e){const t=new Az(e);return this._nodeAnimations.push(t),t}collectAnimatedJoints(){return Array.from(new Set(this._nodeAnimations.map((({path:e})=>e))))}split(e,t){return Ez()}toHashString(){return this._nodeAnimations.map((e=>e.toHashString())).join("\n")}}).prototype,"_nodeAnimations",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),tz));let Az=Zc("cc.animation.ExoticNodeAnimation")((rz=Bc((sz=class{constructor(e){Fc(this,"_path",rz,this),Fc(this,"_position",oz,this),Fc(this,"_rotation",az,this),Fc(this,"_scale",cz,this),this._path=e}createPosition(e,t){this._position=new Oz(e,new Rz(t))}createRotation(e,t){this._rotation=new Oz(e,new Dz(t))}createScale(e,t){this._scale=new Oz(e,new Rz(t))}createEvaluator(e){return new Nz(this._path,this._position,this._rotation,this._scale,e)}split(e,t,n){return Ez()}get path(){return this._path}toHashString(){var e,t,n,i,s,r;return`${this._path}\n${null!==(e=null===(t=this._position)||void 0===t?void 0:t.toHashString())&&void 0!==e?e:""}${null!==(n=null===(i=this._scale)||void 0===i?void 0:i.toHashString())&&void 0!==n?n:""}${null!==(s=null===(r=this._rotation)||void 0===r?void 0:r.toHashString())&&void 0!==s?s:""}`}}).prototype,"_path",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),oz=Bc(sz.prototype,"_position",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),az=Bc(sz.prototype,"_rotation",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),cz=Bc(sz.prototype,"_scale",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),iz=sz))||iz;function Pz(e){return e.toPrecision(2)}function wz(e){return e.map(Pz).join(" ")}let Iz=Zc("cc.animation.ExoticVectorLikeTrackValues")((_z=Bc((hz=class{constructor(e){Fc(this,"_values",_z,this),Fc(this,"_isQuantized",uz,this),this._values=e,this._isQuantized=!1}get precision(){return this._isQuantized?this._values.originalPrecision:Bz(this._values)}quantize(e){this._isQuantized,this._values=function(e,t){const n=zz[t],i=1<<n.BYTES_PER_ELEMENT;let s=Number.POSITIVE_INFINITY,r=Number.NEGATIVE_INFINITY;e.forEach((e=>{s=Math.min(e,s),r=Math.max(e,r)}));const o=r-s,a=n.from(e,(e=>(e-s)/o*i));return new Uz(Bz(e),a,o,s)}(this._values,e),this._isQuantized=!0}toHashString(){const{_isQuantized:e,_values:t}=this;return`${e} ${e?t.toHashString():wz(t)}`}}).prototype,"_values",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),uz=Bc(hz.prototype,"_isQuantized",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),lz=hz))||lz,Rz=Zc("cc.animation.ExoticVec3TrackValues")(pz=class e extends Iz{static imitate(t,n){const i=new e(t);return n._isQuantized&&i.quantize(n._values.quantizationType),i}get(e,t){const{_values:n,_isQuantized:i}=this;i?kz(n,e,t):ri.fromArray(t,n,3*e)}lerp(e,t,n,i,s,r){const{_values:o,_isQuantized:a}=this;a?(kz(o,e,i),kz(o,t,s)):(ri.fromArray(i,o,3*e),ri.fromArray(s,o,3*t)),ri.lerp(r,i,s,n)}})||pz,Dz=Zc("cc.animation.ExoticQuatTrackValues")(dz=class e extends Iz{static imitate(t,n){const i=new e(t);return n._isQuantized&&i.quantize(n._values.quantizationType),i}get(e,t){const{_values:n,_isQuantized:i}=this;i?Vz(n,e,t):ui.fromArray(t,n,4*e)}lerp(e,t,n,i,s,r){const{_values:o,_isQuantized:a}=this;a?(Vz(o,e,i),Vz(o,t,s)):(ui.fromArray(i,o,4*e),ui.fromArray(s,o,4*t)),ui.slerp(r,i,s,n)}})||dz,Oz=Zc("cc.animation.ExoticTrack")((gz=Bc((mz=class{constructor(e,t){Fc(this,"times",gz,this),Fc(this,"values",vz,this),this.times=e,this.values=t}toHashString(){const{times:e,values:t}=this;return`times: ${wz(e)}; values: ${t.toHashString()}`}}).prototype,"times",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),vz=Bc(mz.prototype,"values",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),fz=mz))||fz;class Mz{constructor(e,t){this._nodeEvaluations=void 0,this._nodeEvaluations=e.map((e=>e.createEvaluator(t)))}evaluate(e){this._nodeEvaluations.forEach((t=>{t.evaluate(e)}))}}class Nz{constructor(e,t,n,i,s){this._position=null,this._rotation=null,this._scale=null,t&&(this._position=Hz(t.times,t.values,ri,e,"position",s)),n&&(this._rotation=Hz(n.times,n.values,ui,e,"rotation",s)),i&&(this._scale=Hz(i.times,i.values,ri,e,"scale",s))}evaluate(e){if(this._position){const t=this._position.evaluator.evaluate(e);this._position.runtimeBinding.setValue(t)}if(this._rotation){const t=this._rotation.evaluator.evaluate(e);this._rotation.runtimeBinding.setValue(t)}if(this._scale){const t=this._scale.evaluator.evaluate(e);this._scale.runtimeBinding.setValue(t)}}}class Lz{constructor(e,t,n){this._times=void 0,this._inputSampleResultCache={just:!1,index:-1,nextIndex:-1,ratio:0},this._values=void 0,this._prevValue=void 0,this._nextValue=void 0,this._resultValue=void 0,this._times=e,this._values=t,this._prevValue=new n,this._nextValue=new n,this._resultValue=new n}evaluate(e){const{_times:t,_values:n,_resultValue:i}=this;if(0===t.length)return i;const s=function(e,t,n){const i=e.length,s=e[0],r=e[i-1];if(t<s)n.just=!0,n.index=0;else if(t>r)n.just=!0,n.index=i-1;else{const i=kc(e,t);if(i>=0)n.just=!0,n.index=i;else{const s=~i,r=s-1,o=e[r],a=e[s],c=(t-e[r])/(a-o);n.just=!1,n.index=r,n.nextIndex=s,n.ratio=c}}return n}(t,e,this._inputSampleResultCache);return s.just?n.get(s.index,i):n.lerp(s.index,s.nextIndex,s.ratio,this._prevValue,this._nextValue,i),i}}const zz={uint8:Uint8Array,uint16:Uint16Array};var Fz;function Bz(e){switch(e.BYTES_PER_ELEMENT){default:case 4:return Fz.FLOAT_32;case 8:return Fz.FLOAT_64}}!function(e){e[e.FLOAT_32=0]="FLOAT_32",e[e.FLOAT_64=1]="FLOAT_64"}(Fz||(Fz={}));let Uz=Zc("cc.animation.QuantizedFloatArray")((Sz=Bc((xz=class{get quantizationType(){switch(this.values.BYTES_PER_ELEMENT){default:case 1:return"uint8";case 2:return"uint16"}}constructor(e,t,n,i=0){Fc(this,"originalPrecision",Sz,this),Fc(this,"min",Cz,this),Fc(this,"extent",Tz,this),Fc(this,"values",bz,this),this.originalPrecision=e,this.values=t,this.extent=n,this.min=i}toHashString(){const{originalPrecision:e,min:t,extent:n,values:i}=this;return`${e} ${Pz(t)} ${Pz(n)} ${i.join(" ")}`}}).prototype,"originalPrecision",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),Cz=Bc(xz.prototype,"min",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),Tz=Bc(xz.prototype,"extent",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),bz=Bc(xz.prototype,"values",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),yz=xz))||yz;function Gz(e,t){return e.values[t]/(1<<e.values.BYTES_PER_ELEMENT)*e.extent+e.min}function Hz(e,t,n,i,s,r){const o=new EM;o.path=(new bM).toHierarchy(i).toProperty(s);const a=r(o);return a?{runtimeBinding:a,evaluator:new Lz(e,t,n)}:null}function kz(e,t,n){ri.set(n,Gz(e,3*t+0),Gz(e,3*t+1),Gz(e,3*t+2))}function Vz(e,t,n){ui.set(n,Gz(e,4*t+0),Gz(e,4*t+1),Gz(e,4*t+2),Gz(e,4*t+3))}var jz,Wz,qz,Xz,Yz,Kz,$z,Zz,Qz,Jz,eF,tF,nF;const iF=Symbol("SearchForRootBonePath"),sF=Symbol("ExoticAnimation");let rF=e("AnimationClip",Zc("cc.AnimationClip")((nF=tF=class e extends bh{constructor(...e){super(...e),Fc(this,"sample",qz,this),Fc(this,"speed",Xz,this),Fc(this,"wrapMode",Yz,this),Fc(this,"enableTrsBlending",Kz,this),Fc(this,"_duration",$z,this),Fc(this,"_hash",Zz,this),this.frameRate=0,Fc(this,"_tracks",Qz,this),Fc(this,"_exoticAnimation",Jz,this),this._legacyData=void 0,this._legacyDataDirty=!1,Fc(this,"_events",eF,this),this._runtimeEvents={ratios:[],eventGroups:[]}}static createWithSpriteFrames(t,n){const i=new e;i.sample=n||i.sample,i.duration=t.length/i.sample;const s=1/i.sample,r=new sN;return r.path=(new bM).toComponent("cc.Sprite").toProperty("spriteFrame"),r.channels()[0].curve.assignSorted(t.map(((e,t)=>[s*t,e]))),i.addTrack(r),i}get duration(){return this._duration}set duration(e){this._duration=e}get tracksCount(){return this._tracks.length}get tracks(){return this._tracks}get hash(){var e,t;if(this._hash)return this._hash;const n=`Exotic:${null!==(e=null===(t=this._exoticAnimation)||void 0===t?void 0:t.toHashString())&&void 0!==e?e:""}`;return this._hash=Ko(n,666)}get events(){return this._events}set events(e){this._events=e;const t=[],n=[],i=this.events.sort(((e,t)=>e.frame-t.frame)),s=i.length;for(let e=0;e<s;++e){const s=i[e],r=s.frame/this._duration;let o=t.findIndex((e=>e===r));o<0&&(o=t.length,t.push(r),n.push({events:[]})),n[o].events.push({functionName:s.func,parameters:s.params})}this._runtimeEvents={ratios:t,eventGroups:n}}get[sF](){return this._exoticAnimation}set[sF](e){this._exoticAnimation=e}onLoaded(){this.frameRate=this.sample,this.events=this._events}range(){const e={min:1/0,max:-1/0},{_tracks:t}=this,n=t.length;for(let i=0;i<n;++i){const n=t[i].range();e.min=Math.min(e.min,n.min),e.max=Math.max(e.max,n.max)}return e}getTrack(e){return this._tracks[e]}addTrack(e){const t=this._tracks.length;return this._tracks.push(e),t}removeTrack(e){this._tracks.splice(e,1)}clearTracks(){this._tracks.length=0}createEventEvaluator(e){return new pF(e,this._runtimeEvents.ratios,this._runtimeEvents.eventGroups,this.wrapMode)}createEvaluator(e){const{target:t}=e;return this._createEvalWithBinder(t,(n=>{const i=n.createRuntimeBinding(t,this.enableTrsBlending?e.pose:void 0,!1);return null!=i?i:void 0}),e.rootMotion)}destroy(){var e;return(null===(e=i.director.root)||void 0===e?void 0:e.dataPoolManager)&&i.director.root.dataPoolManager.releaseAnimationClip(this),ML.destroy(this),super.destroy()}[OL](e,t,n){const i=1/t,s=this._collectAnimatedJoints(),r=s.length,o={};for(let e=0;e<r;++e)o[s[e]]={transforms:Array.from({length:n},(()=>new xi))};const a=s.reduce(((e,t)=>(e[t]=new cF,e)),{});for(const e in a){const t=a[e],n=e.lastIndexOf("/");if(n>=0){const i=e.substring(0,n),s=a[i];s&&(t.parent=s)}}const c=this._createEvalWithBinder(void 0,(e=>{const t=e.parseTrsPath();if(!t)return;const n=a[t.node];return n?uF(n,t.property):void 0}),void 0);for(let t=0;t<n;++t){const n=e+i*t;c.evaluate(n);for(let e=0;e<r;++e){const n=s[e];xi.copy(o[n].transforms[t],a[n].globalTransform)}for(let e=0;e<r;++e){const t=s[e];a[t].invalidate()}}return{samples:t,frames:n,joints:o}}upgradeUntypedTracks(e){const t=[],n=[],{_tracks:i}=this,s=i.length;for(let r=0;r<s;++r){const s=i[r];if(!(s instanceof XL))continue;const o=s.upgrade(e);o&&(t.push(o),n.push(s))}const r=n.length;for(let e=0;e<r;++e)Ee.remove(i,n[e]);i.push(...t)}[iF](){return this._searchForRootBonePath()}get keys(){return this._getLegacyData().keys}set keys(e){this._legacyDataDirty=!0,this._getLegacyData().keys=e}get curves(){return this._legacyDataDirty=!0,this._getLegacyData().curves}set curves(e){this._getLegacyData().curves=e}get commonTargets(){return this._getLegacyData().commonTargets}set commonTargets(e){this._legacyDataDirty=!0,this._getLegacyData().commonTargets=e}get data(){return this._getLegacyData().data}getPropertyCurves(){return this._getLegacyData().getPropertyCurves()}get eventGroups(){return this._runtimeEvents.eventGroups}updateEventDatas(){this.events=this._events}hasEvents(){return 0!==this.events.length}syncLegacyData(){this._legacyData&&(this._fromLegacy(this._legacyData),this._legacyData=void 0)}_createEvalWithBinder(e,t,n){this._legacyDataDirty&&(this._legacyDataDirty=!1,this.syncLegacyData());const i=[];let s;n&&(s=this._createRootMotionEvaluation(e,n,i));const r=[];let o;const{_tracks:a}=this,c=a.length;for(let e=0;e<c;++e){const n=a[e];if(i.includes(n))continue;if(Array.from(n.channels()).every((({curve:e})=>0===e.keyFramesCount)))continue;const s=t(n[TM]);if(!s)continue;const o=n[sM](s);r.push({binding:s,trackEval:o})}return this._exoticAnimation&&(o=this._exoticAnimation.createEvaluator(t)),new oF(r,o,s)}_createRootMotionEvaluation(e,t,n){if(!(e instanceof Yx))return void E(3920);const i=this._searchForRootBonePath();if(!i)return void T(3923);const s=e.getChildByPath(i);if(!s)return void T(3924);const r=new aF,o=[],{_tracks:a}=this,c=a.length;for(let e=0;e<c;++e){const t=a[e],{[TM]:s}=t,c=s.parseTrsPath();if(!c)continue;if(c.node!==i)continue;n.push(t);const l=uF(r,c.property);if(!l)continue;const h=t[sM](l);o.push({binding:l,trackEval:h})}return new hF(s,this._duration,r,o)}_searchForRootBonePath(){const e=this._tracks.map((e=>{const t=e[TM].parseTrsPath();if(t){const e=t.node;return{path:e,rank:e.split("/").length}}return{path:"",rank:0}}));e.sort(((e,t)=>e.rank-t.rank));const t=e.findIndex((e=>0!==e.rank));if(t<0)return"";const n=e.length,i=e[t];let s=!0;for(let r=t+1;r<n;++r){const t=e[r];if(t.rank!==i.rank)break;if(t.path!==i.path){s=!1;break}}return s?i.path:""}_getLegacyData(){return this._legacyData||(this._legacyData=this._toLegacy()),this._legacyData}_toLegacy(){const e=new YL(this._duration);return e.keys=[],e.curves=[],e.commonTargets=[],e}_fromLegacy(e){const t=e.toTracks(),n=t.length;for(let e=0;e<n;++e)this.addTrack(t[e])}_collectAnimatedJoints(){const e=new Set,{_tracks:t}=this,n=t.length;for(let i=0;i<n;++i){const n=t[i][TM].parseTrsPath();n&&e.add(n.node)}if(this._exoticAnimation){const t=this._exoticAnimation.collectAnimatedJoints(),n=t.length;for(let i=0;i<n;++i)e.add(t[i])}return Array.from(e)}},tF.WrapMode=Gc,qz=Bc((Wz=nF).prototype,"sample",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 60}}),Xz=Bc(Wz.prototype,"speed",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),Yz=Bc(Wz.prototype,"wrapMode",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Gc.Normal}}),Kz=Bc(Wz.prototype,"enableTrsBlending",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),$z=Bc(Wz.prototype,"_duration",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Zz=Bc(Wz.prototype,"_hash",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Qz=Bc(Wz.prototype,"_tracks",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Jz=Bc(Wz.prototype,"_exoticAnimation",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),eF=Bc(Wz.prototype,"_events",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),jz=Wz))||jz);i.AnimationClip=rF;class oF{constructor(e,t,n){this._exoticAnimationEvaluator=void 0,this._trackEvalStatues=[],this._rootMotionEvaluation=void 0,this._trackEvalStatues=e,this._exoticAnimationEvaluator=t,this._rootMotionEvaluation=n}evaluate(e){const{_trackEvalStatues:t,_exoticAnimationEvaluator:n}=this,i=t.length;for(let n=0;n<i;++n){const{trackEval:i,binding:s}=t[n],r=i.evaluate(e,s);s.setValue(r)}n&&n.evaluate(e)}evaluateRootMotion(e,t){const{_rootMotionEvaluation:n}=this;n&&n.evaluate(e,t)}}class aF{constructor(){this.position=new ri,this.scale=new ri(1,1,1),this.rotation=new ui,this.eulerAngles=new ri}getTransform(e){xi.fromRTS(e,this.rotation,this.position,this.scale)}}class cF extends aF{constructor(...e){super(...e),this.parent=null,this._dirty=!0,this._transform=new xi}get globalTransform(){const e=this._transform;return this._dirty&&(this._dirty=!1,xi.fromRTS(e,this.rotation,this.position,this.scale),this.parent&&xi.multiply(e,this.parent.globalTransform,e)),this._transform}invalidate(){this._dirty=!0}}const lF=new xi;class hF{constructor(e,t,n,i){this._initialTransformCache=new xi,this._clipEndTransformCache=new xi,this._startTransformCache=new xi,this._endTransformCache=new xi,this._motionTransformCache=new xi,this._translationMotionCache=new ri,this._rotationMotionCache=new ui,this._scaleMotionCache=new ri,this._rootBone=e,this._duration=t,this._boneTransform=n,this._trackEvalStatuses=i}evaluate(e,t){const n=this._calcMotionTransform(e,t,this._motionTransformCache),{_translationMotionCache:i,_rotationMotionCache:s,_scaleMotionCache:r,_rootBone:o}=this;xi.toRTS(n,s,i,r),ri.add(i,i,o.position),o.setPosition(i),ui.multiply(s,s,o.rotation),o.setRotation(s),ri.multiply(r,r,o.scale),o.setScale(r)}_calcMotionTransform(e,t,n){const{_duration:i}=this,s=i-e,r=this._evaluateAt(e,this._startTransformCache);if(t<s){const i=this._evaluateAt(e+t,this._endTransformCache);_F(n,r,i)}else{xi.identity(n);const e=(e,t)=>{_F(lF,e,t),xi.multiply(n,n,lF)},o=t-s,a=Math.floor(o/i),c=o-a*i,l=this._evaluateAt(0,this._initialTransformCache),h=this._evaluateAt(i,this._clipEndTransformCache),_=this._evaluateAt(c,this._endTransformCache);e(r,h),_F(lF,l,h);for(let e=0;e<a;++e)xi.multiply(n,n,lF);e(l,_)}return n}_evaluateAt(e,t){const{_trackEvalStatuses:n}=this,i=n.length;for(let t=0;t<i;++t){const{trackEval:i,binding:s}=n[t],r=i.evaluate(e,s);s.setValue(r)}return this._boneTransform.getTransform(t),t}}function _F(e,t,n){xi.invert(e,t),xi.multiply(e,n,e)}function uF(e,t){switch(t){default:return;case"position":return{setValue(t){ri.copy(e.position,t)}};case"rotation":return{setValue(t){ui.copy(e.rotation,t)}};case"scale":return{setValue(t){ri.copy(e.scale,t)}};case"eulerAngles":return{setValue(t){ri.copy(e.eulerAngles,t)}}}}class pF{constructor(e,t,n,i){this._lastFrameIndex=-1,this._lastIterations=0,this._lastDirection=0,this._ignoreIndex=-1,this._sampled=!1,this._targetNode=e,this._ratios=t,this._eventGroups=n,this._wrapMode=i}setWrapMode(e){this._wrapMode=e}ignore(e,t){this._ignoreIndex=-1,this._sampled=!1;let n=fF(e,this._ratios);n<0&&(n=~n-1,t<0&&(n+=1),this._ignoreIndex=n)}sample(e,t,n){const i=this._eventGroups.length;let s=fF(e,this._ratios);if(s<0&&(s=~s-1,t<0&&(s+=1)),this._ignoreIndex!==s&&(this._ignoreIndex=-1),!this._sampled)return this._sampled=!0,this._doFire(s,!1),this._lastFrameIndex=s,this._lastIterations=n,void(this._lastDirection=t);const r=this._wrapMode,o=dF(n);let a=dF(this._lastIterations),c=this._lastFrameIndex;const l=this._lastDirection,h=-1!==a&&o!==a;if(c===s&&h&&1===i)this._doFire(0,!1);else if(c!==s||h){t=l;do{if(c!==s){if(-1===t&&0===c&&s>0?((r&Uc.PingPong)===Uc.PingPong?t*=-1:c=i,a++):1===t&&c===i-1&&s<i-1&&((r&Uc.PingPong)===Uc.PingPong?t*=-1:c=-1,a++),c===s)break;if(a>o)break}c+=t,this._doFire(c,!0)}while(c!==s&&c>-1&&c<i)}this._lastFrameIndex=s,this._lastIterations=n,this._lastDirection=t}_doFire(e,t){t?i.director.getAnimationManager().pushDelayEvent(this._checkAndFire,this,[e]):this._checkAndFire(e)}_checkAndFire(e){if(!this._targetNode||!this._targetNode.isValid)return;const{_eventGroups:t}=this;if(e<0||e>=t.length||this._ignoreIndex===e)return;const n=t[e],i=this._targetNode.components,s=n.events.length;for(let e=0;e<s;++e){const t=n.events[e],{functionName:s}=t,r=i.length;for(let e=0;e<r;++e){const n=i[e],r=n[s];"function"==typeof r&&r.apply(n,t.parameters)}}}}function dF(e){return e-(0|e)==0&&(e-=1),0|e}function fF(e,t){return kc(t,e)}class mF{constructor(){this._isPlaying=!1,this._isPaused=!1,this._stepOnce=!1}get isPlaying(){return this._isPlaying}get isPaused(){return this._isPaused}get isMotionless(){return!this.isPlaying||this.isPaused}play(){this._isPlaying?this._isPaused?(this._isPaused=!1,this.onResume()):this.onError(I(3912)):(this._isPlaying=!0,this.onPlay())}stop(){this._isPlaying&&(this._isPlaying=!1,this.onStop(),this._isPaused=!1)}pause(){this._isPlaying&&!this._isPaused&&(this._isPaused=!0,this.onPause())}resume(){this._isPlaying&&this._isPaused&&(this._isPaused=!1,this.onResume())}step(){this.pause(),this._stepOnce=!0,this._isPlaying||this.play()}update(e){}onPlay(){}onPause(){}onResume(){}onStop(){}onError(e){}}class gF{constructor(e){this.weight=0,this._pose=void 0,this._blendStateWriters=[],this._pose=e}destroy(){for(let e=0;e<this._blendStateWriters.length;++e)this._pose.destroyWriter(this._blendStateWriters[e]);this._blendStateWriters.length=0}createPoseWriter(e,t,n){const i=this._pose.createWriter(e,t,this,n);return this._blendStateWriters.push(i),i}}let vF;!function(e){e.PLAY="play",e.STOP="stop",e.PAUSE="pause",e.RESUME="resume",e.LASTFRAME="lastframe",e.FINISHED="finished"}(vF||(vF={})),Fe(vF);class yF extends mF{get clip(){return this._clip}get name(){return this._name}get length(){return this.duration}get wrapMode(){return this._wrapMode}set wrapMode(e){var t;this._wrapMode=e,this.time=0,e&Uc.Loop?this.repeatCount=1/0:this.repeatCount=1,null===(t=this._clipEventEval)||void 0===t||t.setWrapMode(e)}get repeatCount(){return this._repeatCount}set repeatCount(e){this._repeatCount=e;const t=this._wrapMode&Uc.ShouldWrap,n=(this.wrapMode&Uc.Reverse)===Uc.Reverse;this._useSimpleProcess=e===1/0&&!t&&!n}get delay(){return this._delay}set delay(e){this._delayTime=this._delay=e}get playbackRange(){return this._playbackRange}set playbackRange(e){e.max,e.min,this._playbackRange.min=Math.max(e.min,0),this._playbackRange.max=Math.min(e.max,this.duration),this._playbackDuration=this._playbackRange.max-this._playbackRange.min,this.setTime(0)}get current(){return this.getWrappedInfo(this.time).time}get ratio(){return this.current/this.duration}get weight(){return this._weight}set weight(e){this._weight=e,this._poseOutput&&(this._poseOutput.weight=e)}constructor(e,t=""){super(),this.duration=1,this.speed=1,this.time=0,this.frameRate=0,this._targetNode=null,this._curveLoaded=!1,this._clip=void 0,this._useSimpleProcess=!1,this._target=null,this._wrapMode=Gc.Normal,this._repeatCount=1,this._delay=0,this._delayTime=0,this._currentFramePlayed=!1,this._name=void 0,this._lastIterations=NaN,this._lastWrapInfo=null,this._wrappedInfo=new Hc,this._allowLastFrame=!1,this._blendStateWriterHost={weight:0},this._playbackDuration=0,this._invDuration=1,this._poseOutput=null,this._weight=0,this._clipEval=void 0,this._clipEventEval=void 0,this._doNotCreateEval=!1,this._clip=e,this._name=t||e&&e.name,this._playbackRange={min:0,max:e.duration},this._playbackDuration=e.duration,e.duration||m(`Clip ${e.name} has zero duration.`)}get curveLoaded(){return this._curveLoaded}initialize(e,t,n){if(this._curveLoaded)return;this._curveLoaded=!0,this._poseOutput&&(this._poseOutput.destroy(),this._poseOutput=null),this._clipEval&&(this._clipEval=void 0),this._targetNode=e;const s=this._clip;if(this.duration=s.duration,this._invDuration=1/this.duration,this.speed=s.speed,this.wrapMode=s.wrapMode,this.frameRate=s.sample,this._playbackRange.min=0,this._playbackRange.max=s.duration,this._playbackDuration=s.duration,(this.wrapMode&Uc.Loop)===Uc.Loop?this.repeatCount=1/0:this.repeatCount=1,!this._doNotCreateEval){var r,o,a;const n=null!==(r=null!=t?t:null===(o=i.director.getAnimationManager())||void 0===o?void 0:o.blendState)&&void 0!==r?r:null;n&&(this._poseOutput=new gF(n)),this._clipEval=s.createEvaluator({target:e,pose:null!==(a=this._poseOutput)&&void 0!==a?a:void 0})}this._clipEventEval=s.createEventEvaluator(this._targetNode)}destroy(){this.isMotionless||i.director.getAnimationManager().removeAnimation(this),this._poseOutput&&(this._poseOutput.destroy(),this._poseOutput=null),this._clipEval=void 0}emit(...e){i.director.getAnimationManager().pushDelayEvent(this._emit,this,e)}on(e,t,n){return this._target&&this._target.isValid?this._target.on(e,t,n):null}once(e,t,n){return this._target&&this._target.isValid?this._target.once(e,t,n):null}off(e,t,n){this._target&&this._target.isValid&&this._target.off(e,t,n)}allowLastFrameEvent(e){this._allowLastFrame=e}_setEventTarget(e){this._target=e}setTime(e){this._currentFramePlayed=!1,this.time=e||0;{var t;const n=this.getWrappedInfo(e,this._wrappedInfo);null===(t=this._clipEventEval)||void 0===t||t.ignore(n.ratio,n.direction)}}update(e){this._delayTime>0&&(this._delayTime-=e,this._delayTime>0)||(this._currentFramePlayed?this.time+=e*this.speed:this._currentFramePlayed=!0,this._process())}sample(){const e=this.getWrappedInfo(this.time,this._wrappedInfo);return this._sampleCurves(e.time),this._sampleEvents(e),e}onPlay(){this.setTime(this._getPlaybackStart()),this._delayTime=this._delay,this._onReplayOrResume(),this.emit(vF.PLAY,this)}onStop(){this.isPaused||this._onPauseOrStop(),this.emit(vF.STOP,this)}onResume(){this._onReplayOrResume(),this.emit(vF.RESUME,this)}onPause(){this._onPauseOrStop(),this.emit(vF.PAUSE,this)}_sampleCurves(e){const{_poseOutput:t,_clipEval:n}=this;t&&(t.weight=this.weight),n&&n.evaluate(e)}_process(){this._useSimpleProcess?this.simpleProcess():this.process()}process(){const e=this.sample();if(this._allowLastFrame){let t;t=this._lastWrapInfo?this._lastWrapInfo:this._lastWrapInfo=new Hc(e),this.repeatCount>1&&(0|e.iterations)>(0|t.iterations)&&this.emit(vF.LASTFRAME,this),t.set(e)}e.stopped&&(this.stop(),this.emit(vF.FINISHED,this))}simpleProcess(){const e=this._playbackRange.min,t=this._playbackDuration;let n=this.time%t;n<0&&(n+=t);const i=(e+n)*this._invDuration;this._sampleCurves(e+n),this._sampleEvents(this.getWrappedInfo(this.time,this._wrappedInfo)),this._allowLastFrame&&(Number.isNaN(this._lastIterations)&&(this._lastIterations=i),(this.time>0&&this._lastIterations>i||this.time<0&&this._lastIterations<i)&&this.emit(vF.LASTFRAME,this),this._lastIterations=i)}_needReverse(e){const t=this.wrapMode;let n=!1;return(t&Uc.PingPong)===Uc.PingPong&&(e-(0|e)==0&&e>0&&(e-=1),1&e&&(n=!n)),(t&Uc.Reverse)===Uc.Reverse&&(n=!n),n}getWrappedInfo(e,t){t=t||new Hc;const n=this._getPlaybackStart(),i=this._getPlaybackEnd()-n;let s=!1;const r=this.repeatCount;let o=(e-=n)>0?e/i:-e/i;if(o>=r){o=r,s=!0;let t=r-(0|r);0===t&&(t=1),e=t*i*(e>0?1:-1)}if(e>i){const t=e%i;e=0===t?i:t}else e<0&&0!=(e%=i)&&(e+=i);let a=!1;const c=this._wrapMode&Uc.ShouldWrap;c&&(a=this._needReverse(o));let l=a?-1:1;return this.speed<0&&(l*=-1),c&&a&&(e=i-e),t.time=n+e,t.ratio=t.time/this.duration,t.direction=l,t.stopped=s,t.iterations=o,t}_getPlaybackStart(){return this._playbackRange.min}_getPlaybackEnd(){return this._playbackRange.max}_sampleEvents(e){var t;null===(t=this._clipEventEval)||void 0===t||t.sample(e.ratio,e.direction,e.iterations)}_emit(e,t){this._target&&this._target.isValid&&this._target.emit(e,e,t)}_onReplayOrResume(){i.director.getAnimationManager().addAnimation(this)}_onPauseOrStop(){i.director.getAnimationManager().removeAnimation(this)}}e("AnimationState",yF),i.AnimationState=yF;const xF=CF,SF=CF;function CF(){}var TF,bF,EF,AF,PF,wF,IF,RF,DF,OF;TF=Zc("cc.animation.ClipMotion"),bF=Ol(rF),TF((AF=Bc((EF=class e extends jl{constructor(...e){super(...e),Fc(this,"clip",AF,this)}[hN](e){return this.clip?new MF(e,this.clip):null}clone(){const t=new e;return t.clip=this.clip,t}}).prototype,"clip",[bF],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),EF));class MF{constructor(e,t){this.duration=t.duration,this._state=new yF(t),this._state.initialize(e.node,e.blendBuffer)}getClipStatuses(e){let t=!1;return{next:()=>t?{done:!0,value:void 0}:(t=!0,{done:!1,value:{__DEBUG_ID__:this.__DEBUG__ID__,clip:this._state.clip,weight:e}})}}get progress(){return this._state.time/this.duration}sample(e,t){if(0===t)return;this._state.name;const n=this._state.duration*e;this._state.time=n,this._state.weight=t,this._state.sample(),this._state.weight=0}}let NF=Zc("cc.animation.AnimationBlendItem")((IF=Bc((wF=class e{constructor(){Fc(this,"motion",IF,this)}clone(){const t=new e;return this._assign(t),t}_assign(e){var t,n;return e.motion=null!==(t=null===(n=this.motion)||void 0===n?void 0:n.clone())&&void 0!==t?t:null,e}}).prototype,"motion",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),PF=wF))||PF,LF=Zc("cc.animation.AnimationBlend")((OF=Bc((DF=class extends jl{constructor(...e){super(...e),Fc(this,"name",OF,this)}}).prototype,"name",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),RF=DF))||RF;class zF{constructor(e,t,n){this._childEvaluators=t.map((t=>{var n,i;return null!==(n=null===(i=t.motion)||void 0===i?void 0:i[hN](e))&&void 0!==n?n:null})),this._weights=new Array(this._childEvaluators.length).fill(0),this._inputs=[...n]}get duration(){let e=0;for(let i=0;i<this._childEvaluators.length;++i){var t,n;e+=(null!==(t=null===(n=this._childEvaluators[i])||void 0===n?void 0:n.duration)&&void 0!==t?t:0)*this._weights[i]}return e}getClipStatuses(e){const{_childEvaluators:t,_weights:n}=this,i=t.length;let s,r=0;return{next(){for(;;){if(s){const e=s.next();if(!e.done)return e}if(r>=i)return{done:!0,value:void 0};{const i=t[r];s=null==i?void 0:i.getClipStatuses(e*n[r]),++r}}}}}sample(e,t){for(let i=0;i<this._childEvaluators.length;++i){var n;null===(n=this._childEvaluators[i])||void 0===n||n.sample(e,t*this._weights[i])}}setInput(e,t){this._inputs[t]=e,this.doEval()}doEval(){this.eval(this._weights,this._inputs)}eval(e,t){}}var FF,BF,UF,GF,HF,kF,VF,jF;let WF=Zc("cc.animation.AnimationBlend1DItem")((UF=Bc((BF=class e extends NF{constructor(...e){super(...e),Fc(this,"threshold",UF,this)}clone(){const t=new e;return this._assign(t),t}_assign(e){return super._assign(e),e.threshold=this.threshold,e}}).prototype,"threshold",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),FF=BF))||FF;Zc("cc.animation.AnimationBlend1D")((jF=VF=class e extends LF{constructor(...e){super(...e),Fc(this,"_items",HF,this),Fc(this,"param",kF,this)}get items(){return this._items}set items(e){this._items=Array.from(e).sort((({threshold:e},{threshold:t})=>e-t))}clone(){const t=new e;return t._items=this._items.map((e=>e.clone())),t.param=this.param.clone(),t}[hN](e){const t=new qF(e,this._items,this._items.map((({threshold:e})=>e)),0),n=ON(e,this.param,IN.FLOAT,t.setInput,t,0);return t.setInput(n,0),t}},VF.Item=WF,HF=Bc((GF=jF).prototype,"_items",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),kF=Bc(GF.prototype,"param",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new RN}}),GF));class qF extends zF{constructor(e,t,n,i){super(e,t,[i]),this._thresholds=n,this.doEval()}eval(e,[t]){!function(e,t,n){if(e.fill(0),0===t.length);else if(n<=t[0])e[0]=1;else if(n>=t[t.length-1])e[e.length-1]=1;else{let i=0;for(let e=1;e<t.length;++e)if(t[e]>n){i=e;break}const s=t[i-1],r=t[i],o=r-s;e[i-1]=(r-n)/o,e[i]=(n-s)/o}}(e,this._thresholds,t)}}const XF=(()=>{const e=new bi,t={wA:0,wB:0};return function(n,i,s){if(n.length,i.length,0===i.length)return;if(1===i.length)return void(n[0]=1);if(bi.strictEquals(s,bi.ZERO)){const e=i.findIndex((e=>bi.strictEquals(e,bi.ZERO)));return void(e>=0?n[e]=1:n.fill(1/i.length))}let r=-1,o=-1,a=-1,c=Number.NEGATIVE_INFINITY,l=Number.NEGATIVE_INFINITY;const{x:h,y:_}=s;for(let t=0;t<i.length;++t){const n=i[t];if(bi.equals(n,bi.ZERO)){a=t;continue}const u=bi.normalize(e,n),p=bi.dot(u,s);u.x*_-u.y*h>0?p>=l&&(l=p,r=t):p>=c&&(c=p,o=t)}let u=0;if(r<0||o<0)u=1;else{const{wA:e,wB:a}=function(e,t,n,i){const s=bi.cross(e,t);return s?(i.wA=bi.cross(n,t)/s,i.wB=bi.cross(n,e)/-s):(i.wA=0,i.wB=0),i}(i[r],i[o],s,t);let c=0,l=0;const h=e+a;h>1?(c=e/h,l=a/h):h<0?(c=0,l=0,u=1):(c=e,l=a,u=1-h),n[r]=c,n[o]=l}if(u>0)if(a>=0)n[a]=u;else{const e=u/n.length;for(let t=0;t<n.length;++t)n[t]+=e}}})();function YF(e,t,n,i){e.fill(0);const s=new bi(0,0),r=new bi(0,0);let o=0;const a=t.length;for(let c=0;c<a;++c){let l=Number.MAX_VALUE,h=!1;for(let e=0;e<a;++e){if(c===e)continue;i(t[c],t[e],n,s,r);const o=1-bi.dot(s,r)/bi.lengthSqr(r);if(o<0){h=!0;break}l=Math.min(l,o)}h||(e[c]=l,o+=l)}o>0&&e.forEach(((t,n)=>e[n]=t/o))}const KF=(e,t,n,i,s)=>{bi.subtract(i,n,e),bi.subtract(s,t,e)},$F=(()=>{const e=new ri(0,0,0),t=new ri(0,0,0),n=new ri(0,0,0),i=new ri(0,0,0),s=new ri(0,0,0),r=new ri(0,0,0);return(o,a,c,l,h)=>{let _=0,u=0,p=2;ri.set(n,c.x,c.y,0),bi.equals(o,bi.ZERO)?(_=bi.angle(c,a),u=0,p=1):bi.equals(a,bi.ZERO)?(_=bi.angle(c,o),u=_,p=1):(_=bi.angle(o,a),_<=0?u=0:bi.equals(c,bi.ZERO)?u=_:(ri.set(i,o.x,o.y,0),ri.set(s,a.x,a.y,0),ri.set(r,c.x,c.y,0),ri.cross(e,i,s),ri.projectOnPlane(n,r,e),u=ri.angle(i,n),_<.99*Math.PI&&ri.dot(ri.cross(t,i,n),e)<0&&(u=-u)));const d=bi.len(o),f=bi.len(a),m=(f+d)/2;bi.set(h,(f-d)/m,_*p),bi.set(l,(ri.len(n)-d)/m,u*p)}})();var ZF,QF,JF,eB,tB,nB,iB,sB,rB,oB,aB;!function(e){e[e.SIMPLE_DIRECTIONAL=0]="SIMPLE_DIRECTIONAL",e[e.FREEFORM_CARTESIAN=1]="FREEFORM_CARTESIAN",e[e.FREEFORM_DIRECTIONAL=2]="FREEFORM_DIRECTIONAL"}(aB||(aB={})),Fe(aB);let cB=Zc("cc.animation.AnimationBlend2DItem")((JF=Bc((QF=class e extends NF{constructor(...e){super(...e),Fc(this,"threshold",JF,this)}clone(){const t=new e;return this._assign(t),t}_assign(e){return super._assign(e),bi.copy(e.threshold,this.threshold),e}}).prototype,"threshold",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new bi}}),ZF=QF))||ZF;Zc("cc.animation.AnimationBlend2D")((oB=rB=class e extends LF{constructor(...e){super(...e),Fc(this,"algorithm",tB,this),Fc(this,"_items",nB,this),Fc(this,"paramX",iB,this),Fc(this,"paramY",sB,this)}get items(){return this._items}set items(e){this._items=Array.from(e)}clone(){const t=new e;return t._items=this._items.map((e=>{var t;return null!==(t=null==e?void 0:e.clone())&&void 0!==t?t:null})),t.paramX=this.paramX.clone(),t.paramY=this.paramY.clone(),t}[hN](e){const t=new lB(e,this._items,this._items.map((({threshold:e})=>e)),this.algorithm,[0,0]),n=ON(e,this.paramX,IN.FLOAT,t.setInput,t,0),i=ON(e,this.paramY,IN.FLOAT,t.setInput,t,1);return t.setInput(n,0),t.setInput(i,1),t}},rB.Algorithm=aB,rB.Item=cB,tB=Bc((eB=oB).prototype,"algorithm",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return aB.SIMPLE_DIRECTIONAL}}),nB=Bc(eB.prototype,"_items",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),iB=Bc(eB.prototype,"paramX",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new RN}}),sB=Bc(eB.prototype,"paramY",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new RN}}),eB));class lB extends zF{constructor(e,t,n,i,s){super(e,t,s),this._thresholds=void 0,this._algorithm=void 0,this._value=new bi,this._thresholds=n,this._algorithm=i,this.doEval()}eval(e,[t,n]){switch(bi.set(this._value,t,n),e.fill(0),this._algorithm){case aB.SIMPLE_DIRECTIONAL:XF(e,this._thresholds,this._value);break;case aB.FREEFORM_CARTESIAN:!function(e,t,n){YF(e,t,n,KF)}(e,this._thresholds,this._value);break;case aB.FREEFORM_DIRECTIONAL:!function(e,t,n){YF(e,t,n,$F)}(e,this._thresholds,this._value)}}}var hB,_B,uB,pB,dB,fB,mB;let gB=Zc("cc.animation.AnimationBlendDirectItem")((uB=Bc((_B=class e extends NF{constructor(...e){super(...e),Fc(this,"weight",uB,this)}clone(){const t=new e;return this._assign(t),t}_assign(e){return super._assign(e),e.weight=this.weight,e}}).prototype,"weight",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),hB=_B))||hB;Zc("cc.animation.AnimationBlendDirect")((mB=fB=class e extends LF{constructor(...e){super(...e),Fc(this,"_items",dB,this)}get items(){return this._items}set items(e){this._items=Array.from(e)}clone(){const t=new e;return t._items=this._items.map((e=>{var t;return null!==(t=null==e?void 0:e.clone())&&void 0!==t?t:null})),t}[hN](e){return new vB(e,this._items,this._items.map((({weight:e})=>e)))}},fB.Item=gB,dB=Bc((pB=mB).prototype,"_items",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),pB));class vB extends zF{constructor(...e){super(...e),this.doEval()}eval(e,t){const n=e.length;for(let i=0;i<n;++i)e[i]=t[i]}}var yB,xB,SB,CB,TB,bB,EB,AB,PB,wB,IB,RB,DB,OB,MB,NB;!function(e){e[e.EQUAL_TO=0]="EQUAL_TO",e[e.NOT_EQUAL_TO=1]="NOT_EQUAL_TO",e[e.LESS_THAN=2]="LESS_THAN",e[e.LESS_THAN_OR_EQUAL_TO=3]="LESS_THAN_OR_EQUAL_TO",e[e.GREATER_THAN=4]="GREATER_THAN",e[e.GREATER_THAN_OR_EQUAL_TO=5]="GREATER_THAN_OR_EQUAL_TO"}(MB||(MB={})),Zc("cc.animation.BinaryCondition")((bB=TB=class e{constructor(){Fc(this,"operator",xB,this),Fc(this,"lhs",SB,this),Fc(this,"rhs",CB,this)}clone(){const t=new e;return t.operator=this.operator,t.lhs=this.lhs.clone(),t.rhs=this.rhs.clone(),t}[hN](e){const{operator:t,lhs:n,rhs:i}=this,s=new LB(t,0,0),r=MN(e,n,IN.FLOAT,s.setLhs,s),o=MN(e,i,IN.FLOAT,s.setRhs,s);return s.reset(r,o),s}},TB.Operator=MB,xB=Bc((yB=bB).prototype,"operator",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return MB.EQUAL_TO}}),SB=Bc(yB.prototype,"lhs",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new RN}}),CB=Bc(yB.prototype,"rhs",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new RN}}),yB));class LB{constructor(e,t,n){this._operator=e,this._lhs=t,this._rhs=n,this._eval()}reset(e,t){this._lhs=e,this._rhs=t,this._eval()}setLhs(e){this._lhs=e,this._eval()}setRhs(e){this._rhs=e,this._eval()}eval(){return this._result}_eval(){const{_lhs:e,_rhs:t}=this;switch(this._operator){default:case MB.EQUAL_TO:this._result=e===t;break;case MB.NOT_EQUAL_TO:this._result=e!==t;break;case MB.LESS_THAN:this._result=e<t;break;case MB.LESS_THAN_OR_EQUAL_TO:this._result=e<=t;break;case MB.GREATER_THAN:this._result=e>t;break;case MB.GREATER_THAN_OR_EQUAL_TO:this._result=e>=t}}}!function(e){e[e.TRUTHY=0]="TRUTHY",e[e.FALSY=1]="FALSY"}(NB||(NB={})),Zc("cc.animation.UnaryCondition")((IB=wB=class e{constructor(){Fc(this,"operator",AB,this),Fc(this,"operand",PB,this)}clone(){const t=new e;return t.operator=this.operator,t.operand=this.operand.clone(),t}[hN](e){const{operator:t,operand:n}=this,i=new zB(t,!1),s=ON(e,n,IN.BOOLEAN,i.setOperand,i);return i.reset(s),i}},wB.Operator=NB,AB=Bc((EB=IB).prototype,"operator",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return NB.TRUTHY}}),PB=Bc(EB.prototype,"operand",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new DN}}),EB));class zB{constructor(e,t){this._operator=e,this._operand=t,this._eval()}reset(e){this.setOperand(e)}setOperand(e){this._operand=e,this._eval()}eval(){return this._result}_eval(){const{_operand:e}=this;switch(this._operator){default:case NB.TRUTHY:this._result=!!e;break;case NB.FALSY:this._result=!e}}}let FB=Zc("cc.animation.TriggerCondition")((OB=Bc((DB=class e{constructor(){Fc(this,"trigger",OB,this)}clone(){const t=new e;return t.trigger=this.trigger,t}[hN](e){const t=new BB(!1),n=e.getVar(this.trigger);return NN(n,this.trigger)&&(function(e,t,n){if(e!==t)throw new lN(n,"number")}(n.type,IN.TRIGGER,this.trigger),t.setTrigger(n.bind(t.setTrigger,t))),t}}).prototype,"trigger",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),RB=DB))||RB;class BB{constructor(e){this._triggered=!1,this._triggered=e}setTrigger(e){this._triggered=e}eval(){return this._triggered}}class UB{constructor(){this._nodeBlendStates=new Map}createWriter(e,t,n,i){const s=this.ref(e,t);return new GB(e,t,s,n,i)}destroyWriter(e){const t=e;this.deRef(t.node,t.property)}ref(e,t){let n=this._nodeBlendStates.get(e);return n||(n=new jB,this._nodeBlendStates.set(e,n)),n.refProperty(t)}deRef(e,t){const n=this._nodeBlendStates.get(e);n&&(n.deRefProperty(t),n.empty&&this._nodeBlendStates.delete(e))}apply(){this._nodeBlendStates.forEach(((e,t)=>{e.apply(t)}))}}class GB{constructor(e,t,n,i,s){this._node=e,this._property=t,this._propertyBlendState=n,this._host=i,this._constants=s}get node(){return this._node}get property(){return this._property}getValue(){return this._node[this._property]}setValue(e){const{_propertyBlendState:t,_host:n}=this,i=n.weight;t.blend(e,i)}}class HB{constructor(e){this.blendedWeight=0,this.blendedValue=void 0,this.refCount=0,this.blendedValue=e}}class kB extends HB{constructor(){super(new ri)}blend(e,t){const{blendedValue:n}=this;1===t?ri.copy(n,e):ri.scaleAndAdd(n,n,e,t),this.blendedWeight+=t}reset(){this.blendedWeight=0,ri.zero(this.blendedValue)}}class VB extends HB{constructor(){super(new ui)}blend(e,t){if(0===t)return;const{blendedValue:n,blendedWeight:i}=this;if(1===t)ui.copy(n,e);else{const s=t/(i+t);ui.slerp(n,n,e,s)}this.blendedWeight+=t}reset(){this.blendedWeight=0,ui.identity(this.blendedValue)}}class jB{constructor(){this._properties={}}get empty(){const{_properties:e}=this;return!(e.position||e.rotation||e.eulerAngles||e.scale)}refProperty(e){var t,n;const{_properties:i}=this;let s;switch(e){default:case"position":case"scale":case"eulerAngles":s=null!==(t=i[e])&&void 0!==t?t:i[e]=new kB;break;case"rotation":s=null!==(n=i[e])&&void 0!==n?n:i[e]=new VB}return++s.refCount,s}deRefProperty(e){const{_properties:t}=this,n=t[e];n&&(--n.refCount,n.refCount>0||delete t[e])}apply(e){const{_properties:{position:t,scale:n,rotation:i,eulerAngles:s}}=this;let r,o,a,c=!1,l=!1,h=!1,_=!1;t&&t.blendedWeight&&(c=!0,t.blendedWeight<1&&t.blend(e.position,1-t.blendedWeight),r=t.blendedValue),n&&n.blendedWeight&&(l=!0,n.blendedWeight<1&&n.blend(e.scale,1-n.blendedWeight),o=n.blendedValue),s&&s.blendedWeight&&(_=!0,s.blendedWeight<1&&s.blend(e.eulerAngles,1-s.blendedWeight),a=s.blendedValue),i&&i.blendedWeight&&(h=!0,i.blendedWeight<1&&i.blend(e.rotation,1-i.blendedWeight),a=i.blendedValue),(a||r||o)&&e.setRTS(a,r,o),c&&t.reset(),l&&n.reset(),h&&i.reset(),_&&s.reset()}}var WB;let qB=Zc("cc.animation.StateMachineComponent")(WB=class{onMotionStateEnter(e,t){}onMotionStateExit(e,t){}onMotionStateUpdate(e,t){}onStateMachineEnter(e){}onStateMachineExit(e){}})||WB;class XB{constructor(e,t,n){this._blendBuffer=new UB,this._currentTransitionCache={duration:0,time:0},this._varInstances={};for(const[t,{type:n,value:i}]of e.variables)this._varInstances[t]=new dU(n,i);const i={controller:n,blendBuffer:this._blendBuffer,node:t,getVar:e=>this._varInstances[e],triggerResetFn:e=>{this.setValue(e,!1)}};this._layerEvaluations=Array.from(e.layers).map((e=>{var t;return new YB(e,{...i,mask:null!==(t=e.mask)&&void 0!==t?t:void 0})}))}update(e){for(const t of this._layerEvaluations)t.update(e);this._blendBuffer.apply()}getVariables(){return Object.entries(this._varInstances)}getCurrentStateStatus(e){return this._layerEvaluations[e].getCurrentStateStatus()}getCurrentClipStatuses(e){return this._layerEvaluations[e].getCurrentClipStatuses()}getCurrentTransition(e){const{_layerEvaluations:t,_currentTransitionCache:n}=this;return t[e].getCurrentTransition(n)?n:null}getNextStateStatus(e){return this._layerEvaluations[e].getNextStateStatus()}getNextClipStatuses(e){return this.getCurrentTransition(e),this._layerEvaluations[e].getNextClipStatuses()}getValue(e){const t=this._varInstances[e];return t?t.value:void 0}setValue(e,t){const n=this._varInstances[e];n&&(n.value=t)}}class YB{constructor(e,t){this._weight=void 0,this._nodes=[],this._topLevelEntry=void 0,this._topLevelExit=void 0,this._currentNode=void 0,this._currentTransitionToNode=null,this._currentTransitionPath=[],this._transitionProgress=0,this._fromWeight=0,this._toWeight=0,this._fromUpdated=!1,this._toUpdated=!1,this.name=e.name,this._controller=t.controller,this._weight=e.weight;const{entry:n,exit:i}=this._addStateMachine(e.stateMachine,null,{...t},e.name);this._topLevelEntry=n,this._topLevelExit=i,this._currentNode=n,this._resetTrigger=t.triggerResetFn}get exited(){return this._currentNode===this._topLevelExit}update(e){this.exited||(this._fromWeight=1,this._toWeight=0,this._eval(e),this._sample())}getCurrentStateStatus(){const{_currentNode:e}=this;return e.kind===tU.animation?e.getFromPortStatus():null}getCurrentClipStatuses(){const{_currentNode:e}=this;return e.kind===tU.animation?e.getClipStatuses(this._fromWeight):$B}getCurrentTransition(e){const{_currentTransitionPath:t}=this;if(0!==t.length){if(t[t.length-1].to.kind!==tU.animation)return!1;const{duration:n,normalizedDuration:i}=t[0],s=e.duration=i?n*(this._currentNode.kind===tU.animation?this._currentNode.duration:0):n;return e.time=this._transitionProgress*s,!0}return!1}getNextStateStatus(){return this._currentTransitionToNode,this._currentTransitionToNode.getToPortStatus()}getNextClipStatuses(){var e;const{_currentTransitionPath:t}=this,n=t[t.length-1].to;return n.kind,tU.animation,null!==(e=n.getClipStatuses(this._toWeight))&&void 0!==e?e:$B}_addStateMachine(e,t,n,i){const s=Array.from(e.states());let r,o,a;const c=s.map((t=>t instanceof UN?new hU(t,n):t===e.entryState?r=new pU(t,tU.entry,t.name):t===e.exitState?a=new pU(t,tU.exit,t.name):t===e.anyState?o=new pU(t,tU.any,t.name):null)),l={components:null,parent:t,entry:r,exit:a,any:o};for(let e=0;e<s.length;++e){const t=c[e];t&&(t.stateMachine=l)}const h=s.map((e=>{if(e instanceof wL){const t=this._addStateMachine(e.stateMachine,l,n,`${i}/${e.name}`);return t.components=new lU(e),t}return null}));for(let t=0;t<s.length;++t){const i=s[t],r=e.getOutgoings(i),o=[];let a;a=i instanceof wL?h[t].exit:c[t];for(const e of r){const t=e.to,i=s.findIndex((t=>t===e.to));let r;r=t instanceof wL?h[i].entry:c[i];const a={to:r,conditions:e.conditions.map((e=>e[hN](n))),duration:EL(e)?e.duration:0,normalizedDuration:!!EL(e)&&e.relativeDuration,exitConditionEnabled:!!EL(e)&&e.exitConditionEnabled,exitCondition:EL(e)?e.exitCondition:0,triggers:void 0};a.conditions.forEach(((t,n)=>{const i=e.conditions[n];var s;i instanceof FB&&i.trigger&&(null!==(s=a.triggers)&&void 0!==s?s:a.triggers=[]).push(i.trigger)})),o.push(a)}a.outgoingTransitions=o}return l}_eval(e){if(this.exited,SF(`[Layer ${this.name}]: UpdateStart ${e}s`),this._continueDanglingTransition())return 0;let t=e;for(let e=!0,n=0;e||t>0;){if(e=!1,100===n){T(14e3,100);break}if(++n,this._currentTransitionPath.length>0){if(t-=this._updateCurrentTransition(t),this._currentNode.kind===tU.exit)break;0===this._currentTransitionPath.length&&(e=!0);continue}const{_currentNode:i}=this,s=this._matchCurrentNodeTransition(t);if(s){const{transition:n,requires:r}=s;if(xF(`[SubStateMachine ${this.name}]: CurrentNodeUpdate: ${i.name}`),t-=r,i.kind===tU.animation&&(i.updateFromPort(r),this._fromUpdated=!0),this._switchTo(n))break;e=!0}else xF(`[SubStateMachine ${this.name}]: CurrentNodeUpdate: ${i.name}`),i.kind===tU.animation&&(i.updateFromPort(t),this._fromUpdated=!0,t=0)}return xF(`[SubStateMachine ${this.name}]: UpdateEnd`),this._fromUpdated&&this._currentNode.kind===tU.animation&&(this._fromUpdated=!1,this._currentNode.triggerFromPortUpdate(this._controller)),this._currentTransitionToNode&&this._toUpdated&&this._currentNode.kind===tU.animation&&(this._toUpdated=!1,this._currentTransitionToNode.triggerToPortUpdate(this._controller)),t}_sample(){const{_currentNode:e,_currentTransitionToNode:t,_fromWeight:n}=this;e.kind===tU.animation&&e.sampleFromPort(n),t&&t.kind===tU.animation&&t.sampleToPort(this._toWeight)}_matchCurrentNodeTransition(e){const t=this._currentNode;let n=1/0,i=null;const s=this._matchTransition(t,t,e,JB);if(s&&({requires:n,transition:i}=s),t.kind===tU.animation)for(let s=t.stateMachine;null!==s;s=s.parent){const r=this._matchTransition(s.any,t,e,eU);r&&r.requires<n&&({requires:n,transition:i}=r)}return i?QB.set(i,n):null}_matchTransition(e,t,n,i){e===t||(e.kind,tU.any);const{outgoingTransitions:s}=e,r=s.length;let o=1/0,a=null;for(let c=0;c<r;++c){const r=s[c],{conditions:l}=r,h=l.length;if(0===h){if(e.kind===tU.entry||e.kind===tU.exit)return i.set(r,0);if(!r.exitConditionEnabled)continue}let _=0;if(t.kind===tU.animation&&r.exitConditionEnabled){const e=t.duration*r.exitCondition;if(_=Math.max(e-t.fromPortTime,0),_>n)continue}let u=!0;for(let e=0;e<h;++e)if(!l[e].eval()){u=!1;break}if(u){if(0===_)return i.set(r,0);_<o&&(o=_,a=r)}}return a?i.set(a,o):null}_switchTo(e){const{_currentNode:t}=this;SF(`[SubStateMachine ${this.name}]: STARTED ${t.name} -> ${e.to.name}.`);const{_currentTransitionPath:n}=this;this._consumeTransition(e),n.push(e);const i=this._matchTransitionPathUntilMotion();return!i||(this._doTransitionToMotion(i),!1)}_continueDanglingTransition(){const{_currentTransitionPath:e}=this,t=e.length;if(0===t)return!1;if(e[t-1].to.kind!==tU.animation){const e=this._matchTransitionPathUntilMotion();return!e||(this._doTransitionToMotion(e),!1)}return!1}_matchTransitionPathUntilMotion(){const{_currentTransitionPath:e}=this;let t=e[e.length-1].to;for(;t.kind!==tU.animation;){const n=this._matchTransition(t,t,0,QB);if(!n)break;const i=n.transition;this._consumeTransition(i),e.push(i),t=i.to}return t.kind===tU.animation?t:null}_consumeTransition(e){const{to:t}=e;t.kind===tU.entry&&this._callEnterMethods(t)}_resetTriggersAlongThePath(){const{_currentTransitionPath:e}=this,t=e.length;for(let n=0;n<t;++n){const t=e[n];this._resetTriggersOnTransition(t)}}_doTransitionToMotion(e){this._resetTriggersAlongThePath(),this._transitionProgress=0,this._currentTransitionToNode=e,this._toUpdated=!1,e.resetToPort(),this._callEnterMethods(e)}_updateCurrentTransition(e){var t;const{_currentTransitionPath:n,_currentTransitionToNode:i}=this;n.length;const s=n[0],{duration:r,normalizedDuration:o}=s,a=this._currentNode,c=i;let l=0,h=0;if(r<=0)l=0,h=1;else{a.kind,tU.animation;const{_transitionProgress:t}=this,n=o?r*a.duration:r,i=t*n,s=n-i;l=Math.min(s,e),h=this._transitionProgress=(i+l)/n}const _=null!==(t=null==c?void 0:c.name)&&void 0!==t?t:"<Empty>",u=this._weight;SF(`[SubStateMachine ${this.name}]: TransitionUpdate: ${a.name} -> ${_}with ratio ${h} in base weight ${this._weight}.`),this._fromWeight=u*(1-h),this._toWeight=u*h;const p=0!==l,d=1===h;if(a.kind===tU.animation&&p&&(SF(`Update ${a.name}`),a.updateFromPort(l),this._fromUpdated=!0),c&&p&&(SF(`Update ${c.name}`),c.updateToPort(l),this._toUpdated=!0),d){xF(`[SubStateMachine ${this.name}]: Transition finished:  ${a.name} -> ${_}.`),this._callExitMethods(a);const{_currentTransitionPath:e}=this,t=e.length;for(let n=0;n<t;++n){const{to:t}=e[n];t.kind===tU.exit&&this._callExitMethods(t)}this._fromUpdated=this._toUpdated,this._toUpdated=!1,c.finishTransition(),this._currentNode=c,this._currentTransitionToNode=null,this._currentTransitionPath.length=0,this._fromWeight=1,this._toWeight=0}return l}_resetTriggersOnTransition(e){const{triggers:t}=e;if(t){const e=t.length;for(let n=0;n<e;++n){const e=t[n];this._resetTrigger(e)}}}_resetTrigger(e){const{_triggerReset:t}=this;t(e)}_callEnterMethods(e){var t;const{_controller:n}=this;switch(e.kind){default:break;case tU.animation:e.components.callMotionStateEnterMethods(n,e.getToPortStatus());break;case tU.entry:null===(t=e.stateMachine.components)||void 0===t||t.callStateMachineEnterMethods(n)}}_callExitMethods(e){var t;const{_controller:n}=this;switch(e.kind){default:break;case tU.animation:e.components.callMotionStateExitMethods(n,e.getFromPortStatus());break;case tU.exit:null===(t=e.stateMachine.components)||void 0===t||t.callStateMachineExitMethods(n)}}}const KB=Object.freeze({next:()=>({done:!0,value:void 0})}),$B=Object.freeze({[Symbol.iterator]:()=>KB});class ZB{constructor(){this.transition=null,this.requires=0}set(e,t){return this.transition=e,this.requires=t,this}}const QB=new ZB,JB=new ZB,eU=new ZB;var tU,nU,iU,sU,rU,oU,aU;!function(e){e[e.entry=0]="entry",e[e.exit=1]="exit",e[e.any=2]="any",e[e.animation=3]="animation"}(tU||(tU={}));class cU{constructor(e){this.name=void 0,this.outgoingTransitions=[],this.name=e.name}}class lU{constructor(e){this._components=e.instantiateComponents()}callMotionStateEnterMethods(e,t){this._callMotionStateCallbackIfNonDefault("onMotionStateEnter",e,t)}callMotionStateUpdateMethods(e,t){this._callMotionStateCallbackIfNonDefault("onMotionStateUpdate",e,t)}callMotionStateExitMethods(e,t){this._callMotionStateCallbackIfNonDefault("onMotionStateExit",e,t)}callStateMachineEnterMethods(e){this._callStateMachineCallbackIfNonDefault("onStateMachineEnter",e)}callStateMachineExitMethods(e){this._callStateMachineCallbackIfNonDefault("onStateMachineExit",e)}_callMotionStateCallbackIfNonDefault(e,t,n){const{_components:i}=this,s=i.length;for(let r=0;r<s;++r){const s=i[r];s[e]!==qB.prototype[e]&&s[e](t,n)}}_callStateMachineCallbackIfNonDefault(e,t){const{_components:n}=this,i=n.length;for(let s=0;s<i;++s){const i=n[s];i[e]!==qB.prototype[e]&&i[e](t)}}}class hU extends cU{constructor(e,t){var n,i;super(e),this.kind=tU.animation,this._source=null,this._speed=1,this._fromPort={progress:0,statusCache:{progress:0}},this._toPort={progress:0,statusCache:{progress:0}};const s=ON(t,e.speed,IN.FLOAT,this._setSpeed,this);this._speed=s;const r={...t},o=null!==(n=null===(i=e.motion)||void 0===i?void 0:i[hN](r))&&void 0!==n?n:null;o&&Object.defineProperty(o,"__DEBUG_ID__",{value:this.name}),this._source=o,this.components=new lU(e)}get duration(){var e,t;return null!==(e=null===(t=this._source)||void 0===t?void 0:t.duration)&&void 0!==e?e:0}get fromPortTime(){return this._fromPort.progress*this.duration}updateFromPort(e){this._fromPort.progress=_U(this._fromPort.progress,this.duration,e*this._speed)}updateToPort(e){this._toPort.progress=_U(this._toPort.progress,this.duration,e*this._speed)}triggerFromPortUpdate(e){this.components.callMotionStateUpdateMethods(e,this.getFromPortStatus())}triggerToPortUpdate(e){this.components.callMotionStateUpdateMethods(e,this.getToPortStatus())}getFromPortStatus(){const{statusCache:e}=this._fromPort;return e.progress=uU(this._fromPort.progress),e}getToPortStatus(){const{statusCache:e}=this._toPort;return e.progress=uU(this._toPort.progress),e}resetToPort(){this._toPort.progress=0}finishTransition(){this._fromPort.progress=this._toPort.progress}sampleFromPort(e){var t;null===(t=this._source)||void 0===t||t.sample(this._fromPort.progress,e)}sampleToPort(e){var t;null===(t=this._source)||void 0===t||t.sample(this._toPort.progress,e)}getClipStatuses(e){const{_source:t}=this;return t?{[Symbol.iterator]:()=>t.getClipStatuses(e)}:$B}_setSpeed(e){this._speed=e}}function _U(e,t,n){return 0===t?0:e+n/t}function uU(e){return e-Math.trunc(e)}class pU extends cU{constructor(e,t,n){super(e),this.kind=void 0,this.kind=t}}class dU{constructor(e,t){this.type=void 0,this._value=void 0,this._refs=[],this.type=e,this._value=t}get value(){return this._value}set value(e){this._value=e;for(const{fn:t,thisArg:n,args:i}of this._refs)t.call(n,e,...i)}bind(e,t,...n){return this._refs.push({fn:e,thisArg:t,args:n}),this._value}}let fU=(nU=Zc("cc.animation.AnimationController"),iU=ll(),sU=tl(DL),nU(rU=iU((aU=Bc((oU=class extends jh{constructor(...e){super(...e),Fc(this,"graph",aU,this),this._graphEval=null}start(){this.graph&&(this._graphEval=new XB(this.graph,this.node,this))}update(e){var t;null===(t=this._graphEval)||void 0===t||t.update(e)}getVariables(){const{_graphEval:e}=this;return e.getVariables()}setValue(e,t){const{_graphEval:n}=this;n.setValue(e,t)}getValue(e){const{_graphEval:t}=this;return t.getValue(e)}getCurrentStateStatus(e){const{_graphEval:t}=this;return t.getCurrentStateStatus(e)}getCurrentClipStatuses(e){const{_graphEval:t}=this;return t.getCurrentClipStatuses(e)}getCurrentTransition(e){const{_graphEval:t}=this;return t.getCurrentTransition(e)}getNextStateStatus(e){const{_graphEval:t}=this;return t.getNextStateStatus(e)}getNextClipStatuses(e){const{_graphEval:t}=this;return t.getNextClipStatuses(e)}}).prototype,"graph",[sU],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),rU=oU))||rU)||rU);var mU,gU,vU,yU,xU,SU,CU,TU,bU,EU,AU,PU,wU,IU,RU,DU,OU;e("animation",Object.freeze({__proto__:null,UniformProxyFactory:LO,MorphWeightValueProxy:jO,MorphWeightsValueProxy:WO,MorphWeightsAllValueProxy:qO,Track:AM,TrackPath:bM,RealTrack:DM,VectorTrack:BM,QuatTrack:VM,ColorTrack:KM,SizeTrack:tN,ObjectTrack:sN,isPropertyPath:PO,isCustomPath:function(e,t){return e instanceof t},HierarchyPath:wO,ComponentPath:IO,CubicSplineVec2Value:JO,CubicSplineVec3Value:eM,CubicSplineVec4Value:tM,CubicSplineQuatValue:nM,CubicSplineNumberValue:iM,AnimationController:fU,get VariableType(){return IN},StateMachineComponent:qB}));class MU extends mF{constructor(e){super(),this._managedStates=[],this._fadings=[],this._scheduled=!1,this._scheduler=null!=e?e:i.director.getAnimationManager()}update(e){if(this.isMotionless)return;const t=this._managedStates,n=this._fadings;if(1===t.length&&1===n.length){const e=t[0].state;e&&(e.weight=1)}else this._calculateWeights(e);1===t.length&&1===n.length&&this._unscheduleThis()}crossFade(e,t){var n;0===this._managedStates.length&&(t=0),0===t&&this.clear();let i=this._managedStates.find((t=>t.state===e));i?(null===(n=i.state)||void 0===n?void 0:n.isMotionless)&&i.state.play():(i={state:e,reference:0},e&&e.play(),this._managedStates.push(i)),++i.reference,this._fadings.unshift({easeDuration:t,easeTime:0,target:i}),this.isMotionless||this._scheduleThis()}clear(){for(let e=0;e<this._managedStates.length;++e){const t=this._managedStates[e].state;t&&t.stop()}this._managedStates.length=0,this._fadings.length=0}onPlay(){super.onPlay(),this._scheduleThis()}onPause(){super.onPause();for(let e=0;e<this._managedStates.length;++e){const t=this._managedStates[e].state;t&&t.pause()}this._unscheduleThis()}onResume(){super.onResume();for(let e=0;e<this._managedStates.length;++e){const t=this._managedStates[e].state;t&&t.resume()}this._scheduleThis()}onStop(){super.onStop(),this.clear()}_calculateWeights(e){const t=this._managedStates,n=this._fadings;for(let e=0;e<t.length;++e){const n=t[e].state;n&&(n.weight=0)}let i=1,s=n.length;for(let t=0;t<n.length;++t){const r=n[t];r.easeTime+=e;const o=0===r.easeDuration?1:Fn(r.easeTime/r.easeDuration),a=o*i;if(i*=1-o,r.target.state&&(r.target.state.weight+=a),r.easeTime>=r.easeDuration){s=t+1,r.easeTime=r.easeDuration;break}}if(s!==n.length){for(let e=s;e<n.length;++e){const t=n[e];--t.target.reference,t.target.reference<=0&&(t.target.state&&t.target.state.stop(),z(this._managedStates,t.target))}n.splice(s)}}_scheduleThis(){this._scheduled||(this._scheduler.addCrossFade(this),this._scheduled=!0)}_unscheduleThis(){this._scheduled&&(this._scheduler.removeCrossFade(this),this._scheduled=!1)}}let NU=function(t){return e({AnimationComponent:t,Animation:t}),t}((mU=Zc("cc.Animation"),gU=pl(),vU=Jc(99),yU=ll(),xU=Ol([rF]),SU=vl(),CU=Ol(rF),TU=vl(),bU=vl(),EU=Ol([rF]),mU(AU=gU(AU=vU(AU=cl(AU=yU((OU=DU=class extends(Ht(jh)){constructor(...e){super(...e),Fc(this,"playOnLoad",wU,this),this._crossFade=new MU,this._nameToState=Z(!0),Fc(this,"_clips",IU,this),Fc(this,"_defaultClip",RU,this),this._hasBeenPlayed=!1}get clips(){return this._clips}set clips(e){this._crossFade&&this._crossFade.clear();for(const e of this._clips)e&&this._removeStateOfAutomaticClip(e);for(const t of e)t&&this.createState(t);const t=e.find((e=>LU(e,this._defaultClip)));this._defaultClip=t||null,this._clips=e}get defaultClip(){return this._defaultClip}set defaultClip(e){this._defaultClip=e,e&&(this._clips.findIndex((t=>LU(t,e)))>=0||(this._clips.push(e),this.createState(e)))}onLoad(){this.clips=this._clips;for(const e in this._nameToState)this._nameToState[e].initialize(this.node)}start(){this.playOnLoad&&!this._hasBeenPlayed&&this._defaultClip&&this.crossFade(this._defaultClip.name,0)}onEnable(){this._crossFade.resume()}onDisable(){this._crossFade.pause()}onDestroy(){this._crossFade.stop();for(const e in this._nameToState)this._nameToState[e].destroy();this._nameToState=Z(!0)}play(e){if(this._hasBeenPlayed=!0,!e){if(!this._defaultClip)return;e=this._defaultClip.name}this.crossFade(e,0)}crossFade(e,t=.3){this._hasBeenPlayed=!0;const n=this._nameToState[e];n&&this.doPlayOrCrossFade(n,t)}pause(){this._crossFade.pause()}resume(){this._crossFade.resume()}stop(){this._crossFade.stop()}getAnimationState(e){return this.getState(e)}getState(e){const t=this._nameToState[e];return t&&!t.curveLoaded&&t.initialize(this.node),t||null}createState(e,t){return t=t||e.name,this.removeState(t),this._doCreateState(e,t)}removeState(e){const t=this._nameToState[e];t&&(t.allowLastFrameEvent(!1),t.stop(),delete this._nameToState[e])}addClip(e,t){return B(this._clips,e)||this._clips.push(e),this.createState(e,t)}removeClip(e,t){let n;for(const t in this._nameToState){const i=this._nameToState[t];if(i.clip===e){n=i;break}}if(e===this._defaultClip){if(!t)return void T(3902);this._defaultClip=null}if(n&&n.isPlaying){if(!t)return void T(3903);n.stop()}this._clips=this._clips.filter((t=>t!==e)),n&&delete this._nameToState[n.name]}on(e,t,n,i){const s=super.on(e,t,n,i);return e===vF.LASTFRAME&&this._syncAllowLastFrameEvent(),s}once(e,t,n){const i=super.once(e,t,n);return e===vF.LASTFRAME&&this._syncAllowLastFrameEvent(),i}off(e,t,n){super.off(e,t,n),e===vF.LASTFRAME&&this._syncDisallowLastFrameEvent()}_createState(e,t){return new yF(e,t)}_doCreateState(e,t){const n=this._createState(e,t);return n._setEventTarget(this),n.allowLastFrameEvent(this.hasEventListener(vF.LASTFRAME)),this.node&&n.initialize(this.node),this._nameToState[n.name]=n,n}doPlayOrCrossFade(e,t){this._crossFade.play(),this._crossFade.crossFade(e,t)}_removeStateOfAutomaticClip(e){for(const t in this._nameToState){const n=this._nameToState[t];LU(e,n.clip)&&(n.stop(),delete this._nameToState[t])}}_syncAllowLastFrameEvent(){if(this.hasEventListener(vF.LASTFRAME))for(const e in this._nameToState)this._nameToState[e].allowLastFrameEvent(!0)}_syncDisallowLastFrameEvent(){if(!this.hasEventListener(vF.LASTFRAME))for(const e in this._nameToState)this._nameToState[e].allowLastFrameEvent(!1)}},DU.EventType=vF,Bc((PU=OU).prototype,"clips",[xU,SU],Object.getOwnPropertyDescriptor(PU.prototype,"clips"),PU.prototype),Bc(PU.prototype,"defaultClip",[CU,TU],Object.getOwnPropertyDescriptor(PU.prototype,"defaultClip"),PU.prototype),wU=Bc(PU.prototype,"playOnLoad",[il,bU],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),IU=Bc(PU.prototype,"_clips",[EU],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),RU=Bc(PU.prototype,"_defaultClip",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),AU=PU))||AU)||AU)||AU)||AU)||AU));function LU(e,t){return e===t||!!e&&!!t&&e._uuid===t._uuid&&e._uuid}Cn(NU.prototype,"Animation",[{name:"getAnimationState",newName:"getState"},{name:"addClip",newName:"createState"},{name:"removeClip",newName:"removeState",customFunction(...e){const t=e[0];return NU.prototype.removeState.call(this,t.name)}}]),i.AnimationComponent=NU,Ae.setClassAlias(NU,"cc.AnimationComponent");const zU=[],FU=new Map;function BU(e,t){let n=0,i=xi.IDENTITY;for(;e;){if(e.stamp===t||e.stamp+1===t&&!e.node.hasChangedFlags){i=e.world,e.stamp=t;break}e.stamp=t,zU[n++]=e,e=e.parent}for(;n>0;){e=zU[--n],zU[n]=null;const t=e.node;xi.fromRTS(e.local,t.rotation,t.position,t.scale),i=xi.multiply(e.world,i,e.local)}return i}function UU(e,t){let n,i=null,s=0;for(;e!==t;){const t=e.uuid;if(FU.has(t)){i=FU.get(t);break}i={node:e,local:new xi,world:new xi,stamp:-1,parent:null},FU.set(t,i),zU[s++]=i,e=e.parent,i=null}for(;s>0;)n=zU[--s],zU[s]=null,n.parent=i,i=n;return i}function GU(e){let t=FU.get(e.uuid)||null;for(;t;)FU.delete(t.node.uuid),t=t.parent}var HU,kU,VU;let jU=e("AnimationManager",Zc((VU=kU=class extends Yw{constructor(...e){super(...e),this._anims=new M([]),this._crossFades=new M([]),this._delayEvents=[],this._blendStateBuffer=new UB,this._sockets=[]}get blendState(){return this._blendStateBuffer}addCrossFade(e){-1===this._crossFades.array.indexOf(e)&&this._crossFades.push(e)}removeCrossFade(e){const t=this._crossFades.array.indexOf(e);t>=0?this._crossFades.fastRemoveAt(t):E(3907)}update(e){const{_delayEvents:t,_crossFades:n,_sockets:s}=this;{const t=n.array;for(n.i=0;n.i<t.length;++n.i)t[n.i].update(e)}const r=this._anims,o=r.array;for(r.i=0;r.i<o.length;++r.i){const t=o[r.i];t.isMotionless||t.update(e)}this._blendStateBuffer.apply();const a=i.director.getTotalFrames();for(let e=0,t=s.length;e<t;e++){const{target:t,transform:n}=s[e];t.matrix=BU(n,a)}for(let e=0,n=t.length;e<n;e++){const n=t[e];n.fn.apply(n.thisArg,n.args)}t.length=0}destruct(){}addAnimation(e){-1===this._anims.array.indexOf(e)&&this._anims.push(e)}removeAnimation(e){const t=this._anims.array.indexOf(e);t>=0?this._anims.fastRemoveAt(t):E(3907)}pushDelayEvent(e,t,n){this._delayEvents.push({fn:e,thisArg:t,args:n})}addSockets(e,t){for(let n=0;n<t.length;++n){const i=t[n];if(this._sockets.find((e=>e.target===i.target)))continue;const s=e.getChildByPath(i.path),r=i.target&&s&&UU(s,e);r&&this._sockets.push({target:i.target,transform:r})}}removeSockets(e,t){for(let e=0;e<t.length;++e){const n=t[e];for(let e=0;e<this._sockets.length;++e){const t=this._sockets[e];if(t.target===n.target){GU(t.transform.node),this._sockets[e]=this._sockets[this._sockets.length-1],this._sockets.length--;break}}}}},kU.ID="animation",HU=VU))||HU);aI.on(oI.EVENT_INIT,(()=>{const e=new jU;aI.registerSystem(jU.ID,e,Yw.Priority.HIGH)})),i.AnimationManager=jU;const WU=new xi;function qU(e,t,n){for(xi.identity(n);e!==t;)xi.fromRTS(WU,e.rotation,e.position,e.scale),xi.multiply(n,WU,n),e=e.parent;return n}var XU,YU,KU,$U;i.easing=ku;let ZU=e("HierachyModifier",Zc("cc.HierachyModifier")(XU=class extends wO{})||XU);i.HierachyModifier=ZU;let QU=e("ComponentModifier",Zc("cc.ComponentModifier")(YU=class extends IO{})||YU);i.ComponentModifier=QU;let JU=e("CurveValueAdapter",Zc("cc.CurveValueAdapter")(KU=class{forTarget(e){return{set:()=>{}}}})||KU);i.CurveValueAdapter=JU;let eG,tG=e("UniformCurveValueAdapter",Zc("cc.UniformCurveValueAdapter")($U=class extends LO{})||$U);function nG(e){return"string"==typeof e}function iG(e){return"number"==typeof e}function sG(e,t){return e instanceof t}i.UniformCurveValueAdapter=tG,i.isPropertyModifier=nG,i.isElementModifier=iG,i.isCustomTargetModifier=sG,i.math=Li,i.geometry=ld;class rG{constructor(e){this.poolHandlerComp=void 0,this._pool=void 0,this.poolHandlerComp=e,this._pool=[]}size(){return this._pool.length}clear(){const e=this._pool.length;for(let t=0;t<e;++t)this._pool[t].destroy();this._pool.length=0}put(e){if(e&&-1===this._pool.indexOf(e)){e.removeFromParent();const t=this.poolHandlerComp?e.getComponent(this.poolHandlerComp):null;t&&t.unuse&&t.unuse(),this._pool.push(e)}}get(...e){const t=this._pool.length-1;if(t<0)return null;{const e=this._pool[t];this._pool.length=t;const n=this.poolHandlerComp?e.getComponent(this.poolHandlerComp):null;return n&&n.reuse&&n.reuse(arguments),e}}}e("NodePool",rG),i.NodePool=rG,i.renderer=xv;class oG extends Ho{constructor(...e){super(...e),this._gpuDescriptorSet=null}get gpuDescriptorSet(){return this._gpuDescriptorSet}initialize(e){this._layout=e.layout;const{bindings:t,descriptorIndices:n,descriptorCount:i}=e.layout.gpuDescriptorSetLayout;this._buffers=Array(i).fill(null),this._textures=Array(i).fill(null),this._samplers=Array(i).fill(null);const s=[];this._gpuDescriptorSet={gpuDescriptors:s,descriptorIndices:n};for(let e=0;e<t.length;++e){const n=t[e];for(let e=0;e<n.count;e++)s.push({type:n.descriptorType,gpuBuffer:null,gpuTexture:null,gpuSampler:null})}}destroy(){this._layout=null,this._gpuDescriptorSet=null}update(){if(this._isDirty&&this._gpuDescriptorSet){const e=this._gpuDescriptorSet.gpuDescriptors;for(let t=0;t<e.length;++t)if(e[t].type&bo){const n=this._buffers[t];n&&(e[t].gpuBuffer=n.gpuBuffer||n.gpuBufferView)}else e[t].type&Eo&&(this._textures[t]&&(e[t].gpuTexture=this._textures[t].gpuTexture),this._samplers[t]&&(e[t].gpuSampler=this._samplers[t].gpuSampler));this._isDirty=!1}}}!function(e){e[e.RGBA16F_EXT=34842]="RGBA16F_EXT",e[e.RGB16F_EXT=34843]="RGB16F_EXT",e[e.RGBA32F_EXT=34836]="RGBA32F_EXT",e[e.FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT=33297]="FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT",e[e.UNSIGNED_NORMALIZED_EXT=35863]="UNSIGNED_NORMALIZED_EXT",e[e.UNSIGNED_INT_24_8_WEBGL=34042]="UNSIGNED_INT_24_8_WEBGL",e[e.HALF_FLOAT_OES=36193]="HALF_FLOAT_OES",e[e.SRGB_EXT=35904]="SRGB_EXT",e[e.SRGB_ALPHA_EXT=35906]="SRGB_ALPHA_EXT",e[e.SRGB8_ALPHA8_EXT=35907]="SRGB8_ALPHA8_EXT",e[e.COMPRESSED_RGB_S3TC_DXT1_EXT=33776]="COMPRESSED_RGB_S3TC_DXT1_EXT",e[e.COMPRESSED_RGBA_S3TC_DXT1_EXT=33777]="COMPRESSED_RGBA_S3TC_DXT1_EXT",e[e.COMPRESSED_RGBA_S3TC_DXT3_EXT=33778]="COMPRESSED_RGBA_S3TC_DXT3_EXT",e[e.COMPRESSED_RGBA_S3TC_DXT5_EXT=33779]="COMPRESSED_RGBA_S3TC_DXT5_EXT",e[e.COMPRESSED_SRGB_S3TC_DXT1_EXT=35916]="COMPRESSED_SRGB_S3TC_DXT1_EXT",e[e.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT=35917]="COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT",e[e.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT=35918]="COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT",e[e.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT=35919]="COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT",e[e.COMPRESSED_RGB_PVRTC_4BPPV1_IMG=35840]="COMPRESSED_RGB_PVRTC_4BPPV1_IMG",e[e.COMPRESSED_RGB_PVRTC_2BPPV1_IMG=35841]="COMPRESSED_RGB_PVRTC_2BPPV1_IMG",e[e.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG=35842]="COMPRESSED_RGBA_PVRTC_4BPPV1_IMG",e[e.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG=35843]="COMPRESSED_RGBA_PVRTC_2BPPV1_IMG",e[e.COMPRESSED_RGB_ETC1_WEBGL=36196]="COMPRESSED_RGB_ETC1_WEBGL",e[e.COMPRESSED_R11_EAC=37488]="COMPRESSED_R11_EAC",e[e.COMPRESSED_SIGNED_R11_EAC=37489]="COMPRESSED_SIGNED_R11_EAC",e[e.COMPRESSED_RG11_EAC=37490]="COMPRESSED_RG11_EAC",e[e.COMPRESSED_SIGNED_RG11_EAC=37491]="COMPRESSED_SIGNED_RG11_EAC",e[e.COMPRESSED_RGB8_ETC2=37492]="COMPRESSED_RGB8_ETC2",e[e.COMPRESSED_SRGB8_ETC2=37493]="COMPRESSED_SRGB8_ETC2",e[e.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2=37494]="COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2",e[e.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2=37495]="COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2",e[e.COMPRESSED_RGBA8_ETC2_EAC=37496]="COMPRESSED_RGBA8_ETC2_EAC",e[e.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC=37497]="COMPRESSED_SRGB8_ALPHA8_ETC2_EAC",e[e.COMPRESSED_RGBA_ASTC_4x4_KHR=37808]="COMPRESSED_RGBA_ASTC_4x4_KHR",e[e.COMPRESSED_RGBA_ASTC_5x4_KHR=37809]="COMPRESSED_RGBA_ASTC_5x4_KHR",e[e.COMPRESSED_RGBA_ASTC_5x5_KHR=37810]="COMPRESSED_RGBA_ASTC_5x5_KHR",e[e.COMPRESSED_RGBA_ASTC_6x5_KHR=37811]="COMPRESSED_RGBA_ASTC_6x5_KHR",e[e.COMPRESSED_RGBA_ASTC_6x6_KHR=37812]="COMPRESSED_RGBA_ASTC_6x6_KHR",e[e.COMPRESSED_RGBA_ASTC_8x5_KHR=37813]="COMPRESSED_RGBA_ASTC_8x5_KHR",e[e.COMPRESSED_RGBA_ASTC_8x6_KHR=37814]="COMPRESSED_RGBA_ASTC_8x6_KHR",e[e.COMPRESSED_RGBA_ASTC_8x8_KHR=37815]="COMPRESSED_RGBA_ASTC_8x8_KHR",e[e.COMPRESSED_RGBA_ASTC_10x5_KHR=37816]="COMPRESSED_RGBA_ASTC_10x5_KHR",e[e.COMPRESSED_RGBA_ASTC_10x6_KHR=37817]="COMPRESSED_RGBA_ASTC_10x6_KHR",e[e.COMPRESSED_RGBA_ASTC_10x8_KHR=37818]="COMPRESSED_RGBA_ASTC_10x8_KHR",e[e.COMPRESSED_RGBA_ASTC_10x10_KHR=37819]="COMPRESSED_RGBA_ASTC_10x10_KHR",e[e.COMPRESSED_RGBA_ASTC_12x10_KHR=37820]="COMPRESSED_RGBA_ASTC_12x10_KHR",e[e.COMPRESSED_RGBA_ASTC_12x12_KHR=37821]="COMPRESSED_RGBA_ASTC_12x12_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR=37840]="COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR=37841]="COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR=37842]="COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR=37843]="COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR=37844]="COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR=37845]="COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR=37846]="COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR=37847]="COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR=37848]="COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR=37849]="COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR=37850]="COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR=37851]="COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR=37852]="COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR=37853]="COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR"}(eG||(eG={}));class aG{static get instance(){return aG._instance}static setInstance(e){aG._instance=e}}function cG(e,t){switch(e){case zs.R8:return t.UNSIGNED_BYTE;case zs.R8SN:return t.BYTE;case zs.R8UI:return t.UNSIGNED_BYTE;case zs.R8I:return t.BYTE;case zs.R16F:return eG.HALF_FLOAT_OES;case zs.R16UI:return t.UNSIGNED_SHORT;case zs.R16I:return t.SHORT;case zs.R32F:return t.FLOAT;case zs.R32UI:return t.UNSIGNED_INT;case zs.R32I:return t.INT;case zs.RG8:return t.UNSIGNED_BYTE;case zs.RG8SN:return t.BYTE;case zs.RG8UI:return t.UNSIGNED_BYTE;case zs.RG8I:return t.BYTE;case zs.RG16F:return eG.HALF_FLOAT_OES;case zs.RG16UI:return t.UNSIGNED_SHORT;case zs.RG16I:return t.SHORT;case zs.RG32F:return t.FLOAT;case zs.RG32UI:return t.UNSIGNED_INT;case zs.RG32I:return t.INT;case zs.RGB8:case zs.SRGB8:return t.UNSIGNED_BYTE;case zs.RGB8SN:return t.BYTE;case zs.RGB8UI:return t.UNSIGNED_BYTE;case zs.RGB8I:return t.BYTE;case zs.RGB16F:return eG.HALF_FLOAT_OES;case zs.RGB16UI:return t.UNSIGNED_SHORT;case zs.RGB16I:return t.SHORT;case zs.RGB32F:return t.FLOAT;case zs.RGB32UI:return t.UNSIGNED_INT;case zs.RGB32I:return t.INT;case zs.BGRA8:case zs.RGBA8:case zs.SRGB8_A8:return t.UNSIGNED_BYTE;case zs.RGBA8SN:return t.BYTE;case zs.RGBA8UI:return t.UNSIGNED_BYTE;case zs.RGBA8I:return t.BYTE;case zs.RGBA16F:return eG.HALF_FLOAT_OES;case zs.RGBA16UI:return t.UNSIGNED_SHORT;case zs.RGBA16I:return t.SHORT;case zs.RGBA32F:return t.FLOAT;case zs.RGBA32UI:return t.UNSIGNED_INT;case zs.RGBA32I:return t.INT;case zs.R5G6B5:return t.UNSIGNED_SHORT_5_6_5;case zs.R11G11B10F:return t.FLOAT;case zs.RGB5A1:return t.UNSIGNED_SHORT_5_5_5_1;case zs.RGBA4:return t.UNSIGNED_SHORT_4_4_4_4;case zs.RGB10A2:return t.UNSIGNED_BYTE;case zs.RGB10A2UI:return t.UNSIGNED_INT;case zs.RGB9E5:return t.UNSIGNED_BYTE;case zs.DEPTH:return t.UNSIGNED_INT;case zs.DEPTH_STENCIL:return eG.UNSIGNED_INT_24_8_WEBGL;case zs.BC1:case zs.BC1_SRGB:case zs.BC2:case zs.BC2_SRGB:case zs.BC3:case zs.BC3_SRGB:case zs.BC4:return t.UNSIGNED_BYTE;case zs.BC4_SNORM:return t.BYTE;case zs.BC5:return t.UNSIGNED_BYTE;case zs.BC5_SNORM:return t.BYTE;case zs.BC6H_SF16:case zs.BC6H_UF16:return t.FLOAT;case zs.BC7:case zs.BC7_SRGB:case zs.ETC_RGB8:case zs.ETC2_RGB8:case zs.ETC2_SRGB8:case zs.ETC2_RGB8_A1:case zs.ETC2_SRGB8_A1:case zs.EAC_R11:return t.UNSIGNED_BYTE;case zs.EAC_R11SN:return t.BYTE;case zs.EAC_RG11:return t.UNSIGNED_BYTE;case zs.EAC_RG11SN:return t.BYTE;case zs.PVRTC_RGB2:case zs.PVRTC_RGBA2:case zs.PVRTC_RGB4:case zs.PVRTC_RGBA4:case zs.PVRTC2_2BPP:case zs.PVRTC2_4BPP:return t.UNSIGNED_BYTE;case zs.ASTC_RGBA_4X4:case zs.ASTC_RGBA_5X4:case zs.ASTC_RGBA_5X5:case zs.ASTC_RGBA_6X5:case zs.ASTC_RGBA_6X6:case zs.ASTC_RGBA_8X5:case zs.ASTC_RGBA_8X6:case zs.ASTC_RGBA_8X8:case zs.ASTC_RGBA_10X5:case zs.ASTC_RGBA_10X6:case zs.ASTC_RGBA_10X8:case zs.ASTC_RGBA_10X10:case zs.ASTC_RGBA_12X10:case zs.ASTC_RGBA_12X12:case zs.ASTC_SRGBA_4X4:case zs.ASTC_SRGBA_5X4:case zs.ASTC_SRGBA_5X5:case zs.ASTC_SRGBA_6X5:case zs.ASTC_SRGBA_6X6:case zs.ASTC_SRGBA_8X5:case zs.ASTC_SRGBA_8X6:case zs.ASTC_SRGBA_8X8:case zs.ASTC_SRGBA_10X5:case zs.ASTC_SRGBA_10X6:case zs.ASTC_SRGBA_10X8:case zs.ASTC_SRGBA_10X10:case zs.ASTC_SRGBA_12X10:case zs.ASTC_SRGBA_12X12:default:return t.UNSIGNED_BYTE}}function lG(e,t){switch(e){case Bs.BOOL:return t.BOOL;case Bs.BOOL2:return t.BOOL_VEC2;case Bs.BOOL3:return t.BOOL_VEC3;case Bs.BOOL4:return t.BOOL_VEC4;case Bs.INT:return t.INT;case Bs.INT2:return t.INT_VEC2;case Bs.INT3:return t.INT_VEC3;case Bs.INT4:return t.INT_VEC4;case Bs.UINT:return t.UNSIGNED_INT;case Bs.FLOAT:return t.FLOAT;case Bs.FLOAT2:return t.FLOAT_VEC2;case Bs.FLOAT3:return t.FLOAT_VEC3;case Bs.FLOAT4:return t.FLOAT_VEC4;case Bs.MAT2:return t.FLOAT_MAT2;case Bs.MAT3:return t.FLOAT_MAT3;case Bs.MAT4:return t.FLOAT_MAT4;case Bs.SAMPLER2D:return t.SAMPLER_2D;case Bs.SAMPLER_CUBE:return t.SAMPLER_CUBE;default:return console.error("Unsupported GLType, convert to GL type failed."),Bs.UNKNOWN}}function hG(e){switch(e){case Bs.BOOL:case Bs.BOOL2:case Bs.BOOL3:case Bs.BOOL4:case Bs.INT:case Bs.INT2:case Bs.INT3:case Bs.INT4:case Bs.UINT:return Int32Array;case Bs.FLOAT:case Bs.FLOAT2:case Bs.FLOAT3:case Bs.FLOAT4:case Bs.MAT2:case Bs.MAT3:case Bs.MAT4:return Float32Array;default:return console.error("Unsupported GLType, convert to TypedArrayConstructor failed."),Float32Array}}function _G(e,t){switch(e){case t.BOOL:return Bs.BOOL;case t.BOOL_VEC2:return Bs.BOOL2;case t.BOOL_VEC3:return Bs.BOOL3;case t.BOOL_VEC4:return Bs.BOOL4;case t.INT:return Bs.INT;case t.INT_VEC2:return Bs.INT2;case t.INT_VEC3:return Bs.INT3;case t.INT_VEC4:return Bs.INT4;case t.UNSIGNED_INT:return Bs.UINT;case t.FLOAT:return Bs.FLOAT;case t.FLOAT_VEC2:return Bs.FLOAT2;case t.FLOAT_VEC3:return Bs.FLOAT3;case t.FLOAT_VEC4:return Bs.FLOAT4;case t.FLOAT_MAT2:return Bs.MAT2;case t.FLOAT_MAT3:return Bs.MAT3;case t.FLOAT_MAT4:return Bs.MAT4;case t.SAMPLER_2D:return Bs.SAMPLER2D;case t.SAMPLER_CUBE:return Bs.SAMPLER_CUBE;default:return console.error("Unsupported GLType, convert to Type failed."),Bs.UNKNOWN}}function uG(e,t){switch(e){case t.BOOL:return 4;case t.BOOL_VEC2:return 8;case t.BOOL_VEC3:return 12;case t.BOOL_VEC4:return 16;case t.INT:return 4;case t.INT_VEC2:return 8;case t.INT_VEC3:return 12;case t.INT_VEC4:return 16;case t.UNSIGNED_INT:case t.FLOAT:return 4;case t.FLOAT_VEC2:return 8;case t.FLOAT_VEC3:return 12;case t.FLOAT_VEC4:case t.FLOAT_MAT2:return 16;case t.FLOAT_MAT3:return 36;case t.FLOAT_MAT4:return 64;case t.SAMPLER_2D:case t.SAMPLER_CUBE:return 4;default:return console.error("Unsupported GLType, get type failed."),0}}function pG(e,t){switch(e){case t.FLOAT_MAT2:return 2;case t.FLOAT_MAT3:return 3;case t.FLOAT_MAT4:return 4;default:return 1}}aG._instance=null;const dG=[512,513,514,515,516,517,518,519],fG=[0,7680,7681,7682,7683,5386,34055,34056],mG=[32774,32778,32779,32775,32776],gG=[0,1,770,772,771,773,768,774,769,775,776,32769,32770,32771,32772];let vG;!function(e){e[e.BEGIN_RENDER_PASS=0]="BEGIN_RENDER_PASS",e[e.END_RENDER_PASS=1]="END_RENDER_PASS",e[e.BIND_STATES=2]="BIND_STATES",e[e.DRAW=3]="DRAW",e[e.UPDATE_BUFFER=4]="UPDATE_BUFFER",e[e.COPY_BUFFER_TO_TEXTURE=5]="COPY_BUFFER_TO_TEXTURE",e[e.COUNT=6]="COUNT"}(vG||(vG={}));class yG{constructor(e){this.cmdType=void 0,this.refCount=0,this.cmdType=e}}class xG extends yG{constructor(){super(vG.BEGIN_RENDER_PASS),this.gpuRenderPass=null,this.gpuFramebuffer=null,this.renderArea=new Tr,this.clearFlag=vr.NONE,this.clearColors=[],this.clearDepth=1,this.clearStencil=0}clear(){this.gpuFramebuffer=null,this.clearColors.length=0}}class SG extends yG{constructor(){super(vG.BIND_STATES),this.gpuPipelineState=null,this.gpuInputAssembler=null,this.gpuDescriptorSets=[],this.dynamicOffsets=[],this.dynamicStates=new So}clear(){this.gpuPipelineState=null,this.gpuDescriptorSets.length=0,this.gpuInputAssembler=null,this.dynamicOffsets.length=0}}class CG extends yG{constructor(){super(vG.DRAW),this.drawInfo=new Fr}clear(){}}class TG extends yG{constructor(){super(vG.UPDATE_BUFFER),this.gpuBuffer=null,this.buffer=null,this.offset=0,this.size=0}clear(){this.gpuBuffer=null,this.buffer=null}}class bG extends yG{constructor(){super(vG.COPY_BUFFER_TO_TEXTURE),this.gpuTexture=null,this.buffers=[],this.regions=[]}clear(){this.gpuTexture=null,this.buffers.length=0,this.regions.length=0}}class EG{constructor(){this.cmds=new De(1),this.beginRenderPassCmds=new De(1),this.bindStatesCmds=new De(1),this.drawCmds=new De(1),this.updateBufferCmds=new De(1),this.copyBufferToTextureCmds=new De(1)}clearCmds(e){this.beginRenderPassCmds.length&&(e.beginRenderPassCmdPool.freeCmds(this.beginRenderPassCmds),this.beginRenderPassCmds.clear()),this.bindStatesCmds.length&&(e.bindStatesCmdPool.freeCmds(this.bindStatesCmds),this.bindStatesCmds.clear()),this.drawCmds.length&&(e.drawCmdPool.freeCmds(this.drawCmds),this.drawCmds.clear()),this.updateBufferCmds.length&&(e.updateBufferCmdPool.freeCmds(this.updateBufferCmds),this.updateBufferCmds.clear()),this.copyBufferToTextureCmds.length&&(e.copyBufferToTextureCmdPool.freeCmds(this.copyBufferToTextureCmds),this.copyBufferToTextureCmds.clear()),this.cmds.clear()}}function AG(e,t,n,i,s){if(t.usage&Us.UNIFORM)ArrayBuffer.isView(n)?t.vf32.set(n,i/Float32Array.BYTES_PER_ELEMENT):t.vf32.set(new Float32Array(n),i/Float32Array.BYTES_PER_ELEMENT);else if(t.usage&Us.INDIRECT){t.indirects.clearDraws();const e=n.drawInfos;for(let n=0;n<e.length;++n)t.indirects.setDrawInfo(i+n,e[n])}else{const r=n,{gl:o}=e,a=e.stateCache;switch(t.glTarget){case o.ARRAY_BUFFER:e.extensions.useVAO&&a.glVAO&&(e.extensions.OES_vertex_array_object.bindVertexArrayOES(null),a.glVAO=null),PG.gpuInputAssembler=null,e.stateCache.glArrayBuffer!==t.glBuffer&&(o.bindBuffer(o.ARRAY_BUFFER,t.glBuffer),e.stateCache.glArrayBuffer=t.glBuffer);break;case o.ELEMENT_ARRAY_BUFFER:e.extensions.useVAO&&a.glVAO&&(e.extensions.OES_vertex_array_object.bindVertexArrayOES(null),a.glVAO=null),PG.gpuInputAssembler=null,e.stateCache.glElementArrayBuffer!==t.glBuffer&&(o.bindBuffer(o.ELEMENT_ARRAY_BUFFER,t.glBuffer),e.stateCache.glElementArrayBuffer=t.glBuffer);break;default:return void console.error("Unsupported BufferType, update buffer failed.")}s===r.byteLength?o.bufferSubData(t.glTarget,i,r):o.bufferSubData(t.glTarget,i,r.slice(0,s))}}const PG={gpuPipelineState:null,gpuInputAssembler:null,glPrimitive:0};function wG(e,t,n,i,s,r,o){const{gl:a}=e,c=e.stateCache;let l=0;if(n&&t){c.glFramebuffer!==n.glFramebuffer&&(a.bindFramebuffer(a.FRAMEBUFFER,n.glFramebuffer),c.glFramebuffer=n.glFramebuffer),c.viewport.left===i.x&&c.viewport.top===i.y&&c.viewport.width===i.width&&c.viewport.height===i.height||(a.viewport(i.x,i.y,i.width,i.height),c.viewport.left=i.x,c.viewport.top=i.y,c.viewport.width=i.width,c.viewport.height=i.height),c.scissorRect.x===i.x&&c.scissorRect.y===i.y&&c.scissorRect.width===i.width&&c.scissorRect.height===i.height||(a.scissor(i.x,i.y,i.width,i.height),c.scissorRect.x=i.x,c.scissorRect.y=i.y,c.scissorRect.width=i.width,c.scissorRect.height=i.height);let h=s.length;e.extensions.WEBGL_draw_buffers||(h=1);for(let e=0;e<h;++e){const n=t.colorAttachments[e];if(n.format!==zs.UNKNOWN)switch(n.loadOp){case ir.LOAD:break;case ir.CLEAR:{c.bs.targets[0].blendColorMask!==er.ALL&&a.colorMask(!0,!0,!0,!0);const e=s[0];a.clearColor(e.x,e.y,e.z,e.w),l|=a.COLOR_BUFFER_BIT;break}case ir.DISCARD:}}if(t.depthStencilAttachment&&t.depthStencilAttachment.format!==zs.UNKNOWN){switch(t.depthStencilAttachment.depthLoadOp){case ir.LOAD:break;case ir.CLEAR:c.dss.depthWrite||a.depthMask(!0),a.clearDepth(r),l|=a.DEPTH_BUFFER_BIT;break;case ir.DISCARD:}if(To[t.depthStencilAttachment.format].hasStencil)switch(t.depthStencilAttachment.stencilLoadOp){case ir.LOAD:break;case ir.CLEAR:c.dss.stencilWriteMaskFront||a.stencilMaskSeparate(a.FRONT,65535),c.dss.stencilWriteMaskBack||a.stencilMaskSeparate(a.BACK,65535),a.clearStencil(o),l|=a.STENCIL_BUFFER_BIT;break;case ir.DISCARD:}}if(l&&a.clear(l),l&a.COLOR_BUFFER_BIT){const e=c.bs.targets[0].blendColorMask;if(e!==er.ALL){const t=(e&er.R)!==er.NONE,n=(e&er.G)!==er.NONE,i=(e&er.B)!==er.NONE,s=(e&er.A)!==er.NONE;a.colorMask(t,n,i,s)}}l&a.DEPTH_BUFFER_BIT&&!c.dss.depthWrite&&a.depthMask(!1),l&a.STENCIL_BUFFER_BIT&&(c.dss.stencilWriteMaskFront||a.stencilMaskSeparate(a.FRONT,0),c.dss.stencilWriteMaskBack||a.stencilMaskSeparate(a.BACK,0))}}function IG(e,t,n,i,s,r){const{gl:o}=e,a=e.stateCache,c=t&&t.gpuShader;let l,h,_,u=!1;if(t&&PG.gpuPipelineState!==t){if(PG.gpuPipelineState=t,PG.glPrimitive=t.glPrimitive,t.gpuShader){const{glProgram:e}=t.gpuShader;a.glProgram!==e&&(o.useProgram(e),a.glProgram=e,u=!0)}const{rs:e}=t;if(e){if(a.rs.cullMode!==e.cullMode){switch(e.cullMode){case _r.NONE:o.disable(o.CULL_FACE);break;case _r.FRONT:o.enable(o.CULL_FACE),o.cullFace(o.FRONT);break;case _r.BACK:o.enable(o.CULL_FACE),o.cullFace(o.BACK)}a.rs.cullMode=e.cullMode}const t=e.isFrontFaceCCW;a.rs.isFrontFaceCCW!==t&&(o.frontFace(t?o.CCW:o.CW),a.rs.isFrontFaceCCW=t),a.rs.depthBias===e.depthBias&&a.rs.depthBiasSlop===e.depthBiasSlop||(o.polygonOffset(e.depthBias,e.depthBiasSlop),a.rs.depthBias=e.depthBias,a.rs.depthBiasSlop=e.depthBiasSlop),a.rs.lineWidth!==e.lineWidth&&(o.lineWidth(e.lineWidth),a.rs.lineWidth=e.lineWidth)}const{dss:n}=t;n&&(a.dss.depthTest!==n.depthTest&&(n.depthTest?o.enable(o.DEPTH_TEST):o.disable(o.DEPTH_TEST),a.dss.depthTest=n.depthTest),a.dss.depthWrite!==n.depthWrite&&(o.depthMask(n.depthWrite),a.dss.depthWrite=n.depthWrite),a.dss.depthFunc!==n.depthFunc&&(o.depthFunc(dG[n.depthFunc]),a.dss.depthFunc=n.depthFunc),a.dss.stencilTestFront===n.stencilTestFront&&a.dss.stencilTestBack===n.stencilTestBack||(n.stencilTestFront||n.stencilTestBack?o.enable(o.STENCIL_TEST):o.disable(o.STENCIL_TEST),a.dss.stencilTestFront=n.stencilTestFront,a.dss.stencilTestBack=n.stencilTestBack),a.dss.stencilFuncFront===n.stencilFuncFront&&a.dss.stencilRefFront===n.stencilRefFront&&a.dss.stencilReadMaskFront===n.stencilReadMaskFront||(o.stencilFuncSeparate(o.FRONT,dG[n.stencilFuncFront],n.stencilRefFront,n.stencilReadMaskFront),a.dss.stencilFuncFront=n.stencilFuncFront,a.dss.stencilRefFront=n.stencilRefFront,a.dss.stencilReadMaskFront=n.stencilReadMaskFront),a.dss.stencilFailOpFront===n.stencilFailOpFront&&a.dss.stencilZFailOpFront===n.stencilZFailOpFront&&a.dss.stencilPassOpFront===n.stencilPassOpFront||(o.stencilOpSeparate(o.FRONT,fG[n.stencilFailOpFront],fG[n.stencilZFailOpFront],fG[n.stencilPassOpFront]),a.dss.stencilFailOpFront=n.stencilFailOpFront,a.dss.stencilZFailOpFront=n.stencilZFailOpFront,a.dss.stencilPassOpFront=n.stencilPassOpFront),a.dss.stencilWriteMaskFront!==n.stencilWriteMaskFront&&(o.stencilMaskSeparate(o.FRONT,n.stencilWriteMaskFront),a.dss.stencilWriteMaskFront=n.stencilWriteMaskFront),a.dss.stencilFuncBack===n.stencilFuncBack&&a.dss.stencilRefBack===n.stencilRefBack&&a.dss.stencilReadMaskBack===n.stencilReadMaskBack||(o.stencilFuncSeparate(o.BACK,dG[n.stencilFuncBack],n.stencilRefBack,n.stencilReadMaskBack),a.dss.stencilFuncBack=n.stencilFuncBack,a.dss.stencilRefBack=n.stencilRefBack,a.dss.stencilReadMaskBack=n.stencilReadMaskBack),a.dss.stencilFailOpBack===n.stencilFailOpBack&&a.dss.stencilZFailOpBack===n.stencilZFailOpBack&&a.dss.stencilPassOpBack===n.stencilPassOpBack||(o.stencilOpSeparate(o.BACK,fG[n.stencilFailOpBack],fG[n.stencilZFailOpBack],fG[n.stencilPassOpBack]),a.dss.stencilFailOpBack=n.stencilFailOpBack,a.dss.stencilZFailOpBack=n.stencilZFailOpBack,a.dss.stencilPassOpBack=n.stencilPassOpBack),a.dss.stencilWriteMaskBack!==n.stencilWriteMaskBack&&(o.stencilMaskSeparate(o.BACK,n.stencilWriteMaskBack),a.dss.stencilWriteMaskBack=n.stencilWriteMaskBack));const{bs:i}=t;if(i){a.bs.isA2C!==i.isA2C&&(i.isA2C?o.enable(o.SAMPLE_ALPHA_TO_COVERAGE):o.disable(o.SAMPLE_ALPHA_TO_COVERAGE),a.bs.isA2C=i.isA2C),a.bs.blendColor.x===i.blendColor.x&&a.bs.blendColor.y===i.blendColor.y&&a.bs.blendColor.z===i.blendColor.z&&a.bs.blendColor.w===i.blendColor.w||(o.blendColor(i.blendColor.x,i.blendColor.y,i.blendColor.z,i.blendColor.w),a.bs.blendColor.x=i.blendColor.x,a.bs.blendColor.y=i.blendColor.y,a.bs.blendColor.z=i.blendColor.z,a.bs.blendColor.w=i.blendColor.w);const e=i.targets[0],t=a.bs.targets[0];t.blend!==e.blend&&(e.blend?o.enable(o.BLEND):o.disable(o.BLEND),t.blend=e.blend),t.blendEq===e.blendEq&&t.blendAlphaEq===e.blendAlphaEq||(o.blendEquationSeparate(mG[e.blendEq],mG[e.blendAlphaEq]),t.blendEq=e.blendEq,t.blendAlphaEq=e.blendAlphaEq),t.blendSrc===e.blendSrc&&t.blendDst===e.blendDst&&t.blendSrcAlpha===e.blendSrcAlpha&&t.blendDstAlpha===e.blendDstAlpha||(o.blendFuncSeparate(gG[e.blendSrc],gG[e.blendDst],gG[e.blendSrcAlpha],gG[e.blendDstAlpha]),t.blendSrc=e.blendSrc,t.blendDst=e.blendDst,t.blendSrcAlpha=e.blendSrcAlpha,t.blendDstAlpha=e.blendDstAlpha),t.blendColorMask!==e.blendColorMask&&(o.colorMask((e.blendColorMask&er.R)!==er.NONE,(e.blendColorMask&er.G)!==er.NONE,(e.blendColorMask&er.B)!==er.NONE,(e.blendColorMask&er.A)!==er.NONE),t.blendColorMask=e.blendColorMask)}}if(t&&t.gpuPipelineLayout&&c){const n=c.glBlocks.length,{dynamicOffsetIndices:r}=t.gpuPipelineLayout;for(let e=0;e<n;e++){const t=c.glBlocks[e],n=i[t.set],a=n&&n.descriptorIndices[t.binding],l=a>=0&&n.gpuDescriptors[a];let h=null,_=0;if(l&&l.gpuBuffer){const{gpuBuffer:e}=l,n=r[t.set],i=n&&n[t.binding];i>=0&&(_=s[i]),"vf32"in e?h=e.vf32:(_+=e.offset,h=e.gpuBuffer.vf32),_>>=2}if(!h){d(`Buffer binding '${t.name}' at set ${t.set} binding ${t.binding} is not bounded`);continue}const u=t.glActiveUniforms.length;for(let e=0;e<u;e++){const n=t.glActiveUniforms[e];switch(n.glType){case o.BOOL:case o.INT:for(let e=0;e<n.array.length;++e){const t=n.offset+_+e;if(h[t]!==n.array[e]){for(let i=e,s=t;i<n.array.length;++i,++s)n.array[i]=h[s];o.uniform1iv(n.glLoc,n.array);break}}break;case o.BOOL_VEC2:case o.INT_VEC2:for(let e=0;e<n.array.length;++e){const t=n.offset+_+e;if(h[t]!==n.array[e]){for(let i=e,s=t;i<n.array.length;++i,++s)n.array[i]=h[s];o.uniform2iv(n.glLoc,n.array);break}}break;case o.BOOL_VEC3:case o.INT_VEC3:for(let e=0;e<n.array.length;++e){const t=n.offset+_+e;if(h[t]!==n.array[e]){for(let i=e,s=t;i<n.array.length;++i,++s)n.array[i]=h[s];o.uniform3iv(n.glLoc,n.array);break}}break;case o.BOOL_VEC4:case o.INT_VEC4:for(let e=0;e<n.array.length;++e){const t=n.offset+_+e;if(h[t]!==n.array[e]){for(let i=e,s=t;i<n.array.length;++i,++s)n.array[i]=h[s];o.uniform4iv(n.glLoc,n.array);break}}break;case o.FLOAT:for(let e=0;e<n.array.length;++e){const t=n.offset+_+e;if(h[t]!==n.array[e]){for(let i=e,s=t;i<n.array.length;++i,++s)n.array[i]=h[s];o.uniform1fv(n.glLoc,n.array);break}}break;case o.FLOAT_VEC2:for(let e=0;e<n.array.length;++e){const t=n.offset+_+e;if(h[t]!==n.array[e]){for(let i=e,s=t;i<n.array.length;++i,++s)n.array[i]=h[s];o.uniform2fv(n.glLoc,n.array);break}}break;case o.FLOAT_VEC3:for(let e=0;e<n.array.length;++e){const t=n.offset+_+e;if(h[t]!==n.array[e]){for(let i=e,s=t;i<n.array.length;++i,++s)n.array[i]=h[s];o.uniform3fv(n.glLoc,n.array);break}}break;case o.FLOAT_VEC4:for(let e=0;e<n.array.length;++e){const t=n.offset+_+e;if(h[t]!==n.array[e]){for(let i=e,s=t;i<n.array.length;++i,++s)n.array[i]=h[s];o.uniform4fv(n.glLoc,n.array);break}}break;case o.FLOAT_MAT2:for(let e=0;e<n.array.length;++e){const t=n.offset+_+e;if(h[t]!==n.array[e]){for(let i=e,s=t;i<n.array.length;++i,++s)n.array[i]=h[s];o.uniformMatrix2fv(n.glLoc,!1,n.array);break}}break;case o.FLOAT_MAT3:for(let e=0;e<n.array.length;++e){const t=n.offset+_+e;if(h[t]!==n.array[e]){for(let i=e,s=t;i<n.array.length;++i,++s)n.array[i]=h[s];o.uniformMatrix3fv(n.glLoc,!1,n.array);break}}break;case o.FLOAT_MAT4:for(let e=0;e<n.array.length;++e){const t=n.offset+_+e;if(h[t]!==n.array[e]){for(let i=e,s=t;i<n.array.length;++i,++s)n.array[i]=h[s];o.uniformMatrix4fv(n.glLoc,!1,n.array);break}}}}}const u=c.glSamplerTextures.length;for(let t=0;t<u;t++){const n=c.glSamplerTextures[t],s=i[n.set];let r=s&&s.descriptorIndices[n.binding],u=r>=0&&s.gpuDescriptors[r];const p=n.units.length;for(let t=0;t<p;t++){const i=n.units[t];if(u&&u.gpuSampler){if(u.gpuTexture&&u.gpuTexture.size>0){const{gpuTexture:t}=u,n=a.glTexUnits[i];n.glTexture!==t.glTexture&&(a.texUnit!==i&&(o.activeTexture(o.TEXTURE0+i),a.texUnit=i),t.glTexture?o.bindTexture(t.glTarget,t.glTexture):o.bindTexture(t.glTarget,e.nullTex2D.gpuTexture.glTexture),n.glTexture=t.glTexture);const{gpuSampler:s}=u;t.isPowerOf2?(l=s.glWrapS,h=s.glWrapT):(l=o.CLAMP_TO_EDGE,h=o.CLAMP_TO_EDGE),_=t.isPowerOf2?t.mipLevel<=1&&(s.glMinFilter===o.LINEAR_MIPMAP_NEAREST||s.glMinFilter===o.LINEAR_MIPMAP_LINEAR)?o.LINEAR:s.glMinFilter:s.glMinFilter===o.LINEAR||s.glMinFilter===o.LINEAR_MIPMAP_NEAREST||s.glMinFilter===o.LINEAR_MIPMAP_LINEAR?o.LINEAR:o.NEAREST,t.glWrapS!==l&&(a.texUnit!==i&&(o.activeTexture(o.TEXTURE0+i),a.texUnit=i),o.texParameteri(t.glTarget,o.TEXTURE_WRAP_S,l),t.glWrapS=l),t.glWrapT!==h&&(a.texUnit!==i&&(o.activeTexture(o.TEXTURE0+i),a.texUnit=i),o.texParameteri(t.glTarget,o.TEXTURE_WRAP_T,h),t.glWrapT=h),t.glMinFilter!==_&&(a.texUnit!==i&&(o.activeTexture(o.TEXTURE0+i),a.texUnit=i),o.texParameteri(t.glTarget,o.TEXTURE_MIN_FILTER,_),t.glMinFilter=_),t.glMagFilter!==s.glMagFilter&&(a.texUnit!==i&&(o.activeTexture(o.TEXTURE0+i),a.texUnit=i),o.texParameteri(t.glTarget,o.TEXTURE_MAG_FILTER,s.glMagFilter),t.glMagFilter=s.glMagFilter)}u=s.gpuDescriptors[++r]}else d(`Sampler binding '${n.name}' at set ${n.set} binding ${n.binding} index ${t} is not bounded`)}}}if(n&&c&&(u||PG.gpuInputAssembler!==n)){PG.gpuInputAssembler=n;const t=e.extensions.ANGLE_instanced_arrays;if(e.extensions.useVAO){const i=e.extensions.OES_vertex_array_object;let s=n.glVAOs.get(c.glProgram);if(!s){let e;s=i.createVertexArrayOES(),n.glVAOs.set(c.glProgram,s),i.bindVertexArrayOES(s),o.bindBuffer(o.ARRAY_BUFFER,null),o.bindBuffer(o.ELEMENT_ARRAY_BUFFER,null),a.glArrayBuffer=null,a.glElementArrayBuffer=null;const r=c.glInputs.length;for(let i=0;i<r;i++){const s=c.glInputs[i];e=null;const r=n.glAttribs.length;for(let t=0;t<r;t++){const i=n.glAttribs[t];if(i.name===s.name){e=i;break}}if(e){a.glArrayBuffer!==e.glBuffer&&(o.bindBuffer(o.ARRAY_BUFFER,e.glBuffer),a.glArrayBuffer=e.glBuffer);for(let n=0;n<e.componentCount;++n){const i=s.glLoc+n,r=e.offset+e.size*n;o.enableVertexAttribArray(i),a.glCurrentAttribLocs[i]=!0,o.vertexAttribPointer(i,e.count,e.glType,e.isNormalized,e.stride,r),t&&t.vertexAttribDivisorANGLE(i,e.isInstanced?1:0)}}}const l=n.gpuIndexBuffer;l&&o.bindBuffer(o.ELEMENT_ARRAY_BUFFER,l.glBuffer),i.bindVertexArrayOES(null),o.bindBuffer(o.ARRAY_BUFFER,null),o.bindBuffer(o.ELEMENT_ARRAY_BUFFER,null),a.glArrayBuffer=null,a.glElementArrayBuffer=null}a.glVAO!==s&&(i.bindVertexArrayOES(s),a.glVAO=s)}else{for(let t=0;t<e.capabilities.maxVertexAttributes;++t)a.glCurrentAttribLocs[t]=!1;const i=c.glInputs.length;for(let e=0;e<i;e++){const i=c.glInputs[e];let s=null;const r=n.glAttribs.length;for(let e=0;e<r;e++){const t=n.glAttribs[e];if(t.name===i.name){s=t;break}}if(s){a.glArrayBuffer!==s.glBuffer&&(o.bindBuffer(o.ARRAY_BUFFER,s.glBuffer),a.glArrayBuffer=s.glBuffer);for(let e=0;e<s.componentCount;++e){const n=i.glLoc+e,r=s.offset+s.size*e;!a.glEnabledAttribLocs[n]&&n>=0&&(o.enableVertexAttribArray(n),a.glEnabledAttribLocs[n]=!0),a.glCurrentAttribLocs[n]=!0,o.vertexAttribPointer(n,s.count,s.glType,s.isNormalized,s.stride,r),t&&t.vertexAttribDivisorANGLE(n,s.isInstanced?1:0)}}}const s=n.gpuIndexBuffer;s&&a.glElementArrayBuffer!==s.glBuffer&&(o.bindBuffer(o.ELEMENT_ARRAY_BUFFER,s.glBuffer),a.glElementArrayBuffer=s.glBuffer);for(let t=0;t<e.capabilities.maxVertexAttributes;++t)a.glEnabledAttribLocs[t]!==a.glCurrentAttribLocs[t]&&(o.disableVertexAttribArray(t),a.glEnabledAttribLocs[t]=!1)}}if(t&&t.dynamicStates.length){const e=t.dynamicStates.length;for(let n=0;n<e;n++)switch(t.dynamicStates[n]){case ur.LINE_WIDTH:a.rs.lineWidth!==r.lineWidth&&(o.lineWidth(r.lineWidth),a.rs.lineWidth=r.lineWidth);break;case ur.DEPTH_BIAS:a.rs.depthBias===r.depthBiasConstant&&a.rs.depthBiasSlop===r.depthBiasSlope||(o.polygonOffset(r.depthBiasConstant,r.depthBiasSlope),a.rs.depthBias=r.depthBiasConstant,a.rs.depthBiasSlop=r.depthBiasSlope);break;case ur.BLEND_CONSTANTS:{const e=r.blendConstant;a.bs.blendColor.x===e.x&&a.bs.blendColor.y===e.y&&a.bs.blendColor.z===e.z&&a.bs.blendColor.w===e.w||(o.blendColor(e.x,e.y,e.z,e.w),a.bs.blendColor.copy(e));break}case ur.STENCIL_WRITE_MASK:{const e=r.stencilStatesFront,t=r.stencilStatesBack;a.dss.stencilWriteMaskFront!==e.writeMask&&(o.stencilMaskSeparate(o.FRONT,e.writeMask),a.dss.stencilWriteMaskFront=e.writeMask),a.dss.stencilWriteMaskBack!==t.writeMask&&(o.stencilMaskSeparate(o.BACK,t.writeMask),a.dss.stencilWriteMaskBack=t.writeMask);break}case ur.STENCIL_COMPARE_MASK:{const e=r.stencilStatesFront,t=r.stencilStatesBack;a.dss.stencilRefFront===e.reference&&a.dss.stencilReadMaskFront===e.compareMask||(o.stencilFuncSeparate(o.FRONT,dG[a.dss.stencilFuncFront],e.reference,e.compareMask),a.dss.stencilRefFront=e.reference,a.dss.stencilReadMaskFront=e.compareMask),a.dss.stencilRefBack===t.reference&&a.dss.stencilReadMaskBack===t.compareMask||(o.stencilFuncSeparate(o.BACK,dG[a.dss.stencilFuncBack],t.reference,t.compareMask),a.dss.stencilRefBack=t.reference,a.dss.stencilReadMaskBack=t.compareMask);break}}}}function RG(e,t){const{gl:n}=e,{ANGLE_instanced_arrays:i,WEBGL_multi_draw:s}=e.extensions,{gpuInputAssembler:r,glPrimitive:o}=PG;if(r){const e=r.gpuIndexBuffer;if(r.gpuIndirectBuffer){const t=r.gpuIndirectBuffer.indirects;if(t.drawByIndex){for(let n=0;n<t.drawCount;n++)t.byteOffsets[n]=t.offsets[n]*e.stride;if(s)t.instancedDraw?s.multiDrawElementsInstancedWEBGL(o,t.counts,0,r.glIndexType,t.byteOffsets,0,t.instances,0,t.drawCount):s.multiDrawElementsWEBGL(o,t.counts,0,r.glIndexType,t.byteOffsets,0,t.drawCount);else for(let e=0;e<t.drawCount;e++)t.instances[e]&&i?i.drawElementsInstancedANGLE(o,t.counts[e],r.glIndexType,t.byteOffsets[e],t.instances[e]):n.drawElements(o,t.counts[e],r.glIndexType,t.byteOffsets[e])}else if(s)t.instancedDraw?s.multiDrawArraysInstancedWEBGL(o,t.offsets,0,t.counts,0,t.instances,0,t.drawCount):s.multiDrawArraysWEBGL(o,t.offsets,0,t.counts,0,t.drawCount);else for(let e=0;e<t.drawCount;e++)t.instances[e]&&i?i.drawArraysInstancedANGLE(o,t.offsets[e],t.counts[e],t.instances[e]):n.drawArrays(o,t.offsets[e],t.counts[e])}else if(t.instanceCount&&i)if(e){if(t.indexCount>0){const n=t.firstIndex*e.stride;i.drawElementsInstancedANGLE(o,t.indexCount,r.glIndexType,n,t.instanceCount)}}else t.vertexCount>0&&i.drawArraysInstancedANGLE(o,t.firstVertex,t.vertexCount,t.instanceCount);else if(e){if(t.indexCount>0){const i=t.firstIndex*e.stride;n.drawElements(o,t.indexCount,r.glIndexType,i)}}else t.vertexCount>0&&n.drawArrays(o,t.firstVertex,t.vertexCount)}}const DG=new Array(vG.COUNT);function OG(e,t){DG.fill(0);for(let n=0;n<t.cmds.length;++n){const i=t.cmds.array[n],s=DG[i]++;switch(i){case vG.BEGIN_RENDER_PASS:{const n=t.beginRenderPassCmds.array[s];wG(e,n.gpuRenderPass,n.gpuFramebuffer,n.renderArea,n.clearColors,n.clearDepth,n.clearStencil);break}case vG.BIND_STATES:{const n=t.bindStatesCmds.array[s];IG(e,n.gpuPipelineState,n.gpuInputAssembler,n.gpuDescriptorSets,n.dynamicOffsets,n.dynamicStates);break}case vG.DRAW:RG(e,t.drawCmds.array[s].drawInfo);break;case vG.UPDATE_BUFFER:{const n=t.updateBufferCmds.array[s];AG(e,n.gpuBuffer,n.buffer,n.offset,n.size);break}case vG.COPY_BUFFER_TO_TEXTURE:{const n=t.copyBufferToTextureCmds.array[s];MG(e,n.buffers,n.gpuTexture,n.regions);break}}}}function MG(e,t,n,i){const{gl:s}=e,r=e.stateCache.glTexUnits[e.stateCache.texUnit];r.glTexture!==n.glTexture&&(s.bindTexture(n.glTarget,n.glTexture),r.glTexture=n.glTexture);let o=0,a=1,c=1,l=0;const h=To[n.format],{isCompressed:_}=h;switch(n.glTarget){case s.TEXTURE_2D:for(let r=0;r<i.length;r++){const l=i[r];a=l.texExtent.width,c=l.texExtent.height;const h=t[o++];_?n.glInternalFmt===eG.COMPRESSED_RGB_ETC1_WEBGL||e.extensions.noCompressedTexSubImage2D?s.compressedTexImage2D(s.TEXTURE_2D,l.texSubres.mipLevel,n.glInternalFmt,a,c,0,h):s.compressedTexSubImage2D(s.TEXTURE_2D,l.texSubres.mipLevel,l.texOffset.x,l.texOffset.y,a,c,n.glFormat,h):s.texSubImage2D(s.TEXTURE_2D,l.texSubres.mipLevel,l.texOffset.x,l.texOffset.y,a,c,n.glFormat,n.glType,h)}break;case s.TEXTURE_CUBE_MAP:for(let r=0;r<i.length;r++){const h=i[r],u=h.texSubres.baseArrayLayer+h.texSubres.layerCount;for(l=h.texSubres.baseArrayLayer;l<u;++l){a=h.texExtent.width,c=h.texExtent.height;const i=t[o++];_?n.glInternalFmt===eG.COMPRESSED_RGB_ETC1_WEBGL||e.extensions.noCompressedTexSubImage2D?s.compressedTexImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+l,h.texSubres.mipLevel,n.glInternalFmt,a,c,0,i):s.compressedTexSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+l,h.texSubres.mipLevel,h.texOffset.x,h.texOffset.y,a,c,n.glFormat,i):s.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+l,h.texSubres.mipLevel,h.texOffset.x,h.texOffset.y,a,c,n.glFormat,n.glType,i)}}break;default:console.error("Unsupported GL texture type, copy buffer to texture failed.")}n.flags&Ws.GEN_MIPMAP&&s.generateMipmap(n.glTarget)}class NG{constructor(){this.counts=void 0,this.offsets=void 0,this.instances=void 0,this.drawCount=0,this.drawByIndex=!1,this.instancedDraw=!1,this.byteOffsets=void 0,this._capacity=4,this.counts=new Int32Array(this._capacity),this.offsets=new Int32Array(this._capacity),this.instances=new Int32Array(this._capacity),this.byteOffsets=new Int32Array(this._capacity)}clearDraws(){this.drawCount=0,this.drawByIndex=!1,this.instancedDraw=!1}setDrawInfo(e,t){this._ensureCapacity(e),this.drawByIndex=t.indexCount>0,this.instancedDraw=!!t.instanceCount,this.drawCount=Math.max(e+1,this.drawCount),this.drawByIndex?(this.counts[e]=t.indexCount,this.offsets[e]=t.firstIndex):(this.counts[e]=t.vertexCount,this.offsets[e]=t.firstVertex),this.instances[e]=Math.max(1,t.instanceCount)}_ensureCapacity(e){if(this._capacity>e)return;this._capacity=yn(e);const t=new Int32Array(this._capacity),n=new Int32Array(this._capacity),i=new Int32Array(this._capacity);this.byteOffsets=new Int32Array(this._capacity),t.set(this.counts),n.set(this.offsets),i.set(this.instances),this.counts=t,this.offsets=n,this.instances=i}}class LG extends ko{constructor(...e){super(...e),this._gpuBuffer=null,this._gpuBufferView=null,this._uniformBuffer=null}get gpuBuffer(){return this._gpuBuffer}get gpuBufferView(){return this._gpuBufferView}initialize(e){if("buffer"in e){this._isBufferView=!0;const t=e.buffer;this._usage=t.usage,this._memUsage=t.memUsage,this._size=this._stride=e.range,this._count=1,this._flags=t.flags,this._gpuBufferView={gpuBuffer:t.gpuBuffer,offset:e.offset,range:e.range}}else this._usage=e.usage,this._memUsage=e.memUsage,this._size=e.size,this._stride=Math.max(e.stride||this._size,1),this._count=this._size/this._stride,this._flags=e.flags,this._usage&Us.UNIFORM&&this._size>0&&(this._uniformBuffer=new Uint8Array(this._size)),this._gpuBuffer={usage:this._usage,memUsage:this._memUsage,size:this._size,stride:this._stride,buffer:null,vf32:null,indirects:new NG,glTarget:0,glBuffer:null},this._usage&Us.UNIFORM&&(this._gpuBuffer.buffer=this._uniformBuffer),function(e,t){const{gl:n}=e,i=e.stateCache,s=t.memUsage&ks.HOST?n.DYNAMIC_DRAW:n.STATIC_DRAW;if(t.usage&Us.VERTEX){t.glTarget=n.ARRAY_BUFFER;const r=n.createBuffer();r&&(t.glBuffer=r,t.size>0&&(e.extensions.useVAO&&i.glVAO&&(e.extensions.OES_vertex_array_object.bindVertexArrayOES(null),i.glVAO=null),PG.gpuInputAssembler=null,e.stateCache.glArrayBuffer!==t.glBuffer&&(n.bindBuffer(n.ARRAY_BUFFER,t.glBuffer),e.stateCache.glArrayBuffer=t.glBuffer),n.bufferData(n.ARRAY_BUFFER,t.size,s),n.bindBuffer(n.ARRAY_BUFFER,null),e.stateCache.glArrayBuffer=null))}else if(t.usage&Us.INDEX){t.glTarget=n.ELEMENT_ARRAY_BUFFER;const r=n.createBuffer();r&&(t.glBuffer=r,t.size>0&&(e.extensions.useVAO&&i.glVAO&&(e.extensions.OES_vertex_array_object.bindVertexArrayOES(null),i.glVAO=null),PG.gpuInputAssembler=null,e.stateCache.glElementArrayBuffer!==t.glBuffer&&(n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t.glBuffer),e.stateCache.glElementArrayBuffer=t.glBuffer),n.bufferData(n.ELEMENT_ARRAY_BUFFER,t.size,s),n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,null),e.stateCache.glElementArrayBuffer=null))}else t.usage&Us.UNIFORM?(t.glTarget=n.NONE,t.buffer&&(t.vf32=new Float32Array(t.buffer.buffer))):(t.usage&Us.INDIRECT||t.usage&Us.TRANSFER_DST||t.usage&Us.TRANSFER_SRC||console.error("Unsupported BufferType, create buffer failed."),t.glTarget=n.NONE)}(aG.instance,this._gpuBuffer),aG.instance.memoryStatus.bufferSize+=this._size}destroy(){this._gpuBuffer&&(function(e,t){const{gl:n}=e,i=e.stateCache;if(t.glBuffer){switch(t.glTarget){case n.ARRAY_BUFFER:e.extensions.useVAO&&i.glVAO&&(e.extensions.OES_vertex_array_object.bindVertexArrayOES(null),e.stateCache.glVAO=null),PG.gpuInputAssembler=null,n.bindBuffer(n.ARRAY_BUFFER,null),e.stateCache.glArrayBuffer=null;break;case n.ELEMENT_ARRAY_BUFFER:e.extensions.useVAO&&i.glVAO&&(e.extensions.OES_vertex_array_object.bindVertexArrayOES(null),e.stateCache.glVAO=null),PG.gpuInputAssembler=null,n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,null),e.stateCache.glElementArrayBuffer=null}n.deleteBuffer(t.glBuffer),t.glBuffer=null}}(aG.instance,this._gpuBuffer),aG.instance.memoryStatus.bufferSize-=this._size,this._gpuBuffer=null),this._gpuBufferView&&(this._gpuBufferView=null)}resize(e){if(this._isBufferView)return void console.warn("cannot resize buffer views!");const t=this._size;t!==e&&(this._size=e,this._count=this._size/this._stride,this._uniformBuffer&&(this._uniformBuffer=new Uint8Array(e)),this._gpuBuffer&&(this._uniformBuffer&&(this._gpuBuffer.buffer=this._uniformBuffer),this._gpuBuffer.size=e,e>0&&(function(e,t){const{gl:n}=e,i=e.stateCache,s=t.memUsage&ks.HOST?n.DYNAMIC_DRAW:n.STATIC_DRAW;t.usage&Us.VERTEX?(e.extensions.useVAO&&i.glVAO&&(e.extensions.OES_vertex_array_object.bindVertexArrayOES(null),i.glVAO=null),PG.gpuInputAssembler=null,e.stateCache.glArrayBuffer!==t.glBuffer&&n.bindBuffer(n.ARRAY_BUFFER,t.glBuffer),t.buffer?n.bufferData(n.ARRAY_BUFFER,t.buffer,s):n.bufferData(n.ARRAY_BUFFER,t.size,s),n.bindBuffer(n.ARRAY_BUFFER,null),e.stateCache.glArrayBuffer=null):t.usage&Us.INDEX?(e.extensions.useVAO&&i.glVAO&&(e.extensions.OES_vertex_array_object.bindVertexArrayOES(null),i.glVAO=null),PG.gpuInputAssembler=null,e.stateCache.glElementArrayBuffer!==t.glBuffer&&n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t.glBuffer),t.buffer?n.bufferData(n.ELEMENT_ARRAY_BUFFER,t.buffer,s):n.bufferData(n.ELEMENT_ARRAY_BUFFER,t.size,s),n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,null),e.stateCache.glElementArrayBuffer=null):t.usage&Us.UNIFORM?t.buffer&&(t.vf32=new Float32Array(t.buffer.buffer)):(t.usage&Us.INDIRECT||t.usage&Us.TRANSFER_DST||t.usage&Us.TRANSFER_SRC||console.error("Unsupported BufferType, create buffer failed."),t.glTarget=n.NONE)}(aG.instance,this._gpuBuffer),aG.instance.memoryStatus.bufferSize-=t,aG.instance.memoryStatus.bufferSize+=e)))}update(e,t){if(this._isBufferView)return void console.warn("cannot update through buffer views!");let n;n=void 0!==t?t:this._usage&Us.INDIRECT?0:e.byteLength,AG(aG.instance,this._gpuBuffer,e,0,n)}}class zG{constructor(e,t){this._frees=void 0,this._freeIdx=0,this._freeCmds=void 0,this._frees=new Array(t),this._freeCmds=new De(t);for(let n=0;n<t;++n)this._frees[n]=new e;this._freeIdx=t-1}alloc(e){if(this._freeIdx<0){const t=2*this._frees.length,n=this._frees;this._frees=new Array(t);const i=t-n.length;for(let t=0;t<i;++t)this._frees[t]=new e;for(let e=i,s=0;e<t;++e,++s)this._frees[e]=n[s];this._freeIdx+=i}const t=this._frees[this._freeIdx];return this._frees[this._freeIdx--]=null,++t.refCount,t}free(e){0==--e.refCount&&this._freeCmds.push(e)}freeCmds(e){for(let t=0;t<e.length;++t)0==--e.array[t].refCount&&this._freeCmds.push(e.array[t])}release(){for(let e=0;e<this._freeCmds.length;++e){const t=this._freeCmds.array[e];t.clear(),this._frees[++this._freeIdx]=t}this._freeCmds.clear()}}class FG{constructor(){this.beginRenderPassCmdPool=void 0,this.bindStatesCmdPool=void 0,this.drawCmdPool=void 0,this.updateBufferCmdPool=void 0,this.copyBufferToTextureCmdPool=void 0,this.beginRenderPassCmdPool=new zG(xG,1),this.bindStatesCmdPool=new zG(SG,1),this.drawCmdPool=new zG(CG,1),this.updateBufferCmdPool=new zG(TG,1),this.copyBufferToTextureCmdPool=new zG(bG,1)}clearCmds(e){e.beginRenderPassCmds.length&&(this.beginRenderPassCmdPool.freeCmds(e.beginRenderPassCmds),e.beginRenderPassCmds.clear()),e.bindStatesCmds.length&&(this.bindStatesCmdPool.freeCmds(e.bindStatesCmds),e.bindStatesCmds.clear()),e.drawCmds.length&&(this.drawCmdPool.freeCmds(e.drawCmds),e.drawCmds.clear()),e.updateBufferCmds.length&&(this.updateBufferCmdPool.freeCmds(e.updateBufferCmds),e.updateBufferCmds.clear()),e.copyBufferToTextureCmds.length&&(this.copyBufferToTextureCmdPool.freeCmds(e.copyBufferToTextureCmds),e.copyBufferToTextureCmds.clear()),e.cmds.clear()}releaseCmds(){this.beginRenderPassCmdPool.release(),this.bindStatesCmdPool.release(),this.drawCmdPool.release(),this.updateBufferCmdPool.release(),this.copyBufferToTextureCmdPool.release()}}class BG extends Vo{constructor(...e){super(...e),this.cmdPackage=new EG,this._cmdAllocator=new FG,this._isInRenderPass=!1,this._curGPUPipelineState=null,this._curGPUInputAssembler=null,this._curGPUDescriptorSets=[],this._curDynamicOffsets=Array(8).fill(0),this._curDynamicStates=new So,this._isStateInvalied=!1}initialize(e){this._type=e.type,this._queue=e.queue;const t=aG.instance.bindingMappingInfo.bufferOffsets.length;for(let e=0;e<t;e++)this._curGPUDescriptorSets.push(null)}destroy(){this._cmdAllocator.clearCmds(this.cmdPackage)}begin(e,t=0,n){this._cmdAllocator.clearCmds(this.cmdPackage),this._curGPUPipelineState=null,this._curGPUInputAssembler=null,this._curGPUDescriptorSets.length=0,this._numDrawCalls=0,this._numInstances=0,this._numTris=0}end(){this._isStateInvalied&&this.bindStates(),this._isInRenderPass=!1}beginRenderPass(e,t,n,i,s,r){const o=this._cmdAllocator.beginRenderPassCmdPool.alloc(xG);o.gpuRenderPass=e.gpuRenderPass,o.gpuFramebuffer=t.gpuFramebuffer,o.renderArea=n,o.clearColors.length=i.length;for(let e=0;e<i.length;++e)o.clearColors[e]=i[e];o.clearDepth=s,o.clearStencil=r,this.cmdPackage.beginRenderPassCmds.push(o),this.cmdPackage.cmds.push(vG.BEGIN_RENDER_PASS),this._isInRenderPass=!0}endRenderPass(){this._isInRenderPass=!1}bindPipelineState(e){const t=e.gpuPipelineState;t!==this._curGPUPipelineState&&(this._curGPUPipelineState=t,this._isStateInvalied=!0)}bindDescriptorSet(e,t,n){const i=t.gpuDescriptorSet;if(i!==this._curGPUDescriptorSets[e]&&(this._curGPUDescriptorSets[e]=i,this._isStateInvalied=!0),n){var s;const t=null===(s=this._curGPUPipelineState)||void 0===s?void 0:s.gpuPipelineLayout;if(t){const i=this._curDynamicOffsets,s=t.dynamicOffsetOffsets[e];for(let e=0;e<n.length;e++)i[s+e]=n[e];this._isStateInvalied=!0}}}bindInputAssembler(e){const t=e.gpuInputAssembler;this._curGPUInputAssembler=t,this._isStateInvalied=!0}setViewport(e){const t=this._curDynamicStates.viewport;t.left===e.left&&t.top===e.top&&t.width===e.width&&t.height===e.height&&t.minDepth===e.minDepth&&t.maxDepth===e.maxDepth||(t.left=e.left,t.top=e.top,t.width=e.width,t.height=e.height,t.minDepth=e.minDepth,t.maxDepth=e.maxDepth,this._isStateInvalied=!0)}setScissor(e){const t=this._curDynamicStates.scissor;t.x===e.x&&t.y===e.y&&t.width===e.width&&t.height===e.height||(t.x=e.x,t.y=e.y,t.width=e.width,t.height=e.height,this._isStateInvalied=!0)}setLineWidth(e){this._curDynamicStates.lineWidth!==e&&(this._curDynamicStates.lineWidth=e,this._isStateInvalied=!0)}setDepthBias(e,t,n){const i=this._curDynamicStates;i.depthBiasConstant===e&&i.depthBiasClamp===t&&i.depthBiasSlope===n||(i.depthBiasConstant=e,i.depthBiasClamp=t,i.depthBiasSlope=n,this._isStateInvalied=!0)}setBlendConstants(e){const t=this._curDynamicStates.blendConstant;t.x===e.x&&t.y===e.y&&t.z===e.z&&t.w===e.w||(t.copy(e),this._isStateInvalied=!0)}setDepthBound(e,t){const n=this._curDynamicStates;n.depthMinBounds===e&&n.depthMaxBounds===t||(n.depthMinBounds=e,n.depthMaxBounds=t,this._isStateInvalied=!0)}setStencilWriteMask(e,t){const n=this._curDynamicStates.stencilStatesFront,i=this._curDynamicStates.stencilStatesBack;e&pr.FRONT&&n.writeMask!==t&&(n.writeMask=t,this._isStateInvalied=!0),e&pr.BACK&&i.writeMask!==t&&(i.writeMask=t,this._isStateInvalied=!0)}setStencilCompareMask(e,t,n){const i=this._curDynamicStates.stencilStatesFront,s=this._curDynamicStates.stencilStatesBack;e&pr.FRONT&&(i.compareMask===n&&i.reference===t||(i.reference=t,i.compareMask=n,this._isStateInvalied=!0)),e&pr.BACK&&(s.compareMask===n&&s.reference===t||(s.reference=t,s.compareMask=n,this._isStateInvalied=!0))}draw(e){if(this._type===gr.PRIMARY&&this._isInRenderPass||this._type===gr.SECONDARY){this._isStateInvalied&&this.bindStates();const t="drawInfo"in e?e.drawInfo:e,n=this._cmdAllocator.drawCmdPool.alloc(CG);n.drawInfo.copy(t),this.cmdPackage.drawCmds.push(n),this.cmdPackage.cmds.push(vG.DRAW),++this._numDrawCalls,this._numInstances+=t.instanceCount;const i=t.indexCount||t.vertexCount;if(this._curGPUPipelineState)switch(this._curGPUPipelineState.glPrimitive){case 4:this._numTris+=i/3*Math.max(t.instanceCount,1);break;case 5:case 6:this._numTris+=(i-2)*Math.max(t.instanceCount,1)}}else console.error("Command 'draw' must be recorded inside a render pass.")}updateBuffer(e,t,n){if(this._type===gr.PRIMARY&&!this._isInRenderPass||this._type===gr.SECONDARY){const i=e.gpuBuffer;if(i){const s=this._cmdAllocator.updateBufferCmdPool.alloc(TG);let r=0,o=null;e.usage&Us.INDIRECT||(r=void 0!==n?n:t.byteLength),o=t,s.gpuBuffer=i,s.buffer=o,s.offset=0,s.size=r,this.cmdPackage.updateBufferCmds.push(s),this.cmdPackage.cmds.push(vG.UPDATE_BUFFER)}}else console.error("Command 'updateBuffer' must be recorded outside a render pass.")}copyBuffersToTexture(e,t,n){if(this._type===gr.PRIMARY&&!this._isInRenderPass||this._type===gr.SECONDARY){const i=t.gpuTexture;if(i){const t=this._cmdAllocator.copyBufferToTextureCmdPool.alloc(bG);t&&(t.gpuTexture=i,t.regions=n,t.buffers=e,this.cmdPackage.copyBufferToTextureCmds.push(t),this.cmdPackage.cmds.push(vG.COPY_BUFFER_TO_TEXTURE))}}else console.error("Command 'copyBufferToTexture' must be recorded outside a render pass.")}execute(e,t){for(let n=0;n<t;++n){const t=e[n];for(let e=0;e<t.cmdPackage.beginRenderPassCmds.length;++e){const n=t.cmdPackage.beginRenderPassCmds.array[e];++n.refCount,this.cmdPackage.beginRenderPassCmds.push(n)}for(let e=0;e<t.cmdPackage.bindStatesCmds.length;++e){const n=t.cmdPackage.bindStatesCmds.array[e];++n.refCount,this.cmdPackage.bindStatesCmds.push(n)}for(let e=0;e<t.cmdPackage.drawCmds.length;++e){const n=t.cmdPackage.drawCmds.array[e];++n.refCount,this.cmdPackage.drawCmds.push(n)}for(let e=0;e<t.cmdPackage.updateBufferCmds.length;++e){const n=t.cmdPackage.updateBufferCmds.array[e];++n.refCount,this.cmdPackage.updateBufferCmds.push(n)}for(let e=0;e<t.cmdPackage.copyBufferToTextureCmds.length;++e){const n=t.cmdPackage.copyBufferToTextureCmds.array[e];++n.refCount,this.cmdPackage.copyBufferToTextureCmds.push(n)}this.cmdPackage.cmds.concat(t.cmdPackage.cmds.array),this._numDrawCalls+=t._numDrawCalls,this._numInstances+=t._numInstances,this._numTris+=t._numTris}}pipelineBarrier(e,t,n){}bindStates(){const e=this._cmdAllocator.bindStatesCmdPool.alloc(SG);e&&(e.gpuPipelineState=this._curGPUPipelineState,Array.prototype.push.apply(e.gpuDescriptorSets,this._curGPUDescriptorSets),Array.prototype.push.apply(e.dynamicOffsets,this._curDynamicOffsets),e.gpuInputAssembler=this._curGPUInputAssembler,e.dynamicStates.copy(this._curDynamicStates),this.cmdPackage.bindStatesCmds.push(e),this.cmdPackage.cmds.push(vG.BIND_STATES),this._isStateInvalied=!1)}}class UG extends qo{constructor(...e){super(...e),this._gpuFramebuffer=null}get gpuFramebuffer(){return this._gpuFramebuffer}initialize(e){this._renderPass=e.renderPass,this._colorTextures=e.colorTextures||[],this._depthStencilTexture=e.depthStencilTexture||null;const t=[];for(let n=0;n<e.colorTextures.length;++n){const i=e.colorTextures[n];i&&t.push(i.gpuTexture)}let n=null;e.depthStencilTexture&&(n=e.depthStencilTexture.gpuTexture);let i=Number.MAX_SAFE_INTEGER,s=Number.MAX_SAFE_INTEGER;this._gpuFramebuffer={gpuRenderPass:e.renderPass.gpuRenderPass,gpuColorTextures:t,gpuDepthStencilTexture:n,glFramebuffer:null,isOffscreen:!0,get width(){return this.isOffscreen?i:this.gpuColorTextures[0].width},set width(e){i=e},get height(){return this.isOffscreen?s:this.gpuColorTextures[0].height},set height(e){s=e}},function(e,t){for(let e=0;e<t.gpuColorTextures.length;++e)if(t.gpuColorTextures[e].isSwapchainTexture)return void(t.isOffscreen=!1);const{gl:n}=e,i=[],s=n.createFramebuffer();if(s){t.glFramebuffer=s,e.stateCache.glFramebuffer!==t.glFramebuffer&&n.bindFramebuffer(n.FRAMEBUFFER,t.glFramebuffer);for(let e=0;e<t.gpuColorTextures.length;++e){const s=t.gpuColorTextures[e];s&&(s.glTexture?n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+e,s.glTarget,s.glTexture,0):n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+e,n.RENDERBUFFER,s.glRenderbuffer),i.push(n.COLOR_ATTACHMENT0+e),t.width=Math.min(t.width,s.width),t.height=Math.min(t.height,s.height))}const r=t.gpuDepthStencilTexture;if(r){const e=To[r.format].hasStencil?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT;r.glTexture?n.framebufferTexture2D(n.FRAMEBUFFER,e,r.glTarget,r.glTexture,0):n.framebufferRenderbuffer(n.FRAMEBUFFER,e,n.RENDERBUFFER,r.glRenderbuffer),t.width=Math.min(t.width,r.width),t.height=Math.min(t.height,r.height)}e.extensions.WEBGL_draw_buffers&&e.extensions.WEBGL_draw_buffers.drawBuffersWEBGL(i);const o=n.checkFramebufferStatus(n.FRAMEBUFFER);if(o!==n.FRAMEBUFFER_COMPLETE)switch(o){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:console.error("glCheckFramebufferStatus() - FRAMEBUFFER_INCOMPLETE_ATTACHMENT");break;case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:console.error("glCheckFramebufferStatus() - FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT");break;case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:console.error("glCheckFramebufferStatus() - FRAMEBUFFER_INCOMPLETE_DIMENSIONS");break;case n.FRAMEBUFFER_UNSUPPORTED:console.error("glCheckFramebufferStatus() - FRAMEBUFFER_UNSUPPORTED")}e.stateCache.glFramebuffer!==t.glFramebuffer&&n.bindFramebuffer(n.FRAMEBUFFER,e.stateCache.glFramebuffer)}}(aG.instance,this._gpuFramebuffer)}destroy(){var e,t;this._gpuFramebuffer&&(e=aG.instance,(t=this._gpuFramebuffer).glFramebuffer&&(e.gl.deleteFramebuffer(t.glFramebuffer),e.stateCache.glFramebuffer===t.glFramebuffer&&(e.gl.bindFramebuffer(e.gl.FRAMEBUFFER,null),e.stateCache.glFramebuffer=null),t.glFramebuffer=null),this._gpuFramebuffer=null)}}class GG extends $o{constructor(...e){super(...e),this._gpuInputAssembler=null}get gpuInputAssembler(){return this._gpuInputAssembler}initialize(e){if(0===e.vertexBuffers.length)return void console.error("InputAssemblerInfo.vertexBuffers is null.");if(this._attributes=e.attributes,this._attributesHash=this.computeAttributesHash(),this._vertexBuffers=e.vertexBuffers,e.indexBuffer)this._indexBuffer=e.indexBuffer,this._drawInfo.indexCount=this._indexBuffer.size/this._indexBuffer.stride,this._drawInfo.firstIndex=0;else{const e=this._vertexBuffers[0];this._drawInfo.vertexCount=e.size/e.stride,this._drawInfo.firstVertex=0,this._drawInfo.vertexOffset=0}this._drawInfo.instanceCount=0,this._drawInfo.firstInstance=0,this._indirectBuffer=e.indirectBuffer||null;const t=new Array(e.vertexBuffers.length);for(let n=0;n<e.vertexBuffers.length;++n){const i=e.vertexBuffers[n];i.gpuBuffer&&(t[n]=i.gpuBuffer)}let n=null,i=0;if(e.indexBuffer&&(n=e.indexBuffer.gpuBuffer,n))switch(n.stride){case 1:i=5121;break;case 2:i=5123;break;case 4:i=5125;break;default:console.error("Error index buffer stride.")}let s=null;e.indirectBuffer&&(s=e.indirectBuffer.gpuBuffer),this._gpuInputAssembler={attributes:e.attributes,gpuVertexBuffers:t,gpuIndexBuffer:n,gpuIndirectBuffer:s,glAttribs:[],glIndexType:i,glVAOs:new Map},function(e,t){const{gl:n}=e;t.glAttribs=new Array(t.attributes.length);const i=[0,0,0,0,0,0,0,0];for(let e=0;e<t.attributes.length;++e){const s=t.attributes[e],r=void 0!==s.stream?s.stream:0,o=t.gpuVertexBuffers[r],a=cG(s.format,n),{size:c}=To[s.format];t.glAttribs[e]={name:s.name,glBuffer:o.glBuffer,glType:a,size:c,count:To[s.format].count,stride:o.stride,componentCount:pG(a,n),isNormalized:void 0!==s.isNormalized&&s.isNormalized,isInstanced:void 0!==s.isInstanced&&s.isInstanced,offset:i[r]},i[r]+=c}}(aG.instance,this._gpuInputAssembler)}destroy(){const e=aG.instance;this._gpuInputAssembler&&e.extensions.useVAO&&function(e,t){const n=t.glVAOs.values();let i=n.next();const s=e.extensions.OES_vertex_array_object;let r=e.stateCache.glVAO;for(;!i.done;)s.deleteVertexArrayOES(i.value),r===i.value&&(s.bindVertexArrayOES(null),r=null),i=n.next();e.stateCache.glVAO=r,t.glVAOs.clear()}(e,this._gpuInputAssembler),this._gpuInputAssembler=null}}class HG extends Zo{constructor(...e){super(...e),this._gpuDescriptorSetLayout=null}get gpuDescriptorSetLayout(){return this._gpuDescriptorSetLayout}initialize(e){Array.prototype.push.apply(this._bindings,e.bindings);let t=0,n=-1;const i=[];for(let e=0;e<this._bindings.length;e++){const s=this._bindings[e];i.push(t),t+=s.count,s.binding>n&&(n=s.binding)}this._bindingIndices=Array(n+1).fill(-1);const s=this._descriptorIndices=Array(n+1).fill(-1);for(let e=0;e<this._bindings.length;e++){const t=this._bindings[e];this._bindingIndices[t.binding]=e,s[t.binding]=i[e]}const r=[];for(let e=0;e<this._bindings.length;e++){const t=this._bindings[e];if(t.descriptorType&Ao)for(let e=0;e<t.count;e++)r.push(t.binding)}this._gpuDescriptorSetLayout={bindings:this._bindings,dynamicBindings:r,descriptorIndices:s,descriptorCount:t}}destroy(){this._bindings.length=0}}class kG extends Qo{constructor(...e){super(...e),this._gpuPipelineLayout=null}get gpuPipelineLayout(){return this._gpuPipelineLayout}initialize(e){Array.prototype.push.apply(this._setLayouts,e.setLayouts);const t=[],n=[];let i=0;const s=[];for(let e=0;e<this._setLayouts.length;e++){const r=this._setLayouts[e],o=r.gpuDescriptorSetLayout.dynamicBindings,a=Array(r.bindingIndices.length).fill(-1);for(let e=0;e<o.length;e++){const t=o[e];a[t]<0&&(a[t]=i+e)}n.push(r.gpuDescriptorSetLayout),t.push(a),s.push(i),i+=o.length}this._gpuPipelineLayout={gpuSetLayouts:n,dynamicOffsetIndices:t,dynamicOffsetCount:i,dynamicOffsetOffsets:s}}destroy(){this._setLayouts.length=0}}class VG{get native(){return this}constructor(e=!1,t=lr.FILL,n=hr.GOURAND,i=_r.BACK,s=!0,r=!1,o=0,a=0,c=0,l=!0,h=!1,_=1){this.isDiscard=e,this.polygonMode=t,this.shadeModel=n,this.cullMode=i,this.isFrontFaceCCW=s,this.depthBiasEnabled=r,this.depthBias=o,this.depthBiasClamp=a,this.depthBiasSlop=c,this.isDepthClip=l,this.isMultisample=h,this.lineWidth=_}reset(){this.isDiscard=!1,this.polygonMode=lr.FILL,this.shadeModel=hr.GOURAND,this.cullMode=_r.BACK,this.isFrontFaceCCW=!0,this.depthBiasEnabled=!1,this.depthBias=0,this.depthBiasClamp=0,this.depthBiasSlop=0,this.isDepthClip=!0,this.isMultisample=!1,this.lineWidth=1}assign(e){Object.assign(this,e)}destroy(){}}class jG{get native(){return this}constructor(e=!0,t=!0,n=$s.LESS,i=!1,s=$s.ALWAYS,r=65535,o=65535,a=Zs.KEEP,c=Zs.KEEP,l=Zs.KEEP,h=1,_=!1,u=$s.ALWAYS,p=65535,d=65535,f=Zs.KEEP,m=Zs.KEEP,g=Zs.KEEP,v=1){this.depthTest=e,this.depthWrite=t,this.depthFunc=n,this.stencilTestFront=i,this.stencilFuncFront=s,this.stencilReadMaskFront=r,this.stencilWriteMaskFront=o,this.stencilFailOpFront=a,this.stencilZFailOpFront=c,this.stencilPassOpFront=l,this.stencilRefFront=h,this.stencilTestBack=_,this.stencilFuncBack=u,this.stencilReadMaskBack=p,this.stencilWriteMaskBack=d,this.stencilFailOpBack=f,this.stencilZFailOpBack=m,this.stencilPassOpBack=g,this.stencilRefBack=v}reset(){this.depthTest=!0,this.depthWrite=!0,this.depthFunc=$s.LESS,this.stencilTestFront=!1,this.stencilFuncFront=$s.ALWAYS,this.stencilReadMaskFront=65535,this.stencilWriteMaskFront=65535,this.stencilFailOpFront=Zs.KEEP,this.stencilZFailOpFront=Zs.KEEP,this.stencilPassOpFront=Zs.KEEP,this.stencilRefFront=1,this.stencilTestBack=!1,this.stencilFuncBack=$s.ALWAYS,this.stencilReadMaskBack=65535,this.stencilWriteMaskBack=65535,this.stencilFailOpBack=Zs.KEEP,this.stencilZFailOpBack=Zs.KEEP,this.stencilPassOpBack=Zs.KEEP,this.stencilRefBack=1}assign(e){Object.assign(this,e)}destroy(){}}class WG{constructor(e=!1,t=Qs.ONE,n=Qs.ZERO,i=Js.ADD,s=Qs.ONE,r=Qs.ZERO,o=Js.ADD,a=er.ALL){this.blend=e,this.blendSrc=t,this.blendDst=n,this.blendEq=i,this.blendSrcAlpha=s,this.blendDstAlpha=r,this.blendAlphaEq=o,this.blendColorMask=a}reset(){this.blend=!1,this.blendSrc=Qs.ONE,this.blendDst=Qs.ZERO,this.blendEq=Js.ADD,this.blendSrcAlpha=Qs.ONE,this.blendDstAlpha=Qs.ZERO,this.blendAlphaEq=Js.ADD,this.blendColorMask=er.ALL}assign(e){Object.assign(this,e)}destroy(){}}class qG{get native(){return this}constructor(e=!1,t=!1,n=new Dr,i=[new WG]){this.isA2C=e,this.isIndepend=t,this.blendColor=n,this.targets=i}setTarget(e,t){let n=this.targets[e];n||(n=this.targets[e]=new WG),Object.assign(n,t)}reset(){this.isA2C=!1,this.isIndepend=!1,this.blendColor.x=0,this.blendColor.y=0,this.blendColor.z=0,this.blendColor.w=0,this.targets.length=1,this.targets[0].reset()}destroy(){}}class XG extends Co{get shader(){return this._shader}get pipelineLayout(){return this._pipelineLayout}get primitive(){return this._primitive}get rasterizerState(){return this._rs}get depthStencilState(){return this._dss}get blendState(){return this._bs}get inputState(){return this._is}get dynamicStates(){return this._dynamicStates}get renderPass(){return this._renderPass}constructor(){super(Ds.PIPELINE_STATE),this._shader=null,this._pipelineLayout=null,this._primitive=cr.TRIANGLE_LIST,this._is=null,this._rs=new VG,this._dss=new jG,this._bs=new qG,this._dynamicStates=ur.NONE,this._renderPass=null}}const YG=[0,1,3,2,0,0,0,4,5,6,0,0,0,0];class KG extends XG{constructor(...e){super(...e),this._gpuPipelineState=null}get gpuPipelineState(){return this._gpuPipelineState}initialize(e){this._primitive=e.primitive,this._shader=e.shader,this._pipelineLayout=e.pipelineLayout;const t=this._bs;if(e.blendState){const n=e.blendState,{targets:i}=n;i&&i.forEach(((e,n)=>{t.setTarget(n,e)})),void 0!==n.isA2C&&(t.isA2C=n.isA2C),void 0!==n.isIndepend&&(t.isIndepend=n.isIndepend),void 0!==n.blendColor&&(t.blendColor=n.blendColor)}Object.assign(this._rs,e.rasterizerState),Object.assign(this._dss,e.depthStencilState),this._is=e.inputState,this._renderPass=e.renderPass,this._dynamicStates=e.dynamicStates;const n=[];for(let e=0;e<31;e++)this._dynamicStates&1<<e&&n.push(1<<e);this._gpuPipelineState={glPrimitive:YG[e.primitive],gpuShader:e.shader.gpuShader,gpuPipelineLayout:e.pipelineLayout.gpuPipelineLayout,rs:e.rasterizerState,dss:e.depthStencilState,bs:e.blendState,gpuRenderPass:e.renderPass.gpuRenderPass,dynamicStates:n}}destroy(){this._gpuPipelineState=null}}class $G extends BG{beginRenderPass(e,t,n,i,s,r){wG(aG.instance,e.gpuRenderPass,t.gpuFramebuffer,n,i,s,r),this._isInRenderPass=!0}draw(e){if(this._isInRenderPass){this._isStateInvalied&&this.bindStates();const t="drawInfo"in e?e.drawInfo:e;RG(aG.instance,t),++this._numDrawCalls,this._numInstances+=t.instanceCount;const n=t.indexCount||t.vertexCount;if(this._curGPUPipelineState)switch(this._curGPUPipelineState.glPrimitive){case 4:this._numTris+=n/3*Math.max(t.instanceCount,1);break;case 5:case 6:this._numTris+=(n-2)*Math.max(t.instanceCount,1)}}else console.error("Command 'draw' must be recorded inside a render pass.")}setViewport(e){const{stateCache:t,gl:n}=aG.instance;t.viewport.left===e.left&&t.viewport.top===e.top&&t.viewport.width===e.width&&t.viewport.height===e.height||(n.viewport(e.left,e.top,e.width,e.height),t.viewport.left=e.left,t.viewport.top=e.top,t.viewport.width=e.width,t.viewport.height=e.height)}setScissor(e){const{stateCache:t,gl:n}=aG.instance;t.scissorRect.x===e.x&&t.scissorRect.y===e.y&&t.scissorRect.width===e.width&&t.scissorRect.height===e.height||(n.scissor(e.x,e.y,e.width,e.height),t.scissorRect.x=e.x,t.scissorRect.y=e.y,t.scissorRect.width=e.width,t.scissorRect.height=e.height)}updateBuffer(e,t,n){if(this._isInRenderPass)console.error("Command 'updateBuffer' must be recorded outside a render pass.");else{const i=e.gpuBuffer;if(i){let s;s=void 0!==n?n:e.usage&Us.INDIRECT?0:t.byteLength,AG(aG.instance,i,t,0,s)}}}copyBuffersToTexture(e,t,n){if(this._isInRenderPass)console.error("Command 'copyBufferToTexture' must be recorded outside a render pass.");else{const i=t.gpuTexture;i&&MG(aG.instance,e,i,n)}}execute(e,t){for(let n=0;n<t;++n){const t=e[n];OG(aG.instance,t.cmdPackage),this._numDrawCalls+=t._numDrawCalls,this._numInstances+=t._numInstances,this._numTris+=t._numTris}}bindStates(){IG(aG.instance,this._curGPUPipelineState,this._curGPUInputAssembler,this._curGPUDescriptorSets,this._curDynamicOffsets,this._curDynamicStates),this._isStateInvalied=!1}}class ZG extends Jo{constructor(...e){super(...e),this.numDrawCalls=0,this.numInstances=0,this.numTris=0}initialize(e){this._type=e.type}destroy(){}submit(e){const t=e.length;for(let n=0;n<t;n++){const t=e[n];this.numDrawCalls+=t.numDrawCalls,this.numInstances+=t.numInstances,this.numTris+=t.numTris}}clear(){this.numDrawCalls=0,this.numInstances=0,this.numTris=0}}class QG extends ea{constructor(...e){super(...e),this._gpuRenderPass=null}get gpuRenderPass(){return this._gpuRenderPass}initialize(e){this._colorInfos=e.colorAttachments,this._depthStencilInfo=e.depthStencilAttachment,this._subpasses=e.subpasses,this._gpuRenderPass={colorAttachments:this._colorInfos,depthStencilAttachment:this._depthStencilInfo},this._hash=this.computeHash()}destroy(){this._gpuRenderPass=null}}const JG=[10497,33648,33071,33071];class eH extends ia{get gpuSampler(){return this._gpuSampler}constructor(e,t){super(e,t),this._gpuSampler=null;let n=0,i=0;const s=this._info.minFilter,r=this._info.magFilter,o=this._info.mipFilter;n=s===Ys.LINEAR||s===Ys.ANISOTROPIC?o===Ys.LINEAR||o===Ys.ANISOTROPIC?9987:o===Ys.POINT?9985:9729:o===Ys.LINEAR||o===Ys.ANISOTROPIC?9986:o===Ys.POINT?9984:9728,i=r===Ys.LINEAR||r===Ys.ANISOTROPIC?9729:9728;const a=JG[this._info.addressU],c=JG[this._info.addressV],l=JG[this._info.addressW];this._gpuSampler={glMinFilter:n,glMagFilter:i,glWrapS:a,glWrapT:c,glWrapR:l}}}class tH extends ta{constructor(...e){super(...e),this._gpuShader=null}get gpuShader(){return this._gpuShader}initialize(e){this._name=e.name,this._stages=e.stages,this._attributes=e.attributes,this._blocks=e.blocks,this._samplers=e.samplers,this._gpuShader={name:e.name,blocks:e.blocks.slice(),samplerTextures:e.samplerTextures.slice(),subpassInputs:e.subpassInputs.slice(),gpuStages:new Array(e.stages.length),glProgram:null,glInputs:[],glUniforms:[],glBlocks:[],glSamplerTextures:[]};for(let t=0;t<e.stages.length;++t){const n=e.stages[t];this._gpuShader.gpuStages[t]={type:n.stage,source:n.source,glShader:null}}!function(e,t){const{gl:n}=e;for(let e=0;e<t.gpuStages.length;e++){const i=t.gpuStages[e];let s=0,r="",o=1;switch(i.type){case tr.VERTEX:r="VertexShader",s=n.VERTEX_SHADER;break;case tr.FRAGMENT:r="FragmentShader",s=n.FRAGMENT_SHADER;break;default:return void console.error("Unsupported ShaderType.")}const a=n.createShader(s);if(a&&(i.glShader=a,n.shaderSource(i.glShader,i.source),n.compileShader(i.glShader),!n.getShaderParameter(i.glShader,n.COMPILE_STATUS))){console.error(`${r} in '${t.name}' compilation failed.`),console.error("Shader source dump:",i.source.replace(/^|\n/g,(()=>`\n${o++} `))),console.error(n.getShaderInfoLog(i.glShader));for(let i=0;i<t.gpuStages.length;i++){const i=t.gpuStages[e];i.glShader&&(n.deleteShader(i.glShader),i.glShader=null)}return}}const i=n.createProgram();if(!i)return;t.glProgram=i;for(let e=0;e<t.gpuStages.length;e++){const i=t.gpuStages[e];n.attachShader(t.glProgram,i.glShader)}if(n.linkProgram(t.glProgram),e.extensions.destroyShadersImmediately)for(let e=0;e<t.gpuStages.length;e++){const i=t.gpuStages[e];i.glShader&&(n.detachShader(t.glProgram,i.glShader),n.deleteShader(i.glShader),i.glShader=null)}if(!n.getProgramParameter(t.glProgram,n.LINK_STATUS))return console.error(`Failed to link shader '${t.name}'.`),void console.error(n.getProgramInfoLog(t.glProgram));m(`Shader '${t.name}' compilation succeeded.`);const s=n.getProgramParameter(t.glProgram,n.ACTIVE_ATTRIBUTES);t.glInputs=new Array(s);for(let e=0;e<s;++e){const i=n.getActiveAttrib(t.glProgram,e);if(i){let s;const r=i.name.indexOf("[");s=-1!==r?i.name.substr(0,r):i.name;const o=n.getAttribLocation(t.glProgram,s),a=_G(i.type,n),c=uG(i.type,n);t.glInputs[e]={binding:o,name:s,type:a,stride:c,count:i.size,size:c*i.size,glType:i.type,glLoc:o}}}if(t.blocks.length>0){t.glBlocks=new Array(t.blocks.length);for(let e=0;e<t.blocks.length;++e){const i=t.blocks[e],s={set:i.set,binding:i.binding,name:i.name,size:0,glUniforms:new Array(i.members.length),glActiveUniforms:[]};t.glBlocks[e]=s;for(let e=0;e<i.members.length;++e){const t=i.members[e],r=lG(t.type,n),o=uG(r,n),a=o*t.count;s.glUniforms[e]={binding:-1,name:t.name,type:t.type,stride:o,count:t.count,size:a,offset:0,glType:r,glLoc:null,array:null}}}}for(let e=0;e<t.subpassInputs.length;++e){const n=t.subpassInputs[e];t.samplerTextures.push(new Wr(n.set,n.binding,n.name,Bs.SAMPLER2D,n.count))}if(t.samplerTextures.length>0){t.glSamplerTextures=new Array(t.samplerTextures.length);for(let e=0;e<t.samplerTextures.length;++e){const i=t.samplerTextures[e];t.glSamplerTextures[e]={set:i.set,binding:i.binding,name:i.name,type:i.type,count:i.count,units:[],glUnits:null,glType:lG(i.type,n),glLoc:null}}}const r=n.getProgramParameter(t.glProgram,n.ACTIVE_UNIFORMS);for(let i=0;i<r;++i){const s=n.getActiveUniform(t.glProgram,i);if(s&&s.type!==n.SAMPLER_2D&&s.type!==n.SAMPLER_CUBE){const i=n.getUniformLocation(t.glProgram,s.name);if(e.extensions.isLocationActive(i)){let e;const n=s.name.indexOf("[");e=-1!==n?s.name.substr(0,n):s.name;for(let n=0;n<t.glBlocks.length;n++){const r=t.glBlocks[n];for(let t=0;t<r.glUniforms.length;t++){const n=r.glUniforms[t];if(n.name===e){n.glLoc=i,n.count=s.size,n.size=n.stride*n.count,n.array=new(hG(n.type))(n.size/4),r.glActiveUniforms.push(n);break}}}}}}for(let e=0;e<t.glBlocks.length;e++){const n=t.glBlocks[e];for(let e=0;e<n.glUniforms.length;e++){const t=n.glUniforms[e];t.offset=n.size/4,n.size+=t.size}}const o=[],a=[],{bindingMappingInfo:c}=e,{texUnitCacheMap:l}=e.stateCache;let h=0;for(let e=0;e<t.blocks.length;++e)t.blocks[e].set===c.flexibleSet&&h++;let _=0;for(let i=0;i<t.samplerTextures.length;++i){const s=t.samplerTextures[i],r=n.getUniformLocation(t.glProgram,s.name);if(e.extensions.isLocationActive(r)&&(o.push(t.glSamplerTextures[i]),a.push(r)),void 0===l[s.name]){let t=s.binding+c.samplerOffsets[s.set]+_;s.set===c.flexibleSet&&(t-=h),l[s.name]=t%e.capabilities.maxTextureUnits,_+=s.count-1}}if(o.length){const i=[];for(let t=0;t<o.length;++t){const n=o[t];let s=l[n.name];if(void 0!==s){n.glLoc=a[t];for(let t=0;t<n.count;++t){for(;i[s];)s=(s+1)%e.capabilities.maxTextureUnits;n.units.push(s),i[s]=!0}}}let s=0;for(let t=0;t<o.length;++t){const n=o[t];if(!e.extensions.isLocationActive(n.glLoc)){n.glLoc=a[t];for(let t=0;t<n.count;++t){for(;i[s];)s=(s+1)%e.capabilities.maxTextureUnits;void 0===l[n.name]&&(l[n.name]=s),n.units.push(s),i[s]=!0}}}e.stateCache.glProgram!==t.glProgram&&n.useProgram(t.glProgram);for(let e=0;e<o.length;e++){const t=o[e];t.glUnits=new Int32Array(t.units),n.uniform1iv(t.glLoc,t.glUnits)}e.stateCache.glProgram!==t.glProgram&&n.useProgram(e.stateCache.glProgram)}for(let e=0;e<t.glBlocks.length;)t.glBlocks[e].glActiveUniforms.length?e++:(t.glBlocks[e]=t.glBlocks[t.glBlocks.length-1],t.glBlocks.length--);t.glSamplerTextures=o}(aG.instance,this._gpuShader)}destroy(){this._gpuShader&&(function(e,t){if(t.glProgram){const{gl:n}=e;if(!e.extensions.destroyShadersImmediately)for(let e=0;e<t.gpuStages.length;e++){const i=t.gpuStages[e];i.glShader&&(n.detachShader(t.glProgram,i.glShader),n.deleteShader(i.glShader),i.glShader=null)}n.deleteProgram(t.glProgram),e.stateCache.glProgram===t.glProgram&&(e.gl.useProgram(null),e.stateCache.glProgram=null),t.glProgram=null}}(aG.instance,this._gpuShader),this._gpuShader=null)}}class nH{constructor(){this.glArrayBuffer=null,this.glElementArrayBuffer=null,this.glVAO=null,this.texUnit=0,this.glTexUnits=[],this.glRenderbuffer=null,this.glFramebuffer=null,this.viewport=new Rr,this.scissorRect=new Tr(0,0,0,0),this.rs=new VG,this.dss=new jG,this.bs=new qG,this.glProgram=null,this.glEnabledAttribLocs=[],this.glCurrentAttribLocs=[],this.texUnitCacheMap={}}initialize(e,t){for(let t=0;t<e;++t)this.glTexUnits.push({glTexture:null});this.glEnabledAttribLocs.length=t,this.glEnabledAttribLocs.fill(!1),this.glCurrentAttribLocs.length=t,this.glCurrentAttribLocs.fill(!1)}}class iH extends na{constructor(...e){super(...e),this._gpuTexture=null}get gpuTexture(){return this._gpuTexture}initialize(e,t){"texture"in e?console.log("WebGL does not support texture view."):(this._type=e.type,this._usage=e.usage,this._format=e.format,this._width=e.width,this._height=e.height,this._depth=e.depth,this._layerCount=e.layerCount,this._levelCount=e.levelCount,this._samples=e.samples,this._flags=e.flags,this._isPowerOf2=wo(this._width)&&wo(this._height),this._size=Ro(this._format,this.width,this.height,this.depth,this._levelCount)*this._layerCount,this._gpuTexture={type:this._type,format:this._format,usage:this._usage,width:this._width,height:this._height,depth:this._depth,size:this._size,arrayLayer:this._layerCount,mipLevel:this._levelCount,samples:this._samples,flags:this._flags,isPowerOf2:this._isPowerOf2,glTarget:0,glInternalFmt:0,glFormat:0,glType:0,glUsage:0,glTexture:null,glRenderbuffer:null,glWrapS:0,glWrapT:0,glMinFilter:0,glMagFilter:0,isSwapchainTexture:t||!1},function(e,t){const{gl:n}=e;t.glFormat=t.glInternalFmt=function(e,t){switch(e){case zs.A8:return t.ALPHA;case zs.L8:return t.LUMINANCE;case zs.LA8:return t.LUMINANCE_ALPHA;case zs.RGB8:case zs.RGB16F:case zs.RGB32F:return t.RGB;case zs.BGRA8:case zs.RGBA8:case zs.SRGB8_A8:case zs.RGBA16F:case zs.RGBA32F:return t.RGBA;case zs.R5G6B5:return t.RGB;case zs.RGB5A1:case zs.RGBA4:return t.RGBA;case zs.DEPTH:return t.DEPTH_COMPONENT;case zs.DEPTH_STENCIL:return t.DEPTH_STENCIL;case zs.BC1:return eG.COMPRESSED_RGB_S3TC_DXT1_EXT;case zs.BC1_ALPHA:return eG.COMPRESSED_RGBA_S3TC_DXT1_EXT;case zs.BC1_SRGB:return eG.COMPRESSED_SRGB_S3TC_DXT1_EXT;case zs.BC1_SRGB_ALPHA:return eG.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;case zs.BC2:return eG.COMPRESSED_RGBA_S3TC_DXT3_EXT;case zs.BC2_SRGB:return eG.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;case zs.BC3:return eG.COMPRESSED_RGBA_S3TC_DXT5_EXT;case zs.BC3_SRGB:return eG.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;case zs.ETC_RGB8:return eG.COMPRESSED_RGB_ETC1_WEBGL;case zs.ETC2_RGB8:return eG.COMPRESSED_RGB8_ETC2;case zs.ETC2_SRGB8:return eG.COMPRESSED_SRGB8_ETC2;case zs.ETC2_RGB8_A1:return eG.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2;case zs.ETC2_SRGB8_A1:return eG.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2;case zs.ETC2_RGBA8:return eG.COMPRESSED_RGBA8_ETC2_EAC;case zs.ETC2_SRGB8_A8:return eG.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC;case zs.EAC_R11:return eG.COMPRESSED_R11_EAC;case zs.EAC_R11SN:return eG.COMPRESSED_SIGNED_R11_EAC;case zs.EAC_RG11:return eG.COMPRESSED_RG11_EAC;case zs.EAC_RG11SN:return eG.COMPRESSED_SIGNED_RG11_EAC;case zs.PVRTC_RGB2:return eG.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;case zs.PVRTC_RGBA2:return eG.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;case zs.PVRTC_RGB4:return eG.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;case zs.PVRTC_RGBA4:return eG.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;case zs.ASTC_RGBA_4X4:return eG.COMPRESSED_RGBA_ASTC_4x4_KHR;case zs.ASTC_RGBA_5X4:return eG.COMPRESSED_RGBA_ASTC_5x4_KHR;case zs.ASTC_RGBA_5X5:return eG.COMPRESSED_RGBA_ASTC_5x5_KHR;case zs.ASTC_RGBA_6X5:return eG.COMPRESSED_RGBA_ASTC_6x5_KHR;case zs.ASTC_RGBA_6X6:return eG.COMPRESSED_RGBA_ASTC_6x6_KHR;case zs.ASTC_RGBA_8X5:return eG.COMPRESSED_RGBA_ASTC_8x5_KHR;case zs.ASTC_RGBA_8X6:return eG.COMPRESSED_RGBA_ASTC_8x6_KHR;case zs.ASTC_RGBA_8X8:return eG.COMPRESSED_RGBA_ASTC_8x8_KHR;case zs.ASTC_RGBA_10X5:return eG.COMPRESSED_RGBA_ASTC_10x5_KHR;case zs.ASTC_RGBA_10X6:return eG.COMPRESSED_RGBA_ASTC_10x6_KHR;case zs.ASTC_RGBA_10X8:return eG.COMPRESSED_RGBA_ASTC_10x8_KHR;case zs.ASTC_RGBA_10X10:return eG.COMPRESSED_RGBA_ASTC_10x10_KHR;case zs.ASTC_RGBA_12X10:return eG.COMPRESSED_RGBA_ASTC_12x10_KHR;case zs.ASTC_RGBA_12X12:return eG.COMPRESSED_RGBA_ASTC_12x12_KHR;case zs.ASTC_SRGBA_4X4:return eG.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR;case zs.ASTC_SRGBA_5X4:return eG.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR;case zs.ASTC_SRGBA_5X5:return eG.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR;case zs.ASTC_SRGBA_6X5:return eG.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR;case zs.ASTC_SRGBA_6X6:return eG.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR;case zs.ASTC_SRGBA_8X5:return eG.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR;case zs.ASTC_SRGBA_8X6:return eG.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR;case zs.ASTC_SRGBA_8X8:return eG.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR;case zs.ASTC_SRGBA_10X5:return eG.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR;case zs.ASTC_SRGBA_10X6:return eG.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR;case zs.ASTC_SRGBA_10X8:return eG.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR;case zs.ASTC_SRGBA_10X10:return eG.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR;case zs.ASTC_SRGBA_12X10:return eG.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR;case zs.ASTC_SRGBA_12X12:return eG.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR;default:return console.error("Unsupported Format, convert to WebGL format failed."),t.RGBA}}(t.format,n),t.glType=cG(t.format,n);let i=t.width,s=t.height;switch(t.type){case Vs.TEX2D:{if(t.glTarget=n.TEXTURE_2D,t.isSwapchainTexture)break;const r=Math.max(i,s);if(r>e.capabilities.maxTextureSize&&E(9100,r,e.capabilities.maxTextureSize),!e.extensions.WEBGL_depth_texture&&To[t.format].hasDepth)t.glInternalFmt=function(e,t){switch(e){case zs.R5G6B5:return t.RGB565;case zs.RGB5A1:return t.RGB5_A1;case zs.RGBA4:return t.RGBA4;case zs.RGBA16F:return eG.RGBA16F_EXT;case zs.RGBA32F:return eG.RGBA32F_EXT;case zs.SRGB8_A8:return eG.SRGB8_ALPHA8_EXT;case zs.DEPTH:return t.DEPTH_COMPONENT16;case zs.DEPTH_STENCIL:return t.DEPTH_STENCIL;default:return console.error("Unsupported Format, convert to WebGL internal format failed."),t.RGBA}}(t.format,n),t.glRenderbuffer=n.createRenderbuffer(),t.size>0&&(e.stateCache.glRenderbuffer!==t.glRenderbuffer&&(n.bindRenderbuffer(n.RENDERBUFFER,t.glRenderbuffer),e.stateCache.glRenderbuffer=t.glRenderbuffer),n.renderbufferStorage(n.RENDERBUFFER,t.glInternalFmt,i,s));else if(t.glTexture=n.createTexture(),t.size>0){const r=e.stateCache.glTexUnits[e.stateCache.texUnit];if(r.glTexture!==t.glTexture&&(n.bindTexture(n.TEXTURE_2D,t.glTexture),r.glTexture=t.glTexture),To[t.format].isCompressed)for(let e=0;e<t.mipLevel;++e){const r=Io(t.format,i,s,1),o=new Uint8Array(r);n.compressedTexImage2D(n.TEXTURE_2D,e,t.glInternalFmt,i,s,0,o),i=Math.max(1,i>>1),s=Math.max(1,s>>1)}else for(let e=0;e<t.mipLevel;++e)n.texImage2D(n.TEXTURE_2D,e,t.glInternalFmt,i,s,0,t.glFormat,t.glType,null),i=Math.max(1,i>>1),s=Math.max(1,s>>1);t.isPowerOf2?(t.glWrapS=n.REPEAT,t.glWrapT=n.REPEAT):(t.glWrapS=n.CLAMP_TO_EDGE,t.glWrapT=n.CLAMP_TO_EDGE),t.glMinFilter=n.LINEAR,t.glMagFilter=n.LINEAR,n.texParameteri(t.glTarget,n.TEXTURE_WRAP_S,t.glWrapS),n.texParameteri(t.glTarget,n.TEXTURE_WRAP_T,t.glWrapT),n.texParameteri(t.glTarget,n.TEXTURE_MIN_FILTER,t.glMinFilter),n.texParameteri(t.glTarget,n.TEXTURE_MAG_FILTER,t.glMagFilter)}break}case Vs.CUBE:{t.glTarget=n.TEXTURE_CUBE_MAP;const r=Math.max(i,s);if(r>e.capabilities.maxCubeMapTextureSize&&E(9100,r,e.capabilities.maxTextureSize),t.glTexture=n.createTexture(),t.size>0){const r=e.stateCache.glTexUnits[e.stateCache.texUnit];if(r.glTexture!==t.glTexture&&(n.bindTexture(n.TEXTURE_CUBE_MAP,t.glTexture),r.glTexture=t.glTexture),To[t.format].isCompressed)for(let e=0;e<6;++e){i=t.width,s=t.height;for(let r=0;r<t.mipLevel;++r){const o=Io(t.format,i,s,1),a=new Uint8Array(o);n.compressedTexImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+e,r,t.glInternalFmt,i,s,0,a),i=Math.max(1,i>>1),s=Math.max(1,s>>1)}}else for(let e=0;e<6;++e){i=t.width,s=t.height;for(let r=0;r<t.mipLevel;++r)n.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+e,r,t.glInternalFmt,i,s,0,t.glFormat,t.glType,null),i=Math.max(1,i>>1),s=Math.max(1,s>>1)}t.isPowerOf2?(t.glWrapS=n.REPEAT,t.glWrapT=n.REPEAT):(t.glWrapS=n.CLAMP_TO_EDGE,t.glWrapT=n.CLAMP_TO_EDGE),t.glMinFilter=n.LINEAR,t.glMagFilter=n.LINEAR,n.texParameteri(t.glTarget,n.TEXTURE_WRAP_S,t.glWrapS),n.texParameteri(t.glTarget,n.TEXTURE_WRAP_T,t.glWrapT),n.texParameteri(t.glTarget,n.TEXTURE_MIN_FILTER,t.glMinFilter),n.texParameteri(t.glTarget,n.TEXTURE_MAG_FILTER,t.glMagFilter)}break}default:console.error("Unsupported TextureType, create texture failed."),t.type=Vs.TEX2D,t.glTarget=n.TEXTURE_2D}}(aG.instance,this._gpuTexture),aG.instance.memoryStatus.textureSize+=this._size)}destroy(){this._gpuTexture&&(function(e,t){const{gl:n}=e;if(t.glTexture){const i=e.stateCache.glTexUnits;let s=e.stateCache.texUnit;n.deleteTexture(t.glTexture);for(let e=0;e<i.length;e++)i[e].glTexture===t.glTexture&&(n.activeTexture(n.TEXTURE0+e),s=e,n.bindTexture(t.glTarget,null),i[e].glTexture=null);e.stateCache.texUnit=s,t.glTexture=null}if(t.glRenderbuffer){let i=e.stateCache.glRenderbuffer;n.deleteRenderbuffer(t.glRenderbuffer),i===t.glRenderbuffer&&(n.bindRenderbuffer(n.RENDERBUFFER,null),i=null),t.glRenderbuffer=null}}(aG.instance,this._gpuTexture),aG.instance.memoryStatus.textureSize-=this._size,this._gpuTexture=null)}resize(e,t){const n=this._size;this._width=e,this._height=t,this._size=Ro(this._format,this.width,this.height,this.depth,this._levelCount)*this._layerCount,this._gpuTexture&&(this._gpuTexture.width=e,this._gpuTexture.height=t,this._gpuTexture.size=this._size,function(e,t){if(!t.size)return;const{gl:n}=e;let i=t.width,s=t.height;switch(t.type){case Vs.TEX2D:{t.glTarget=n.TEXTURE_2D;const r=Math.max(i,s);if(r>e.capabilities.maxTextureSize&&E(9100,r,e.capabilities.maxTextureSize),t.glRenderbuffer)e.stateCache.glRenderbuffer!==t.glRenderbuffer&&(n.bindRenderbuffer(n.RENDERBUFFER,t.glRenderbuffer),e.stateCache.glRenderbuffer=t.glRenderbuffer),n.renderbufferStorage(n.RENDERBUFFER,t.glInternalFmt,i,s);else if(t.glTexture){const r=e.stateCache.glTexUnits[e.stateCache.texUnit];if(r.glTexture!==t.glTexture&&(n.bindTexture(n.TEXTURE_2D,t.glTexture),r.glTexture=t.glTexture),To[t.format].isCompressed)for(let e=0;e<t.mipLevel;++e){const r=Io(t.format,i,s,1),o=new Uint8Array(r);n.compressedTexImage2D(n.TEXTURE_2D,e,t.glInternalFmt,i,s,0,o),i=Math.max(1,i>>1),s=Math.max(1,s>>1)}else for(let e=0;e<t.mipLevel;++e)n.texImage2D(n.TEXTURE_2D,e,t.glInternalFmt,i,s,0,t.glFormat,t.glType,null),i=Math.max(1,i>>1),s=Math.max(1,s>>1)}break}case Vs.CUBE:{t.glTarget=n.TEXTURE_CUBE_MAP;const r=Math.max(i,s);r>e.capabilities.maxCubeMapTextureSize&&E(9100,r,e.capabilities.maxTextureSize);const o=e.stateCache.glTexUnits[e.stateCache.texUnit];if(o.glTexture!==t.glTexture&&(n.bindTexture(n.TEXTURE_CUBE_MAP,t.glTexture),o.glTexture=t.glTexture),To[t.format].isCompressed)for(let e=0;e<6;++e){i=t.width,s=t.height;for(let r=0;r<t.mipLevel;++r){const o=Io(t.format,i,s,1),a=new Uint8Array(o);n.compressedTexImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+e,r,t.glInternalFmt,i,s,0,a),i=Math.max(1,i>>1),s=Math.max(1,s>>1)}}else for(let e=0;e<6;++e){i=t.width,s=t.height;for(let r=0;r<t.mipLevel;++r)n.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+e,r,t.glInternalFmt,i,s,0,t.glFormat,t.glType,null),i=Math.max(1,i>>1),s=Math.max(1,s>>1)}break}default:console.error("Unsupported TextureType, create texture failed."),t.type=Vs.TEX2D,t.glTarget=n.TEXTURE_2D}}(aG.instance,this._gpuTexture),aG.instance.memoryStatus.textureSize-=n,aG.instance.memoryStatus.textureSize+=this._size)}initAsSwapchainTexture(e){const t=new Gr;t.format=e.format,t.usage=To[e.format].hasDepth?js.DEPTH_STENCIL_ATTACHMENT:js.COLOR_ATTACHMENT,t.width=e.width,t.height=e.height,this.initialize(t,!0)}}const sH="webglcontextlost";function rH(e,t){const n=["","WEBKIT_","MOZ_"];for(let i=0;i<n.length;++i){const s=e.getExtension(n[i]+t);if(s)return s}return null}function oH(e){const t={EXT_texture_filter_anisotropic:rH(e,"EXT_texture_filter_anisotropic"),EXT_blend_minmax:rH(e,"EXT_blend_minmax"),EXT_frag_depth:rH(e,"EXT_frag_depth"),EXT_shader_texture_lod:rH(e,"EXT_shader_texture_lod"),EXT_sRGB:rH(e,"EXT_sRGB"),OES_vertex_array_object:rH(e,"OES_vertex_array_object"),EXT_color_buffer_half_float:rH(e,"EXT_color_buffer_half_float"),WEBGL_color_buffer_float:rH(e,"WEBGL_color_buffer_float"),WEBGL_compressed_texture_etc1:rH(e,"WEBGL_compressed_texture_etc1"),WEBGL_compressed_texture_etc:rH(e,"WEBGL_compressed_texture_etc"),WEBGL_compressed_texture_pvrtc:rH(e,"WEBGL_compressed_texture_pvrtc"),WEBGL_compressed_texture_s3tc:rH(e,"WEBGL_compressed_texture_s3tc"),WEBGL_compressed_texture_s3tc_srgb:rH(e,"WEBGL_compressed_texture_s3tc_srgb"),WEBGL_debug_shaders:rH(e,"WEBGL_debug_shaders"),WEBGL_draw_buffers:rH(e,"WEBGL_draw_buffers"),WEBGL_lose_context:rH(e,"WEBGL_lose_context"),WEBGL_depth_texture:rH(e,"WEBGL_depth_texture"),OES_texture_half_float:rH(e,"OES_texture_half_float"),OES_texture_half_float_linear:rH(e,"OES_texture_half_float_linear"),OES_texture_float:rH(e,"OES_texture_float"),OES_texture_float_linear:rH(e,"OES_texture_float_linear"),OES_standard_derivatives:rH(e,"OES_standard_derivatives"),OES_element_index_uint:rH(e,"OES_element_index_uint"),ANGLE_instanced_arrays:rH(e,"ANGLE_instanced_arrays"),WEBGL_debug_renderer_info:rH(e,"WEBGL_debug_renderer_info"),WEBGL_multi_draw:null,WEBGL_compressed_texture_astc:null,destroyShadersImmediately:!0,noCompressedTexSubImage2D:!1,isLocationActive:e=>!!e,useVAO:!1};return Zt.os===qt.IOS&&14===Zt.osMainVersion&&Zt.isBrowser||(t.WEBGL_compressed_texture_astc=rH(e,"WEBGL_compressed_texture_astc")),Zt.os!==qt.ANDROID&&Zt.os!==qt.IOS&&(t.WEBGL_multi_draw=rH(e,"WEBGL_multi_draw")),Zt.browserType===Vt.UC&&(t.ANGLE_instanced_arrays=null),Zt.os===qt.IOS&&Zt.osMainVersion<=10&&(t.destroyShadersImmediately=!1),t.OES_vertex_array_object&&(t.useVAO=!0),t}class aH extends Wo{constructor(...e){super(...e),this.stateCache=new nH,this.cmdAllocator=new FG,this.nullTex2D=null,this.nullTexCube=null,this._canvas=null,this._webGLContextLostHandler=null,this._extensions=null}get extensions(){return this._extensions}initialize(e){this._canvas=e.windowHandle,this._webGLContextLostHandler=this._onWebGLContextLost.bind(this),this._canvas.addEventListener(sH,this._onWebGLContextLost);const t=aG.instance.gl;this.stateCache.initialize(aG.instance.capabilities.maxTextureUnits,aG.instance.capabilities.maxVertexAttributes),this._extensions=oH(t),function(e){e.activeTexture(e.TEXTURE0),e.pixelStorei(e.PACK_ALIGNMENT,1),e.pixelStorei(e.UNPACK_ALIGNMENT,1),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,!1),e.bindFramebuffer(e.FRAMEBUFFER,null),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),e.frontFace(e.CCW),e.disable(e.POLYGON_OFFSET_FILL),e.polygonOffset(0,0),e.enable(e.DEPTH_TEST),e.depthMask(!0),e.depthFunc(e.LESS),e.depthRange(0,1),e.stencilFuncSeparate(e.FRONT,e.ALWAYS,1,65535),e.stencilOpSeparate(e.FRONT,e.KEEP,e.KEEP,e.KEEP),e.stencilMaskSeparate(e.FRONT,65535),e.stencilFuncSeparate(e.BACK,e.ALWAYS,1,65535),e.stencilOpSeparate(e.BACK,e.KEEP,e.KEEP,e.KEEP),e.stencilMaskSeparate(e.BACK,65535),e.disable(e.STENCIL_TEST),e.disable(e.SAMPLE_ALPHA_TO_COVERAGE),e.disable(e.BLEND),e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ONE,e.ZERO,e.ONE,e.ZERO),e.colorMask(!0,!0,!0,!0),e.blendColor(0,0,0,0)}(t);const n=zs.RGBA8;let i=zs.DEPTH_STENCIL,s=t.getParameter(t.DEPTH_BITS);const r=t.getParameter(t.STENCIL_BITS);s&&r?i=zs.DEPTH_STENCIL:s&&(i=zs.DEPTH),this._colorTexture=new iH,this._colorTexture.initAsSwapchainTexture({swapchain:this,format:n,width:e.width,height:e.height}),this._depthStencilTexture=new iH,this._depthStencilTexture.initAsSwapchainTexture({swapchain:this,format:i,width:e.width,height:e.height}),this.nullTex2D=aG.instance.createTexture(new Gr(Vs.TEX2D,js.SAMPLED,zs.RGBA8,2,2,Ws.GEN_MIPMAP)),this.nullTexCube=aG.instance.createTexture(new Gr(Vs.CUBE,js.SAMPLED,zs.RGBA8,2,2,Ws.GEN_MIPMAP,6));const o=new Ir;o.texExtent.width=2,o.texExtent.height=2;const a=new Uint8Array(this.nullTex2D.size);a.fill(0),aG.instance.copyBuffersToTexture([a],this.nullTex2D,[o]),o.texSubres.layerCount=6,aG.instance.copyBuffersToTexture([a,a,a,a,a,a],this.nullTexCube,[o])}destroy(){this._canvas&&this._webGLContextLostHandler&&(this._canvas.removeEventListener(sH,this._webGLContextLostHandler),this._webGLContextLostHandler=null),this.nullTex2D&&(this.nullTex2D.destroy(),this.nullTex2D=null),this.nullTexCube&&(this.nullTexCube.destroy(),this.nullTexCube=null),this._extensions=null,this._canvas=null}resize(e,t,n){this._colorTexture.width===e&&this._colorTexture.height===t||(m(`Resizing swapchain: ${e}x${t}`),this._canvas.width=e,this._canvas.height=t,this._colorTexture.resize(e,t),this._depthStencilTexture.resize(e,t))}_onWebGLContextLost(e){T(11e3),p(e)}}class cH extends jo{constructor(...e){super(...e),this._swapchain=null,this._context=null}get gl(){return this._context}get extensions(){return this._swapchain.extensions}get stateCache(){return this._swapchain.stateCache}get nullTex2D(){return this._swapchain.nullTex2D}get nullTexCube(){return this._swapchain.nullTexCube}initialize(e){aG.setInstance(this),this._gfxAPI=Ms.WEBGL,this._bindingMappingInfo=e.bindingMappingInfo,this._bindingMappingInfo.bufferOffsets.length||this._bindingMappingInfo.bufferOffsets.push(0),this._bindingMappingInfo.samplerOffsets.length||this._bindingMappingInfo.samplerOffsets.push(0);const t=this._context=function(e){let t=null;try{const n={alpha:Ue.ENABLE_TRANSPARENT_CANVAS,antialias:Ue.ENABLE_WEBGL_ANTIALIAS,depth:!0,stencil:!0,premultipliedAlpha:!1,preserveDrawingBuffer:!1,powerPreference:"default",failIfMajorPerformanceCaveat:!1};t=e.getContext("webgl",n)}catch(e){return null}return t}(jo.canvas);if(!t)return console.error("This device does not support WebGL."),!1;this._queue=this.createQueue(new mo(fr.GRAPHICS)),this._cmdBuff=this.createCommandBuffer(new fo(this._queue)),this._caps.maxVertexAttributes=t.getParameter(t.MAX_VERTEX_ATTRIBS),this._caps.maxVertexUniformVectors=t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),this._caps.maxFragmentUniformVectors=t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS),this._caps.maxTextureUnits=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),this._caps.maxVertexTextureUnits=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),this._caps.maxTextureSize=t.getParameter(t.MAX_TEXTURE_SIZE),this._caps.maxCubeMapTextureSize=t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),this._caps.maxUniformBufferBindings=16;const n=t.getSupportedExtensions();let i="";if(n)for(const e of n)i+=`${e} `;const s=oH(t);s.WEBGL_debug_renderer_info?(this._renderer=t.getParameter(s.WEBGL_debug_renderer_info.UNMASKED_RENDERER_WEBGL),this._vendor=t.getParameter(s.WEBGL_debug_renderer_info.UNMASKED_VENDOR_WEBGL)):(this._renderer=t.getParameter(t.RENDERER),this._vendor=t.getParameter(t.VENDOR));const r=t.getParameter(t.VERSION);this._features.fill(!1),s.EXT_sRGB&&(this._features[Ls.FORMAT_SRGB]=!0),s.EXT_blend_minmax&&(this._features[Ls.BLEND_MINMAX]=!0),s.WEBGL_color_buffer_float&&(this._features[Ls.COLOR_FLOAT]=!0),s.EXT_color_buffer_half_float&&(this._features[Ls.COLOR_HALF_FLOAT]=!0),s.OES_texture_float&&(this._features[Ls.TEXTURE_FLOAT]=!0),s.OES_texture_half_float&&(this._features[Ls.TEXTURE_HALF_FLOAT]=!0),s.OES_texture_float_linear&&(this._features[Ls.TEXTURE_FLOAT_LINEAR]=!0),s.OES_texture_half_float_linear&&(this._features[Ls.TEXTURE_HALF_FLOAT_LINEAR]=!0),this._features[Ls.FORMAT_RGB8]=!0,s.OES_element_index_uint&&(this._features[Ls.ELEMENT_INDEX_UINT]=!0),s.ANGLE_instanced_arrays&&(this._features[Ls.INSTANCED_ARRAYS]=!0),s.WEBGL_draw_buffers&&(this._features[Ls.MULTIPLE_RENDER_TARGETS]=!0);let o="";return s.WEBGL_compressed_texture_etc1&&(this._features[Ls.FORMAT_ETC1]=!0,o+="etc1 "),s.WEBGL_compressed_texture_etc&&(this._features[Ls.FORMAT_ETC2]=!0,o+="etc2 "),s.WEBGL_compressed_texture_s3tc&&(this._features[Ls.FORMAT_DXT]=!0,o+="dxt "),s.WEBGL_compressed_texture_pvrtc&&(this._features[Ls.FORMAT_PVRTC]=!0,o+="pvrtc "),s.WEBGL_compressed_texture_astc&&(this._features[Ls.FORMAT_ASTC]=!0,o+="astc "),m("WebGL device initialized."),m(`RENDERER: ${this._renderer}`),m(`VENDOR: ${this._vendor}`),m(`VERSION: ${r}`),m(`COMPRESSED_FORMAT: ${o}`),m(`EXTENSIONS: ${i}`),!0}destroy(){this._queue&&(this._queue.destroy(),this._queue=null),this._cmdBuff&&(this._cmdBuff.destroy(),this._cmdBuff=null)}flushCommands(e){}acquire(e){}present(){const e=this._queue;this._numDrawCalls=e.numDrawCalls,this._numInstances=e.numInstances,this._numTris=e.numTris,e.clear()}createCommandBuffer(e){const t=new(e.type===gr.PRIMARY?$G:BG);return t.initialize(e),t}createSwapchain(e){const t=new aH;return this._swapchain=t,t.initialize(e),t}createBuffer(e){const t=new LG;return t.initialize(e),t}createTexture(e){const t=new iH;return t.initialize(e),t}createDescriptorSet(e){const t=new oG;return t.initialize(e),t}createShader(e){const t=new tH;return t.initialize(e),t}createInputAssembler(e){const t=new GG;return t.initialize(e),t}createRenderPass(e){const t=new QG;return t.initialize(e),t}createFramebuffer(e){const t=new UG;return t.initialize(e),t}createDescriptorSetLayout(e){const t=new HG;return t.initialize(e),t}createPipelineLayout(e){const t=new kG;return t.initialize(e),t}createPipelineState(e){const t=new KG;return t.initialize(e),t}createQueue(e){const t=new ZG;return t.initialize(e),t}getSampler(e){const t=ia.computeHash(e);return this._samplers.has(t)||this._samplers.set(t,new eH(e,t)),this._samplers.get(t)}getGlobalBarrier(e){const t=sa.computeHash(e);return this._globalBarriers.has(t)||this._globalBarriers.set(t,new sa(e,t)),this._globalBarriers.get(t)}getTextureBarrier(e){const t=ra.computeHash(e);return this._textureBarriers.has(t)||this._textureBarriers.set(t,new ra(e,t)),this._textureBarriers.get(t)}copyBuffersToTexture(e,t,n){MG(this,e,t.gpuTexture,n)}copyTextureToBuffers(e,t,n){!function(e,t,n,i){const{gl:s}=e,r=e.stateCache,o=s.createFramebuffer();s.bindFramebuffer(s.FRAMEBUFFER,o);let a=0,c=0,l=1,h=1;switch(t.glTarget){case s.TEXTURE_2D:for(let e=0;e<i.length;e++){const r=i[e];s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,t.glTarget,t.glTexture,r.texSubres.mipLevel),a=r.texOffset.x,c=r.texOffset.y,l=r.texExtent.width,h=r.texExtent.height,s.readPixels(a,c,l,h,t.glFormat,t.glType,n[e])}break;default:console.error("Unsupported GL texture type, copy texture to buffers failed.")}s.bindFramebuffer(s.FRAMEBUFFER,null),r.glFramebuffer=null,s.deleteFramebuffer(o)}(this,e.gpuTexture,t,n)}copyTexImagesToTexture(e,t,n){!function(e,t,n,i){const{gl:s}=e,r=e.stateCache.glTexUnits[e.stateCache.texUnit];r.glTexture!==n.glTexture&&(s.bindTexture(n.glTarget,n.glTexture),r.glTexture=n.glTexture);let o=0,a=0;switch(n.glTarget){case s.TEXTURE_2D:for(let e=0;e<i.length;e++){const r=i[e];s.texSubImage2D(s.TEXTURE_2D,r.texSubres.mipLevel,r.texOffset.x,r.texOffset.y,n.glFormat,n.glType,t[o++])}break;case s.TEXTURE_CUBE_MAP:for(let e=0;e<i.length;e++){const r=i[e],c=r.texSubres.baseArrayLayer+r.texSubres.layerCount;for(a=r.texSubres.baseArrayLayer;a<c;++a)s.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+a,r.texSubres.mipLevel,r.texOffset.x,r.texOffset.y,n.glFormat,n.glType,t[o++])}break;default:console.error("Unsupported GL texture type, copy buffer to texture failed.")}n.flags&Ws.GEN_MIPMAP&&n.isPowerOf2&&s.generateMipmap(n.glTarget)}(this,e,t.gpuTexture,n)}}e("WebGLDevice",cH),i.WebGLDevice=cH;class lH extends Ho{constructor(...e){super(...e),this._gpuDescriptorSet=null}get gpuDescriptorSet(){return this._gpuDescriptorSet}initialize(e){this._layout=e.layout;const{bindings:t,descriptorIndices:n,descriptorCount:i}=e.layout.gpuDescriptorSetLayout;this._buffers=Array(i).fill(null),this._textures=Array(i).fill(null),this._samplers=Array(i).fill(null);const s=[];this._gpuDescriptorSet={gpuDescriptors:s,descriptorIndices:n};for(let e=0;e<t.length;++e){const n=t[e];for(let e=0;e<n.count;e++)s.push({type:n.descriptorType,gpuBuffer:null,gpuTexture:null,gpuSampler:null})}}destroy(){this._layout=null,this._gpuDescriptorSet=null}update(){if(this._isDirty&&this._gpuDescriptorSet){const e=this._gpuDescriptorSet.gpuDescriptors;for(let t=0;t<e.length;++t)e[t].type&bo?this._buffers[t]&&(e[t].gpuBuffer=this._buffers[t].gpuBuffer):e[t].type&Eo&&(this._textures[t]&&(e[t].gpuTexture=this._textures[t].gpuTexture),this._samplers[t]&&(e[t].gpuSampler=this._samplers[t].gpuSampler));this._isDirty=!1}}}let hH;!function(e){e[e.COMPRESSED_RGB_S3TC_DXT1_EXT=33776]="COMPRESSED_RGB_S3TC_DXT1_EXT",e[e.COMPRESSED_RGBA_S3TC_DXT1_EXT=33777]="COMPRESSED_RGBA_S3TC_DXT1_EXT",e[e.COMPRESSED_RGBA_S3TC_DXT3_EXT=33778]="COMPRESSED_RGBA_S3TC_DXT3_EXT",e[e.COMPRESSED_RGBA_S3TC_DXT5_EXT=33779]="COMPRESSED_RGBA_S3TC_DXT5_EXT",e[e.COMPRESSED_SRGB_S3TC_DXT1_EXT=35916]="COMPRESSED_SRGB_S3TC_DXT1_EXT",e[e.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT=35917]="COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT",e[e.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT=35918]="COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT",e[e.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT=35919]="COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT",e[e.COMPRESSED_RGB_PVRTC_4BPPV1_IMG=35840]="COMPRESSED_RGB_PVRTC_4BPPV1_IMG",e[e.COMPRESSED_RGB_PVRTC_2BPPV1_IMG=35841]="COMPRESSED_RGB_PVRTC_2BPPV1_IMG",e[e.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG=35842]="COMPRESSED_RGBA_PVRTC_4BPPV1_IMG",e[e.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG=35843]="COMPRESSED_RGBA_PVRTC_2BPPV1_IMG",e[e.COMPRESSED_RGB_ETC1_WEBGL=36196]="COMPRESSED_RGB_ETC1_WEBGL",e[e.COMPRESSED_R11_EAC=37488]="COMPRESSED_R11_EAC",e[e.COMPRESSED_SIGNED_R11_EAC=37489]="COMPRESSED_SIGNED_R11_EAC",e[e.COMPRESSED_RG11_EAC=37490]="COMPRESSED_RG11_EAC",e[e.COMPRESSED_SIGNED_RG11_EAC=37491]="COMPRESSED_SIGNED_RG11_EAC",e[e.COMPRESSED_RGB8_ETC2=37492]="COMPRESSED_RGB8_ETC2",e[e.COMPRESSED_SRGB8_ETC2=37493]="COMPRESSED_SRGB8_ETC2",e[e.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2=37494]="COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2",e[e.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2=37495]="COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2",e[e.COMPRESSED_RGBA8_ETC2_EAC=37496]="COMPRESSED_RGBA8_ETC2_EAC",e[e.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC=37497]="COMPRESSED_SRGB8_ALPHA8_ETC2_EAC",e[e.COMPRESSED_RGBA_ASTC_4x4_KHR=37808]="COMPRESSED_RGBA_ASTC_4x4_KHR",e[e.COMPRESSED_RGBA_ASTC_5x4_KHR=37809]="COMPRESSED_RGBA_ASTC_5x4_KHR",e[e.COMPRESSED_RGBA_ASTC_5x5_KHR=37810]="COMPRESSED_RGBA_ASTC_5x5_KHR",e[e.COMPRESSED_RGBA_ASTC_6x5_KHR=37811]="COMPRESSED_RGBA_ASTC_6x5_KHR",e[e.COMPRESSED_RGBA_ASTC_6x6_KHR=37812]="COMPRESSED_RGBA_ASTC_6x6_KHR",e[e.COMPRESSED_RGBA_ASTC_8x5_KHR=37813]="COMPRESSED_RGBA_ASTC_8x5_KHR",e[e.COMPRESSED_RGBA_ASTC_8x6_KHR=37814]="COMPRESSED_RGBA_ASTC_8x6_KHR",e[e.COMPRESSED_RGBA_ASTC_8x8_KHR=37815]="COMPRESSED_RGBA_ASTC_8x8_KHR",e[e.COMPRESSED_RGBA_ASTC_10x5_KHR=37816]="COMPRESSED_RGBA_ASTC_10x5_KHR",e[e.COMPRESSED_RGBA_ASTC_10x6_KHR=37817]="COMPRESSED_RGBA_ASTC_10x6_KHR",e[e.COMPRESSED_RGBA_ASTC_10x8_KHR=37818]="COMPRESSED_RGBA_ASTC_10x8_KHR",e[e.COMPRESSED_RGBA_ASTC_10x10_KHR=37819]="COMPRESSED_RGBA_ASTC_10x10_KHR",e[e.COMPRESSED_RGBA_ASTC_12x10_KHR=37820]="COMPRESSED_RGBA_ASTC_12x10_KHR",e[e.COMPRESSED_RGBA_ASTC_12x12_KHR=37821]="COMPRESSED_RGBA_ASTC_12x12_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR=37840]="COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR=37841]="COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR=37842]="COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR=37843]="COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR=37844]="COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR=37845]="COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR=37846]="COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR=37847]="COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR=37848]="COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR=37849]="COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR=37850]="COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR=37851]="COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR=37852]="COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR=37853]="COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR"}(hH||(hH={}));class _H{static get instance(){return _H._instance}static setInstance(e){_H._instance=e}}_H._instance=null;const uH=[10497,33648,33071,33071],pH=new Float32Array(4);function dH(e,t){switch(e){case zs.R8:return t.UNSIGNED_BYTE;case zs.R8SN:return t.BYTE;case zs.R8UI:return t.UNSIGNED_BYTE;case zs.R8I:return t.BYTE;case zs.R16F:return t.HALF_FLOAT;case zs.R16UI:return t.UNSIGNED_SHORT;case zs.R16I:return t.SHORT;case zs.R32F:return t.FLOAT;case zs.R32UI:return t.UNSIGNED_INT;case zs.R32I:return t.INT;case zs.RG8:return t.UNSIGNED_BYTE;case zs.RG8SN:return t.BYTE;case zs.RG8UI:return t.UNSIGNED_BYTE;case zs.RG8I:return t.BYTE;case zs.RG16F:return t.HALF_FLOAT;case zs.RG16UI:return t.UNSIGNED_SHORT;case zs.RG16I:return t.SHORT;case zs.RG32F:return t.FLOAT;case zs.RG32UI:return t.UNSIGNED_INT;case zs.RG32I:return t.INT;case zs.RGB8:case zs.SRGB8:return t.UNSIGNED_BYTE;case zs.RGB8SN:return t.BYTE;case zs.RGB8UI:return t.UNSIGNED_BYTE;case zs.RGB8I:return t.BYTE;case zs.RGB16F:return t.HALF_FLOAT;case zs.RGB16UI:return t.UNSIGNED_SHORT;case zs.RGB16I:return t.SHORT;case zs.RGB32F:return t.FLOAT;case zs.RGB32UI:return t.UNSIGNED_INT;case zs.RGB32I:return t.INT;case zs.BGRA8:case zs.RGBA8:case zs.SRGB8_A8:return t.UNSIGNED_BYTE;case zs.RGBA8SN:return t.BYTE;case zs.RGBA8UI:return t.UNSIGNED_BYTE;case zs.RGBA8I:return t.BYTE;case zs.RGBA16F:return t.HALF_FLOAT;case zs.RGBA16UI:return t.UNSIGNED_SHORT;case zs.RGBA16I:return t.SHORT;case zs.RGBA32F:return t.FLOAT;case zs.RGBA32UI:return t.UNSIGNED_INT;case zs.RGBA32I:return t.INT;case zs.R5G6B5:return t.UNSIGNED_SHORT_5_6_5;case zs.R11G11B10F:return t.UNSIGNED_INT_10F_11F_11F_REV;case zs.RGB5A1:return t.UNSIGNED_SHORT_5_5_5_1;case zs.RGBA4:return t.UNSIGNED_SHORT_4_4_4_4;case zs.RGB10A2:case zs.RGB10A2UI:return t.UNSIGNED_INT_2_10_10_10_REV;case zs.RGB9E5:case zs.DEPTH:return t.FLOAT;case zs.DEPTH_STENCIL:return t.UNSIGNED_INT_24_8;case zs.BC1:case zs.BC1_SRGB:case zs.BC2:case zs.BC2_SRGB:case zs.BC3:case zs.BC3_SRGB:case zs.BC4:return t.UNSIGNED_BYTE;case zs.BC4_SNORM:return t.BYTE;case zs.BC5:return t.UNSIGNED_BYTE;case zs.BC5_SNORM:return t.BYTE;case zs.BC6H_SF16:case zs.BC6H_UF16:return t.FLOAT;case zs.BC7:case zs.BC7_SRGB:case zs.ETC_RGB8:case zs.ETC2_RGB8:case zs.ETC2_SRGB8:case zs.ETC2_RGB8_A1:case zs.ETC2_SRGB8_A1:case zs.EAC_R11:return t.UNSIGNED_BYTE;case zs.EAC_R11SN:return t.BYTE;case zs.EAC_RG11:return t.UNSIGNED_BYTE;case zs.EAC_RG11SN:return t.BYTE;case zs.PVRTC_RGB2:case zs.PVRTC_RGBA2:case zs.PVRTC_RGB4:case zs.PVRTC_RGBA4:case zs.PVRTC2_2BPP:case zs.PVRTC2_4BPP:return t.UNSIGNED_BYTE;case zs.ASTC_RGBA_4X4:case zs.ASTC_RGBA_5X4:case zs.ASTC_RGBA_5X5:case zs.ASTC_RGBA_6X5:case zs.ASTC_RGBA_6X6:case zs.ASTC_RGBA_8X5:case zs.ASTC_RGBA_8X6:case zs.ASTC_RGBA_8X8:case zs.ASTC_RGBA_10X5:case zs.ASTC_RGBA_10X6:case zs.ASTC_RGBA_10X8:case zs.ASTC_RGBA_10X10:case zs.ASTC_RGBA_12X10:case zs.ASTC_RGBA_12X12:case zs.ASTC_SRGBA_4X4:case zs.ASTC_SRGBA_5X4:case zs.ASTC_SRGBA_5X5:case zs.ASTC_SRGBA_6X5:case zs.ASTC_SRGBA_6X6:case zs.ASTC_SRGBA_8X5:case zs.ASTC_SRGBA_8X6:case zs.ASTC_SRGBA_8X8:case zs.ASTC_SRGBA_10X5:case zs.ASTC_SRGBA_10X6:case zs.ASTC_SRGBA_10X8:case zs.ASTC_SRGBA_10X10:case zs.ASTC_SRGBA_12X10:case zs.ASTC_SRGBA_12X12:default:return t.UNSIGNED_BYTE}}function fH(e,t){switch(e){case Bs.BOOL:return t.BOOL;case Bs.BOOL2:return t.BOOL_VEC2;case Bs.BOOL3:return t.BOOL_VEC3;case Bs.BOOL4:return t.BOOL_VEC4;case Bs.INT:return t.INT;case Bs.INT2:return t.INT_VEC2;case Bs.INT3:return t.INT_VEC3;case Bs.INT4:return t.INT_VEC4;case Bs.UINT:return t.UNSIGNED_INT;case Bs.FLOAT:return t.FLOAT;case Bs.FLOAT2:return t.FLOAT_VEC2;case Bs.FLOAT3:return t.FLOAT_VEC3;case Bs.FLOAT4:return t.FLOAT_VEC4;case Bs.MAT2:return t.FLOAT_MAT2;case Bs.MAT2X3:return t.FLOAT_MAT2x3;case Bs.MAT2X4:return t.FLOAT_MAT2x4;case Bs.MAT3X2:return t.FLOAT_MAT3x2;case Bs.MAT3:return t.FLOAT_MAT3;case Bs.MAT3X4:return t.FLOAT_MAT3x4;case Bs.MAT4X2:return t.FLOAT_MAT4x2;case Bs.MAT4X3:return t.FLOAT_MAT4x3;case Bs.MAT4:return t.FLOAT_MAT4;case Bs.SAMPLER2D:return t.SAMPLER_2D;case Bs.SAMPLER2D_ARRAY:return t.SAMPLER_2D_ARRAY;case Bs.SAMPLER3D:return t.SAMPLER_3D;case Bs.SAMPLER_CUBE:return t.SAMPLER_CUBE;default:return console.error("Unsupported GLType, convert to GL type failed."),Bs.UNKNOWN}}function mH(e,t){switch(e){case t.BOOL:return Bs.BOOL;case t.BOOL_VEC2:return Bs.BOOL2;case t.BOOL_VEC3:return Bs.BOOL3;case t.BOOL_VEC4:return Bs.BOOL4;case t.INT:return Bs.INT;case t.INT_VEC2:return Bs.INT2;case t.INT_VEC3:return Bs.INT3;case t.INT_VEC4:return Bs.INT4;case t.UNSIGNED_INT:return Bs.UINT;case t.UNSIGNED_INT_VEC2:return Bs.UINT2;case t.UNSIGNED_INT_VEC3:return Bs.UINT3;case t.UNSIGNED_INT_VEC4:return Bs.UINT4;case t.FLOAT:return Bs.FLOAT;case t.FLOAT_VEC2:return Bs.FLOAT2;case t.FLOAT_VEC3:return Bs.FLOAT3;case t.FLOAT_VEC4:return Bs.FLOAT4;case t.FLOAT_MAT2:return Bs.MAT2;case t.FLOAT_MAT2x3:return Bs.MAT2X3;case t.FLOAT_MAT2x4:return Bs.MAT2X4;case t.FLOAT_MAT3x2:return Bs.MAT3X2;case t.FLOAT_MAT3:return Bs.MAT3;case t.FLOAT_MAT3x4:return Bs.MAT3X4;case t.FLOAT_MAT4x2:return Bs.MAT4X2;case t.FLOAT_MAT4x3:return Bs.MAT4X3;case t.FLOAT_MAT4:return Bs.MAT4;case t.SAMPLER_2D:return Bs.SAMPLER2D;case t.SAMPLER_2D_ARRAY:return Bs.SAMPLER2D_ARRAY;case t.SAMPLER_3D:return Bs.SAMPLER3D;case t.SAMPLER_CUBE:return Bs.SAMPLER_CUBE;default:return console.error("Unsupported GLType, convert to Type failed."),Bs.UNKNOWN}}function gH(e,t){switch(e){case t.BOOL:return 4;case t.BOOL_VEC2:return 8;case t.BOOL_VEC3:return 12;case t.BOOL_VEC4:return 16;case t.INT:return 4;case t.INT_VEC2:return 8;case t.INT_VEC3:return 12;case t.INT_VEC4:return 16;case t.UNSIGNED_INT:return 4;case t.UNSIGNED_INT_VEC2:return 8;case t.UNSIGNED_INT_VEC3:return 12;case t.UNSIGNED_INT_VEC4:return 16;case t.FLOAT:return 4;case t.FLOAT_VEC2:return 8;case t.FLOAT_VEC3:return 12;case t.FLOAT_VEC4:case t.FLOAT_MAT2:return 16;case t.FLOAT_MAT2x3:return 24;case t.FLOAT_MAT2x4:return 32;case t.FLOAT_MAT3x2:return 24;case t.FLOAT_MAT3:return 36;case t.FLOAT_MAT3x4:return 48;case t.FLOAT_MAT4x2:return 32;case t.FLOAT_MAT4x3:return 48;case t.FLOAT_MAT4:return 64;case t.SAMPLER_2D:case t.SAMPLER_2D_ARRAY:case t.SAMPLER_2D_ARRAY_SHADOW:case t.SAMPLER_3D:case t.SAMPLER_CUBE:case t.INT_SAMPLER_2D:case t.INT_SAMPLER_2D_ARRAY:case t.INT_SAMPLER_3D:case t.INT_SAMPLER_CUBE:case t.UNSIGNED_INT_SAMPLER_2D:case t.UNSIGNED_INT_SAMPLER_2D_ARRAY:case t.UNSIGNED_INT_SAMPLER_3D:case t.UNSIGNED_INT_SAMPLER_CUBE:return 4;default:return console.error("Unsupported GLType, get type failed."),0}}function vH(e,t){switch(e){case t.FLOAT_MAT2:case t.FLOAT_MAT2x3:case t.FLOAT_MAT2x4:return 2;case t.FLOAT_MAT3x2:case t.FLOAT_MAT3:case t.FLOAT_MAT3x4:return 3;case t.FLOAT_MAT4x2:case t.FLOAT_MAT4x3:case t.FLOAT_MAT4:return 4;default:return 1}}const yH=[512,513,514,515,516,517,518,519],xH=[0,7680,7681,7682,7683,5386,34055,34056],SH=[32774,32778,32779,32775,32776],CH=[0,1,770,772,771,773,768,774,769,775,776,32769,32770,32771,32772];let TH;!function(e){e[e.BEGIN_RENDER_PASS=0]="BEGIN_RENDER_PASS",e[e.END_RENDER_PASS=1]="END_RENDER_PASS",e[e.BIND_STATES=2]="BIND_STATES",e[e.DRAW=3]="DRAW",e[e.UPDATE_BUFFER=4]="UPDATE_BUFFER",e[e.COPY_BUFFER_TO_TEXTURE=5]="COPY_BUFFER_TO_TEXTURE",e[e.COUNT=6]="COUNT"}(TH||(TH={}));class bH{constructor(e){this.cmdType=void 0,this.refCount=0,this.cmdType=e}}class EH extends bH{constructor(){super(TH.BEGIN_RENDER_PASS),this.gpuRenderPass=null,this.gpuFramebuffer=null,this.renderArea=new Tr,this.clearColors=[],this.clearDepth=1,this.clearStencil=0}clear(){this.gpuFramebuffer=null,this.clearColors.length=0}}class AH extends bH{constructor(){super(TH.BIND_STATES),this.gpuPipelineState=null,this.gpuInputAssembler=null,this.gpuDescriptorSets=[],this.dynamicOffsets=[],this.dynamicStates=new So}clear(){this.gpuPipelineState=null,this.gpuInputAssembler=null,this.gpuDescriptorSets.length=0,this.dynamicOffsets.length=0}}class PH extends bH{constructor(){super(TH.DRAW),this.drawInfo=new Fr}clear(){}}class wH extends bH{constructor(){super(TH.UPDATE_BUFFER),this.gpuBuffer=null,this.buffer=null,this.offset=0,this.size=0}clear(){this.gpuBuffer=null,this.buffer=null}}class IH extends bH{constructor(){super(TH.COPY_BUFFER_TO_TEXTURE),this.gpuTexture=null,this.buffers=[],this.regions=[]}clear(){this.gpuTexture=null,this.buffers.length=0,this.regions.length=0}}class RH{constructor(){this.cmds=new De(1),this.beginRenderPassCmds=new De(1),this.bindStatesCmds=new De(1),this.drawCmds=new De(1),this.updateBufferCmds=new De(1),this.copyBufferToTextureCmds=new De(1)}clearCmds(e){this.beginRenderPassCmds.length&&(e.beginRenderPassCmdPool.freeCmds(this.beginRenderPassCmds),this.beginRenderPassCmds.clear()),this.bindStatesCmds.length&&(e.bindStatesCmdPool.freeCmds(this.bindStatesCmds),this.bindStatesCmds.clear()),this.drawCmds.length&&(e.drawCmdPool.freeCmds(this.drawCmds),this.drawCmds.clear()),this.updateBufferCmds.length&&(e.updateBufferCmdPool.freeCmds(this.updateBufferCmds),this.updateBufferCmds.clear()),this.copyBufferToTextureCmds.length&&(e.copyBufferToTextureCmdPool.freeCmds(this.copyBufferToTextureCmds),this.copyBufferToTextureCmds.clear()),this.cmds.clear()}}function DH(e,t,n,i,s){if(t.usage&Us.INDIRECT){t.indirects.clearDraws();const e=n.drawInfos;for(let n=0;n<e.length;++n)t.indirects.setDrawInfo(i+n,e[n])}else{const r=n,{gl:o}=e,a=e.stateCache;switch(t.glTarget){case o.ARRAY_BUFFER:e.extensions.useVAO&&a.glVAO&&(o.bindVertexArray(null),a.glVAO=null),NH.gpuInputAssembler=null,a.glArrayBuffer!==t.glBuffer&&(o.bindBuffer(o.ARRAY_BUFFER,t.glBuffer),a.glArrayBuffer=t.glBuffer),s===r.byteLength?o.bufferSubData(t.glTarget,i,r):o.bufferSubData(t.glTarget,i,r.slice(0,s));break;case o.ELEMENT_ARRAY_BUFFER:e.extensions.useVAO&&a.glVAO&&(o.bindVertexArray(null),a.glVAO=null),NH.gpuInputAssembler=null,a.glElementArrayBuffer!==t.glBuffer&&(o.bindBuffer(o.ELEMENT_ARRAY_BUFFER,t.glBuffer),a.glElementArrayBuffer=t.glBuffer),s===r.byteLength?o.bufferSubData(t.glTarget,i,r):o.bufferSubData(t.glTarget,i,r.slice(0,s));break;case o.UNIFORM_BUFFER:a.glUniformBuffer!==t.glBuffer&&(o.bindBuffer(o.UNIFORM_BUFFER,t.glBuffer),a.glUniformBuffer=t.glBuffer),s===r.byteLength?o.bufferSubData(t.glTarget,i,r):o.bufferSubData(t.glTarget,i,new Float32Array(r,0,s/4));break;default:console.error("Unsupported BufferType, update buffer failed.")}}}function OH(e,t){const{gl:n}=e;t.glInternalFmt=function(e,t){switch(e){case zs.A8:return t.ALPHA;case zs.L8:return t.LUMINANCE;case zs.LA8:return t.LUMINANCE_ALPHA;case zs.R8:return t.R8;case zs.R8SN:return t.R8_SNORM;case zs.R8UI:return t.R8UI;case zs.R8I:return t.R8I;case zs.RG8:return t.RG8;case zs.RG8SN:return t.RG8_SNORM;case zs.RG8UI:return t.RG8UI;case zs.RG8I:return t.RG8I;case zs.RGB8:return t.RGB8;case zs.RGB8SN:return t.RGB8_SNORM;case zs.RGB8UI:return t.RGB8UI;case zs.RGB8I:return t.RGB8I;case zs.BGRA8:case zs.RGBA8:return t.RGBA8;case zs.RGBA8SN:return t.RGBA8_SNORM;case zs.RGBA8UI:return t.RGBA8UI;case zs.RGBA8I:return t.RGBA8I;case zs.R16I:return t.R16I;case zs.R16UI:return t.R16UI;case zs.R16F:return t.R16F;case zs.RG16I:return t.RG16I;case zs.RG16UI:return t.RG16UI;case zs.RG16F:return t.RG16F;case zs.RGB16I:return t.RGB16I;case zs.RGB16UI:return t.RGB16UI;case zs.RGB16F:return t.RGB16F;case zs.RGBA16I:return t.RGBA16I;case zs.RGBA16UI:return t.RGBA16UI;case zs.RGBA16F:return t.RGBA16F;case zs.R32I:return t.R32I;case zs.R32UI:return t.R32UI;case zs.R32F:return t.R32F;case zs.RG32I:return t.RG32I;case zs.RG32UI:return t.RG32UI;case zs.RG32F:return t.RG32F;case zs.RGB32I:return t.RGB32I;case zs.RGB32UI:return t.RGB32UI;case zs.RGB32F:return t.RGB32F;case zs.RGBA32I:return t.RGBA32I;case zs.RGBA32UI:return t.RGBA32UI;case zs.RGBA32F:return t.RGBA32F;case zs.R5G6B5:return t.RGB565;case zs.RGB5A1:return t.RGB5_A1;case zs.RGBA4:return t.RGBA4;case zs.SRGB8:return t.SRGB8;case zs.SRGB8_A8:return t.SRGB8_ALPHA8;case zs.RGB10A2:return t.RGB10_A2;case zs.RGB10A2UI:return t.RGB10_A2UI;case zs.R11G11B10F:return t.R11F_G11F_B10F;case zs.DEPTH:return t.DEPTH_COMPONENT32F;case zs.DEPTH_STENCIL:return t.DEPTH24_STENCIL8;case zs.BC1:return hH.COMPRESSED_RGB_S3TC_DXT1_EXT;case zs.BC1_ALPHA:return hH.COMPRESSED_RGBA_S3TC_DXT1_EXT;case zs.BC1_SRGB:return hH.COMPRESSED_SRGB_S3TC_DXT1_EXT;case zs.BC1_SRGB_ALPHA:return hH.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;case zs.BC2:return hH.COMPRESSED_RGBA_S3TC_DXT3_EXT;case zs.BC2_SRGB:return hH.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;case zs.BC3:return hH.COMPRESSED_RGBA_S3TC_DXT5_EXT;case zs.BC3_SRGB:return hH.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;case zs.ETC_RGB8:return hH.COMPRESSED_RGB_ETC1_WEBGL;case zs.ETC2_RGB8:return hH.COMPRESSED_RGB8_ETC2;case zs.ETC2_SRGB8:return hH.COMPRESSED_SRGB8_ETC2;case zs.ETC2_RGB8_A1:return hH.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2;case zs.ETC2_SRGB8_A1:return hH.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2;case zs.ETC2_RGBA8:return hH.COMPRESSED_RGBA8_ETC2_EAC;case zs.ETC2_SRGB8_A8:return hH.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC;case zs.EAC_R11:return hH.COMPRESSED_R11_EAC;case zs.EAC_R11SN:return hH.COMPRESSED_SIGNED_R11_EAC;case zs.EAC_RG11:return hH.COMPRESSED_RG11_EAC;case zs.EAC_RG11SN:return hH.COMPRESSED_SIGNED_RG11_EAC;case zs.PVRTC_RGB2:return hH.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;case zs.PVRTC_RGBA2:return hH.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;case zs.PVRTC_RGB4:return hH.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;case zs.PVRTC_RGBA4:return hH.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;case zs.ASTC_RGBA_4X4:return hH.COMPRESSED_RGBA_ASTC_4x4_KHR;case zs.ASTC_RGBA_5X4:return hH.COMPRESSED_RGBA_ASTC_5x4_KHR;case zs.ASTC_RGBA_5X5:return hH.COMPRESSED_RGBA_ASTC_5x5_KHR;case zs.ASTC_RGBA_6X5:return hH.COMPRESSED_RGBA_ASTC_6x5_KHR;case zs.ASTC_RGBA_6X6:return hH.COMPRESSED_RGBA_ASTC_6x6_KHR;case zs.ASTC_RGBA_8X5:return hH.COMPRESSED_RGBA_ASTC_8x5_KHR;case zs.ASTC_RGBA_8X6:return hH.COMPRESSED_RGBA_ASTC_8x6_KHR;case zs.ASTC_RGBA_8X8:return hH.COMPRESSED_RGBA_ASTC_8x8_KHR;case zs.ASTC_RGBA_10X5:return hH.COMPRESSED_RGBA_ASTC_10x5_KHR;case zs.ASTC_RGBA_10X6:return hH.COMPRESSED_RGBA_ASTC_10x6_KHR;case zs.ASTC_RGBA_10X8:return hH.COMPRESSED_RGBA_ASTC_10x8_KHR;case zs.ASTC_RGBA_10X10:return hH.COMPRESSED_RGBA_ASTC_10x10_KHR;case zs.ASTC_RGBA_12X10:return hH.COMPRESSED_RGBA_ASTC_12x10_KHR;case zs.ASTC_RGBA_12X12:return hH.COMPRESSED_RGBA_ASTC_12x12_KHR;case zs.ASTC_SRGBA_4X4:return hH.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR;case zs.ASTC_SRGBA_5X4:return hH.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR;case zs.ASTC_SRGBA_5X5:return hH.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR;case zs.ASTC_SRGBA_6X5:return hH.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR;case zs.ASTC_SRGBA_6X6:return hH.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR;case zs.ASTC_SRGBA_8X5:return hH.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR;case zs.ASTC_SRGBA_8X6:return hH.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR;case zs.ASTC_SRGBA_8X8:return hH.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR;case zs.ASTC_SRGBA_10X5:return hH.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR;case zs.ASTC_SRGBA_10X6:return hH.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR;case zs.ASTC_SRGBA_10X8:return hH.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR;case zs.ASTC_SRGBA_10X10:return hH.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR;case zs.ASTC_SRGBA_12X10:return hH.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR;case zs.ASTC_SRGBA_12X12:return hH.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR;default:return console.error("Unsupported Format, convert to WebGL internal format failed."),t.RGBA}}(t.format,n),t.glFormat=function(e,t){switch(e){case zs.A8:return t.ALPHA;case zs.L8:return t.LUMINANCE;case zs.LA8:return t.LUMINANCE_ALPHA;case zs.R8:case zs.R8SN:return t.RED;case zs.R8UI:case zs.R8I:return t.RED;case zs.RG8:case zs.RG8SN:case zs.RG8UI:case zs.RG8I:return t.RG;case zs.RGB8:case zs.RGB8SN:case zs.RGB8UI:case zs.RGB8I:return t.RGB;case zs.BGRA8:case zs.RGBA8:case zs.RGBA8SN:case zs.RGBA8UI:case zs.RGBA8I:return t.RGBA;case zs.R16UI:case zs.R16I:case zs.R16F:return t.RED;case zs.RG16UI:case zs.RG16I:case zs.RG16F:return t.RG;case zs.RGB16UI:case zs.RGB16I:case zs.RGB16F:return t.RGB;case zs.RGBA16UI:case zs.RGBA16I:case zs.RGBA16F:return t.RGBA;case zs.R32UI:case zs.R32I:case zs.R32F:return t.RED;case zs.RG32UI:case zs.RG32I:case zs.RG32F:return t.RG;case zs.RGB32UI:case zs.RGB32I:case zs.RGB32F:return t.RGB;case zs.RGBA32UI:case zs.RGBA32I:case zs.RGBA32F:case zs.RGB10A2:return t.RGBA;case zs.R11G11B10F:case zs.R5G6B5:return t.RGB;case zs.RGB5A1:case zs.RGBA4:return t.RGBA;case zs.SRGB8:return t.RGB;case zs.SRGB8_A8:return t.RGBA;case zs.DEPTH:return t.DEPTH_COMPONENT;case zs.DEPTH_STENCIL:return t.DEPTH_STENCIL;case zs.BC1:return hH.COMPRESSED_RGB_S3TC_DXT1_EXT;case zs.BC1_ALPHA:return hH.COMPRESSED_RGBA_S3TC_DXT1_EXT;case zs.BC1_SRGB:return hH.COMPRESSED_SRGB_S3TC_DXT1_EXT;case zs.BC1_SRGB_ALPHA:return hH.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;case zs.BC2:return hH.COMPRESSED_RGBA_S3TC_DXT3_EXT;case zs.BC2_SRGB:return hH.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;case zs.BC3:return hH.COMPRESSED_RGBA_S3TC_DXT5_EXT;case zs.BC3_SRGB:return hH.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;case zs.ETC_RGB8:return hH.COMPRESSED_RGB_ETC1_WEBGL;case zs.ETC2_RGB8:return hH.COMPRESSED_RGB8_ETC2;case zs.ETC2_SRGB8:return hH.COMPRESSED_SRGB8_ETC2;case zs.ETC2_RGB8_A1:return hH.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2;case zs.ETC2_SRGB8_A1:return hH.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2;case zs.ETC2_RGBA8:return hH.COMPRESSED_RGBA8_ETC2_EAC;case zs.ETC2_SRGB8_A8:return hH.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC;case zs.EAC_R11:return hH.COMPRESSED_R11_EAC;case zs.EAC_R11SN:return hH.COMPRESSED_SIGNED_R11_EAC;case zs.EAC_RG11:return hH.COMPRESSED_RG11_EAC;case zs.EAC_RG11SN:return hH.COMPRESSED_SIGNED_RG11_EAC;case zs.PVRTC_RGB2:return hH.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;case zs.PVRTC_RGBA2:return hH.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;case zs.PVRTC_RGB4:return hH.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;case zs.PVRTC_RGBA4:return hH.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;case zs.ASTC_RGBA_4X4:return hH.COMPRESSED_RGBA_ASTC_4x4_KHR;case zs.ASTC_RGBA_5X4:return hH.COMPRESSED_RGBA_ASTC_5x4_KHR;case zs.ASTC_RGBA_5X5:return hH.COMPRESSED_RGBA_ASTC_5x5_KHR;case zs.ASTC_RGBA_6X5:return hH.COMPRESSED_RGBA_ASTC_6x5_KHR;case zs.ASTC_RGBA_6X6:return hH.COMPRESSED_RGBA_ASTC_6x6_KHR;case zs.ASTC_RGBA_8X5:return hH.COMPRESSED_RGBA_ASTC_8x5_KHR;case zs.ASTC_RGBA_8X6:return hH.COMPRESSED_RGBA_ASTC_8x6_KHR;case zs.ASTC_RGBA_8X8:return hH.COMPRESSED_RGBA_ASTC_8x8_KHR;case zs.ASTC_RGBA_10X5:return hH.COMPRESSED_RGBA_ASTC_10x5_KHR;case zs.ASTC_RGBA_10X6:return hH.COMPRESSED_RGBA_ASTC_10x6_KHR;case zs.ASTC_RGBA_10X8:return hH.COMPRESSED_RGBA_ASTC_10x8_KHR;case zs.ASTC_RGBA_10X10:return hH.COMPRESSED_RGBA_ASTC_10x10_KHR;case zs.ASTC_RGBA_12X10:return hH.COMPRESSED_RGBA_ASTC_12x10_KHR;case zs.ASTC_RGBA_12X12:return hH.COMPRESSED_RGBA_ASTC_12x12_KHR;case zs.ASTC_SRGBA_4X4:return hH.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR;case zs.ASTC_SRGBA_5X4:return hH.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR;case zs.ASTC_SRGBA_5X5:return hH.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR;case zs.ASTC_SRGBA_6X5:return hH.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR;case zs.ASTC_SRGBA_6X6:return hH.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR;case zs.ASTC_SRGBA_8X5:return hH.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR;case zs.ASTC_SRGBA_8X6:return hH.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR;case zs.ASTC_SRGBA_8X8:return hH.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR;case zs.ASTC_SRGBA_10X5:return hH.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR;case zs.ASTC_SRGBA_10X6:return hH.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR;case zs.ASTC_SRGBA_10X8:return hH.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR;case zs.ASTC_SRGBA_10X10:return hH.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR;case zs.ASTC_SRGBA_12X10:return hH.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR;case zs.ASTC_SRGBA_12X12:return hH.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR;default:return console.error("Unsupported Format, convert to WebGL format failed."),t.RGBA}}(t.format,n),t.glType=dH(t.format,n);let i=t.width,s=t.height;switch(t.type){case Vs.TEX2D:{if(t.glTarget=n.TEXTURE_2D,t.isSwapchainTexture)break;const r=Math.max(i,s);if(r>e.capabilities.maxTextureSize&&E(9100,r,e.capabilities.maxTextureSize),t.samples===qs.ONE){if(t.glTexture=n.createTexture(),t.size>0){const r=e.stateCache.glTexUnits[e.stateCache.texUnit];if(r.glTexture!==t.glTexture&&(n.bindTexture(n.TEXTURE_2D,t.glTexture),r.glTexture=t.glTexture),To[t.format].isCompressed)for(let e=0;e<t.mipLevel;++e){const r=Io(t.format,i,s,1),o=new Uint8Array(r);n.compressedTexImage2D(n.TEXTURE_2D,e,t.glInternalFmt,i,s,0,o),i=Math.max(1,i>>1),s=Math.max(1,s>>1)}else n.texStorage2D(n.TEXTURE_2D,t.mipLevel,t.glInternalFmt,i,s)}}else t.glRenderbuffer=n.createRenderbuffer(),t.size>0&&(e.stateCache.glRenderbuffer!==t.glRenderbuffer&&(n.bindRenderbuffer(n.RENDERBUFFER,t.glRenderbuffer),e.stateCache.glRenderbuffer=t.glRenderbuffer),n.renderbufferStorageMultisample(n.RENDERBUFFER,t.samples,t.glInternalFmt,t.width,t.height));break}case Vs.CUBE:{t.glTarget=n.TEXTURE_CUBE_MAP;const r=Math.max(i,s);if(r>e.capabilities.maxCubeMapTextureSize&&E(9100,r,e.capabilities.maxTextureSize),t.glTexture=n.createTexture(),t.size>0){const r=e.stateCache.glTexUnits[e.stateCache.texUnit];if(r.glTexture!==t.glTexture&&(n.bindTexture(n.TEXTURE_CUBE_MAP,t.glTexture),r.glTexture=t.glTexture),To[t.format].isCompressed)for(let e=0;e<t.mipLevel;++e){const r=Io(t.format,i,s,1),o=new Uint8Array(r);for(let r=0;r<6;++r)n.compressedTexImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+r,e,t.glInternalFmt,i,s,0,o);i=Math.max(1,i>>1),s=Math.max(1,s>>1)}else n.texStorage2D(n.TEXTURE_CUBE_MAP,t.mipLevel,t.glInternalFmt,i,s)}break}default:console.error("Unsupported TextureType, create texture failed."),t.type=Vs.TEX2D,t.glTarget=n.TEXTURE_2D}}function MH(e,t){const{gl:n}=e;if(t.glTexture){const i=e.stateCache.glTexUnits;let s=e.stateCache.texUnit;n.deleteTexture(t.glTexture);for(let e=0;e<i.length;++e)i[e].glTexture===t.glTexture&&(n.activeTexture(n.TEXTURE0+e),s=e,n.bindTexture(t.glTarget,null),i[e].glTexture=null);e.stateCache.texUnit=s,t.glTexture=null}if(t.glRenderbuffer){let i=e.stateCache.glRenderbuffer;n.deleteRenderbuffer(t.glRenderbuffer),i===t.glRenderbuffer&&(n.bindRenderbuffer(n.RENDERBUFFER,null),i=null),t.glRenderbuffer=null}}const NH={gpuPipelineState:null,gpuInputAssembler:null,glPrimitive:0,invalidateAttachments:[]};function LH(e,t,n,i,s,r,o){const{gl:a}=e,c=e.stateCache;let l=0;if(n&&t){c.glFramebuffer!==n.glFramebuffer&&(a.bindFramebuffer(a.FRAMEBUFFER,n.glFramebuffer),c.glFramebuffer=n.glFramebuffer),c.viewport.left===i.x&&c.viewport.top===i.y&&c.viewport.width===i.width&&c.viewport.height===i.height||(a.viewport(i.x,i.y,i.width,i.height),c.viewport.left=i.x,c.viewport.top=i.y,c.viewport.width=i.width,c.viewport.height=i.height),c.scissorRect.x===i.x&&c.scissorRect.y===i.y&&c.scissorRect.width===i.width&&c.scissorRect.height===i.height||(a.scissor(i.x,i.y,i.width,i.height),c.scissorRect.x=i.x,c.scissorRect.y=i.y,c.scissorRect.width=i.width,c.scissorRect.height=i.height),NH.invalidateAttachments.length=0;for(let e=0;e<s.length;++e){const i=t.colorAttachments[e];if(i.format!==zs.UNKNOWN)switch(i.loadOp){case ir.LOAD:break;case ir.CLEAR:if(c.bs.targets[0].blendColorMask!==er.ALL&&a.colorMask(!0,!0,!0,!0),n.isOffscreen)pH[0]=s[e].x,pH[1]=s[e].y,pH[2]=s[e].z,pH[3]=s[e].w,a.clearBufferfv(a.COLOR,e,pH);else{const e=s[0];a.clearColor(e.x,e.y,e.z,e.w),l|=a.COLOR_BUFFER_BIT}break;case ir.DISCARD:NH.invalidateAttachments.push(a.COLOR_ATTACHMENT0+e)}}if(t.depthStencilAttachment&&t.depthStencilAttachment.format!==zs.UNKNOWN){switch(t.depthStencilAttachment.depthLoadOp){case ir.LOAD:break;case ir.CLEAR:c.dss.depthWrite||a.depthMask(!0),a.clearDepth(r),l|=a.DEPTH_BUFFER_BIT;break;case ir.DISCARD:NH.invalidateAttachments.push(a.DEPTH_ATTACHMENT)}if(To[t.depthStencilAttachment.format].hasStencil)switch(t.depthStencilAttachment.stencilLoadOp){case ir.LOAD:break;case ir.CLEAR:c.dss.stencilWriteMaskFront||a.stencilMaskSeparate(a.FRONT,65535),c.dss.stencilWriteMaskBack||a.stencilMaskSeparate(a.BACK,65535),a.clearStencil(o),l|=a.STENCIL_BUFFER_BIT;break;case ir.DISCARD:NH.invalidateAttachments.push(a.STENCIL_ATTACHMENT)}}if(n.glFramebuffer&&NH.invalidateAttachments.length&&a.invalidateFramebuffer(a.FRAMEBUFFER,NH.invalidateAttachments),l&&a.clear(l),l&a.COLOR_BUFFER_BIT){const e=c.bs.targets[0].blendColorMask;if(e!==er.ALL){const t=(e&er.R)!==er.NONE,n=(e&er.G)!==er.NONE,i=(e&er.B)!==er.NONE,s=(e&er.A)!==er.NONE;a.colorMask(t,n,i,s)}}l&a.DEPTH_BUFFER_BIT&&!c.dss.depthWrite&&a.depthMask(!1),l&a.STENCIL_BUFFER_BIT&&(c.dss.stencilWriteMaskFront||a.stencilMaskSeparate(a.FRONT,0),c.dss.stencilWriteMaskBack||a.stencilMaskSeparate(a.BACK,0))}}function zH(e,t,n,i,s,r){const{gl:o}=e,a=e.stateCache,c=t&&t.gpuShader;let l=!1;if(t&&NH.gpuPipelineState!==t){if(NH.gpuPipelineState=t,NH.glPrimitive=t.glPrimitive,c){const{glProgram:e}=c;a.glProgram!==e&&(o.useProgram(e),a.glProgram=e,l=!0)}const{rs:n}=t;if(n){if(a.rs.cullMode!==n.cullMode){switch(n.cullMode){case _r.NONE:o.disable(o.CULL_FACE);break;case _r.FRONT:o.enable(o.CULL_FACE),o.cullFace(o.FRONT);break;case _r.BACK:o.enable(o.CULL_FACE),o.cullFace(o.BACK)}e.stateCache.rs.cullMode=n.cullMode}const t=n.isFrontFaceCCW;e.stateCache.rs.isFrontFaceCCW!==t&&(o.frontFace(t?o.CCW:o.CW),e.stateCache.rs.isFrontFaceCCW=t),e.stateCache.rs.depthBias===n.depthBias&&e.stateCache.rs.depthBiasSlop===n.depthBiasSlop||(o.polygonOffset(n.depthBias,n.depthBiasSlop),e.stateCache.rs.depthBias=n.depthBias,e.stateCache.rs.depthBiasSlop=n.depthBiasSlop),e.stateCache.rs.lineWidth!==n.lineWidth&&(o.lineWidth(n.lineWidth),e.stateCache.rs.lineWidth=n.lineWidth)}const{dss:i}=t;i&&(a.dss.depthTest!==i.depthTest&&(i.depthTest?o.enable(o.DEPTH_TEST):o.disable(o.DEPTH_TEST),a.dss.depthTest=i.depthTest),a.dss.depthWrite!==i.depthWrite&&(o.depthMask(i.depthWrite),a.dss.depthWrite=i.depthWrite),a.dss.depthFunc!==i.depthFunc&&(o.depthFunc(yH[i.depthFunc]),a.dss.depthFunc=i.depthFunc),a.dss.stencilTestFront===i.stencilTestFront&&a.dss.stencilTestBack===i.stencilTestBack||(i.stencilTestFront||i.stencilTestBack?o.enable(o.STENCIL_TEST):o.disable(o.STENCIL_TEST),a.dss.stencilTestFront=i.stencilTestFront,a.dss.stencilTestBack=i.stencilTestBack),a.dss.stencilFuncFront===i.stencilFuncFront&&a.dss.stencilRefFront===i.stencilRefFront&&a.dss.stencilReadMaskFront===i.stencilReadMaskFront||(o.stencilFuncSeparate(o.FRONT,yH[i.stencilFuncFront],i.stencilRefFront,i.stencilReadMaskFront),a.dss.stencilFuncFront=i.stencilFuncFront,a.dss.stencilRefFront=i.stencilRefFront,a.dss.stencilReadMaskFront=i.stencilReadMaskFront),a.dss.stencilFailOpFront===i.stencilFailOpFront&&a.dss.stencilZFailOpFront===i.stencilZFailOpFront&&a.dss.stencilPassOpFront===i.stencilPassOpFront||(o.stencilOpSeparate(o.FRONT,xH[i.stencilFailOpFront],xH[i.stencilZFailOpFront],xH[i.stencilPassOpFront]),a.dss.stencilFailOpFront=i.stencilFailOpFront,a.dss.stencilZFailOpFront=i.stencilZFailOpFront,a.dss.stencilPassOpFront=i.stencilPassOpFront),a.dss.stencilWriteMaskFront!==i.stencilWriteMaskFront&&(o.stencilMaskSeparate(o.FRONT,i.stencilWriteMaskFront),a.dss.stencilWriteMaskFront=i.stencilWriteMaskFront),a.dss.stencilFuncBack===i.stencilFuncBack&&a.dss.stencilRefBack===i.stencilRefBack&&a.dss.stencilReadMaskBack===i.stencilReadMaskBack||(o.stencilFuncSeparate(o.BACK,yH[i.stencilFuncBack],i.stencilRefBack,i.stencilReadMaskBack),a.dss.stencilFuncBack=i.stencilFuncBack,a.dss.stencilRefBack=i.stencilRefBack,a.dss.stencilReadMaskBack=i.stencilReadMaskBack),a.dss.stencilFailOpBack===i.stencilFailOpBack&&a.dss.stencilZFailOpBack===i.stencilZFailOpBack&&a.dss.stencilPassOpBack===i.stencilPassOpBack||(o.stencilOpSeparate(o.BACK,xH[i.stencilFailOpBack],xH[i.stencilZFailOpBack],xH[i.stencilPassOpBack]),a.dss.stencilFailOpBack=i.stencilFailOpBack,a.dss.stencilZFailOpBack=i.stencilZFailOpBack,a.dss.stencilPassOpBack=i.stencilPassOpBack),a.dss.stencilWriteMaskBack!==i.stencilWriteMaskBack&&(o.stencilMaskSeparate(o.BACK,i.stencilWriteMaskBack),a.dss.stencilWriteMaskBack=i.stencilWriteMaskBack));const{bs:s}=t;if(s){a.bs.isA2C!==s.isA2C&&(s.isA2C?o.enable(o.SAMPLE_ALPHA_TO_COVERAGE):o.disable(o.SAMPLE_ALPHA_TO_COVERAGE),a.bs.isA2C=s.isA2C),a.bs.blendColor.x===s.blendColor.x&&a.bs.blendColor.y===s.blendColor.y&&a.bs.blendColor.z===s.blendColor.z&&a.bs.blendColor.w===s.blendColor.w||(o.blendColor(s.blendColor.x,s.blendColor.y,s.blendColor.z,s.blendColor.w),a.bs.blendColor.x=s.blendColor.x,a.bs.blendColor.y=s.blendColor.y,a.bs.blendColor.z=s.blendColor.z,a.bs.blendColor.w=s.blendColor.w);const e=s.targets[0],t=a.bs.targets[0];t.blend!==e.blend&&(e.blend?o.enable(o.BLEND):o.disable(o.BLEND),t.blend=e.blend),t.blendEq===e.blendEq&&t.blendAlphaEq===e.blendAlphaEq||(o.blendEquationSeparate(SH[e.blendEq],SH[e.blendAlphaEq]),t.blendEq=e.blendEq,t.blendAlphaEq=e.blendAlphaEq),t.blendSrc===e.blendSrc&&t.blendDst===e.blendDst&&t.blendSrcAlpha===e.blendSrcAlpha&&t.blendDstAlpha===e.blendDstAlpha||(o.blendFuncSeparate(CH[e.blendSrc],CH[e.blendDst],CH[e.blendSrcAlpha],CH[e.blendDstAlpha]),t.blendSrc=e.blendSrc,t.blendDst=e.blendDst,t.blendSrcAlpha=e.blendSrcAlpha,t.blendDstAlpha=e.blendDstAlpha),t.blendColorMask!==e.blendColorMask&&(o.colorMask((e.blendColorMask&er.R)!==er.NONE,(e.blendColorMask&er.G)!==er.NONE,(e.blendColorMask&er.B)!==er.NONE,(e.blendColorMask&er.A)!==er.NONE),t.blendColorMask=e.blendColorMask)}}if(t&&t.gpuPipelineLayout&&c){const n=c.glBlocks.length,{dynamicOffsetIndices:r}=t.gpuPipelineLayout;for(let e=0;e<n;e++){const t=c.glBlocks[e],n=i[t.set],l=n&&n.descriptorIndices[t.binding],h=l>=0&&n.gpuDescriptors[l];if(!h||!h.gpuBuffer){d(`Buffer binding '${t.name}' at set ${t.set} binding ${t.binding} is not bounded`);continue}const _=r[t.set],u=_&&_[t.binding];let p=h.gpuBuffer.glOffset;u>=0&&(p+=s[u]),a.glBindUBOs[t.glBinding]===h.gpuBuffer.glBuffer&&a.glBindUBOOffsets[t.glBinding]===p||(p?o.bindBufferRange(o.UNIFORM_BUFFER,t.glBinding,h.gpuBuffer.glBuffer,p,h.gpuBuffer.size):o.bindBufferBase(o.UNIFORM_BUFFER,t.glBinding,h.gpuBuffer.glBuffer),a.glUniformBuffer=a.glBindUBOs[t.glBinding]=h.gpuBuffer.glBuffer,a.glBindUBOOffsets[t.glBinding]=p)}const l=c.glSamplerTextures.length;for(let t=0;t<l;t++){const n=c.glSamplerTextures[t],s=i[n.set];let r=s&&s.descriptorIndices[n.binding],l=r>=0&&s.gpuDescriptors[r];for(let t=0;t<n.units.length;t++){const i=n.units[t],c=a.glTexUnits[i];if(l&&l.gpuTexture&&l.gpuSampler){if(l.gpuTexture&&l.gpuTexture.size>0){const{gpuTexture:t}=l;c.glTexture!==t.glTexture&&(a.texUnit!==i&&(o.activeTexture(o.TEXTURE0+i),a.texUnit=i),t.glTexture?o.bindTexture(t.glTarget,t.glTexture):o.bindTexture(t.glTarget,e.nullTex2D.gpuTexture.glTexture),c.glTexture=t.glTexture);const{gpuSampler:n}=l;a.glSamplerUnits[i]!==n.glSampler&&(o.bindSampler(i,n.glSampler),a.glSamplerUnits[i]=n.glSampler)}l=s.gpuDescriptors[++r]}else d(`Sampler binding '${n.name}' at set ${n.set} binding ${n.binding} index ${t} is not bounded`)}}}if(n&&c&&(l||NH.gpuInputAssembler!==n))if(NH.gpuInputAssembler=n,e.extensions.useVAO){let e=n.glVAOs.get(c.glProgram);if(!e){let t;e=o.createVertexArray(),n.glVAOs.set(c.glProgram,e),o.bindVertexArray(e),o.bindBuffer(o.ARRAY_BUFFER,null),o.bindBuffer(o.ELEMENT_ARRAY_BUFFER,null),a.glArrayBuffer=null,a.glElementArrayBuffer=null;for(let e=0;e<c.glInputs.length;e++){const i=c.glInputs[e];t=null;for(let e=0;e<n.glAttribs.length;e++){const s=n.glAttribs[e];if(s.name===i.name){t=s;break}}if(t){a.glArrayBuffer!==t.glBuffer&&(o.bindBuffer(o.ARRAY_BUFFER,t.glBuffer),a.glArrayBuffer=t.glBuffer);for(let e=0;e<t.componentCount;++e){const n=i.glLoc+e,s=t.offset+t.size*e;o.enableVertexAttribArray(n),a.glCurrentAttribLocs[n]=!0,o.vertexAttribPointer(n,t.count,t.glType,t.isNormalized,t.stride,s),o.vertexAttribDivisor(n,t.isInstanced?1:0)}}}const i=n.gpuIndexBuffer;i&&o.bindBuffer(o.ELEMENT_ARRAY_BUFFER,i.glBuffer),o.bindVertexArray(null),o.bindBuffer(o.ARRAY_BUFFER,null),o.bindBuffer(o.ELEMENT_ARRAY_BUFFER,null),a.glArrayBuffer=null,a.glElementArrayBuffer=null}a.glVAO!==e&&(o.bindVertexArray(e),a.glVAO=e)}else{for(let t=0;t<e.capabilities.maxVertexAttributes;++t)a.glCurrentAttribLocs[t]=!1;for(let e=0;e<c.glInputs.length;e++){const t=c.glInputs[e];let i=null;for(let e=0;e<n.glAttribs.length;e++){const s=n.glAttribs[e];if(s.name===t.name){i=s;break}}if(i){a.glArrayBuffer!==i.glBuffer&&(o.bindBuffer(o.ARRAY_BUFFER,i.glBuffer),a.glArrayBuffer=i.glBuffer);for(let e=0;e<i.componentCount;++e){const n=t.glLoc+e,s=i.offset+i.size*e;!a.glEnabledAttribLocs[n]&&n>=0&&(o.enableVertexAttribArray(n),a.glEnabledAttribLocs[n]=!0),a.glCurrentAttribLocs[n]=!0,o.vertexAttribPointer(n,i.count,i.glType,i.isNormalized,i.stride,s),o.vertexAttribDivisor(n,i.isInstanced?1:0)}}}const t=n.gpuIndexBuffer;t&&a.glElementArrayBuffer!==t.glBuffer&&(o.bindBuffer(o.ELEMENT_ARRAY_BUFFER,t.glBuffer),a.glElementArrayBuffer=t.glBuffer);for(let t=0;t<e.capabilities.maxVertexAttributes;++t)a.glEnabledAttribLocs[t]!==a.glCurrentAttribLocs[t]&&(o.disableVertexAttribArray(t),a.glEnabledAttribLocs[t]=!1)}if(t&&t.dynamicStates.length){const e=t.dynamicStates.length;for(let n=0;n<e;n++)switch(t.dynamicStates[n]){case ur.LINE_WIDTH:a.rs.lineWidth!==r.lineWidth&&(o.lineWidth(r.lineWidth),a.rs.lineWidth=r.lineWidth);break;case ur.DEPTH_BIAS:a.rs.depthBias===r.depthBiasConstant&&a.rs.depthBiasSlop===r.depthBiasSlope||(o.polygonOffset(r.depthBiasConstant,r.depthBiasSlope),a.rs.depthBias=r.depthBiasConstant,a.rs.depthBiasSlop=r.depthBiasSlope);break;case ur.BLEND_CONSTANTS:{const e=r.blendConstant;a.bs.blendColor.x===e.x&&a.bs.blendColor.y===e.y&&a.bs.blendColor.z===e.z&&a.bs.blendColor.w===e.w||(o.blendColor(e.x,e.y,e.z,e.w),a.bs.blendColor.copy(e));break}case ur.STENCIL_WRITE_MASK:{const e=r.stencilStatesFront,t=r.stencilStatesBack;a.dss.stencilWriteMaskFront!==e.writeMask&&(o.stencilMaskSeparate(o.FRONT,e.writeMask),a.dss.stencilWriteMaskFront=e.writeMask),a.dss.stencilWriteMaskBack!==t.writeMask&&(o.stencilMaskSeparate(o.BACK,t.writeMask),a.dss.stencilWriteMaskBack=t.writeMask);break}case ur.STENCIL_COMPARE_MASK:{const e=r.stencilStatesFront,t=r.stencilStatesBack;a.dss.stencilRefFront===e.reference&&a.dss.stencilReadMaskFront===e.compareMask||(o.stencilFuncSeparate(o.FRONT,yH[a.dss.stencilFuncFront],e.reference,e.compareMask),a.dss.stencilRefFront=e.reference,a.dss.stencilReadMaskFront=e.compareMask),a.dss.stencilRefBack===t.reference&&a.dss.stencilReadMaskBack===t.compareMask||(o.stencilFuncSeparate(o.BACK,yH[a.dss.stencilFuncBack],t.reference,t.compareMask),a.dss.stencilRefBack=t.reference,a.dss.stencilReadMaskBack=t.compareMask);break}}}}function FH(e,t){const{gl:n}=e,{gpuInputAssembler:i,glPrimitive:s}=NH,r=e.extensions.WEBGL_multi_draw;if(i){const e=i.gpuIndexBuffer;if(i.gpuIndirectBuffer){const{indirects:t}=i.gpuIndirectBuffer;if(t.drawByIndex){for(let n=0;n<t.drawCount;n++)t.byteOffsets[n]=t.offsets[n]*e.stride;if(r)t.instancedDraw?r.multiDrawElementsInstancedWEBGL(s,t.counts,0,i.glIndexType,t.byteOffsets,0,t.instances,0,t.drawCount):r.multiDrawElementsWEBGL(s,t.counts,0,i.glIndexType,t.byteOffsets,0,t.drawCount);else for(let e=0;e<t.drawCount;e++)t.instances[e]?n.drawElementsInstanced(s,t.counts[e],i.glIndexType,t.byteOffsets[e],t.instances[e]):n.drawElements(s,t.counts[e],i.glIndexType,t.byteOffsets[e])}else if(r)t.instancedDraw?r.multiDrawArraysInstancedWEBGL(s,t.offsets,0,t.counts,0,t.instances,0,t.drawCount):r.multiDrawArraysWEBGL(s,t.offsets,0,t.counts,0,t.drawCount);else for(let e=0;e<t.drawCount;e++)t.instances[e]?n.drawArraysInstanced(s,t.offsets[e],t.counts[e],t.instances[e]):n.drawArrays(s,t.offsets[e],t.counts[e])}else if(t.instanceCount)if(e){if(t.indexCount>0){const r=t.firstIndex*e.stride;n.drawElementsInstanced(s,t.indexCount,i.glIndexType,r,t.instanceCount)}}else t.vertexCount>0&&n.drawArraysInstanced(s,t.firstVertex,t.vertexCount,t.instanceCount);else if(e){if(t.indexCount>0){const r=t.firstIndex*e.stride;n.drawElements(s,t.indexCount,i.glIndexType,r)}}else t.vertexCount>0&&n.drawArrays(s,t.firstVertex,t.vertexCount)}}const BH=new Array(TH.COUNT);function UH(e,t){BH.fill(0);for(let n=0;n<t.cmds.length;++n){const i=t.cmds.array[n],s=BH[i]++;switch(i){case TH.BEGIN_RENDER_PASS:{const n=t.beginRenderPassCmds.array[s];LH(e,n.gpuRenderPass,n.gpuFramebuffer,n.renderArea,n.clearColors,n.clearDepth,n.clearStencil);break}case TH.BIND_STATES:{const n=t.bindStatesCmds.array[s];zH(e,n.gpuPipelineState,n.gpuInputAssembler,n.gpuDescriptorSets,n.dynamicOffsets,n.dynamicStates);break}case TH.DRAW:FH(e,t.drawCmds.array[s].drawInfo);break;case TH.UPDATE_BUFFER:{const n=t.updateBufferCmds.array[s];DH(e,n.gpuBuffer,n.buffer,n.offset,n.size);break}case TH.COPY_BUFFER_TO_TEXTURE:{const n=t.copyBufferToTextureCmds.array[s];GH(e,n.buffers,n.gpuTexture,n.regions);break}}}}function GH(e,t,n,i){const{gl:s}=e,r=e.stateCache.glTexUnits[e.stateCache.texUnit];r.glTexture!==n.glTexture&&(s.bindTexture(n.glTarget,n.glTexture),r.glTexture=n.glTexture);let o=0,a=1,c=1,l=0;const h=To[n.format],{isCompressed:_}=h;switch(n.glTarget){case s.TEXTURE_2D:for(let e=0;e<i.length;e++){const r=i[e];a=r.texExtent.width,c=r.texExtent.height;const l=t[o++];_?n.glInternalFmt!==hH.COMPRESSED_RGB_ETC1_WEBGL?s.compressedTexSubImage2D(s.TEXTURE_2D,r.texSubres.mipLevel,r.texOffset.x,r.texOffset.y,a,c,n.glFormat,l):s.compressedTexImage2D(s.TEXTURE_2D,r.texSubres.mipLevel,n.glInternalFmt,a,c,0,l):s.texSubImage2D(s.TEXTURE_2D,r.texSubres.mipLevel,r.texOffset.x,r.texOffset.y,a,c,n.glFormat,n.glType,l)}break;case s.TEXTURE_CUBE_MAP:for(let e=0;e<i.length;e++){const r=i[e],h=r.texSubres.baseArrayLayer+r.texSubres.layerCount;for(l=r.texSubres.baseArrayLayer;l<h;++l){a=r.texExtent.width,c=r.texExtent.height;const e=t[o++];_?n.glInternalFmt!==hH.COMPRESSED_RGB_ETC1_WEBGL?s.compressedTexSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+l,r.texSubres.mipLevel,r.texOffset.x,r.texOffset.y,a,c,n.glFormat,e):s.compressedTexImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+l,r.texSubres.mipLevel,n.glInternalFmt,a,c,0,e):s.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+l,r.texSubres.mipLevel,r.texOffset.x,r.texOffset.y,a,c,n.glFormat,n.glType,e)}}break;default:console.error("Unsupported GL texture type, copy buffer to texture failed.")}n.flags&Ws.GEN_MIPMAP&&s.generateMipmap(n.glTarget)}class HH{constructor(){this.counts=void 0,this.offsets=void 0,this.instances=void 0,this.drawCount=0,this.drawByIndex=!1,this.instancedDraw=!1,this.byteOffsets=void 0,this._capacity=4,this.counts=new Int32Array(this._capacity),this.offsets=new Int32Array(this._capacity),this.instances=new Int32Array(this._capacity),this.byteOffsets=new Int32Array(this._capacity)}clearDraws(){this.drawCount=0,this.drawByIndex=!1,this.instancedDraw=!1}setDrawInfo(e,t){this._ensureCapacity(e),this.drawByIndex=t.indexCount>0,this.instancedDraw=!!t.instanceCount,this.drawCount=Math.max(e+1,this.drawCount),this.drawByIndex?(this.counts[e]=t.indexCount,this.offsets[e]=t.firstIndex):(this.counts[e]=t.vertexCount,this.offsets[e]=t.firstVertex),this.instances[e]=Math.max(1,t.instanceCount)}_ensureCapacity(e){if(this._capacity>e)return;this._capacity=yn(e);const t=new Int32Array(this._capacity),n=new Int32Array(this._capacity),i=new Int32Array(this._capacity);this.byteOffsets=new Int32Array(this._capacity),t.set(this.counts),n.set(this.offsets),i.set(this.instances),this.counts=t,this.offsets=n,this.instances=i}}class kH extends ko{constructor(...e){super(...e),this._gpuBuffer=null}get gpuBuffer(){return this._gpuBuffer}initialize(e){if("buffer"in e){this._isBufferView=!0;const t=e.buffer;this._usage=t.usage,this._memUsage=t.memUsage,this._size=this._stride=e.range,this._count=1,this._flags=t.flags,this._gpuBuffer={usage:this._usage,memUsage:this._memUsage,size:this._size,stride:this._stride,buffer:null,indirects:t.gpuBuffer.indirects,glTarget:t.gpuBuffer.glTarget,glBuffer:t.gpuBuffer.glBuffer,glOffset:e.offset}}else this._usage=e.usage,this._memUsage=e.memUsage,this._size=e.size,this._stride=Math.max(e.stride||this._size,1),this._count=this._size/this._stride,this._flags=e.flags,this._gpuBuffer={usage:this._usage,memUsage:this._memUsage,size:this._size,stride:this._stride,buffer:null,indirects:new HH,glTarget:0,glBuffer:null,glOffset:0},function(e,t){const{gl:n}=e,i=e.stateCache,s=t.memUsage&ks.HOST?n.DYNAMIC_DRAW:n.STATIC_DRAW;if(t.usage&Us.VERTEX){t.glTarget=n.ARRAY_BUFFER;const r=n.createBuffer();r&&(t.glBuffer=r,t.size>0&&(e.extensions.useVAO&&i.glVAO&&(n.bindVertexArray(null),i.glVAO=null),NH.gpuInputAssembler=null,e.stateCache.glArrayBuffer!==t.glBuffer&&(n.bindBuffer(n.ARRAY_BUFFER,t.glBuffer),e.stateCache.glArrayBuffer=t.glBuffer),n.bufferData(n.ARRAY_BUFFER,t.size,s),n.bindBuffer(n.ARRAY_BUFFER,null),e.stateCache.glArrayBuffer=null))}else if(t.usage&Us.INDEX){t.glTarget=n.ELEMENT_ARRAY_BUFFER;const r=n.createBuffer();r&&(t.glBuffer=r,t.size>0&&(e.extensions.useVAO&&i.glVAO&&(n.bindVertexArray(null),i.glVAO=null),NH.gpuInputAssembler=null,e.stateCache.glElementArrayBuffer!==t.glBuffer&&(n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t.glBuffer),e.stateCache.glElementArrayBuffer=t.glBuffer),n.bufferData(n.ELEMENT_ARRAY_BUFFER,t.size,s),n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,null),e.stateCache.glElementArrayBuffer=null))}else if(t.usage&Us.UNIFORM){t.glTarget=n.UNIFORM_BUFFER;const i=n.createBuffer();i&&t.size>0&&(t.glBuffer=i,e.stateCache.glUniformBuffer!==t.glBuffer&&(n.bindBuffer(n.UNIFORM_BUFFER,t.glBuffer),e.stateCache.glUniformBuffer=t.glBuffer),n.bufferData(n.UNIFORM_BUFFER,t.size,s),n.bindBuffer(n.UNIFORM_BUFFER,null),e.stateCache.glUniformBuffer=null)}else t.usage&Us.INDIRECT||t.usage&Us.TRANSFER_DST||t.usage&Us.TRANSFER_SRC||console.error("Unsupported BufferType, create buffer failed."),t.glTarget=n.NONE}(_H.instance,this._gpuBuffer),_H.instance.memoryStatus.bufferSize+=this._size}destroy(){this._gpuBuffer&&(this._isBufferView||(function(e,t){const{gl:n}=e,i=e.stateCache;if(t.glBuffer){switch(t.glTarget){case n.ARRAY_BUFFER:e.extensions.useVAO&&i.glVAO&&(n.bindVertexArray(null),e.stateCache.glVAO=null),NH.gpuInputAssembler=null,n.bindBuffer(n.ARRAY_BUFFER,null),e.stateCache.glArrayBuffer=null;break;case n.ELEMENT_ARRAY_BUFFER:e.extensions.useVAO&&i.glVAO&&(n.bindVertexArray(null),e.stateCache.glVAO=null),NH.gpuInputAssembler=null,n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,null),e.stateCache.glElementArrayBuffer=null;break;case n.UNIFORM_BUFFER:n.bindBuffer(n.UNIFORM_BUFFER,null),e.stateCache.glUniformBuffer=null}n.deleteBuffer(t.glBuffer),t.glBuffer=null}}(_H.instance,this._gpuBuffer),_H.instance.memoryStatus.bufferSize-=this._size),this._gpuBuffer=null)}resize(e){if(this._isBufferView)return void console.warn("cannot resize buffer views!");const t=this._size;t!==e&&(this._size=e,this._count=this._size/this._stride,this._gpuBuffer&&(this._gpuBuffer.size=e,e>0&&(function(e,t){const{gl:n}=e,i=e.stateCache,s=t.memUsage&ks.HOST?n.DYNAMIC_DRAW:n.STATIC_DRAW;t.usage&Us.VERTEX?(e.extensions.useVAO&&i.glVAO&&(n.bindVertexArray(null),i.glVAO=null),NH.gpuInputAssembler=null,i.glArrayBuffer!==t.glBuffer&&n.bindBuffer(n.ARRAY_BUFFER,t.glBuffer),t.buffer?n.bufferData(n.ARRAY_BUFFER,t.buffer,s):n.bufferData(n.ARRAY_BUFFER,t.size,s),n.bindBuffer(n.ARRAY_BUFFER,null),i.glArrayBuffer=null):t.usage&Us.INDEX?(e.extensions.useVAO&&i.glVAO&&(n.bindVertexArray(null),i.glVAO=null),NH.gpuInputAssembler=null,e.stateCache.glElementArrayBuffer!==t.glBuffer&&n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t.glBuffer),t.buffer?n.bufferData(n.ELEMENT_ARRAY_BUFFER,t.buffer,s):n.bufferData(n.ELEMENT_ARRAY_BUFFER,t.size,s),n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,null),e.stateCache.glElementArrayBuffer=null):t.usage&Us.UNIFORM?(e.stateCache.glUniformBuffer!==t.glBuffer&&n.bindBuffer(n.UNIFORM_BUFFER,t.glBuffer),n.bufferData(n.UNIFORM_BUFFER,t.size,s),n.bindBuffer(n.UNIFORM_BUFFER,null),e.stateCache.glUniformBuffer=null):(t.usage&Us.INDIRECT||t.usage&Us.TRANSFER_DST||t.usage&Us.TRANSFER_SRC||console.error("Unsupported BufferType, create buffer failed."),t.glTarget=n.NONE)}(_H.instance,this._gpuBuffer),_H.instance.memoryStatus.bufferSize-=t,_H.instance.memoryStatus.bufferSize+=e)))}update(e,t){if(this._isBufferView)return void console.warn("cannot update through buffer views!");let n;n=void 0!==t?t:this._usage&Us.INDIRECT?0:e.byteLength,DH(_H.instance,this._gpuBuffer,e,0,n)}}class VH{constructor(e,t){this._frees=void 0,this._freeIdx=0,this._freeCmds=void 0,this._frees=new Array(t),this._freeCmds=new De(t);for(let n=0;n<t;++n)this._frees[n]=new e;this._freeIdx=t-1}alloc(e){if(this._freeIdx<0){const t=2*this._frees.length,n=this._frees;this._frees=new Array(t);const i=t-n.length;for(let t=0;t<i;++t)this._frees[t]=new e;for(let e=i,s=0;e<t;++e,++s)this._frees[e]=n[s];this._freeIdx+=i}const t=this._frees[this._freeIdx];return this._frees[this._freeIdx--]=null,++t.refCount,t}free(e){0==--e.refCount&&this._freeCmds.push(e)}freeCmds(e){for(let t=0;t<e.length;++t)0==--e.array[t].refCount&&this._freeCmds.push(e.array[t])}release(){for(let e=0;e<this._freeCmds.length;++e){const t=this._freeCmds.array[e];t.clear(),this._frees[++this._freeIdx]=t}this._freeCmds.clear()}}class jH{constructor(){this.beginRenderPassCmdPool=void 0,this.bindStatesCmdPool=void 0,this.drawCmdPool=void 0,this.updateBufferCmdPool=void 0,this.copyBufferToTextureCmdPool=void 0,this.beginRenderPassCmdPool=new VH(EH,1),this.bindStatesCmdPool=new VH(AH,1),this.drawCmdPool=new VH(PH,1),this.updateBufferCmdPool=new VH(wH,1),this.copyBufferToTextureCmdPool=new VH(IH,1)}clearCmds(e){e.beginRenderPassCmds.length&&(this.beginRenderPassCmdPool.freeCmds(e.beginRenderPassCmds),e.beginRenderPassCmds.clear()),e.bindStatesCmds.length&&(this.bindStatesCmdPool.freeCmds(e.bindStatesCmds),e.bindStatesCmds.clear()),e.drawCmds.length&&(this.drawCmdPool.freeCmds(e.drawCmds),e.drawCmds.clear()),e.updateBufferCmds.length&&(this.updateBufferCmdPool.freeCmds(e.updateBufferCmds),e.updateBufferCmds.clear()),e.copyBufferToTextureCmds.length&&(this.copyBufferToTextureCmdPool.freeCmds(e.copyBufferToTextureCmds),e.copyBufferToTextureCmds.clear()),e.cmds.clear()}releaseCmds(){this.beginRenderPassCmdPool.release(),this.bindStatesCmdPool.release(),this.drawCmdPool.release(),this.updateBufferCmdPool.release(),this.copyBufferToTextureCmdPool.release()}}class WH extends Vo{constructor(...e){super(...e),this.cmdPackage=new RH,this._cmdAllocator=new jH,this._isInRenderPass=!1,this._curGPUPipelineState=null,this._curGPUDescriptorSets=[],this._curGPUInputAssembler=null,this._curDynamicOffsets=Array(8).fill(0),this._curDynamicStates=new So,this._isStateInvalied=!1}initialize(e){this._type=e.type,this._queue=e.queue;const t=_H.instance.bindingMappingInfo.bufferOffsets.length;for(let e=0;e<t;e++)this._curGPUDescriptorSets.push(null)}destroy(){this._cmdAllocator.clearCmds(this.cmdPackage)}begin(e,t=0,n){this._cmdAllocator.clearCmds(this.cmdPackage),this._curGPUPipelineState=null,this._curGPUInputAssembler=null,this._curGPUDescriptorSets.length=0,this._numDrawCalls=0,this._numInstances=0,this._numTris=0}end(){this._isStateInvalied&&this.bindStates(),this._isInRenderPass=!1}beginRenderPass(e,t,n,i,s,r){const o=this._cmdAllocator.beginRenderPassCmdPool.alloc(EH);o.gpuRenderPass=e.gpuRenderPass,o.gpuFramebuffer=t.gpuFramebuffer,o.renderArea=n;for(let e=0;e<i.length;++e)o.clearColors[e]=i[e];o.clearDepth=s,o.clearStencil=r,this.cmdPackage.beginRenderPassCmds.push(o),this.cmdPackage.cmds.push(TH.BEGIN_RENDER_PASS),this._isInRenderPass=!0}endRenderPass(){this._isInRenderPass=!1}bindPipelineState(e){const t=e.gpuPipelineState;t!==this._curGPUPipelineState&&(this._curGPUPipelineState=t,this._isStateInvalied=!0)}bindDescriptorSet(e,t,n){const i=t.gpuDescriptorSet;if(i!==this._curGPUDescriptorSets[e]&&(this._curGPUDescriptorSets[e]=i,this._isStateInvalied=!0),n){var s;const t=null===(s=this._curGPUPipelineState)||void 0===s?void 0:s.gpuPipelineLayout;if(t){const i=this._curDynamicOffsets,s=t.dynamicOffsetOffsets[e];for(let e=0;e<n.length;e++)i[s+e]=n[e];this._isStateInvalied=!0}}}bindInputAssembler(e){const t=e.gpuInputAssembler;this._curGPUInputAssembler=t,this._isStateInvalied=!0}setViewport(e){const t=this._curDynamicStates.viewport;t.left===e.left&&t.top===e.top&&t.width===e.width&&t.height===e.height&&t.minDepth===e.minDepth&&t.maxDepth===e.maxDepth||(t.left=e.left,t.top=e.top,t.width=e.width,t.height=e.height,t.minDepth=e.minDepth,t.maxDepth=e.maxDepth,this._isStateInvalied=!0)}setScissor(e){const t=this._curDynamicStates.scissor;t.x===e.x&&t.y===e.y&&t.width===e.width&&t.height===e.height||(t.x=e.x,t.y=e.y,t.width=e.width,t.height=e.height,this._isStateInvalied=!0)}setLineWidth(e){this._curDynamicStates.lineWidth!==e&&(this._curDynamicStates.lineWidth=e,this._isStateInvalied=!0)}setDepthBias(e,t,n){const i=this._curDynamicStates;i.depthBiasConstant===e&&i.depthBiasClamp===t&&i.depthBiasSlope===n||(i.depthBiasConstant=e,i.depthBiasClamp=t,i.depthBiasSlope=n,this._isStateInvalied=!0)}setBlendConstants(e){const t=this._curDynamicStates.blendConstant;t.x===e.x&&t.y===e.y&&t.z===e.z&&t.w===e.w||(t.copy(e),this._isStateInvalied=!0)}setDepthBound(e,t){const n=this._curDynamicStates;n.depthMinBounds===e&&n.depthMaxBounds===t||(n.depthMinBounds=e,n.depthMaxBounds=t,this._isStateInvalied=!0)}setStencilWriteMask(e,t){const n=this._curDynamicStates.stencilStatesFront,i=this._curDynamicStates.stencilStatesBack;e&pr.FRONT&&n.writeMask!==t&&(n.writeMask=t,this._isStateInvalied=!0),e&pr.BACK&&i.writeMask!==t&&(i.writeMask=t,this._isStateInvalied=!0)}setStencilCompareMask(e,t,n){const i=this._curDynamicStates.stencilStatesFront,s=this._curDynamicStates.stencilStatesBack;e&pr.FRONT&&(i.compareMask===n&&i.reference===t||(i.reference=t,i.compareMask=n,this._isStateInvalied=!0)),e&pr.BACK&&(s.compareMask===n&&s.reference===t||(s.reference=t,s.compareMask=n,this._isStateInvalied=!0))}draw(e){if(this._type===gr.PRIMARY&&this._isInRenderPass||this._type===gr.SECONDARY){this._isStateInvalied&&this.bindStates();const t="drawInfo"in e?e.drawInfo:e,n=this._cmdAllocator.drawCmdPool.alloc(PH);n.drawInfo.copy(t),this.cmdPackage.drawCmds.push(n),this.cmdPackage.cmds.push(TH.DRAW),++this._numDrawCalls,this._numInstances+=t.instanceCount;const i=t.indexCount||t.vertexCount;if(this._curGPUPipelineState)switch(this._curGPUPipelineState.glPrimitive){case 4:this._numTris+=i/3*Math.max(t.instanceCount,1);break;case 5:case 6:this._numTris+=(i-2)*Math.max(t.instanceCount,1)}}else console.error("Command 'draw' must be recorded inside a render pass.")}updateBuffer(e,t,n){if(this._type===gr.PRIMARY&&!this._isInRenderPass||this._type===gr.SECONDARY){const i=e.gpuBuffer;if(i){const s=this._cmdAllocator.updateBufferCmdPool.alloc(wH);let r=0,o=null;e.usage&Us.INDIRECT||(r=void 0!==n?n:t.byteLength),o=t,s.gpuBuffer=i,s.buffer=o,s.offset=0,s.size=r,this.cmdPackage.updateBufferCmds.push(s),this.cmdPackage.cmds.push(TH.UPDATE_BUFFER)}}else console.error("Command 'updateBuffer' must be recorded outside a render pass.")}copyBuffersToTexture(e,t,n){if(this._type===gr.PRIMARY&&!this._isInRenderPass||this._type===gr.SECONDARY){const i=t.gpuTexture;if(i){const t=this._cmdAllocator.copyBufferToTextureCmdPool.alloc(IH);t.gpuTexture=i,t.regions=n,t.buffers=e,this.cmdPackage.copyBufferToTextureCmds.push(t),this.cmdPackage.cmds.push(TH.COPY_BUFFER_TO_TEXTURE)}}else console.error("Command 'copyBufferToTexture' must be recorded outside a render pass.")}execute(e,t){for(let n=0;n<t;++n){const t=e[n];for(let e=0;e<t.cmdPackage.beginRenderPassCmds.length;++e){const n=t.cmdPackage.beginRenderPassCmds.array[e];++n.refCount,this.cmdPackage.beginRenderPassCmds.push(n)}for(let e=0;e<t.cmdPackage.bindStatesCmds.length;++e){const n=t.cmdPackage.bindStatesCmds.array[e];++n.refCount,this.cmdPackage.bindStatesCmds.push(n)}for(let e=0;e<t.cmdPackage.drawCmds.length;++e){const n=t.cmdPackage.drawCmds.array[e];++n.refCount,this.cmdPackage.drawCmds.push(n)}for(let e=0;e<t.cmdPackage.updateBufferCmds.length;++e){const n=t.cmdPackage.updateBufferCmds.array[e];++n.refCount,this.cmdPackage.updateBufferCmds.push(n)}for(let e=0;e<t.cmdPackage.copyBufferToTextureCmds.length;++e){const n=t.cmdPackage.copyBufferToTextureCmds.array[e];++n.refCount,this.cmdPackage.copyBufferToTextureCmds.push(n)}this.cmdPackage.cmds.concat(t.cmdPackage.cmds.array),this._numDrawCalls+=t._numDrawCalls,this._numInstances+=t._numInstances,this._numTris+=t._numTris}}pipelineBarrier(e,t,n){}bindStates(){const e=this._cmdAllocator.bindStatesCmdPool.alloc(AH);e.gpuPipelineState=this._curGPUPipelineState,Array.prototype.push.apply(e.gpuDescriptorSets,this._curGPUDescriptorSets),Array.prototype.push.apply(e.dynamicOffsets,this._curDynamicOffsets),e.gpuInputAssembler=this._curGPUInputAssembler,e.dynamicStates=this._curDynamicStates,this.cmdPackage.bindStatesCmds.push(e),this.cmdPackage.cmds.push(TH.BIND_STATES),this._isStateInvalied=!1}}class qH extends qo{constructor(...e){super(...e),this._gpuFramebuffer=null}get gpuFramebuffer(){return this._gpuFramebuffer}initialize(e){this._renderPass=e.renderPass,this._colorTextures=e.colorTextures||[],this._depthStencilTexture=e.depthStencilTexture||null;const t=[];for(let n=0;n<e.colorTextures.length;n++){const i=e.colorTextures[n];i&&t.push(i.gpuTexture)}let n=null;e.depthStencilTexture&&(n=e.depthStencilTexture.gpuTexture);let i=Number.MAX_SAFE_INTEGER,s=Number.MAX_SAFE_INTEGER;this._gpuFramebuffer={gpuRenderPass:e.renderPass.gpuRenderPass,gpuColorTextures:t,gpuDepthStencilTexture:n,glFramebuffer:null,isOffscreen:!0,get width(){return this.isOffscreen?i:this.gpuColorTextures[0].width},set width(e){i=e},get height(){return this.isOffscreen?s:this.gpuColorTextures[0].height},set height(e){s=e}},function(e,t){for(let e=0;e<t.gpuColorTextures.length;++e)if(t.gpuColorTextures[e].isSwapchainTexture)return void(t.isOffscreen=!1);const{gl:n}=e,i=[],s=n.createFramebuffer();if(s){t.glFramebuffer=s,e.stateCache.glFramebuffer!==t.glFramebuffer&&n.bindFramebuffer(n.FRAMEBUFFER,t.glFramebuffer);for(let e=0;e<t.gpuColorTextures.length;++e){const s=t.gpuColorTextures[e];s&&(s.glTexture?n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+e,s.glTarget,s.glTexture,0):n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+e,n.RENDERBUFFER,s.glRenderbuffer),i.push(n.COLOR_ATTACHMENT0+e),t.width=Math.min(t.width,s.width),t.height=Math.min(t.height,s.height))}const r=t.gpuDepthStencilTexture;if(r){const e=To[r.format].hasStencil?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT;r.glTexture?n.framebufferTexture2D(n.FRAMEBUFFER,e,r.glTarget,r.glTexture,0):n.framebufferRenderbuffer(n.FRAMEBUFFER,e,n.RENDERBUFFER,r.glRenderbuffer),t.width=Math.min(t.width,r.width),t.height=Math.min(t.height,r.height)}n.drawBuffers(i);const o=n.checkFramebufferStatus(n.FRAMEBUFFER);if(o!==n.FRAMEBUFFER_COMPLETE)switch(o){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:console.error("glCheckFramebufferStatus() - FRAMEBUFFER_INCOMPLETE_ATTACHMENT");break;case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:console.error("glCheckFramebufferStatus() - FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT");break;case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:console.error("glCheckFramebufferStatus() - FRAMEBUFFER_INCOMPLETE_DIMENSIONS");break;case n.FRAMEBUFFER_UNSUPPORTED:console.error("glCheckFramebufferStatus() - FRAMEBUFFER_UNSUPPORTED")}e.stateCache.glFramebuffer!==t.glFramebuffer&&n.bindFramebuffer(n.FRAMEBUFFER,e.stateCache.glFramebuffer)}}(_H.instance,this._gpuFramebuffer)}destroy(){var e,t;this._gpuFramebuffer&&(e=_H.instance,(t=this._gpuFramebuffer).glFramebuffer&&(e.gl.deleteFramebuffer(t.glFramebuffer),e.stateCache.glFramebuffer===t.glFramebuffer&&(e.gl.bindFramebuffer(e.gl.FRAMEBUFFER,null),e.stateCache.glFramebuffer=null),t.glFramebuffer=null),this._gpuFramebuffer=null)}}class XH extends $o{constructor(...e){super(...e),this._gpuInputAssembler=null}get gpuInputAssembler(){return this._gpuInputAssembler}initialize(e){if(0===e.vertexBuffers.length)return void console.error("InputAssemblerInfo.vertexBuffers is null.");if(this._attributes=e.attributes,this._attributesHash=this.computeAttributesHash(),this._vertexBuffers=e.vertexBuffers,e.indexBuffer)this._indexBuffer=e.indexBuffer,this._drawInfo.indexCount=this._indexBuffer.size/this._indexBuffer.stride,this._drawInfo.firstIndex=0;else{const e=this._vertexBuffers[0];this._drawInfo.vertexCount=e.size/e.stride,this._drawInfo.firstVertex=0,this._drawInfo.vertexOffset=0}this._drawInfo.instanceCount=0,this._drawInfo.firstInstance=0,this._indirectBuffer=e.indirectBuffer||null;const t=new Array(e.vertexBuffers.length);for(let n=0;n<e.vertexBuffers.length;++n){const i=e.vertexBuffers[n];i.gpuBuffer&&(t[n]=i.gpuBuffer)}let n=null,i=0;if(e.indexBuffer&&(n=e.indexBuffer.gpuBuffer,n))switch(n.stride){case 1:i=5121;break;case 2:i=5123;break;case 4:i=5125;break;default:console.error("Illegal index buffer stride.")}let s=null;e.indirectBuffer&&(s=e.indirectBuffer.gpuBuffer),this._gpuInputAssembler={attributes:e.attributes,gpuVertexBuffers:t,gpuIndexBuffer:n,gpuIndirectBuffer:s,glAttribs:[],glIndexType:i,glVAOs:new Map},function(e,t){const{gl:n}=e;t.glAttribs=new Array(t.attributes.length);const i=[0,0,0,0,0,0,0,0];for(let e=0;e<t.attributes.length;++e){const s=t.attributes[e],r=void 0!==s.stream?s.stream:0,o=t.gpuVertexBuffers[r],a=dH(s.format,n),{size:c}=To[s.format];t.glAttribs[e]={name:s.name,glBuffer:o.glBuffer,glType:a,size:c,count:To[s.format].count,stride:o.stride,componentCount:vH(a,n),isNormalized:void 0!==s.isNormalized&&s.isNormalized,isInstanced:void 0!==s.isInstanced&&s.isInstanced,offset:i[r]},i[r]+=c}}(_H.instance,this._gpuInputAssembler)}destroy(){const e=_H.instance;this._gpuInputAssembler&&e.extensions.useVAO&&function(e,t){const n=t.glVAOs.values();let i=n.next();const{gl:s}=e;let r=e.stateCache.glVAO;for(;!i.done;)s.deleteVertexArray(i.value),r===i.value&&(s.bindVertexArray(null),r=null),i=n.next();e.stateCache.glVAO=r,t.glVAOs.clear()}(e,this._gpuInputAssembler),this._gpuInputAssembler=null}}class YH extends Zo{constructor(...e){super(...e),this._gpuDescriptorSetLayout=null}get gpuDescriptorSetLayout(){return this._gpuDescriptorSetLayout}initialize(e){Array.prototype.push.apply(this._bindings,e.bindings);let t=0,n=-1;const i=[];for(let e=0;e<this._bindings.length;e++){const s=this._bindings[e];i.push(t),t+=s.count,s.binding>n&&(n=s.binding)}this._bindingIndices=Array(n+1).fill(-1);const s=this._descriptorIndices=Array(n+1).fill(-1);for(let e=0;e<this._bindings.length;e++){const t=this._bindings[e];this._bindingIndices[t.binding]=e,s[t.binding]=i[e]}const r=[];for(let e=0;e<this._bindings.length;e++){const t=this._bindings[e];if(t.descriptorType&Ao)for(let e=0;e<t.count;e++)r.push(t.binding)}this._gpuDescriptorSetLayout={bindings:this._bindings,dynamicBindings:r,descriptorIndices:s,descriptorCount:t}}destroy(){this._bindings.length=0}}class KH extends Qo{constructor(...e){super(...e),this._gpuPipelineLayout=null}get gpuPipelineLayout(){return this._gpuPipelineLayout}initialize(e){Array.prototype.push.apply(this._setLayouts,e.setLayouts);const t=[],n=[];let i=0;const s=[];for(let e=0;e<this._setLayouts.length;e++){const r=this._setLayouts[e],o=r.gpuDescriptorSetLayout.dynamicBindings,a=Array(r.bindingIndices.length).fill(-1);for(let e=0;e<o.length;e++){const t=o[e];a[t]<0&&(a[t]=i+e)}n.push(r.gpuDescriptorSetLayout),t.push(a),s.push(i),i+=o.length}this._gpuPipelineLayout={gpuSetLayouts:n,dynamicOffsetIndices:t,dynamicOffsetCount:i,dynamicOffsetOffsets:s}}destroy(){this._setLayouts.length=0}}const $H=[0,1,3,2,0,0,0,4,5,6,0,0,0,0];class ZH extends XG{constructor(...e){super(...e),this._gpuPipelineState=null}get gpuPipelineState(){return this._gpuPipelineState}initialize(e){this._primitive=e.primitive,this._shader=e.shader,this._pipelineLayout=e.pipelineLayout;const t=this._bs;if(e.blendState){const n=e.blendState,{targets:i}=n;i&&i.forEach(((e,n)=>{t.setTarget(n,e)})),void 0!==n.isA2C&&(t.isA2C=n.isA2C),void 0!==n.isIndepend&&(t.isIndepend=n.isIndepend),void 0!==n.blendColor&&(t.blendColor=n.blendColor)}Object.assign(this._rs,e.rasterizerState),Object.assign(this._dss,e.depthStencilState),this._is=e.inputState,this._renderPass=e.renderPass,this._dynamicStates=e.dynamicStates;const n=[];for(let e=0;e<31;e++)this._dynamicStates&1<<e&&n.push(1<<e);this._gpuPipelineState={glPrimitive:$H[e.primitive],gpuShader:e.shader.gpuShader,gpuPipelineLayout:e.pipelineLayout.gpuPipelineLayout,rs:e.rasterizerState,dss:e.depthStencilState,bs:e.blendState,gpuRenderPass:e.renderPass.gpuRenderPass,dynamicStates:n}}destroy(){this._gpuPipelineState=null}}class QH extends WH{beginRenderPass(e,t,n,i,s,r){LH(_H.instance,e.gpuRenderPass,t.gpuFramebuffer,n,i,s,r),this._isInRenderPass=!0}draw(e){if(this._isInRenderPass){this._isStateInvalied&&this.bindStates();const t="drawInfo"in e?e.drawInfo:e;FH(_H.instance,t),++this._numDrawCalls,this._numInstances+=t.instanceCount;const n=t.indexCount||t.vertexCount;if(this._curGPUPipelineState)switch(this._curGPUPipelineState.glPrimitive){case 4:this._numTris+=n/3*Math.max(t.instanceCount,1);break;case 5:case 6:this._numTris+=(n-2)*Math.max(t.instanceCount,1)}}else console.error("Command 'draw' must be recorded inside a render pass.")}setViewport(e){const{stateCache:t,gl:n}=_H.instance;t.viewport.left===e.left&&t.viewport.top===e.top&&t.viewport.width===e.width&&t.viewport.height===e.height||(n.viewport(e.left,e.top,e.width,e.height),t.viewport.left=e.left,t.viewport.top=e.top,t.viewport.width=e.width,t.viewport.height=e.height)}setScissor(e){const{stateCache:t,gl:n}=_H.instance;t.scissorRect.x===e.x&&t.scissorRect.y===e.y&&t.scissorRect.width===e.width&&t.scissorRect.height===e.height||(n.scissor(e.x,e.y,e.width,e.height),t.scissorRect.x=e.x,t.scissorRect.y=e.y,t.scissorRect.width=e.width,t.scissorRect.height=e.height)}updateBuffer(e,t,n){if(this._isInRenderPass)console.error("Command 'updateBuffer' must be recorded outside a render pass.");else{const i=e.gpuBuffer;if(i){let s;s=void 0!==n?n:e.usage&Us.INDIRECT?0:t.byteLength,DH(_H.instance,i,t,0,s)}}}copyBuffersToTexture(e,t,n){if(this._isInRenderPass)console.error("Command 'copyBufferToTexture' must be recorded outside a render pass.");else{const i=t.gpuTexture;i&&GH(_H.instance,e,i,n)}}execute(e,t){for(let n=0;n<t;++n){const t=e[n];UH(_H.instance,t.cmdPackage),this._numDrawCalls+=t._numDrawCalls,this._numInstances+=t._numInstances,this._numTris+=t._numTris}}bindStates(){zH(_H.instance,this._curGPUPipelineState,this._curGPUInputAssembler,this._curGPUDescriptorSets,this._curDynamicOffsets,this._curDynamicStates),this._isStateInvalied=!1}}class JH extends Jo{constructor(...e){super(...e),this.numDrawCalls=0,this.numInstances=0,this.numTris=0}initialize(e){this._type=e.type}destroy(){}submit(e){for(let t=0;t<e.length;t++){const n=e[t];this.numDrawCalls+=n.numDrawCalls,this.numInstances+=n.numInstances,this.numTris+=n.numTris}}clear(){this.numDrawCalls=0,this.numInstances=0,this.numTris=0}}class ek extends ea{constructor(...e){super(...e),this._gpuRenderPass=null}get gpuRenderPass(){return this._gpuRenderPass}initialize(e){this._colorInfos=e.colorAttachments,this._depthStencilInfo=e.depthStencilAttachment,this._subpasses=e.subpasses,this._gpuRenderPass={colorAttachments:this._colorInfos,depthStencilAttachment:this._depthStencilInfo},this._hash=this.computeHash()}destroy(){this._gpuRenderPass=null}}class tk extends ia{get gpuSampler(){return this._gpuSampler}constructor(e,t){super(e,t),this._gpuSampler=null,this._gpuSampler={glSampler:null,minFilter:this._info.minFilter,magFilter:this._info.magFilter,mipFilter:this._info.mipFilter,addressU:this._info.addressU,addressV:this._info.addressV,addressW:this._info.addressW,glMinFilter:0,glMagFilter:0,glWrapS:0,glWrapT:0,glWrapR:0},function(e,t){const{gl:n}=e,i=n.createSampler();i&&(t.minFilter===Ys.LINEAR||t.minFilter===Ys.ANISOTROPIC?t.mipFilter===Ys.LINEAR||t.mipFilter===Ys.ANISOTROPIC?t.glMinFilter=n.LINEAR_MIPMAP_LINEAR:t.mipFilter===Ys.POINT?t.glMinFilter=n.LINEAR_MIPMAP_NEAREST:t.glMinFilter=n.LINEAR:t.mipFilter===Ys.LINEAR||t.mipFilter===Ys.ANISOTROPIC?t.glMinFilter=n.NEAREST_MIPMAP_LINEAR:t.mipFilter===Ys.POINT?t.glMinFilter=n.NEAREST_MIPMAP_NEAREST:t.glMinFilter=n.NEAREST,t.magFilter===Ys.LINEAR||t.magFilter===Ys.ANISOTROPIC?t.glMagFilter=n.LINEAR:t.glMagFilter=n.NEAREST,t.glWrapS=uH[t.addressU],t.glWrapT=uH[t.addressV],t.glWrapR=uH[t.addressW],t.glSampler=i,n.samplerParameteri(i,n.TEXTURE_MIN_FILTER,t.glMinFilter),n.samplerParameteri(i,n.TEXTURE_MAG_FILTER,t.glMagFilter),n.samplerParameteri(i,n.TEXTURE_WRAP_S,t.glWrapS),n.samplerParameteri(i,n.TEXTURE_WRAP_T,t.glWrapT),n.samplerParameteri(i,n.TEXTURE_WRAP_R,t.glWrapR),n.samplerParameterf(i,n.TEXTURE_MIN_LOD,0),n.samplerParameterf(i,n.TEXTURE_MAX_LOD,1e3))}(_H.instance,this._gpuSampler)}destroy(){this._gpuSampler&&(function(e,t){const{gl:n}=e;if(t.glSampler){n.deleteSampler(t.glSampler);const i=e.stateCache.glSamplerUnits;for(let e=0;e<i.length;++e)i[e]===t.glSampler&&(n.bindSampler(e,null),i[e]=null);t.glSampler=null}}(_H.instance,this._gpuSampler),this._gpuSampler=null)}}class nk extends ta{constructor(...e){super(...e),this._gpuShader=null}get gpuShader(){return this._gpuShader}initialize(e){this._name=e.name,this._stages=e.stages,this._attributes=e.attributes,this._blocks=e.blocks,this._samplers=e.samplers,this._gpuShader={name:e.name,blocks:e.blocks.slice(),samplerTextures:e.samplerTextures.slice(),subpassInputs:e.subpassInputs.slice(),gpuStages:new Array(e.stages.length),glProgram:null,glInputs:[],glUniforms:[],glBlocks:[],glSamplerTextures:[]};for(let t=0;t<e.stages.length;++t){const n=e.stages[t];this._gpuShader.gpuStages[t]={type:n.stage,source:n.source,glShader:null}}!function(e,t){const{gl:n}=e;for(let e=0;e<t.gpuStages.length;e++){const i=t.gpuStages[e];let s=0,r="",o=1;switch(i.type){case tr.VERTEX:r="VertexShader",s=n.VERTEX_SHADER;break;case tr.FRAGMENT:r="FragmentShader",s=n.FRAGMENT_SHADER;break;default:return void console.error("Unsupported ShaderType.")}const a=n.createShader(s);if(a&&(i.glShader=a,n.shaderSource(i.glShader,`#version 300 es\n${i.source}`),n.compileShader(i.glShader),!n.getShaderParameter(i.glShader,n.COMPILE_STATUS))){console.error(`${r} in '${t.name}' compilation failed.`),console.error("Shader source dump:",i.source.replace(/^|\n/g,(()=>`\n${o++} `))),console.error(n.getShaderInfoLog(i.glShader));for(let i=0;i<t.gpuStages.length;i++){const i=t.gpuStages[e];i.glShader&&(n.deleteShader(i.glShader),i.glShader=null)}return}}const i=n.createProgram();if(!i)return;t.glProgram=i;for(let e=0;e<t.gpuStages.length;e++){const i=t.gpuStages[e];n.attachShader(t.glProgram,i.glShader)}n.linkProgram(t.glProgram);for(let e=0;e<t.gpuStages.length;e++){const i=t.gpuStages[e];i.glShader&&(n.detachShader(t.glProgram,i.glShader),n.deleteShader(i.glShader),i.glShader=null)}if(!n.getProgramParameter(t.glProgram,n.LINK_STATUS))return console.error(`Failed to link shader '${t.name}'.`),void console.error(n.getProgramInfoLog(t.glProgram));m(`Shader '${t.name}' compilation succeeded.`);const s=n.getProgramParameter(t.glProgram,n.ACTIVE_ATTRIBUTES);t.glInputs=new Array(s);for(let e=0;e<s;++e){const i=n.getActiveAttrib(t.glProgram,e);if(i){let s;const r=i.name.indexOf("[");s=-1!==r?i.name.substr(0,r):i.name;const o=n.getAttribLocation(t.glProgram,s),a=mH(i.type,n),c=gH(i.type,n);t.glInputs[e]={name:s,type:a,stride:c,count:i.size,size:c*i.size,glType:i.type,glLoc:o}}}const r=n.getProgramParameter(t.glProgram,n.ACTIVE_UNIFORM_BLOCKS);let o,a,c,l;if(r){t.glBlocks=new Array(r);for(let i=0;i<r;++i){o=n.getActiveUniformBlockName(t.glProgram,i);const s=o.indexOf("[");-1!==s&&(o=o.substr(0,s)),l=null;for(let e=0;e<t.blocks.length;e++)if(t.blocks[e].name===o){l=t.blocks[e];break}if(l){a=i,c=n.getActiveUniformBlockParameter(t.glProgram,a,n.UNIFORM_BLOCK_DATA_SIZE);const s=l.binding+(e.bindingMappingInfo.bufferOffsets[l.set]||0);n.uniformBlockBinding(t.glProgram,a,s),t.glBlocks[i]={set:l.set,binding:l.binding,idx:a,name:o,size:c,glBinding:s}}else d(`Block '${o}' does not bound`)}}for(let e=0;e<t.subpassInputs.length;++e){const n=t.subpassInputs[e];t.samplerTextures.push(new Wr(n.set,n.binding,n.name,Bs.SAMPLER2D,n.count))}if(t.samplerTextures.length>0){t.glSamplerTextures=new Array(t.samplerTextures.length);for(let e=0;e<t.samplerTextures.length;++e){const i=t.samplerTextures[e];t.glSamplerTextures[e]={set:i.set,binding:i.binding,name:i.name,type:i.type,count:i.count,units:[],glUnits:null,glType:fH(i.type,n),glLoc:null}}}const h=[],_=[],u=e.stateCache.texUnitCacheMap;let p=0;for(let n=0;n<t.blocks.length;++n)t.blocks[n].set===e.bindingMappingInfo.flexibleSet&&p++;let f=0;for(let i=0;i<t.samplerTextures.length;++i){const s=t.samplerTextures[i],r=n.getUniformLocation(t.glProgram,s.name);if(r&&-1!==r.id&&(h.push(t.glSamplerTextures[i]),_.push(r)),void 0===u[s.name]){let t=s.binding+e.bindingMappingInfo.samplerOffsets[s.set]+f;s.set===e.bindingMappingInfo.flexibleSet&&(t-=p),u[s.name]=t%e.capabilities.maxTextureUnits,f+=s.count-1}}if(h.length){const i=[];for(let t=0;t<h.length;++t){const n=h[t];let s=u[n.name];if(void 0!==s){n.glLoc=_[t];for(let t=0;t<n.count;++t){for(;i[s];)s=(s+1)%e.capabilities.maxTextureUnits;n.units.push(s),i[s]=!0}}}let s=0;for(let t=0;t<h.length;++t){const n=h[t];if(!n.glLoc){for(n.glLoc=_[t];i[s];)s++;for(let t=0;t<n.count;++t){for(;i[s];)s=(s+1)%e.capabilities.maxTextureUnits;void 0===u[n.name]&&(u[n.name]=s),n.units.push(s),i[s]=!0}}}e.stateCache.glProgram!==t.glProgram&&n.useProgram(t.glProgram);for(let e=0;e<h.length;e++){const t=h[e];t.glUnits=new Int32Array(t.units),n.uniform1iv(t.glLoc,t.glUnits)}e.stateCache.glProgram!==t.glProgram&&n.useProgram(e.stateCache.glProgram)}t.glSamplerTextures=h}(_H.instance,this._gpuShader)}destroy(){var e,t;this._gpuShader&&(e=_H.instance,(t=this._gpuShader).glProgram&&(e.gl.deleteProgram(t.glProgram),e.stateCache.glProgram===t.glProgram&&(e.gl.useProgram(null),e.stateCache.glProgram=null),t.glProgram=null),this._gpuShader=null)}}class ik{constructor(){this.glArrayBuffer=null,this.glElementArrayBuffer=null,this.glUniformBuffer=null,this.glBindUBOs=[],this.glBindUBOOffsets=[],this.glVAO=null,this.texUnit=0,this.glTexUnits=[],this.glSamplerUnits=[],this.glRenderbuffer=null,this.glFramebuffer=null,this.glReadFramebuffer=null,this.viewport=new Rr,this.scissorRect=new Tr(0,0,0,0),this.rs=new VG,this.dss=new jG,this.bs=new qG,this.glProgram=null,this.glEnabledAttribLocs=[],this.glCurrentAttribLocs=[],this.texUnitCacheMap={}}initialize(e,t,n){for(let t=0;t<e;++t)this.glTexUnits.push({glTexture:null});this.glSamplerUnits.length=e,this.glSamplerUnits.fill(null),this.glBindUBOs.length=t,this.glBindUBOs.fill(null),this.glBindUBOOffsets.length=t,this.glBindUBOOffsets.fill(0),this.glEnabledAttribLocs.length=n,this.glEnabledAttribLocs.fill(!1),this.glCurrentAttribLocs.length=n,this.glCurrentAttribLocs.fill(!1)}}class sk extends na{constructor(...e){super(...e),this._gpuTexture=null}get gpuTexture(){return this._gpuTexture}initialize(e,t){"texture"in e?console.log("WebGL2 does not support texture view."):(this._type=e.type,this._usage=e.usage,this._format=e.format,this._width=e.width,this._height=e.height,this._depth=e.depth,this._layerCount=e.layerCount,this._levelCount=e.levelCount,this._samples=e.samples,this._flags=e.flags,this._isPowerOf2=wo(this._width)&&wo(this._height),this._size=Ro(this._format,this.width,this.height,this.depth,this._levelCount)*this._layerCount,this._gpuTexture={type:this._type,format:this._format,usage:this._usage,width:this._width,height:this._height,depth:this._depth,size:this._size,arrayLayer:this._layerCount,mipLevel:this._levelCount,samples:this._samples,flags:this._flags,isPowerOf2:this._isPowerOf2,glTarget:0,glInternalFmt:0,glFormat:0,glType:0,glUsage:0,glTexture:null,glRenderbuffer:null,glWrapS:0,glWrapT:0,glMinFilter:0,glMagFilter:0,isSwapchainTexture:t||!1},OH(_H.instance,this._gpuTexture),_H.instance.memoryStatus.textureSize+=this._size)}destroy(){this._gpuTexture&&(MH(_H.instance,this._gpuTexture),_H.instance.memoryStatus.textureSize-=this._size,this._gpuTexture=null)}resize(e,t){const n=this._size;this._width=e,this._height=t,this._size=Ro(this._format,this.width,this.height,this.depth,this._levelCount)*this._layerCount,this._gpuTexture&&(this._gpuTexture.width=e,this._gpuTexture.height=t,this._gpuTexture.size=this._size,function(e,t){if(!t.size)return;const{gl:n}=e;let i=t.width,s=t.height;switch(t.type){case Vs.TEX2D:{t.glTarget=n.TEXTURE_2D;const r=Math.max(i,s);if(r>e.capabilities.maxTextureSize&&E(9100,r,e.capabilities.maxTextureSize),t.samples===qs.ONE){const r=e.stateCache.glTexUnits[e.stateCache.texUnit];if(r.glTexture!==t.glTexture&&(n.bindTexture(n.TEXTURE_2D,t.glTexture),r.glTexture=t.glTexture),To[t.format].isCompressed)for(let e=0;e<t.mipLevel;++e){const r=Io(t.format,i,s,1),o=new Uint8Array(r);n.compressedTexImage2D(n.TEXTURE_2D,e,t.glInternalFmt,i,s,0,o),i=Math.max(1,i>>1),s=Math.max(1,s>>1)}else MH(e,t),OH(e,t)}else t.glRenderbuffer&&(e.stateCache.glRenderbuffer!==t.glRenderbuffer&&(n.bindRenderbuffer(n.RENDERBUFFER,t.glRenderbuffer),e.stateCache.glRenderbuffer=t.glRenderbuffer),n.renderbufferStorageMultisample(n.RENDERBUFFER,t.samples,t.glInternalFmt,t.width,t.height));break}case Vs.CUBE:{t.type=Vs.CUBE,t.glTarget=n.TEXTURE_CUBE_MAP;const r=Math.max(i,s);r>e.capabilities.maxCubeMapTextureSize&&E(9100,r,e.capabilities.maxTextureSize);const o=e.stateCache.glTexUnits[e.stateCache.texUnit];if(o.glTexture!==t.glTexture&&(n.bindTexture(n.TEXTURE_CUBE_MAP,t.glTexture),o.glTexture=t.glTexture),To[t.format].isCompressed)for(let e=0;e<6;++e){i=t.width,s=t.height;for(let r=0;r<t.mipLevel;++r){const o=Io(t.format,i,s,1),a=new Uint8Array(o);n.compressedTexImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+e,r,t.glInternalFmt,i,s,0,a),i=Math.max(1,i>>1),s=Math.max(1,s>>1)}}else MH(e,t),OH(e,t);break}default:console.error("Unsupported TextureType, create texture failed."),t.type=Vs.TEX2D,t.glTarget=n.TEXTURE_2D}}(_H.instance,this._gpuTexture),_H.instance.memoryStatus.textureSize-=n,_H.instance.memoryStatus.textureSize+=this._size)}initAsSwapchainTexture(e){const t=new Gr;t.format=e.format,t.usage=To[e.format].hasDepth?js.DEPTH_STENCIL_ATTACHMENT:js.COLOR_ATTACHMENT,t.width=e.width,t.height=e.height,this.initialize(t,!0)}}const rk="webglcontextlost";function ok(e,t){const n=["","WEBKIT_","MOZ_"];for(let i=0;i<n.length;++i){const s=e.getExtension(n[i]+t);if(s)return s}return null}function ak(e){const t={EXT_texture_filter_anisotropic:ok(e,"EXT_texture_filter_anisotropic"),EXT_color_buffer_half_float:ok(e,"EXT_color_buffer_half_float"),EXT_color_buffer_float:ok(e,"EXT_color_buffer_float"),WEBGL_compressed_texture_etc1:ok(e,"WEBGL_compressed_texture_etc1"),WEBGL_compressed_texture_etc:ok(e,"WEBGL_compressed_texture_etc"),WEBGL_compressed_texture_pvrtc:ok(e,"WEBGL_compressed_texture_pvrtc"),WEBGL_compressed_texture_astc:ok(e,"WEBGL_compressed_texture_astc"),WEBGL_compressed_texture_s3tc:ok(e,"WEBGL_compressed_texture_s3tc"),WEBGL_compressed_texture_s3tc_srgb:ok(e,"WEBGL_compressed_texture_s3tc_srgb"),WEBGL_debug_shaders:ok(e,"WEBGL_debug_shaders"),WEBGL_lose_context:ok(e,"WEBGL_lose_context"),WEBGL_debug_renderer_info:ok(e,"WEBGL_debug_renderer_info"),OES_texture_half_float_linear:ok(e,"OES_texture_half_float_linear"),OES_texture_float_linear:ok(e,"OES_texture_float_linear"),WEBGL_multi_draw:null,useVAO:!0};return Zt.os!==qt.ANDROID&&Zt.os!==qt.IOS&&(t.WEBGL_multi_draw=ok(e,"WEBGL_multi_draw")),t}class ck extends Wo{constructor(...e){super(...e),this.stateCache=new ik,this.nullTex2D=null,this.nullTexCube=null,this._canvas=null,this._webGL2ContextLostHandler=null,this._extensions=null}get extensions(){return this._extensions}initialize(e){this._canvas=e.windowHandle,this._webGL2ContextLostHandler=this._onWebGLContextLost.bind(this),this._canvas.addEventListener(rk,this._onWebGLContextLost);const t=_H.instance.gl;this.stateCache.initialize(_H.instance.capabilities.maxTextureUnits,_H.instance.capabilities.maxUniformBufferBindings,_H.instance.capabilities.maxVertexAttributes),this._extensions=ak(t),function(e){e.activeTexture(e.TEXTURE0),e.pixelStorei(e.PACK_ALIGNMENT,1),e.pixelStorei(e.UNPACK_ALIGNMENT,1),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,!1),e.bindFramebuffer(e.FRAMEBUFFER,null),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),e.frontFace(e.CCW),e.polygonOffset(0,0),e.enable(e.DEPTH_TEST),e.depthMask(!0),e.depthFunc(e.LESS),e.stencilFuncSeparate(e.FRONT,e.ALWAYS,1,65535),e.stencilOpSeparate(e.FRONT,e.KEEP,e.KEEP,e.KEEP),e.stencilMaskSeparate(e.FRONT,65535),e.stencilFuncSeparate(e.BACK,e.ALWAYS,1,65535),e.stencilOpSeparate(e.BACK,e.KEEP,e.KEEP,e.KEEP),e.stencilMaskSeparate(e.BACK,65535),e.disable(e.STENCIL_TEST),e.disable(e.SAMPLE_ALPHA_TO_COVERAGE),e.disable(e.BLEND),e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ONE,e.ZERO,e.ONE,e.ZERO),e.colorMask(!0,!0,!0,!0),e.blendColor(0,0,0,0)}(t);const n=zs.RGBA8;let i=zs.DEPTH_STENCIL;const s=t.getParameter(t.DEPTH_BITS),r=t.getParameter(t.STENCIL_BITS);s&&r?i=zs.DEPTH_STENCIL:s&&(i=zs.DEPTH),this._colorTexture=new sk,this._colorTexture.initAsSwapchainTexture({swapchain:this,format:n,width:e.width,height:e.height}),this._depthStencilTexture=new sk,this._depthStencilTexture.initAsSwapchainTexture({swapchain:this,format:i,width:e.width,height:e.height}),this.nullTex2D=_H.instance.createTexture(new Gr(Vs.TEX2D,js.SAMPLED,zs.RGBA8,2,2,Ws.NONE)),this.nullTexCube=_H.instance.createTexture(new Gr(Vs.CUBE,js.SAMPLED,zs.RGBA8,2,2,Ws.NONE,6));const o=new Ir;o.texExtent.width=2,o.texExtent.height=2;const a=new Uint8Array(this.nullTex2D.size);a.fill(0),_H.instance.copyBuffersToTexture([a],this.nullTex2D,[o]),o.texSubres.layerCount=6,_H.instance.copyBuffersToTexture([a,a,a,a,a,a],this.nullTexCube,[o])}destroy(){this._canvas&&this._webGL2ContextLostHandler&&(this._canvas.removeEventListener(rk,this._webGL2ContextLostHandler),this._webGL2ContextLostHandler=null),this.nullTex2D&&(this.nullTex2D.destroy(),this.nullTex2D=null),this.nullTexCube&&(this.nullTexCube.destroy(),this.nullTexCube=null),this._extensions=null,this._canvas=null}resize(e,t,n){this._colorTexture.width===e&&this._colorTexture.height===t||(m(`Resizing swapchain: ${e}x${t}`),this._canvas.width=e,this._canvas.height=t,this._colorTexture.resize(e,t),this._depthStencilTexture.resize(e,t))}_onWebGLContextLost(e){T(11e3),p(e)}}class lk extends jo{constructor(...e){super(...e),this._swapchain=null,this._context=null}get gl(){return this._context}get extensions(){return this._swapchain.extensions}get stateCache(){return this._swapchain.stateCache}get nullTex2D(){return this._swapchain.nullTex2D}get nullTexCube(){return this._swapchain.nullTexCube}initialize(e){_H.setInstance(this),this._gfxAPI=Ms.WEBGL2,this._bindingMappingInfo=e.bindingMappingInfo,this._bindingMappingInfo.bufferOffsets.length||this._bindingMappingInfo.bufferOffsets.push(0),this._bindingMappingInfo.samplerOffsets.length||this._bindingMappingInfo.samplerOffsets.push(0);const t=this._context=function(e){let t=null;try{const n={alpha:Ue.ENABLE_TRANSPARENT_CANVAS,antialias:Ue.ENABLE_WEBGL_ANTIALIAS,depth:!0,stencil:!0,premultipliedAlpha:!1,preserveDrawingBuffer:!1,powerPreference:"default",failIfMajorPerformanceCaveat:!1};t=e.getContext("webgl2",n)}catch(e){return null}return t}(jo.canvas);if(!t)return console.error("This device does not support WebGL."),!1;this._queue=this.createQueue(new mo(fr.GRAPHICS)),this._cmdBuff=this.createCommandBuffer(new fo(this._queue)),this._caps.maxVertexAttributes=t.getParameter(t.MAX_VERTEX_ATTRIBS),this._caps.maxVertexUniformVectors=t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),this._caps.maxFragmentUniformVectors=t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS),this._caps.maxTextureUnits=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),this._caps.maxVertexTextureUnits=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),this._caps.maxUniformBufferBindings=t.getParameter(t.MAX_UNIFORM_BUFFER_BINDINGS),this._caps.maxUniformBlockSize=t.getParameter(t.MAX_UNIFORM_BLOCK_SIZE),this._caps.maxTextureSize=t.getParameter(t.MAX_TEXTURE_SIZE),this._caps.maxCubeMapTextureSize=t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),this._caps.uboOffsetAlignment=t.getParameter(t.UNIFORM_BUFFER_OFFSET_ALIGNMENT);const n=t.getSupportedExtensions();let i="";if(n)for(const e of n)i+=`${e} `;const s=ak(t);s.WEBGL_debug_renderer_info?(this._renderer=t.getParameter(s.WEBGL_debug_renderer_info.UNMASKED_RENDERER_WEBGL),this._vendor=t.getParameter(s.WEBGL_debug_renderer_info.UNMASKED_VENDOR_WEBGL)):(this._renderer=t.getParameter(t.RENDERER),this._vendor=t.getParameter(t.VENDOR));const r=t.getParameter(t.VERSION);this._features.fill(!1),this._features[Ls.TEXTURE_FLOAT]=!0,this._features[Ls.TEXTURE_HALF_FLOAT]=!0,this._features[Ls.FORMAT_R11G11B10F]=!0,this._features[Ls.FORMAT_SRGB]=!0,this._features[Ls.FORMAT_RGB8]=!0,this._features[Ls.ELEMENT_INDEX_UINT]=!0,this._features[Ls.INSTANCED_ARRAYS]=!0,this._features[Ls.MULTIPLE_RENDER_TARGETS]=!0,this._features[Ls.BLEND_MINMAX]=!0,s.EXT_color_buffer_float&&(this._features[Ls.COLOR_FLOAT]=!0,this._features[Ls.COLOR_HALF_FLOAT]=!0),s.OES_texture_float_linear&&(this._features[Ls.TEXTURE_FLOAT_LINEAR]=!0),s.OES_texture_half_float_linear&&(this._features[Ls.TEXTURE_HALF_FLOAT_LINEAR]=!0);let o="";return s.WEBGL_compressed_texture_etc1&&(this._features[Ls.FORMAT_ETC1]=!0,o+="etc1 "),s.WEBGL_compressed_texture_etc&&(this._features[Ls.FORMAT_ETC2]=!0,o+="etc2 "),s.WEBGL_compressed_texture_s3tc&&(this._features[Ls.FORMAT_DXT]=!0,o+="dxt "),s.WEBGL_compressed_texture_pvrtc&&(this._features[Ls.FORMAT_PVRTC]=!0,o+="pvrtc "),s.WEBGL_compressed_texture_astc&&(this._features[Ls.FORMAT_ASTC]=!0,o+="astc "),m("WebGL2 device initialized."),m(`RENDERER: ${this._renderer}`),m(`VENDOR: ${this._vendor}`),m(`VERSION: ${r}`),m(`COMPRESSED_FORMAT: ${o}`),m(`EXTENSIONS: ${i}`),!0}destroy(){this._queue&&(this._queue.destroy(),this._queue=null),this._cmdBuff&&(this._cmdBuff.destroy(),this._cmdBuff=null);const e=this._samplers.values();let t=e.next();for(;!t.done;)t.value.destroy(),t=e.next();this._swapchain=null}flushCommands(e){}acquire(e){}present(){const e=this._queue;this._numDrawCalls=e.numDrawCalls,this._numInstances=e.numInstances,this._numTris=e.numTris,e.clear()}createCommandBuffer(e){const t=new(e.type===gr.PRIMARY?QH:WH);return t.initialize(e),t}createSwapchain(e){const t=new ck;return this._swapchain=t,t.initialize(e),t}createBuffer(e){const t=new kH;return t.initialize(e),t}createTexture(e){const t=new sk;return t.initialize(e),t}createDescriptorSet(e){const t=new lH;return t.initialize(e),t}createShader(e){const t=new nk;return t.initialize(e),t}createInputAssembler(e){const t=new XH;return t.initialize(e),t}createRenderPass(e){const t=new ek;return t.initialize(e),t}createFramebuffer(e){const t=new qH;return t.initialize(e),t}createDescriptorSetLayout(e){const t=new YH;return t.initialize(e),t}createPipelineLayout(e){const t=new KH;return t.initialize(e),t}createPipelineState(e){const t=new ZH;return t.initialize(e),t}createQueue(e){const t=new JH;return t.initialize(e),t}getSampler(e){const t=ia.computeHash(e);return this._samplers.has(t)||this._samplers.set(t,new tk(e,t)),this._samplers.get(t)}getGlobalBarrier(e){const t=sa.computeHash(e);return this._globalBarriers.has(t)||this._globalBarriers.set(t,new sa(e,t)),this._globalBarriers.get(t)}getTextureBarrier(e){const t=ra.computeHash(e);return this._textureBarriers.has(t)||this._textureBarriers.set(t,new ra(e,t)),this._textureBarriers.get(t)}copyBuffersToTexture(e,t,n){GH(this,e,t.gpuTexture,n)}copyTextureToBuffers(e,t,n){!function(e,t,n,i){const{gl:s}=e,r=e.stateCache,o=s.createFramebuffer();s.bindFramebuffer(s.FRAMEBUFFER,o);let a=0,c=0,l=1,h=1;switch(t.glTarget){case s.TEXTURE_2D:for(let e=0;e<i.length;e++){const r=i[e];s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,t.glTarget,t.glTexture,r.texSubres.mipLevel),a=r.texOffset.x,c=r.texOffset.y,l=r.texExtent.width,h=r.texExtent.height,s.readPixels(a,c,l,h,t.glFormat,t.glType,n[e])}break;default:console.error("Unsupported GL texture type, copy texture to buffers failed.")}s.bindFramebuffer(s.FRAMEBUFFER,null),r.glFramebuffer=null,s.deleteFramebuffer(o)}(this,e.gpuTexture,t,n)}copyTexImagesToTexture(e,t,n){!function(e,t,n,i){const{gl:s}=e,r=e.stateCache.glTexUnits[e.stateCache.texUnit];r.glTexture!==n.glTexture&&(s.bindTexture(n.glTarget,n.glTexture),r.glTexture=n.glTexture);let o=0,a=0;switch(n.glTarget){case s.TEXTURE_2D:for(let e=0;e<i.length;e++){const r=i[e];s.texSubImage2D(s.TEXTURE_2D,r.texSubres.mipLevel,r.texOffset.x,r.texOffset.y,n.glFormat,n.glType,t[o++])}break;case s.TEXTURE_CUBE_MAP:for(let e=0;e<i.length;e++){const r=i[e],c=r.texSubres.baseArrayLayer+r.texSubres.layerCount;for(a=r.texSubres.baseArrayLayer;a<c;++a)s.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+a,r.texSubres.mipLevel,r.texOffset.x,r.texOffset.y,n.glFormat,n.glType,t[o++])}break;default:console.error("Unsupported GL texture type, copy buffer to texture failed.")}n.flags&Ws.GEN_MIPMAP&&s.generateMipmap(n.glTarget)}(this,e,t.gpuTexture,n)}}var hk,_k,uk,pk,dk;e("WebGL2Device",lk),i.WebGL2Device=lk,function(e){e[e.positions=yr.ATTR_POSITION]="positions",e[e.normals=yr.ATTR_NORMAL]="normals",e[e.uvs=yr.ATTR_TEX_COORD]="uvs",e[e.colors=yr.ATTR_COLOR]="colors"}(hk||(hk={}));class fk{constructor(){this._arrayBufferOrPaddings=[],this._length=0}setNextAlignment(e){if(0!==e){const t=this._length%e;if(0!==t){const n=e-t;this._arrayBufferOrPaddings.push(n),this._length+=n}}}addBuffer(e){const t=this._length;return this._arrayBufferOrPaddings.push(e),this._length+=e.byteLength,t}getLength(){return this._length}getCombined(){const e=new Uint8Array(this._length);let t=0;return this._arrayBufferOrPaddings.forEach((n=>{"number"==typeof n?t+=n:(e.set(new Uint8Array(n),t),t+=n.byteLength)})),e.buffer}}class mk{constructor(e,t){if(this._mesh=void 0,this._subMeshRenderings=[],this._mesh=e,!this._mesh.struct.morph)return;const n=this._mesh.struct.primitives.length;this._subMeshRenderings=new Array(n).fill(null);for(let e=0;e<n;++e){const n=this._mesh.struct.morph.subMeshMorphs[e];n&&(n.targets.length>qd.MAX_MORPH_TARGET_COUNT?this._subMeshRenderings[e]=new vk(this._mesh,e,this._mesh.struct.morph,t):this._subMeshRenderings[e]=new gk(this._mesh,e,this._mesh.struct.morph,t))}}createInstance(){const e=this._mesh.struct.primitives.length,t=new Array(e);for(let s=0;s<e;++s){var n,i;t[s]=null!==(n=null===(i=this._subMeshRenderings[s])||void 0===i?void 0:i.createInstance())&&void 0!==n?n:null}return{setWeights(e,n){var i;null===(i=t[e])||void 0===i||i.setWeights(n)},requiredPatches:e=>{this._mesh.struct.morph;const n=this._mesh.struct.morph.subMeshMorphs[e],i=t[e];if(null===i)return null;const s=[{name:"CC_USE_MORPH",value:!0},{name:"CC_MORPH_TARGET_COUNT",value:n.targets.length}];return n.attributes.includes(yr.ATTR_POSITION)&&s.push({name:"CC_MORPH_TARGET_HAS_POSITION",value:!0}),n.attributes.includes(yr.ATTR_NORMAL)&&s.push({name:"CC_MORPH_TARGET_HAS_NORMAL",value:!0}),n.attributes.includes(yr.ATTR_TANGENT)&&s.push({name:"CC_MORPH_TARGET_HAS_TANGENT",value:!0}),s.push(...i.requiredPatches()),s},adaptPipelineState:(e,n)=>{var i;null===(i=t[e])||void 0===i||i.adaptPipelineState(n)},destroy:()=>{for(const e of t)null==e||e.destroy()}}}}class gk{constructor(e,t,n,i){this._gfxDevice=void 0,this._subMeshMorph=void 0,this._textureInfo=void 0,this._attributes=void 0,this._verticesCount=void 0,this._gfxDevice=i;const s=n.subMeshMorphs[t];this._subMeshMorph=s,Ck(e,t,i);const r=e.struct.vertexBundles[e.struct.primitives[t].vertexBundelIndices[0]].view.count;this._verticesCount=r;const o=s.targets.length,a=Sk(i,r*o);this._textureInfo={width:a.width,height:a.height},this._attributes=s.attributes.map(((t,n)=>{const i=a.create(),o=i.valueView;return s.targets.forEach(((t,i)=>{const s=t.displacements[n],a=new Float32Array(e.data.buffer,e.data.byteOffset+s.offset,s.count),c=r*i*4;for(let e=0;e<r;++e)o[c+4*e+0]=a[3*e+0],o[c+4*e+1]=a[3*e+1],o[c+4*e+2]=a[3*e+2]})),i.updatePixels(),{name:t,morphTexture:i}}))}destroy(){for(const e of this._attributes)e.morphTexture.destroy()}createInstance(){const e=new xk(this._gfxDevice,this._subMeshMorph.targets.length);return e.setMorphTextureInfo(this._textureInfo.width,this._textureInfo.height),e.setVerticesCount(this._verticesCount),e.commit(),{setWeights:t=>{e.setWeights(t),e.commit()},requiredPatches:()=>[{name:"CC_MORPH_TARGET_USE_TEXTURE",value:!0}],adaptPipelineState:t=>{for(const e of this._attributes){let n;switch(e.name){case yr.ATTR_POSITION:n=Zd;break;case yr.ATTR_NORMAL:n=ef;break;case yr.ATTR_TANGENT:n=sf;break;default:p("Unexpected attribute!")}void 0!==n&&(t.bindSampler(n,e.morphTexture.sampler),t.bindTexture(n,e.morphTexture.texture))}t.bindBuffer(qd.BINDING,e.buffer),t.update()},destroy:()=>{}}}}class vk{constructor(e,t,n,i){this._gfxDevice=void 0,this._attributes=[],this._gfxDevice=i;const s=n.subMeshMorphs[t];Ck(e,t,i),this._attributes=s.attributes.map(((t,n)=>({name:t,targets:s.targets.map((t=>({displacements:new Float32Array(e.data.buffer,e.data.byteOffset+t.displacements[n].offset,t.displacements[n].count)})))})))}get data(){return this._attributes}createInstance(){return new yk(this,this._attributes[0].targets[0].displacements.length/3,this._gfxDevice)}}class yk{constructor(e,t,n){this._attributes=void 0,this._owner=void 0,this._morphUniforms=void 0,this._owner=e,this._morphUniforms=new xk(n,0);const i=Sk(n,t);this._morphUniforms.setMorphTextureInfo(i.width,i.height),this._morphUniforms.commit(),this._attributes=this._owner.data.map((e=>{const t=i.create();return{attributeName:e.name,morphTexture:t}}))}setWeights(e){for(let t=0;t<this._attributes.length;++t){const n=this._attributes[t],i=n.morphTexture.valueView,s=this._owner.data[t];e.length,s.targets.length;for(let t=0;t<s.targets.length;++t){const n=s.targets[t].displacements,r=e[t],o=n.length/3;if(0===t)for(let e=0;e<o;++e)i[4*e+0]=n[3*e+0]*r,i[4*e+1]=n[3*e+1]*r,i[4*e+2]=n[3*e+2]*r;else if(0!==r)for(let e=0;e<o;++e)i[4*e+0]+=n[3*e+0]*r,i[4*e+1]+=n[3*e+1]*r,i[4*e+2]+=n[3*e+2]*r}n.morphTexture.updatePixels()}}requiredPatches(){return[{name:"CC_MORPH_TARGET_USE_TEXTURE",value:!0},{name:"CC_MORPH_PRECOMPUTED",value:!0}]}adaptPipelineState(e){for(const t of this._attributes){let n;switch(t.attributeName){case yr.ATTR_POSITION:n=Zd;break;case yr.ATTR_NORMAL:n=ef;break;case yr.ATTR_TANGENT:n=sf;break;default:p("Unexpected attribute!")}void 0!==n&&(e.bindSampler(n,t.morphTexture.sampler),e.bindTexture(n,t.morphTexture.texture))}e.bindBuffer(qd.BINDING,this._morphUniforms.buffer),e.update()}destroy(){this._morphUniforms.destroy();for(let e=0;e<this._attributes.length;++e)this._attributes[e].morphTexture.destroy()}}class xk{constructor(e,t){this._targetCount=void 0,this._localBuffer=void 0,this._remoteBuffer=void 0,this._targetCount=t,this._localBuffer=new DataView(new ArrayBuffer(qd.SIZE)),this._remoteBuffer=e.createBuffer(new Lr(Us.UNIFORM|Us.TRANSFER_DST,ks.HOST|ks.DEVICE,qd.SIZE,qd.SIZE))}destroy(){this._remoteBuffer.destroy()}get buffer(){return this._remoteBuffer}setWeights(e){e.length,this._targetCount;for(let t=0;t<e.length;++t)this._localBuffer.setFloat32(qd.OFFSET_OF_WEIGHTS+4*t,e[t],i.sys.isLittleEndian)}setMorphTextureInfo(e,t){this._localBuffer.setFloat32(qd.OFFSET_OF_DISPLACEMENT_TEXTURE_WIDTH,e,i.sys.isLittleEndian),this._localBuffer.setFloat32(qd.OFFSET_OF_DISPLACEMENT_TEXTURE_HEIGHT,t,i.sys.isLittleEndian)}setVerticesCount(e){this._localBuffer.setFloat32(qd.OFFSET_OF_VERTICES_COUNT,e,i.sys.isLittleEndian)}commit(){this._remoteBuffer.update(this._localBuffer.buffer)}}function Sk(e,t){let n,i,s,r;e.hasFeature(Ls.TEXTURE_FLOAT)?(n=t,s=16,i=ym.PixelFormat.RGBA32F,r=Float32Array):(n=4*t,s=4,i=ym.PixelFormat.RGBA8888,r=Uint8Array);const{width:o,height:a}=function(e){e<5&&(e=5);const t=gn(yn(e)),n=t>>1;return{width:1<<(1&t?n+1:n),height:1<<n}}(n);return{width:o,height:a,create:()=>{const t=new ArrayBuffer(o*a*s),n=new Float32Array(t),c=r===Float32Array?n:new r(t),l=new jf({width:o,height:a,_data:c,_compressed:!1,format:i}),h=new ym;h.setFilters(ym.Filter.NEAREST,ym.Filter.NEAREST),h.setMipFilter(ym.Filter.NONE),h.setWrapMode(ym.WrapMode.CLAMP_TO_EDGE,ym.WrapMode.CLAMP_TO_EDGE,ym.WrapMode.CLAMP_TO_EDGE),h.image=l,h.getGFXTexture()||p("Unexpected: failed to create morph texture?");const _=e.getSampler(h.getSamplerInfo());return{get texture(){return h.getGFXTexture()},get sampler(){return _},get valueView(){return n},destroy(){h.destroy()},updatePixels(){h.uploadData(c)}}}}}function Ck(e,t,n){e.renderingSubMeshes[t].enableVertexIdChannel(n)}function Tk(e){switch(e){case 1:return Uint8Array;case 2:return Uint16Array;case 4:return Uint32Array;default:return Uint8Array}}const bk=new ri,Ek=new ri,Ak=new Uint8Array;let Pk=e("Mesh",Zc("cc.Mesh")((pk=Bc((uk=class extends bh{get _nativeAsset(){return this._data.buffer}set _nativeAsset(e){this._data=new Uint8Array(e)}get subMeshCount(){const e=this.renderingSubMeshes;return e?e.length:0}get minPosition(){return this.struct.minPosition}get maxPosition(){return this.struct.maxPosition}get struct(){return this._struct}get data(){return this._data}get hash(){return this._hash||(this._hash=Ko(this._data,666)),this._hash}get jointBufferIndices(){return this._jointBufferIndices?this._jointBufferIndices:this._jointBufferIndices=this._struct.primitives.map((e=>e.jointMapIndex||0))}get renderingSubMeshes(){return this.initialize(),this._renderingSubMeshes}constructor(){super(),this.morphRendering=null,Fc(this,"_struct",pk,this),Fc(this,"_hash",dk,this),this._data=Ak,this._initialized=!1,this._renderingSubMeshes=null,this._boneSpaceBounds=new Map,this._jointBufferIndices=null}onLoaded(){this.initialize()}initialize(){if(this._initialized)return;this._initialized=!0;const{buffer:e}=this._data,t=i.director.root.device,n=this._createVertexBuffers(t,e),s=[];for(let i=0;i<this._struct.primitives.length;i++){const r=this._struct.primitives[i];if(0===r.vertexBundelIndices.length)continue;let o=null,a=null;if(r.indexView){const n=r.indexView;let i=n.stride,s=n.length;if(4===i&&!t.hasFeature(Ls.ELEMENT_INDEX_UINT)){const e=this._struct.vertexBundles[r.vertexBundelIndices[0]].view.count;if(e>=65536){T(10001,e,65536);continue}i>>=1,s>>=1}o=t.createBuffer(new Lr(Us.INDEX,ks.DEVICE,s,i)),a=new(Tk(n.stride))(e,n.offset,n.count),n.stride!==i&&(a=Tk(i).from(a)),o.update(a)}const c=r.vertexBundelIndices.map((e=>n[e])),l=[];if(r.vertexBundelIndices.length>0){const e=r.vertexBundelIndices[0],t=this._struct.vertexBundles[e].attributes;for(let e=0;e<t.length;++e){const n=t[e];l[e]=new Qr(n.name,n.format,n.isNormalized,n.stream,n.isInstanced,n.location)}}const h=new sT(c,l,r.primitiveMode,o);h.mesh=this,h.subMeshIdx=i,s.push(h)}this._renderingSubMeshes=s,this._struct.morph&&(this.morphRendering=function(e,t){return new mk(e,t)}(this,t))}destroy(){return this.destroyRenderingMesh(),super.destroy()}destroyRenderingMesh(){if(this._renderingSubMeshes){for(let e=0;e<this._renderingSubMeshes.length;e++)this._renderingSubMeshes[e].destroy();this._renderingSubMeshes=null,this._initialized=!1}}assign(e,t){this.reset({struct:e,data:t})}reset(e){this.destroyRenderingMesh(),this._struct=e.struct,this._data=e.data,this._hash=0}getBoneSpaceBounds(e){if(this._boneSpaceBounds.has(e.hash))return this._boneSpaceBounds.get(e.hash);const t=[];this._boneSpaceBounds.set(e.hash,t);const n=[],{bindposes:i}=e;for(let e=0;e<i.length;e++)t.push(new Ac(1/0,1/0,1/0,-1/0,-1/0,-1/0)),n.push(!1);const{primitives:s}=this._struct;for(let e=0;e<s.length;e++){const s=this.readAttribute(e,yr.ATTR_JOINTS),r=this.readAttribute(e,yr.ATTR_WEIGHTS),o=this.readAttribute(e,yr.ATTR_POSITION);if(!s||!r||!o)continue;const a=Math.min(s.length/4,r.length/4,o.length/3);for(let e=0;e<a;e++){ri.set(bk,o[3*e+0],o[3*e+1],o[3*e+2]);for(let o=0;o<4;++o){const a=4*e+o,c=s[a];if(0===r[a]||c>=i.length)continue;ri.transformMat4(Ek,bk,i[c]),n[c]=!0;const l=t[c];ri.min(l.center,l.center,Ek),ri.max(l.halfExtents,l.halfExtents,Ek)}}}for(let e=0;e<i.length;e++){const i=t[e];n[e]?Ac.fromPoints(i,i.center,i.halfExtents):t[e]=null}return t}merge(e,t,n){if(n&&!this.validateMergingMesh(e))return!1;const i=new ri,s=t&&new ui,r=t&&new Ac;if(s&&t.getRotation(s),!this._initialized){const n=JSON.parse(JSON.stringify(e._struct)),o=e._data.slice();if(t){n.maxPosition&&n.minPosition&&(ri.add(r.center,n.maxPosition,n.minPosition),ri.multiplyScalar(r.center,r.center,.5),ri.subtract(r.halfExtents,n.maxPosition,n.minPosition),ri.multiplyScalar(r.halfExtents,r.halfExtents,.5),Ac.transform(r,r,t),ri.add(n.maxPosition,r.center,r.halfExtents),ri.subtract(n.minPosition,r.center,r.halfExtents));for(let e=0;e<n.vertexBundles.length;e++){const r=n.vertexBundles[e];for(let e=0;e<r.attributes.length;e++)if(r.attributes[e].name===yr.ATTR_POSITION||r.attributes[e].name===yr.ATTR_NORMAL){const{format:n}=r.attributes[e],a=new DataView(o.buffer,r.view.offset+wk(r.attributes,e)),c=Dk(a,n),l=Ok(a,n);if(!c||!l)continue;const h=r.view.count,_=r.view.stride,u=Rk(n);for(let n=0;n<h;n++){const o=n*_,a=o+u,h=a+u;switch(i.set(c(o),c(a),c(h)),r.attributes[e].name){case yr.ATTR_POSITION:i.transformMat4(t);break;case yr.ATTR_NORMAL:ri.transformQuat(i,i,s)}l(o,i.x),l(a,i.y),l(h,i.z)}}}}return this.reset({struct:n,data:o}),this.initialize(),!0}const o=new fk;let a,c,l,h,_,u=0,p=0,d=0,f=0,m=0,g=0,v=0,y=0,x=!1;const S=new Array(this._struct.vertexBundles.length);for(let n=0;n<this._struct.vertexBundles.length;++n){const r=this._struct.vertexBundles[n],C=e._struct.vertexBundles[n];d=r.view.offset,f=C.view.offset,p=r.view.stride,u=r.view.count+C.view.count,a=new ArrayBuffer(u*p),c=new Uint8Array(a),l=this._data.subarray(d,d+r.view.length),d+=l.length,h=e._data.subarray(f,f+C.view.length),f+=h.length,c.set(l),m=0;for(const e of r.attributes){v=0,x=!1;for(const t of C.attributes){if(e.name===t.name&&e.format===t.format){x=!0;break}v+=To[t.format].size}if(x){y=To[e.format].size,g=r.view.length+m;for(let n=0;n<C.view.count;++n){if(_=h.subarray(v,v+y),c.set(_,g),(e.name===yr.ATTR_POSITION||e.name===yr.ATTR_NORMAL)&&t){const n=new Float32Array(c.buffer,g,3);switch(i.set(n[0],n[1],n[2]),e.name){case yr.ATTR_POSITION:i.transformMat4(t);break;case yr.ATTR_NORMAL:ri.transformQuat(i,i,s)}n[0]=i.x,n[1]=i.y,n[2]=i.z}g+=r.view.stride,v+=C.view.stride}}m+=To[e.format].size}S[n]={attributes:r.attributes,view:{offset:o.getLength(),length:a.byteLength,count:u,stride:p}},o.addBuffer(a)}let C,T,b,E=0,A=2,P=0;const w=new Array(this._struct.primitives.length);for(let t=0;t<this._struct.primitives.length;++t){const n=this._struct.primitives[t],i=e._struct.primitives[t];w[t]={primitiveMode:n.primitiveMode,vertexBundelIndices:n.vertexBundelIndices};for(const e of n.vertexBundelIndices)P=Math.max(P,this._struct.vertexBundles[e].view.count);if(n.indexView&&i.indexView){E=n.indexView.count,E+=i.indexView.count,d=n.indexView.offset,f=i.indexView.offset,A=E<256?1:E<65536?2:4;const s=new ArrayBuffer(E*A);if(C=2===A?new Uint16Array(s):1===A?new Uint8Array(s):new Uint32Array(s),T=2===n.indexView.stride?new Uint16Array(this._data.buffer,d,n.indexView.count):1===n.indexView.stride?new Uint8Array(this._data.buffer,d,n.indexView.count):new Uint32Array(this._data.buffer,d,n.indexView.count),A===n.indexView.stride)C.set(T);else for(let e=0;e<n.indexView.count;++e)C[e]=T[e];d+=n.indexView.length,b=2===i.indexView.stride?new Uint16Array(e._data.buffer,f,i.indexView.count):1===i.indexView.stride?new Uint8Array(e._data.buffer,f,i.indexView.count):new Uint32Array(e._data.buffer,f,i.indexView.count);for(let e=0;e<i.indexView.count;++e)C[n.indexView.count+e]=P+b[e];f+=i.indexView.length,w[t].indexView={offset:o.getLength(),length:s.byteLength,count:E,stride:A},o.setNextAlignment(A),o.addBuffer(s)}}const I={vertexBundles:S,primitives:w,minPosition:this._struct.minPosition,maxPosition:this._struct.maxPosition};return I.minPosition&&e._struct.minPosition&&I.maxPosition&&e._struct.maxPosition&&(t?(ri.add(r.center,e._struct.maxPosition,e._struct.minPosition),ri.multiplyScalar(r.center,r.center,.5),ri.subtract(r.halfExtents,e._struct.maxPosition,e._struct.minPosition),ri.multiplyScalar(r.halfExtents,r.halfExtents,.5),Ac.transform(r,r,t),ri.add(i,r.center,r.halfExtents),ri.max(I.maxPosition,I.maxPosition,i),ri.subtract(i,r.center,r.halfExtents),ri.min(I.minPosition,I.minPosition,i)):(ri.min(I.minPosition,I.minPosition,e._struct.minPosition),ri.max(I.maxPosition,I.maxPosition,e._struct.maxPosition))),this.reset({struct:I,data:new Uint8Array(o.getCombined())}),this.initialize(),!0}validateMergingMesh(e){if(this._struct.vertexBundles.length!==e._struct.vertexBundles.length)return!1;for(let t=0;t<this._struct.vertexBundles.length;++t){const n=this._struct.vertexBundles[t],i=e._struct.vertexBundles[t];if(n.attributes.length!==i.attributes.length)return!1;for(let e=0;e<n.attributes.length;++e)if(n.attributes[e].format!==i.attributes[e].format)return!1}if(this._struct.primitives.length!==e._struct.primitives.length)return!1;for(let t=0;t<this._struct.primitives.length;++t){const n=this._struct.primitives[t],i=e._struct.primitives[t];if(n.vertexBundelIndices.length!==i.vertexBundelIndices.length)return!1;for(let e=0;e<n.vertexBundelIndices.length;++e)if(n.vertexBundelIndices[e]!==i.vertexBundelIndices[e])return!1;if(n.primitiveMode!==i.primitiveMode)return!1;if(n.indexView){if(void 0===i.indexView)return!1}else if(i.indexView)return!1}return!0}readAttribute(e,t){let n=null;return this._accessAttribute(e,t,((e,t)=>{const i=e.view.count,{format:s}=e.attributes[t],r=Mo(To[s]);if(0===i)return;const o=new DataView(this._data.buffer,e.view.offset+wk(e.attributes,t)),a=To[s],c=Dk(o,s);if(!r||!c)return;const l=a.count,h=new r(i*l),_=e.view.stride;for(let e=0;e<i;++e)for(let t=0;t<l;++t)h[l*e+t]=c(_*e+h.BYTES_PER_ELEMENT*t);n=h})),n}copyAttribute(e,t,n,i,s){let r=!1;return this._accessAttribute(e,t,((e,t)=>{const o=e.view.count;if(0===o)return void(r=!0);const{format:a}=e.attributes[t],c=new DataView(this._data.buffer,e.view.offset+wk(e.attributes,t)),l=new DataView(n,s),h=To[a],_=Dk(c,a),u=Ok(l,a);if(!_||!u)return;const p=h.count,d=e.view.stride,f=Rk(a),m=i,g=f;for(let e=0;e<o;++e)for(let t=0;t<p;++t)u(m*e+g*t,_(d*e+f*t));r=!0})),r}readIndices(e){if(e>=this._struct.primitives.length)return null;const t=this._struct.primitives[e];if(!t.indexView)return null;const{stride:n}=t.indexView;return new(1===n?Uint8Array:2===n?Uint16Array:Uint32Array)(this._data.buffer,t.indexView.offset,t.indexView.count)}copyIndices(e,t){if(e>=this._struct.primitives.length)return!1;const n=this._struct.primitives[e];if(!n.indexView)return!1;const i=n.indexView.count,s=1===n.indexView.stride?zs.R8UI:2===n.indexView.stride?zs.R16UI:zs.R32UI,r=Dk(new DataView(this._data.buffer),s);for(let e=0;e<i;++e)t[e]=r(n.indexView.offset+To[s].size*e);return!0}_accessAttribute(e,t,n){if(e>=this._struct.primitives.length)return;const i=this._struct.primitives[e];for(const e of i.vertexBundelIndices){const i=this._struct.vertexBundles[e],s=i.attributes.findIndex((e=>e.name===t));if(!(s<0)){n(i,s);break}}}_createVertexBuffers(e,t){return this._struct.vertexBundles.map((n=>{const i=e.createBuffer(new Lr(Us.VERTEX,ks.DEVICE,n.view.length,n.view.stride)),s=new Uint8Array(t,n.view.offset,n.view.length);return i.update(s),i}))}initDefault(e){super.initDefault(e),this.reset({struct:{vertexBundles:[],primitives:[]},data:Ak})}}).prototype,"_struct",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return{vertexBundles:[],primitives:[]}}}),dk=Bc(uk.prototype,"_hash",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),_k=uk))||_k);function wk(e,t){let n=0;for(let i=0;i<t;++i){const t=e[i];n+=To[t.format].size}return n}i.Mesh=Pk;const{isLittleEndian:Ik}=e_;function Rk(e){const t=To[e];return t.size/t.count}function Dk(e,t){const n=To[t],i=n.size/n.count;switch(n.type){case Fs.UNORM:switch(i){case 1:return t=>e.getUint8(t);case 2:return t=>e.getUint16(t,Ik);case 4:return t=>e.getUint32(t,Ik)}break;case Fs.SNORM:case Fs.INT:switch(i){case 1:return t=>e.getInt8(t);case 2:return t=>e.getInt16(t,Ik);case 4:return t=>e.getInt32(t,Ik)}break;case Fs.UINT:switch(i){case 1:return t=>e.getUint8(t);case 2:return t=>e.getUint16(t,Ik);case 4:return t=>e.getUint32(t,Ik)}break;case Fs.FLOAT:return t=>e.getFloat32(t,Ik)}return null}function Ok(e,t){const n=To[t],i=n.size/n.count;switch(n.type){case Fs.UNORM:switch(i){case 1:return(t,n)=>e.setUint8(t,n);case 2:return(t,n)=>e.setUint16(t,n,Ik);case 4:return(t,n)=>e.setUint32(t,n,Ik)}break;case Fs.SNORM:case Fs.INT:switch(i){case 1:return(t,n)=>e.setInt8(t,n);case 2:return(t,n)=>e.setInt16(t,n,Ik);case 4:return(t,n)=>e.setInt32(t,n,Ik)}break;case Fs.UINT:switch(i){case 1:return(t,n)=>e.setUint8(t,n);case 2:return(t,n)=>e.setUint16(t,n,Ik);case 4:return(t,n)=>e.setUint32(t,n,Ik)}break;case Fs.FLOAT:return(t,n)=>e.setFloat32(t,n,Ik)}return null}const Mk=[new Qr(yr.ATTR_POSITION,zs.RGB32F),new Qr(yr.ATTR_NORMAL,zs.RGB32F),new Qr(yr.ATTR_TEX_COORD,zs.RG32F),new Qr(yr.ATTR_TANGENT,zs.RGBA32F),new Qr(yr.ATTR_COLOR,zs.RGBA32F)],Nk=new ri;function Lk(e,t,n){n=n||{};const i=[];let s=0;const r=[];let o,a=0;const c=e.positions.slice();if(c.length>0){if(o=null,e.attributes)for(const t of e.attributes)if(t.name===yr.ATTR_POSITION){o=t;break}o||(o=Mk[0]),i.push(o);const t=To[o.format];a=Math.max(a,Math.floor(c.length/t.count)),r.push({offset:s,data:c,attribute:o}),s+=t.size}if(e.normals&&e.normals.length>0){if(o=null,e.attributes)for(const t of e.attributes)if(t.name===yr.ATTR_NORMAL){o=t;break}o||(o=Mk[1]);const t=To[o.format];i.push(o),a=Math.max(a,Math.floor(e.normals.length/t.count)),r.push({offset:s,data:e.normals,attribute:o}),s+=t.size}if(e.uvs&&e.uvs.length>0){if(o=null,e.attributes)for(const t of e.attributes)if(t.name===yr.ATTR_TEX_COORD){o=t;break}o||(o=Mk[2]);const t=To[o.format];i.push(o),a=Math.max(a,Math.floor(e.uvs.length/t.count)),r.push({offset:s,data:e.uvs,attribute:o}),s+=t.size}if(e.tangents&&e.tangents.length>0){if(o=null,e.attributes)for(const t of e.attributes)if(t.name===yr.ATTR_TANGENT){o=t;break}o||(o=Mk[3]);const t=To[o.format];i.push(o),a=Math.max(a,Math.floor(e.tangents.length/t.count)),r.push({offset:s,data:e.tangents,attribute:o}),s+=t.size}if(e.colors&&e.colors.length>0){if(o=null,e.attributes)for(const t of e.attributes)if(t.name===yr.ATTR_COLOR){o=t;break}o||(o=Mk[4]);const t=To[o.format];i.push(o),a=Math.max(a,Math.floor(e.colors.length/t.count)),r.push({offset:s,data:e.colors,attribute:o}),s+=t.size}if(e.customAttributes)for(const t of e.customAttributes){const e=To[t.attr.format];i.push(t.attr),a=Math.max(a,Math.floor(t.values.length/e.count)),r.push({offset:s,data:t.values,attribute:t.attr}),s+=e.size}const l=new fk,h=new ArrayBuffer(a*s),_=new DataView(h);for(const e of r)tT(_,e.data,e.attribute.format,e.offset,s);l.setNextAlignment(0);const u={attributes:i,view:{offset:l.getLength(),length:h.byteLength,count:a,stride:s}};l.addBuffer(h);let p=null,d=0;if(e.indices){const{indices:t}=e;d=t.length,p=new ArrayBuffer(2*d),tT(new DataView(p),t,zs.R16UI)}const f={primitiveMode:e.primitiveMode||cr.TRIANGLE_LIST,vertexBundelIndices:[0]};p&&(l.setNextAlignment(2),f.indexView={offset:l.getLength(),length:p.byteLength,count:d,stride:2},l.addBuffer(p));let m=e.minPos;if(!m&&n.calculateBounds){m=ri.set(new ri,1/0,1/0,1/0);for(let e=0;e<a;++e)ri.set(Nk,c[3*e+0],c[3*e+1],c[3*e+2]),ri.min(m,m,Nk)}let g=e.maxPos;if(!g&&n.calculateBounds){g=ri.set(new ri,-1/0,-1/0,-1/0);for(let e=0;e<a;++e)ri.set(Nk,c[3*e+0],c[3*e+1],c[3*e+2]),ri.max(g,g,Nk)}const v={vertexBundles:[u],primitives:[f]};return m&&(v.minPosition=new ri(m.x,m.y,m.z)),g&&(v.maxPosition=new ri(g.x,g.y,g.z)),t||(t=new Pk),t.reset({struct:v,data:new Uint8Array(l.getCombined())}),t}var zk,Fk,Bk,Uk,Gk,Hk,kk,Vk,jk,Wk,qk,Xk,Yk,Kk,$k,Zk,Qk,Jk,eV,tV,nV,iV,sV,rV,oV,aV,cV,lV,hV,_V,uV=Object.freeze({__proto__:null,find:HP,toPPM:function(e,t,n){return`P3 ${t} ${n} 255\n${e.filter(((e,t)=>t%4<3)).toString()}\n`},readMesh:function(e,t=0){const n={positions:[]},i=new DataView(e.data.buffer,e.data.byteOffset,e.data.byteLength),s=e.struct,r=s.primitives[t];for(const e of r.vertexBundelIndices){const t=s.vertexBundles[e];let r=t.view.offset;const{length:o,stride:a}=t.view;for(const e of t.attributes){const t=hk[e.name];t&&(n[t]=(n[t]||[]).concat(nT(i,e.format,r,o,a))),r+=To[e.format].size}}const o=r.indexView;return n.indices=nT(i,zs[`R${8*o.stride}UI`],o.offset,o.length),n},createMesh:Lk,readBuffer:nT,writeBuffer:tT,mapBuffer:iT});e("utils",uV);class pV extends fg{constructor(...e){super(...e),this._morphRenderingInstance=null,this._usedMaterials=new Set}getMacroPatches(e){return this._morphRenderingInstance?this._morphRenderingInstance.requiredPatches(e):super.getMacroPatches(e)}initSubModel(e,t,n){return super.initSubModel(e,t,this._launderMaterial(n))}destroy(){super.destroy(),this._morphRenderingInstance=null}setSubModelMaterial(e,t){return super.setSubModelMaterial(e,this._launderMaterial(t))}_updateLocalDescriptors(e,t){super._updateLocalDescriptors(e,t),this._morphRenderingInstance&&this._morphRenderingInstance.adaptPipelineState(e,t)}_launderMaterial(e){return e}setMorphRendering(e){this._morphRenderingInstance=e}}const dV=Ne({OFF:0,ON:1}),fV=Ne({OFF:0,ON:1});let mV=(zk=Zc("cc.ModelLightmapSettings"),Fk=sl("_recieveShadow"),zk((Gk=Bc((Uk=class{constructor(){Fc(this,"texture",Gk,this),Fc(this,"uvParam",Hk,this),Fc(this,"_bakeable",kk,this),Fc(this,"_castShadow",Vk,this),Fc(this,"_receiveShadow",jk,this),Fc(this,"_lightmapSize",Wk,this)}get bakeable(){return this._bakeable}set bakeable(e){this._bakeable=e}get castShadow(){return this._castShadow}set castShadow(e){this._castShadow=e}get receiveShadow(){return this._receiveShadow}set receiveShadow(e){this._receiveShadow=e}get lightmapSize(){return this._lightmapSize}set lightmapSize(e){this._lightmapSize=e}}).prototype,"texture",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Hk=Bc(Uk.prototype,"uvParam",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new wi}}),kk=Bc(Uk.prototype,"_bakeable",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Vk=Bc(Uk.prototype,"_castShadow",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),jk=Bc(Uk.prototype,"_receiveShadow",[Fk],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Wk=Bc(Uk.prototype,"_lightmapSize",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 64}}),Bc(Uk.prototype,"bakeable",[dl],Object.getOwnPropertyDescriptor(Uk.prototype,"bakeable"),Uk.prototype),Bc(Uk.prototype,"castShadow",[dl],Object.getOwnPropertyDescriptor(Uk.prototype,"castShadow"),Uk.prototype),Bc(Uk.prototype,"receiveShadow",[dl],Object.getOwnPropertyDescriptor(Uk.prototype,"receiveShadow"),Uk.prototype),Bc(Uk.prototype,"lightmapSize",[dl],Object.getOwnPropertyDescriptor(Uk.prototype,"lightmapSize"),Uk.prototype),Bk=Uk))||Bk),gV=function(t){return e({MeshRenderer:t,ModelComponent:t}),t}((qk=Zc("cc.MeshRenderer"),Xk=pl(),Yk=Jc(100),Kk=ll(),$k=Ol(dV),Zk=vl(),Qk=Ol(fV),Jk=vl(),eV=Ol(Pk),tV=vl(),nV=fl(),qk(iV=Xk(iV=Yk(iV=Kk(iV=cl((_V=hV=class extends xO{get shadowCastingMode(){return this._shadowCastingMode}set shadowCastingMode(e){this._shadowCastingMode=e,this._updateCastShadow()}get receiveShadow(){return this._shadowReceivingMode}set receiveShadow(e){this._shadowReceivingMode=e,this._updateReceiveShadow()}get mesh(){return this._mesh}set mesh(e){const t=this._mesh,n=this._mesh=e;null==n||n.initialize(),this._initSubMeshShapesWeights(),this._watchMorphInMesh(),this._onMeshChanged(t),this._updateModels(),this.enabledInHierarchy&&this._attachToScene(),this._updateCastShadow(),this._updateReceiveShadow()}get model(){return this._model}get enableMorph(){return this._enableMorph}set enableMorph(e){this._enableMorph=e}constructor(){super(),Fc(this,"lightmapSettings",rV,this),Fc(this,"_mesh",oV,this),Fc(this,"_shadowCastingMode",aV,this),Fc(this,"_shadowReceivingMode",cV,this),this._subMeshShapesWeights=[],this._modelType=void 0,this._model=null,this._morphInstance=null,Fc(this,"_enableMorph",lV,this),this._modelType=fg}onLoad(){this._mesh&&this._mesh.initialize(),this._validateShapeWeights()||this._initSubMeshShapesWeights(),this._watchMorphInMesh(),this._updateModels(),this._updateCastShadow(),this._updateReceiveShadow()}onRestore(){this._updateModels(),this._updateCastShadow(),this._updateReceiveShadow()}onEnable(){this._model||this._updateModels(),this._updateCastShadow(),this._updateReceiveShadow(),this._attachToScene()}onDisable(){this._model&&this._detachFromScene()}onDestroy(){this._model&&(i.director.root.destroyModel(this._model),this._model=null,this._models.length=0),this._morphInstance&&this._morphInstance.destroy()}getWeight(e,t){const{_subMeshShapesWeights:n}=this;n.length;const i=this._subMeshShapesWeights[e];return i.length,i[t]}setWeights(e,t){const{_subMeshShapesWeights:n}=this;t>=n.length||n[t].length===e.length&&(n[t]=e.slice(0),this._uploadSubMeshShapesWeights(t))}setWeight(e,t,n){const{_subMeshShapesWeights:i}=this;if(t>=i.length)return;const s=i[t];n>=s.length||(s[n]=e,this._uploadSubMeshShapesWeights(t))}setInstancedAttribute(e,t){if(!this.model)return;const{attributes:n,views:i}=this.model.instancedAttributes;for(let s=0;s<n.length;s++)if(n[s].name===e){i[s].set(t);break}}_updateLightmap(e,t,n,i,s){this.lightmapSettings.texture=e,this.lightmapSettings.uvParam.x=t,this.lightmapSettings.uvParam.y=n,this.lightmapSettings.uvParam.z=i,this.lightmapSettings.uvParam.w=s,this._onUpdateLightingmap()}_updateModels(){if(!this.enabledInHierarchy||!this._mesh)return;const e=this._model;e?(e.destroy(),e.initialize(),e.node=e.transform=this.node):this._createModel(),this._model&&(this._model.createBoundingShape(this._mesh.struct.minPosition,this._mesh.struct.maxPosition),this._updateModelParams(),this._onUpdateLightingmap())}_createModel(){const e=this._morphInstance&&this._modelType===fg?pV:this._modelType,t=this._model=i.director.root.createModel(e);t.visFlags=this.visibility,t.node=t.transform=this.node,this._models.length=0,this._models.push(this._model),this._morphInstance&&t instanceof pV&&t.setMorphRendering(this._morphInstance)}_attachToScene(){if(!this.node.scene||!this._model)return;const e=this._getRenderScene();null!==this._model.scene&&this._detachFromScene(),e.addModel(this._model)}_detachFromScene(){this._model&&this._model.scene&&this._model.scene.removeModel(this._model)}_updateModelParams(){if(!this._mesh||!this._model)return;this.node.hasChangedFlags|=gg.POSITION,this._model.transform.hasChangedFlags|=gg.POSITION,this._model.isDynamicBatching=this._isBatchingEnabled();const e=this._mesh?this._mesh.renderingSubMeshes.length:0,t=this._mesh.renderingSubMeshes;if(t)for(let n=0;n<e;++n){let e=this.getRenderMaterial(n);e&&!e.isValid&&(e=null);const i=t[n];i&&this._model.initSubModel(n,i,e||this._getBuiltinMaterial())}this._model.enabled=!0}_onUpdateLightingmap(){null!==this.model&&this.model.updateLightingmap(this.lightmapSettings.texture,this.lightmapSettings.uvParam),this.setInstancedAttribute("a_lightingMapUVParam",[this.lightmapSettings.uvParam.x,this.lightmapSettings.uvParam.y,this.lightmapSettings.uvParam.z,this.lightmapSettings.uvParam.w])}_onMaterialModified(e,t){this._model&&this._model.inited&&this._onRebuildPSO(e,t||this._getBuiltinMaterial())}_onRebuildPSO(e,t){this._model&&this._model.inited&&(this._model.isDynamicBatching=this._isBatchingEnabled(),this._model.setSubModelMaterial(e,t),this._onUpdateLightingmap())}_onMeshChanged(e){}_clearMaterials(){if(!this._model)return;const e=this._model.subModels;for(let t=0;t<e.length;++t)this._onMaterialModified(t,null)}_getBuiltinMaterial(){return Jm.get("missing-material")}_onVisibilityChange(e){this._model&&(this._model.visFlags=e)}_updateCastShadow(){this._model&&(this._shadowCastingMode===dV.OFF?this._model.castShadow=!1:(this._shadowCastingMode,dV.ON,this._shadowCastingMode,this._model.castShadow=!0))}_updateReceiveShadow(){this._model&&(this._shadowReceivingMode===fV.OFF?this._model.receiveShadow=!1:this._model.receiveShadow=!0)}_isBatchingEnabled(){for(let e=0;e<this._materials.length;++e){const t=this._materials[e];if(t)for(let e=0;e<t.passes.length;++e)if(t.passes[e].batchingScheme)return!0}return!1}_watchMorphInMesh(){if(this._morphInstance&&(this._morphInstance.destroy(),this._morphInstance=null),!this._enableMorph)return;if(!this._mesh||!this._mesh.struct.morph||!this._mesh.morphRendering)return;this._morphInstance=this._mesh.morphRendering.createInstance();const e=this._mesh.struct.primitives.length;for(let t=0;t<e;++t)this._uploadSubMeshShapesWeights(t);this._model&&this._model instanceof pV&&this._model.setMorphRendering(this._morphInstance)}_initSubMeshShapesWeights(){const{_mesh:e}=this;if(this._subMeshShapesWeights.length=0,!e)return;const t=e.struct.morph;if(!t)return;const n=t.weights;this._subMeshShapesWeights=t.subMeshMorphs.map((e=>e?e.weights?e.weights.slice(0):n?(n.length,e.targets.length,n.slice(0)):new Array(e.targets.length).fill(0):[]))}_validateShapeWeights(){const{_mesh:e,_subMeshShapesWeights:t}=this;if(!e||!e.struct.morph)return 0===t.length;const{morph:n}=e.struct;return n.subMeshMorphs.length===t.length&&t.every((({length:e},t)=>{var i,s;return(null!==(i=null===(s=n.subMeshMorphs[t])||void 0===s?void 0:s.targets.length)&&void 0!==i?i:0)===e}))}_uploadSubMeshShapesWeights(e){var t;null===(t=this._morphInstance)||void 0===t||t.setWeights(e,this._subMeshShapesWeights[e])}},hV.ShadowCastingMode=dV,hV.ShadowReceivingMode=fV,rV=Bc((sV=_V).prototype,"lightmapSettings",[il,dl,Pl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new mV}}),oV=Bc(sV.prototype,"_mesh",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),aV=Bc(sV.prototype,"_shadowCastingMode",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return dV.OFF}}),cV=Bc(sV.prototype,"_shadowReceivingMode",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return fV.ON}}),Bc(sV.prototype,"shadowCastingMode",[$k,Zk,Pl],Object.getOwnPropertyDescriptor(sV.prototype,"shadowCastingMode"),sV.prototype),Bc(sV.prototype,"receiveShadow",[Qk,Jk,Pl],Object.getOwnPropertyDescriptor(sV.prototype,"receiveShadow"),sV.prototype),Bc(sV.prototype,"mesh",[eV,tV],Object.getOwnPropertyDescriptor(sV.prototype,"mesh"),sV.prototype),Bc(sV.prototype,"enableMorph",[nV,Pl],Object.getOwnPropertyDescriptor(sV.prototype,"enableMorph"),sV.prototype),lV=Bc(sV.prototype,"_enableMorph",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),iV=sV))||iV)||iV)||iV)||iV)||iV));function vV(e,t){const n=e.sharedMaterials.length;if(n!==t.sharedMaterials.length)return!1;for(let i=0;i<n;i++)if(e.getRenderMaterial(i)!==t.getRenderMaterial(i))return!1;return!0}var yV,xV,SV,CV,TV,bV,EV,AV;e("BatchingUtility",class{static batchStaticModel(e,t){const n=e.getComponentsInChildren(gV);if(n.length<2)return console.error("the number of static models to batch is less than 2,it needn't batch."),!1;for(let e=1;e<n.length;e++){if(!n[0].mesh.validateMergingMesh(n[e].mesh))return console.error(`the meshes of ${n[0].node.name} and ${n[e].node.name} can't be merged`),!1;if(!vV(n[0],n[e]))return console.error(`the materials of ${n[0].node.name} and ${n[e].node.name} can't be merged`),!1}const i=new Pk,s=new xi,r=new xi;e.getWorldMatrix(r),xi.invert(r,r);for(let e=0;e<n.length;e++){const t=n[e];t.node.getWorldMatrix(s),xi.multiply(s,r,s),i.merge(n[e].mesh,s),t.enabled=!1}const o=t.addComponent(gV);return o.mesh=i,o.sharedMaterials=n[0].sharedMaterials,!0}static unbatchStaticModel(e,t){const n=e.getComponentsInChildren(gV);for(let e=0;e<n.length;e++)n[e].enabled=!0;const i=t.getComponent(gV);return i&&(i.mesh&&i.mesh.destroyRenderingMesh(),i.destroy()),!0}}),Cn(Pk.prototype,"Mesh.prototype",[{name:"renderingMesh",newName:"renderingSubMeshes"}]),Tn(Pk.prototype,"Mesh.prototype",[{name:"hasFlatBuffers"},{name:"destroyFlatBuffers"}]);let PV=e("Skeleton",(yV=Zc("cc.Skeleton"),xV=Ol([ct]),SV=Ol([xi]),yV((bV=Bc((TV=class extends bh{constructor(...e){super(...e),Fc(this,"_joints",bV,this),Fc(this,"_bindposes",EV,this),Fc(this,"_hash",AV,this),this._invBindposes=null}get joints(){return this._joints}set joints(e){this._joints=e}get bindposes(){return this._bindposes}set bindposes(e){this._bindposes=e}get inverseBindposes(){if(!this._invBindposes){this._invBindposes=[];for(let e=0;e<this._bindposes.length;e++){const t=new xi;xi.invert(t,this._bindposes[e]),this._invBindposes.push(t)}}return this._invBindposes}get hash(){if(!this._hash){let e="";for(let t=0;t<this._bindposes.length;t++){const n=this._bindposes[t];e+=`${n.m00.toPrecision(2)} ${n.m01.toPrecision(2)} ${n.m02.toPrecision(2)} ${n.m03.toPrecision(2)} ${n.m04.toPrecision(2)} ${n.m05.toPrecision(2)} ${n.m06.toPrecision(2)} ${n.m07.toPrecision(2)} ${n.m08.toPrecision(2)} ${n.m09.toPrecision(2)} ${n.m10.toPrecision(2)} ${n.m11.toPrecision(2)} ${n.m12.toPrecision(2)} ${n.m13.toPrecision(2)} ${n.m14.toPrecision(2)} ${n.m15.toPrecision(2)}\n`}this._hash=Ko(e,666)}return this._hash}destroy(){var e,t;return null===(e=null===(t=i.director.root)||void 0===t?void 0:t.dataPoolManager)||void 0===e||e.releaseSkeleton(this),super.destroy()}validate(){return this.joints.length>0&&this.bindposes.length>0}}).prototype,"_joints",[xV],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),EV=Bc(TV.prototype,"_bindposes",[SV],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),AV=Bc(TV.prototype,"_hash",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),CV=TV))||CV));var wV,IV,RV,DV,OV,MV,NV,LV,zV,FV,BV,UV,GV,HV,kV,VV,jV,WV,qV,XV;i.Skeleton=PV,Tn(gV.prototype,"MeshRenderer.prototype",[{name:"enableDynamicBatching"},{name:"recieveShadows"}]),i.ModelComponent=gV,Ae.setClassAlias(gV,"cc.ModelComponent");const YV=Ne({LUMINOUS_FLUX:0,LUMINANCE:1}),KV=new ri;let $V=Zc("cc.StaticLightSettings")((RV=Bc((IV=class{constructor(){Fc(this,"_baked",RV,this),Fc(this,"_editorOnly",DV,this),Fc(this,"_bakeable",OV,this),Fc(this,"_castShadow",MV,this)}get editorOnly(){return this._editorOnly}set editorOnly(e){this._editorOnly=e}get baked(){return this._baked}set baked(e){this._baked=e}get bakeable(){return this._bakeable}set bakeable(e){this._bakeable=e}get castShadow(){return this._castShadow}set castShadow(e){this._castShadow=e}}).prototype,"_baked",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),DV=Bc(IV.prototype,"_editorOnly",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),OV=Bc(IV.prototype,"_bakeable",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),MV=Bc(IV.prototype,"_castShadow",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Bc(IV.prototype,"editorOnly",[dl],Object.getOwnPropertyDescriptor(IV.prototype,"editorOnly"),IV.prototype),Bc(IV.prototype,"bakeable",[dl],Object.getOwnPropertyDescriptor(IV.prototype,"bakeable"),IV.prototype),Bc(IV.prototype,"castShadow",[dl],Object.getOwnPropertyDescriptor(IV.prototype,"castShadow"),IV.prototype),wV=IV))||wV,ZV=function(t){return e({Light:t,LightComponent:t}),t}((NV=Zc("cc.Light"),LV=vl(),zV=vl(),FV=yl(),BV=vl(),UV=Ol($V),NV((XV=qV=class extends jh{get color(){return this._color}set color(e){this._color=e,this._light&&(KV.x=e.r/255,KV.y=e.g/255,KV.z=e.b/255,this._light.color=KV)}get useColorTemperature(){return this._useColorTemperature}set useColorTemperature(e){this._useColorTemperature=e,this._light&&(this._light.useColorTemperature=e)}get colorTemperature(){return this._colorTemperature}set colorTemperature(e){this._colorTemperature=e,this._light&&(this._light.colorTemperature=e)}get staticSettings(){return this._staticSettings}set staticSettings(e){this._staticSettings=e}get type(){return this._type}get baked(){return this.staticSettings.baked}set baked(e){this.staticSettings.baked=e,null!==this._light&&(this._light.baked=e)}constructor(){super(),Fc(this,"_color",kV,this),Fc(this,"_useColorTemperature",VV,this),Fc(this,"_colorTemperature",jV,this),Fc(this,"_staticSettings",WV,this),this._type=Yg.UNKNOWN,this._lightType=void 0,this._light=null,this._lightType=$g}onLoad(){this._createLight()}onEnable(){this._attachToScene()}onDisable(){this._detachFromScene()}onDestroy(){this._destroyLight()}_createLight(){this._light||(this._light=i.director.root.createLight(this._lightType)),this.color=this._color,this.useColorTemperature=this._useColorTemperature,this.colorTemperature=this._colorTemperature,this._light.node=this.node,this._light.baked=this.baked}_destroyLight(){this._light&&(i.director.root.destroyLight(this),this._light=null)}_attachToScene(){if(this._detachFromScene(),this._light&&!this._light.scene&&this.node.scene){const e=this._getRenderScene();switch(this._type){case Yg.DIRECTIONAL:e.addDirectionalLight(this._light),e.setMainLight(this._light);break;case Yg.SPHERE:e.addSphereLight(this._light);break;case Yg.SPOT:e.addSpotLight(this._light)}}}_detachFromScene(){if(this._light&&this._light.scene){const e=this._light.scene;switch(this._type){case Yg.DIRECTIONAL:e.removeDirectionalLight(this._light),e.unsetMainLight(this._light);break;case Yg.SPHERE:e.removeSphereLight(this._light);break;case Yg.SPOT:e.removeSpotLight(this._light)}}}},qV.Type=Yg,qV.PhotometricTerm=YV,kV=Bc((HV=XV).prototype,"_color",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return ti.WHITE.clone()}}),VV=Bc(HV.prototype,"_useColorTemperature",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),jV=Bc(HV.prototype,"_colorTemperature",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 6550}}),WV=Bc(HV.prototype,"_staticSettings",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new $V}}),Bc(HV.prototype,"color",[LV],Object.getOwnPropertyDescriptor(HV.prototype,"color"),HV.prototype),Bc(HV.prototype,"useColorTemperature",[zV],Object.getOwnPropertyDescriptor(HV.prototype,"useColorTemperature"),HV.prototype),Bc(HV.prototype,"colorTemperature",[Tl,FV,BV],Object.getOwnPropertyDescriptor(HV.prototype,"colorTemperature"),HV.prototype),Bc(HV.prototype,"staticSettings",[UV],Object.getOwnPropertyDescriptor(HV.prototype,"staticSettings"),HV.prototype),GV=HV))||GV));var QV,JV,ej,tj,nj,ij,sj,rj,oj;let aj=function(t){return e({DirectionalLight:t,DirectionalLightComponent:t}),t}((QV=Zc("cc.DirectionalLight"),JV=pl(),ej=ll(),tj=sl("_illuminance"),nj=vl(),QV(ij=JV(ij=ej(ij=cl((rj=Bc((sj=class extends ZV{get illuminance(){return i.director.root.pipeline.pipelineSceneData.isHDR?this._illuminanceHDR:this._illuminanceLDR}set illuminance(e){i.director.root.pipeline.pipelineSceneData.isHDR?(this._illuminanceHDR=e,this._light&&(this._light.illuminanceHDR=this._illuminanceHDR)):(this._illuminanceLDR=e,this._light&&(this._light.illuminanceLDR=this._illuminanceLDR))}constructor(){super(),Fc(this,"_illuminanceHDR",rj,this),Fc(this,"_illuminanceLDR",oj,this),this._type=Yg.DIRECTIONAL,this._light=null,this._lightType=Jg}_createLight(){super._createLight(),this._illuminanceLDR=this._illuminanceHDR*Nf.standardExposureValue,this._light&&(this._light.illuminanceHDR=this._illuminanceHDR,this._light.illuminanceLDR=this._illuminanceLDR)}}).prototype,"_illuminanceHDR",[tl,tj],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 65e3}}),oj=Bc(sj.prototype,"_illuminanceLDR",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),Bc(sj.prototype,"illuminance",[nj],Object.getOwnPropertyDescriptor(sj.prototype,"illuminance"),sj.prototype),ij=sj))||ij)||ij)||ij)||ij));var cj,lj,hj,_j,uj,pj,dj,fj,mj,gj,vj,yj,xj,Sj,Cj,Tj,bj;let Ej=function(t){return e({SphereLight:t,SphereLightComponent:t}),t}((cj=Zc("cc.SphereLight"),lj=pl(),hj=ll(),_j=sl("_luminance"),uj=vl(),pj=vl(),dj=Ol(YV),fj=vl(),mj=vl(),gj=vl(),cj(vj=lj(vj=hj(vj=cl((xj=Bc((yj=class extends ZV{get luminousFlux(){return i.director.root.pipeline.pipelineSceneData.isHDR?this._luminanceHDR*Kg(this._size):this._luminanceLDR}set luminousFlux(e){let t=0;i.director.root.pipeline.pipelineSceneData.isHDR?(this._luminanceHDR=e/Kg(this._size),t=this._luminanceHDR):(this._luminanceLDR=e,t=this._luminanceLDR),this._light&&(this._light.luminance=t)}get luminance(){return i.director.root.pipeline.pipelineSceneData.isHDR?this._luminanceHDR:this._luminanceLDR}set luminance(e){i.director.root.pipeline.pipelineSceneData.isHDR?(this._luminanceHDR=e,this._light&&(this._light.luminanceHDR=this._luminanceHDR)):(this._luminanceLDR=e,this._light&&(this._light.luminanceLDR=this._luminanceLDR))}get term(){return this._term}set term(e){this._term=e}get size(){return this._size}set size(e){this._size=e,this._light&&(this._light.size=e)}get range(){return this._range}set range(e){this._range=e,this._light&&(this._light.range=e)}constructor(){super(),Fc(this,"_size",xj,this),Fc(this,"_luminanceHDR",Sj,this),Fc(this,"_luminanceLDR",Cj,this),Fc(this,"_term",Tj,this),Fc(this,"_range",bj,this),this._type=Yg.SPHERE,this._light=null,this._lightType=rv}_createLight(){super._createLight(),this.size=this._size,this.range=this._range,i.director.root.pipeline.pipelineSceneData.isHDR?this._luminanceLDR=this._luminanceHDR*Nf.standardExposureValue*Nf.standardLightMeterScale:this._luminanceHDR=this._luminanceLDR/Nf.standardExposureValue/Nf.standardLightMeterScale,this._light&&(this._light.luminanceHDR=this._luminanceHDR,this._light.luminanceLDR=this._luminanceLDR)}}).prototype,"_size",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.15}}),Sj=Bc(yj.prototype,"_luminanceHDR",[il,_j],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1700/Kg(.15)}}),Cj=Bc(yj.prototype,"_luminanceLDR",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),Tj=Bc(yj.prototype,"_term",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return YV.LUMINOUS_FLUX}}),bj=Bc(yj.prototype,"_range",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),Bc(yj.prototype,"luminousFlux",[uj],Object.getOwnPropertyDescriptor(yj.prototype,"luminousFlux"),yj.prototype),Bc(yj.prototype,"luminance",[pj],Object.getOwnPropertyDescriptor(yj.prototype,"luminance"),yj.prototype),Bc(yj.prototype,"term",[dj,fj],Object.getOwnPropertyDescriptor(yj.prototype,"term"),yj.prototype),Bc(yj.prototype,"size",[mj],Object.getOwnPropertyDescriptor(yj.prototype,"size"),yj.prototype),Bc(yj.prototype,"range",[gj],Object.getOwnPropertyDescriptor(yj.prototype,"range"),yj.prototype),vj=yj))||vj)||vj)||vj)||vj));var Aj,Pj,wj,Ij,Rj,Dj,Oj,Mj,Nj,Lj,zj,Fj,Bj,Uj,Gj,Hj,kj,Vj,jj,Wj;let qj=function(t){return e({SpotLight:t,SpotLightComponent:t}),t}((Aj=Zc("cc.SpotLight"),Pj=pl(),wj=ll(),Ij=sl("_luminance"),Rj=vl(),Dj=vl(),Oj=Ol(YV),Mj=vl(),Nj=vl(),Lj=vl(),zj=yl(),Fj=vl(),Aj(Bj=Pj(Bj=wj(Bj=cl((Gj=Bc((Uj=class extends ZV{get luminousFlux(){return i.director.root.pipeline.pipelineSceneData.isHDR?this._luminanceHDR*Kg(this._size):this._luminanceLDR}set luminousFlux(e){let t=0;i.director.root.pipeline.pipelineSceneData.isHDR?(this._luminanceHDR=e/Kg(this._size),t=this._luminanceHDR):(this._luminanceLDR=e,t=this._luminanceLDR),this._light&&(this._light.luminance=t)}get luminance(){return i.director.root.pipeline.pipelineSceneData.isHDR?this._luminanceHDR:this._luminanceLDR}set luminance(e){i.director.root.pipeline.pipelineSceneData.isHDR?(this._luminanceHDR=e,this._light&&(this._light.luminanceHDR=this._luminanceHDR)):(this._luminanceLDR=e,this._light&&(this._light.luminanceLDR=this._luminanceLDR))}get term(){return this._term}set term(e){this._term=e}get size(){return this._size}set size(e){this._size=e,this._light&&(this._light.size=e)}get range(){return this._range}set range(e){this._range=e,this._light&&(this._light.range=e)}get spotAngle(){return this._spotAngle}set spotAngle(e){this._spotAngle=e,this._light&&(this._light.spotAngle=Un(e))}constructor(){super(),Fc(this,"_size",Gj,this),Fc(this,"_luminanceHDR",Hj,this),Fc(this,"_luminanceLDR",kj,this),Fc(this,"_term",Vj,this),Fc(this,"_range",jj,this),Fc(this,"_spotAngle",Wj,this),this._type=Yg.SPOT,this._light=null,this._lightType=uv}_createLight(){super._createLight(),this.size=this._size,this.range=this._range,this.spotAngle=this._spotAngle,i.director.root.pipeline.pipelineSceneData.isHDR?this._luminanceLDR=this._luminanceHDR*Nf.standardExposureValue*Nf.standardLightMeterScale:this._luminanceHDR=this._luminanceLDR/Nf.standardExposureValue/Nf.standardLightMeterScale,this._light&&(this._light.luminanceHDR=this._luminanceHDR,this._light.luminanceLDR=this._luminanceLDR)}}).prototype,"_size",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.15}}),Hj=Bc(Uj.prototype,"_luminanceHDR",[il,Ij],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1700/Kg(.15)}}),kj=Bc(Uj.prototype,"_luminanceLDR",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),Vj=Bc(Uj.prototype,"_term",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return YV.LUMINOUS_FLUX}}),jj=Bc(Uj.prototype,"_range",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),Wj=Bc(Uj.prototype,"_spotAngle",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 60}}),Bc(Uj.prototype,"luminousFlux",[Rj],Object.getOwnPropertyDescriptor(Uj.prototype,"luminousFlux"),Uj.prototype),Bc(Uj.prototype,"luminance",[Dj],Object.getOwnPropertyDescriptor(Uj.prototype,"luminance"),Uj.prototype),Bc(Uj.prototype,"term",[Oj,Mj],Object.getOwnPropertyDescriptor(Uj.prototype,"term"),Uj.prototype),Bc(Uj.prototype,"size",[Nj],Object.getOwnPropertyDescriptor(Uj.prototype,"size"),Uj.prototype),Bc(Uj.prototype,"range",[Lj],Object.getOwnPropertyDescriptor(Uj.prototype,"range"),Uj.prototype),Bc(Uj.prototype,"spotAngle",[Tl,zj,Fj],Object.getOwnPropertyDescriptor(Uj.prototype,"spotAngle"),Uj.prototype),Bj=Uj))||Bj)||Bj)||Bj)||Bj));i.LightComponent=ZV,Ae.setClassAlias(ZV,"cc.LightComponent"),i.DirectionalLightComponent=aj,Ae.setClassAlias(aj,"cc.DirectionalLightComponent"),i.SphereLightComponent=Ej,Ae.setClassAlias(Ej,"cc.SphereLightComponent"),i.SpotLightComponent=qj,Ae.setClassAlias(qj,"cc.SpotLightComponent"),Cn(qj.prototype,"SpotLight.prototype",[{name:"luminousPower",newName:"luminousFlux",customGetter(){return this.luminousFlux},customSetter(e){this.luminousFlux=e}}]),Cn(Ej.prototype,"SphereLight.prototype",[{name:"luminousPower",newName:"luminousFlux",customGetter(){return this.luminousFlux},customSetter(e){this.luminousFlux=e}}]),Cn(ZV.PhotometricTerm,"Light.PhotometricTerm",[{name:"LUMINOUS_POWER",newName:"LUMINOUS_FLUX"}]);const Xj=function(e,t,n){e[t+0]=n.m00,e[t+1]=n.m01,e[t+2]=n.m02,e[t+3]=n.m12,e[t+4]=n.m04,e[t+5]=n.m05,e[t+6]=n.m06,e[t+7]=n.m13,e[t+8]=n.m08,e[t+9]=n.m09,e[t+10]=n.m10,e[t+11]=n.m14};function Yj(e,t){const n=4/Math.sqrt(t);return 12*Math.ceil(Math.max(480*n,e)/12)}new ui,new ui,new ri,new ui,new ri;const Kj=new kr(Ys.POINT,Ys.POINT,Ys.NONE,Ks.CLAMP,Ks.CLAMP,Ks.CLAMP),$j=new ri,Zj=new ri,Qj=new ri,Jj=new ri,eW=new xi,tW=new xi,nW=new Ac,iW=Number.MAX_SAFE_INTEGER;class sW{get pixelsPerJoint(){return this._pixelsPerJoint}constructor(e){this._device=void 0,this._pool=void 0,this._textureBuffers=new Map,this._formatSize=void 0,this._pixelsPerJoint=void 0,this._customPool=void 0,this._chunkIdxMap=new Map,this._device=e;const t=function(e){return e.hasFeature(Ls.TEXTURE_FLOAT)?zs.RGBA32F:zs.RGBA8}(this._device);this._formatSize=To[t].size,this._pixelsPerJoint=48/this._formatSize,this._pool=new vv(e),this._pool.initialize({format:t,roundUpFn:Yj}),this._customPool=new vv(e),this._customPool.initialize({format:t,roundUpFn:Yj})}clear(){this._pool.destroy(),this._textureBuffers.clear()}registerCustomTextureLayouts(e){for(let t=0;t<e.length;t++){const n=e[t],i=this._customPool.createChunk(n.textureLength);for(let e=0;e<n.contents.length;e++){const t=n.contents[e],{skeleton:s}=t;this._chunkIdxMap.set(s,i);for(let e=0;e<t.clips.length;e++){const n=t.clips[e];this._chunkIdxMap.set(s^n,i)}}}}getDefaultPoseTexture(e,t,n){const i=0^e.hash;let s=this._textureBuffers.get(i)||null;if(s&&s.bounds.has(t.hash))return s.refCount++,s;const{joints:r,bindposes:o}=e;let a=null,c=!1;const l=r.length;if(s)s.refCount++;else{const t=12*l,n=this._chunkIdxMap.get(i),r=void 0!==n?this._customPool.alloc(t*Float32Array.BYTES_PER_ELEMENT,n):this._pool.alloc(t*Float32Array.BYTES_PER_ELEMENT);if(!r)return s;s={pixelOffset:r.start/this._formatSize,refCount:1,bounds:new Map,skeletonHash:e.hash,clipHash:0,readyToBeDeleted:!1,handle:r},a=new Float32Array(t),c=!0}ri.set(Qj,iW,iW,iW),ri.set(Jj,-iW,-iW,-iW);const h=t.getBoneSpaceBounds(e);for(let t=0,i=0;t<l;t++,i+=12){const s=n.getChildByPath(r[t]),l=s?qU(s,n,eW):e.inverseBindposes[t],_=h[t];_&&(Ac.transform(nW,_,l),nW.getBoundary($j,Zj),ri.min(Qj,Qj,$j),ri.max(Jj,Jj,Zj)),c&&(s&&xi.multiply(l,l,o[t]),Xj(a,i,s?l:xi.IDENTITY))}const _=[new Ac];return s.bounds.set(t.hash,_),Ac.fromPoints(_[0],Qj,Jj),c&&(this._pool.update(s.handle,a.buffer),this._textureBuffers.set(i,s)),s}getSequencePoseTexture(e,t,n,i){const s=e.hash^t.hash;let r=this._textureBuffers.get(s)||null;if(r&&r.bounds.has(n.hash))return r.refCount++,r;const{joints:o,bindposes:a}=e,c=ML.getOrExtract(t),{frames:l}=c;let h=null,_=!1;const u=o.length;if(r)r.refCount++;else{const n=12*u*l,o=this._chunkIdxMap.get(s),a=void 0!==o?this._customPool.alloc(n*Float32Array.BYTES_PER_ELEMENT,o):this._pool.alloc(n*Float32Array.BYTES_PER_ELEMENT);if(!a)return null;const c=this._createAnimInfos(e,t,i);r={pixelOffset:a.start/this._formatSize,refCount:1,bounds:new Map,skeletonHash:e.hash,clipHash:t.hash,readyToBeDeleted:!1,handle:a,animInfos:c},h=new Float32Array(n),_=!0}const p=n.getBoneSpaceBounds(e),d=[];r.bounds.set(n.hash,d);for(let e=0;e<l;e++)d.push(new Ac(iW,iW,iW,-iW,-iW,-iW));for(let t=0,n=0;t<l;t++){const i=d[t];for(let s=0;s<u;s++,n+=12){const{curveData:o,downstream:c,bindposeIdx:l,bindposeCorrection:u}=r.animInfos[s];let d,f=!0;o&&c?d=xi.multiply(eW,o[t],c):o?d=o[t]:c?d=c:(d=e.inverseBindposes[l],f=!1);const m=p[s];if(m){const e=u?xi.multiply(tW,d,u):d;Ac.transform(nW,m,e),nW.getBoundary($j,Zj),ri.min(i.center,i.center,$j),ri.max(i.halfExtents,i.halfExtents,Zj)}_&&(f&&xi.multiply(eW,d,a[l]),Xj(h,n,f?eW:xi.IDENTITY))}Ac.fromPoints(i,i.center,i.halfExtents)}return _&&(this._pool.update(r.handle,h.buffer),this._textureBuffers.set(s,r)),r}releaseHandle(e){if(e.refCount>0&&e.refCount--,!e.refCount&&e.readyToBeDeleted){const t=e.skeletonHash^e.clipHash;(void 0!==this._chunkIdxMap.get(t)?this._customPool:this._pool).free(e.handle),this._textureBuffers.get(t)===e&&this._textureBuffers.delete(t)}}releaseSkeleton(e){const t=this._textureBuffers.values();let n=t.next();for(;!n.done;){const i=n.value;i.skeletonHash===e.hash&&(i.readyToBeDeleted=!0,i.refCount?this._textureBuffers.delete(i.skeletonHash^i.clipHash):this.releaseHandle(i)),n=t.next()}}releaseAnimationClip(e){const t=this._textureBuffers.values();let n=t.next();for(;!n.done;){const i=n.value;i.clipHash===e.hash&&(i.readyToBeDeleted=!0,i.refCount?this._textureBuffers.delete(i.skeletonHash^i.clipHash):this.releaseHandle(i)),n=t.next()}}_createAnimInfos(e,t,n){const i=[],{joints:s,bindposes:r}=e,o=s.length,a=ML.getOrExtract(t);for(let t=0;t<o;t++){let c,l,h=s[t],_=a.joints[h],u=n.getChildByPath(h);for(;!_;){const e=h.lastIndexOf("/");if(h=h.substring(0,e),_=a.joints[h],u?(c||(c=new xi),xi.fromRTS(eW,u.rotation,u.position,u.scale),xi.multiply(c,eW,c),u=u.parent):l=h,e<0)break}let p,d=t;if(void 0!==l&&_){d=t-1;for(let n=0;n<o;n++)if(s[n]===l){d=n,p=new xi,xi.multiply(p,r[n],e.inverseBindposes[t]);break}}i.push({curveData:_&&_.transforms,downstream:c,bindposeIdx:d,bindposeCorrection:p})}return i}}class rW{constructor(e){this._pool=new Map,this._device=void 0,this._device=e}getData(e="-1"){const t=this._pool.get(e);if(t)return t;const n=this._device.createBuffer(new Lr(Us.UNIFORM|Us.TRANSFER_DST,ks.HOST|ks.DEVICE,jd.SIZE,jd.SIZE)),i=new Float32Array([0,0,0,0]);n.update(i);const s={buffer:n,data:i,dirty:!1};return this._setAnimInfoDirty(s,!1),this._pool.set(e,s),s}destroy(e){const t=this._pool.get(e);t&&(t.buffer.destroy(),this._pool.delete(e))}_setAnimInfoDirty(e,t){e.dirty=t;{const n="nativeDirty",i=t?1:0;if(!e[n])return void Object.defineProperty(e,n,{value:new Uint32Array(1).fill(i),enumerable:!0});e[n].fill(i)}}switchClip(e,t){return e.data[0]=0,e.buffer.update(e.data),this._setAnimInfoDirty(e,!1),e}clear(){for(const e of this._pool.values())e.buffer.destroy();this._pool.clear()}}i.internal.DataPoolManager=class{constructor(e){this.jointTexturePool=void 0,this.jointAnimationInfo=void 0,this.jointTexturePool=new sW(e),this.jointAnimationInfo=new rW(e)}releaseSkeleton(e){this.jointTexturePool.releaseSkeleton(e)}releaseAnimationClip(e){this.jointTexturePool.releaseAnimationClip(e)}clear(){this.jointTexturePool.clear(),this.jointAnimationInfo.clear()}};const oW=[{name:"CC_USE_SKINNING",value:!0}];function aW(e,t,n,i){for(let s=0;s<n.length;s++){const r=n[s];let o=-1;for(let e=0;e<r.length;e++)if(r[e]===i){o=e;break}o>=0&&(t.push(s),e.push(o))}}const cW=new ri,lW=new ri,hW=new ri,_W=new ri,uW=new xi,pW=new Ac;class dW extends pV{constructor(){super(),this.uploadAnimation=null,this._buffers=[],this._dataArray=[],this._joints=[],this._bufferIndices=null,this.type=ug.SKINNING}_init(){this._nativeObj=new Ui}destroy(){if(this.bindSkeleton(),this._buffers.length){for(let e=0;e<this._buffers.length;e++)this._buffers[e].destroy();this._buffers.length=0}super.destroy()}bindSkeleton(e=null,t=null,n=null){for(let e=0;e<this._joints.length;e++)GU(this._joints[e].target);if(this._bufferIndices=null,this._joints.length=0,!e||!t||!n)return;this.transform=t;const i=n.getBoneSpaceBounds(e),s=n.struct.jointMaps;this._ensureEnoughBuffers(s&&s.length||1),this._bufferIndices=n.jointBufferIndices;const r=[];for(let n=0;n<e.joints.length;n++){const o=i[n],a=t.getChildByPath(e.joints[n]);if(!o||!a)continue;const c=UU(a,t),l=e.bindposes[n],h=[],_=[];s?aW(h,_,s,n):(h.push(n),_.push(0)),this._joints.push({indices:h,buffers:_,bound:o,target:a,bindpose:l,transform:c});{let e=c.parent;const t=[];for(;e;)t.push({node:e.node.native,local:e.local,world:e.local,stamp:e.stamp}),e=e.parent;r.push({indices:h,buffers:_,bound:o.native,target:a.native,bindpose:l,transform:{node:c.node.native,local:c.local,world:c.world,stamp:c.stamp},parents:t})}}this._nativeObj.setIndicesAndJoints(this._bufferIndices,r)}updateTransform(e){const t=this.transform;(t.hasChangedFlags||t._dirtyFlags)&&(t.updateWorldTransform(),this._localDataUpdated=!0),ri.set(cW,1/0,1/0,1/0),ri.set(lW,-1/0,-1/0,-1/0);for(let t=0;t<this._joints.length;t++){const{bound:n,transform:i}=this._joints[t],s=BU(i,e);Ac.transform(pW,n,s),pW.getBoundary(hW,_W),ri.min(cW,cW,hW),ri.max(lW,lW,_W)}const n=this._worldBounds;this._modelBounds&&n&&(Ac.fromPoints(this._modelBounds,cW,lW),this._modelBounds.transform(t._mat,t._pos,t._rot,t._scale,this._worldBounds),this._updateNativeBounds())}updateUBOs(e){super.updateUBOs(e);for(let e=0;e<this._joints.length;e++){const{indices:t,buffers:n,transform:i,bindpose:s}=this._joints[e];xi.multiply(uW,i.world,s);for(let e=0;e<n.length;e++)Xj(this._dataArray[n[e]],12*t[e],uW)}for(let e=0;e<this._buffers.length;e++)this._buffers[e].update(this._dataArray[e]);return!0}initSubModel(e,t,n){const i=t.vertexBuffers,s=t.iaInfo;s.vertexBuffers=t.jointMappedBuffers,super.initSubModel(e,t,n),s.vertexBuffers=i}getMacroPatches(e){const t=super.getMacroPatches(e);return t?oW.concat(t):oW}_updateLocalDescriptors(e,t){super._updateLocalDescriptors(e,t),this._nativeObj.updateLocalDescriptors(e,t)}_updateInstancedAttributes(e,t){t.batchingScheme!==og.NONE&&T(3936,this.node.name),super._updateInstancedAttributes(e,t)}_ensureEnoughBuffers(e){for(let t=0;t<e;t++)this._buffers[t]||(this._buffers[t]=this._device.createBuffer(new Lr(Us.UNIFORM|Us.TRANSFER_DST,ks.HOST|ks.DEVICE,Wd.SIZE,Wd.SIZE))),this._dataArray[t]||(this._dataArray[t]=new Float32Array(Wd.COUNT));this._nativeObj.setBuffers(this._buffers)}}const fW=[{name:"CC_USE_SKINNING",value:!0},{name:"CC_USE_BAKED_ANIMATION",value:!0}];class mW extends pV{constructor(){super(),this.uploadedAnim=void 0,this._jointsMedium=void 0,this._skeleton=null,this._mesh=null,this._dataPoolManager=void 0,this._instAnimInfoIdx=-1,this.type=ug.BAKED_SKINNING,this._dataPoolManager=i.director.root.dataPoolManager;const e=new Float32Array(4),t=this._dataPoolManager.jointAnimationInfo.getData();this._jointsMedium={buffer:null,jointTextureInfo:e,animInfo:t,texture:null,boundsInfo:null}}_init(){this._nativeObj=new Gi}destroy(){this.uploadedAnim=void 0,this._jointsMedium.boundsInfo=null,this._jointsMedium.buffer&&(this._jointsMedium.buffer.destroy(),this._jointsMedium.buffer=null),this._applyJointTexture(),this._applyNativeJointMedium(),super.destroy()}bindSkeleton(e=null,t=null,n=null){if(this._skeleton=e,this._mesh=n,!e||!t||!n)return;this.transform=t;const i=this._dataPoolManager;this._jointsMedium.animInfo=i.jointAnimationInfo.getData(t.uuid),this._jointsMedium.buffer||(this._jointsMedium.buffer=this._device.createBuffer(new Lr(Us.UNIFORM|Us.TRANSFER_DST,ks.DEVICE,Vd.SIZE,Vd.SIZE)))}updateTransform(e){if(super.updateTransform(e),!this.uploadedAnim)return;const{animInfo:t,boundsInfo:n}=this._jointsMedium,i=n[t.data[0]],s=this._worldBounds;if(s&&i){const e=this.transform;i.transform(e._mat,e._pos,e._rot,e._scale,s)}}updateUBOs(e){super.updateUBOs(e);const t=this._jointsMedium.animInfo,n=this._instAnimInfoIdx;return n>=0?this.instancedAttributes.views[n][0]=t.data[0]:t.dirty&&(t.buffer.update(t.data),t.dirty=!1),!0}_applyNativeJointMedium(){if(this._nativeObj){const e=[];this._jointsMedium.boundsInfo&&this._jointsMedium.boundsInfo.forEach((t=>{e.push(t.native)}));const t="nativeDirty";this._nativeObj.setJointMedium(!!this.uploadedAnim,{boundsInfo:e,jointTextureInfo:this._jointsMedium.jointTextureInfo.buffer,animInfo:{buffer:this._jointsMedium.animInfo.buffer,data:this._jointsMedium.animInfo.data.buffer,dirty:this._jointsMedium.animInfo[t].buffer},buffer:this._jointsMedium.buffer})}}_updateModelBounds(e){this._modelBounds=e,this._nativeObj.updateModelBounds(e?e.native:null)}uploadAnimation(e){if(!this._skeleton||!this._mesh||this.uploadedAnim===e)return;this.uploadedAnim=e;const t=this._dataPoolManager;let n=null;e?(n=t.jointTexturePool.getSequencePoseTexture(this._skeleton,e,this._mesh,this.transform),this._jointsMedium.boundsInfo=n&&n.bounds.get(this._mesh.hash),this._updateModelBounds(null)):(n=t.jointTexturePool.getDefaultPoseTexture(this._skeleton,this._mesh,this.transform),this._jointsMedium.boundsInfo=null,this._updateModelBounds(n&&n.bounds.get(this._mesh.hash)[0])),this._applyJointTexture(n),this._applyNativeJointMedium()}_applyJointTexture(e=null){const t=this._jointsMedium.texture;if(t&&t!==e&&this._dataPoolManager.jointTexturePool.releaseHandle(t),this._jointsMedium.texture=e,!e)return;const{buffer:n,jointTextureInfo:i}=this._jointsMedium;i[0]=e.handle.texture.width,i[1]=this._skeleton.joints.length,i[2]=e.pixelOffset+.1,i[3]=1/i[0],this.updateInstancedJointTextureInfo(),n&&n.update(i);const s=e.handle.texture;for(let e=0;e<this._subModels.length;++e)this._subModels[e].descriptorSet.bindTexture(Yd,s)}getMacroPatches(e){const t=super.getMacroPatches(e);return t?t.concat(fW):fW}_updateLocalDescriptors(e,t){super._updateLocalDescriptors(e,t);const{buffer:n,texture:i,animInfo:s}=this._jointsMedium;if(t.bindBuffer(Vd.BINDING,n),t.bindBuffer(jd.BINDING,s.buffer),i){const e=this._device.getSampler(Kj);t.bindTexture(Yd,i.handle.texture),t.bindSampler(Yd,e)}}_setInstAnimInfoIdx(e){this._instAnimInfoIdx=e,this._nativeObj.setAnimInfoIdx(e)}_updateInstancedAttributes(e,t){super._updateInstancedAttributes(e,t),this._setInstAnimInfoIdx(this._getInstancedAttributeIndex("a_jointAnimInfo")),this.updateInstancedJointTextureInfo()}updateInstancedJointTextureInfo(){const{jointTextureInfo:e,animInfo:t}=this._jointsMedium,n=this._instAnimInfoIdx;if(n>=0){const i=this.instancedAttributes.views[n];i[0]=t.data[0],i[1]=e[1],i[2]=e[2]}}}var gW,vW,yW,xW,SW,CW,TW,bW,EW,AW,PW,wW,IW;let RW=function(t){return e({SkinnedMeshRenderer:t,SkinningModelComponent:t}),t}((gW=Zc("cc.SkinnedMeshRenderer"),vW=pl(),yW=Jc(100),xW=ll(),SW=Ol(PV),CW=Ol(Yx),TW=Ol(PV),bW=Ol(Yx),EW=vl(),gW(AW=vW(AW=yW(AW=cl(AW=xW((wW=Bc((PW=class extends gV{get skeleton(){return this._skeleton}set skeleton(e){e!==this._skeleton&&(this._skeleton=e,this._update())}get skinningRoot(){return this._skinningRoot}set skinningRoot(e){e!==this._skinningRoot&&(this._skinningRoot=e,this._tryBindAnimation(),this._update())}get model(){return this._model}constructor(){super(),Fc(this,"_skeleton",wW,this),Fc(this,"_skinningRoot",IW,this),this._clip=null,this._animation=null,this._modelType=mW}onDestroy(){this._animation&&(this._animation.removeUser(this),this._animation=null),super.onDestroy()}__preload(){this._tryBindAnimation()}uploadAnimation(e){this._clip=e,this.model&&this.model.uploadAnimation&&this.model.uploadAnimation(e)}setUseBakedAnimation(e=!0,t=!1){const n=e?mW:dW;(t||this._modelType!==n)&&(this._modelType=n,this._model&&(i.director.root.destroyModel(this._model),this._model=null,this._models.length=0,this._updateModels(),this._updateCastShadow(),this.enabledInHierarchy&&this._attachToScene()))}setMaterial(e,t){super.setMaterial(e,t),this._modelType===dW&&this.getMaterialInstance(t)}notifyAnimationUsable(e){this._animation&&(this._animation.removeUser(this),this._animation=null),e.addUser(this),this._animation=e}notifyAnimationUnusable(){this._animation=null}_updateModelParams(){this._update(),super._updateModelParams()}_tryBindAnimation(){const{_skinningRoot:e}=this;if(!e)return;const t=e.getComponent("cc.SkeletalAnimation");t?t.addUser(this):this.setUseBakedAnimation(!1)}_update(){this.model&&(this.model.bindSkeleton(this._skeleton,this._skinningRoot,this._mesh),this.model.uploadAnimation&&this.model.uploadAnimation(this._clip))}}).prototype,"_skeleton",[SW],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),IW=Bc(PW.prototype,"_skinningRoot",[CW],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Bc(PW.prototype,"skeleton",[TW],Object.getOwnPropertyDescriptor(PW.prototype,"skeleton"),PW.prototype),Bc(PW.prototype,"skinningRoot",[bW,EW],Object.getOwnPropertyDescriptor(PW.prototype,"skinningRoot"),PW.prototype),AW=PW))||AW)||AW)||AW)||AW)||AW));var DW,OW,MW,NW,LW,zW,FW,BW,UW,GW,HW,kW,VW,jW,WW,qW,XW,YW,KW,$W,ZW,QW,JW,eq,tq,nq,iq,sq,rq;const oq=new Qr(yr.ATTR_BATCH_ID,zs.R32F),aq=new Qr(yr.ATTR_BATCH_UV,zs.RG32F),cq=To[oq.format].size+To[aq.format].size;let lq=function(t){return e({SkinnedMeshUnit:t,SkinningModelUnit:t}),t}((DW=Zc("cc.SkinnedMeshUnit"),OW=Ol(Pk),MW=Ol(PV),NW=Ol(Ug),LW=Ol(RW),DW((BW=Bc((FW=class{constructor(){Fc(this,"mesh",BW,this),Fc(this,"skeleton",UW,this),Fc(this,"material",GW,this),Fc(this,"_localTransform",HW,this),Fc(this,"_offset",kW,this),Fc(this,"_size",VW,this)}set offset(e){bi.copy(this._offset,e)}get offset(){return this._offset}set size(e){bi.copy(this._size,e)}get size(){return this._size}set copyFrom(e){e&&(this.mesh=e.mesh,this.skeleton=e.skeleton,this.material=e.getMaterial(0),e.skinningRoot&&qU(e.node,e.skinningRoot,this._localTransform))}get copyFrom(){return null}}).prototype,"mesh",[OW],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),UW=Bc(FW.prototype,"skeleton",[MW],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),GW=Bc(FW.prototype,"material",[NW],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),HW=Bc(FW.prototype,"_localTransform",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new xi}}),kW=Bc(FW.prototype,"_offset",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new bi(0,0)}}),VW=Bc(FW.prototype,"_size",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new bi(1,1)}}),Bc(FW.prototype,"offset",[dl],Object.getOwnPropertyDescriptor(FW.prototype,"offset"),FW.prototype),Bc(FW.prototype,"size",[dl],Object.getOwnPropertyDescriptor(FW.prototype,"size"),FW.prototype),Bc(FW.prototype,"copyFrom",[LW],Object.getOwnPropertyDescriptor(FW.prototype,"copyFrom"),FW.prototype),zW=FW))||zW));const hq=new xi,_q=(new xi,new ri);let uq=function(t){return e({SkinnedMeshBatchRenderer:t,BatchedSkinningModelComponent:t}),t}((jW=Zc("cc.SkinnedMeshBatchRenderer"),WW=pl(),qW=Jc(100),XW=ll(),YW=vl(),KW=Ol([ct]),$W=vl(),ZW=Ol([lq]),QW=vl(),JW=fl(),eq=fl(),jW(tq=WW(tq=qW(tq=cl(tq=XW((iq=Bc((nq=class extends RW{constructor(...e){super(...e),Fc(this,"atlasSize",iq,this),Fc(this,"batchableTextureNames",sq,this),Fc(this,"units",rq,this),this._textures={},this._batchMaterial=null}get mesh(){return super.mesh}set mesh(e){super.mesh=e}get skeleton(){return super.skeleton}set skeleton(e){super.skeleton=e}onLoad(){super.onLoad(),this.cook()}onDestroy(){for(const e in this._textures)this._textures[e].destroy();this._textures={},this._mesh&&(this._mesh.destroy(),this._mesh=null),super.onDestroy()}_onMaterialModified(e,t){this.cookMaterials(),super._onMaterialModified(e,this.getMaterialInstance(e))}cook(){this.cookMaterials(),this.cookSkeletons(),this.cookMeshes()}cookMaterials(){this._batchMaterial||(this._batchMaterial=this.getMaterial(0));const e=this.getMaterialInstance(0);if(!e||!this._batchMaterial||!this._batchMaterial.effectAsset)return void console.warn("incomplete batch material!");e.copy(this._batchMaterial),this.resizeAtlases();const t=e.effectAsset.techniques[e.technique];for(let n=0;n<t.passes.length;n++){const i=t.passes[n];if(i.properties)for(const t in i.properties)if(i.properties[t].type>=Bs.SAMPLER1D){let i=null;this.batchableTextureNames.find((e=>e===t))?(i=this._textures[t],i||(i=this.createTexture(t)),this.cookTextures(i,t,n)):this.units.some((e=>i=e.material&&e.material.getProperty(t,n))),i&&e.setProperty(t,i,n)}else{const i=[];for(let e=0;e<this.units.length;e++){const s=this.units[e];s.material&&i.push(s.material.getProperty(t.slice(0,-3),n))}e.setProperty(t,i,n)}}}cookSkeletons(){if(!this._skinningRoot)return void console.warn("no skinning root specified!");const e=[],t=[];for(let n=0;n<this.units.length;n++){const i=this.units[n];if(!i||!i.skeleton)continue;const s=i.skeleton;xi.invert(hq,i._localTransform);for(let n=0;n<s.joints.length;n++){const i=s.joints[n];e.findIndex((e=>e===i))>=0||(e.push(i),t.push(xi.multiply(new xi,s.bindposes[n]||xi.IDENTITY,hq)))}}const n=Array.from(Array(e.length).keys()).sort(((t,n)=>e[t]>e[n]?1:e[t]<e[n]?-1:0)),i=new PV;i.joints=e.map(((e,t,i)=>i[n[t]])),i.bindposes=t.map(((e,t,i)=>i[n[t]])),this._skeleton&&this._skeleton.destroy(),this.skeleton=i}cookMeshes(){let e=!1;for(let t=0;t<this.units.length;t++)if(this.units[t].mesh){e=!0;break}if(!e||!this._skinningRoot)return;this._mesh?this._mesh.destroyRenderingMesh():this._mesh=new Pk;let t=0,n=zs.UNKNOWN,i=0,s=zs.UNKNOWN,r=0,o=zs.UNKNOWN,a=0,c=zs.UNKNOWN,l=0,h=zs.UNKNOWN;const _=new Array(this.units.length),u=this.units.length;for(let e=0;e<u;e++){const t=this.units[e];t&&t.skeleton&&(_[e]=t.skeleton.joints.map((e=>this._skeleton.joints.findIndex((t=>e===t)))))}for(let e=0;e<u;e++){const u=this.units[e];if(!u||!u.mesh||!u.mesh.data)continue;const p=this._createUnitMesh(e,u.mesh),d=new DataView(p.data.buffer);xi.inverseTranspose(hq,u._localTransform);const{offset:f}=u,{size:m}=u;for(let g=0;g<p.struct.vertexBundles.length;g++){const v=p.struct.vertexBundles[g];t=v.view.offset,n=zs.UNKNOWN;for(let e=0;e<v.attributes.length;e++){const i=v.attributes[e];if(i.name===yr.ATTR_POSITION){n=i.format;break}t+=To[i.format].size}if(n){const e=nT(d,n,t,v.view.length,v.view.stride);for(let t=0;t<e.length;t+=3)ri.fromArray(_q,e,t),ri.transformMat4(_q,_q,u._localTransform),ri.toArray(e,_q,t);tT(d,e,n,t,v.view.stride)}i=v.view.offset,s=zs.UNKNOWN;for(let e=0;e<v.attributes.length;e++){const t=v.attributes[e];if(t.name===yr.ATTR_NORMAL){s=t.format;break}i+=To[t.format].size}if(s){const e=nT(d,s,i,v.view.length,v.view.stride);for(let t=0;t<e.length;t+=3)ri.fromArray(_q,e,t),ri.transformMat4Normal(_q,_q,hq),ri.toArray(e,_q,t);tT(d,e,s,i,v.view.stride)}r=v.view.offset,o=zs.UNKNOWN;for(let e=0;e<v.attributes.length;e++){const t=v.attributes[e];if(t.name===yr.ATTR_TANGENT){o=t.format;break}r+=To[t.format].size}if(o){const e=nT(d,o,r,v.view.length,v.view.stride);for(let t=0;t<e.length;t+=3)ri.fromArray(_q,e,t),ri.transformMat4Normal(_q,_q,hq),ri.toArray(e,_q,t);tT(d,e,o,r,v.view.stride)}a=v.view.offset,c=zs.UNKNOWN;for(let e=0;e<v.attributes.length;e++){const t=v.attributes[e];if(t.name===yr.ATTR_BATCH_UV){c=t.format;break}a+=To[t.format].size}c&&iT(d,((e,t)=>{var n;const i=0===t?"x":"y";return(e=(n=e)-Math.floor(n))*m[i]+f[i]}),c,a,v.view.length,v.view.stride,d);const y=_[e];if(y){l=v.view.offset,h=zs.UNKNOWN;for(let e=0;e<v.attributes.length;e++){const t=v.attributes[e];if(t.name===yr.ATTR_JOINTS){h=t.format;break}l+=To[t.format].size}h&&iT(d,(e=>y[e]),h,l,v.view.length,v.view.stride,d)}}this._mesh.merge(p)}this._onMeshChanged(this._mesh),this._updateModels()}cookTextures(e,t,n){const s=[],r=[],o=[],a=[];for(let e=0;e<this.units.length;e++){const i=this.units[e];if(!i.material)continue;const c=i.material.getProperty(t,n);if(c&&c.image&&c.image.data){const e=new Ir;e.texOffset.x=i.offset.x*this.atlasSize,e.texOffset.y=i.offset.y*this.atlasSize,e.texExtent.width=i.size.x*this.atlasSize,e.texExtent.height=i.size.y*this.atlasSize;const{data:t}=c.image;ArrayBuffer.isView(t)?(o.push(t),a.push(e)):(s.push(t),r.push(e))}}const c=e.getGFXTexture(),{device:l}=i.director.root;o.length>0&&l.copyBuffersToTexture(o,c,a),s.length>0&&l.copyTexImagesToTexture(s,c,r)}createTexture(e){const t=new ym;return t.setFilters(Ff.LINEAR,Ff.LINEAR),t.setMipFilter(Ff.NEAREST),t.reset({width:this.atlasSize,height:this.atlasSize,format:Lf.RGBA8888}),this._textures[e]=t,t}resizeAtlases(){for(const e in this._textures)this._textures[e].reset({width:this.atlasSize,height:this.atlasSize,format:Lf.RGBA8888})}_createUnitMesh(e,t){const n=JSON.parse(JSON.stringify(t.struct)),s={};for(let e=0;e<t.struct.primitives.length;e++){const i=t.struct.primitives[e];let r=0,o=zs.UNKNOWN,a=0;for(;a<i.vertexBundelIndices.length;a++){const e=t.struct.vertexBundles[i.vertexBundelIndices[a]];r=e.view.offset,o=zs.UNKNOWN;for(let t=0;t<e.attributes.length;t++){const n=e.attributes[t];if(n.name===yr.ATTR_TEX_COORD){o=n.format;break}r+=To[n.format].size}if(o)break}if(void 0!==s[a])continue;s[a]=[o,r];const c=n.vertexBundles[a];c.attributes.push(oq),c.attributes.push(aq),c.view.offset=0,c.view.length+=c.view.count*cq,c.view.stride+=cq}let r=0;for(let e=0;e<n.vertexBundles.length;e++)r+=n.vertexBundles[e].view.length;for(let e=0;e<n.primitives.length;e++){const t=n.primitives[e];t.indexView&&(t.indexView.offset=r,r+=t.indexView.length)}const o=new Uint8Array(r),a=t.data,c=new DataView(o.buffer),l=new DataView(a.buffer),{isLittleEndian:h}=i.sys;for(const i in s){const r=n.vertexBundles[i],_=t.struct.vertexBundles[i],[u,p]=s[i],d=nT(l,u,p,_.view.length,_.view.stride),f=_.view,m=r.view,g=f.stride,v=m.stride;let y=f.offset,x=m.offset;for(let t=0;t<m.count;t++){const n=a.subarray(y,y+g);o.set(n,x),c.setFloat32(x+g,e),c.setFloat32(x+g+4,d[2*t],h),c.setFloat32(x+g+8,d[2*t+1],h),x+=v,y+=g}}for(let e=0;e<n.primitives.length;e++){const i=t.struct.primitives[e],s=n.primitives[e];if(i.indexView&&s.indexView){const e=i.indexView.stride,t=s.indexView.stride;let n=i.indexView.offset,r=s.indexView.offset;for(let i=0;i<s.indexView.count;i++){const i=a.subarray(n,n+e);o.set(i,r),r+=t,n+=e}}}const _=new Pk;return _.reset({struct:n,data:o}),_}}).prototype,"atlasSize",[il,YW],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1024}}),sq=Bc(nq.prototype,"batchableTextureNames",[KW,il,$W],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),rq=Bc(nq.prototype,"units",[ZW,il,QW],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Bc(nq.prototype,"mesh",[Ml,JW],Object.getOwnPropertyDescriptor(nq.prototype,"mesh"),nq.prototype),Bc(nq.prototype,"skeleton",[Ml,eq],Object.getOwnPropertyDescriptor(nq.prototype,"skeleton"),nq.prototype),tq=nq))||tq)||tq)||tq)||tq)||tq));i.SkinningModelComponent=RW,Ae.setClassAlias(RW,"cc.SkinningModelComponent"),i.SkinningModelUnit=lq,Ae.setClassAlias(lq,"cc.SkinningModelUnit"),i.BatchedSkinningModelComponent=uq,Ae.setClassAlias(uq,"cc.BatchedSkinningModelComponent");const pq=new xi,dq=new xi;class fq extends yF{constructor(e,t=""){super(e,t),this._frames=1,this._bakedDuration=0,this._animInfo=null,this._sockets=[],this._animInfoMgr=void 0,this._parent=null,this._curvesInited=!1,this._animInfoMgr=i.director.root.dataPoolManager.jointAnimationInfo}initialize(e){if(this._curveLoaded)return;this._parent=e.getComponent("cc.SkeletalAnimation");const t=this._parent.useBakedAnimation;this._doNotCreateEval=t,super.initialize(e),this._curvesInited=!t;const{frames:n,samples:i}=ML.getOrExtract(this.clip);this._frames=n-1,this._animInfo=this._animInfoMgr.getData(e.uuid),this._bakedDuration=this._frames/i}onPlay(){super.onPlay(),this._parent.useBakedAnimation?(this._sampleCurves=this._sampleCurvesBaked,this.duration=this._bakedDuration,this._animInfoMgr.switchClip(this._animInfo,this.clip),this._parent.getUsers().forEach((e=>{e.uploadAnimation(this.clip)}))):(this._sampleCurves=super._sampleCurves,this.duration=this.clip.duration,this._curvesInited||(this._curveLoaded=!1,super.initialize(this._targetNode),this._curvesInited=!0))}rebuildSocketCurves(e){if(this._sockets.length=0,!this._targetNode)return;const t=this._targetNode;for(let n=0;n<e.length;++n){const i=e[n],s=t.getChildByPath(i.path);if(!i.target)continue;const r=ML.getOrExtract(this.clip);let o,a=i.path,c=r.joints[a],l=s;for(;!c;){const e=a.lastIndexOf("/");if(a=a.substring(0,e),c=r.joints[a],l&&(o||(o=xi.identity(dq)),xi.fromRTS(pq,l.rotation,l.position,l.scale),xi.multiply(o,pq,o),l=l.parent),e<0)break}const h=c&&c.transforms,{frames:_}=r,u=[];for(let e=0;e<_;e++){let t;t=h&&o?xi.multiply(pq,h[e],o):h?h[e]:o||new xi;const n={pos:new ri,rot:new ui,scale:new ri};xi.toRTS(t,n.rot,n.pos,n.scale),u.push(n)}this._sockets.push({target:i.target,frames:u})}}_setAnimInfoDirty(e,t){e.dirty=t,e.nativeDirty.fill(t?1:0)}_sampleCurvesBaked(e){const t=e/this.duration,n=this._animInfo,i=t*this._frames+.5|0;if(i!==n.data[0]){n.data[0]=i,this._setAnimInfoDirty(n,!0);for(let e=0;e<this._sockets.length;++e){const{target:t,frames:n}=this._sockets[e],{pos:s,rot:r,scale:o}=n[i];t.setRTS(r,s,o)}}}}var mq,gq,vq,yq,xq,Sq,Cq,Tq,bq,Eq,Aq,Pq,wq,Iq,Rq,Dq,Oq,Mq,Nq,Lq;e("SkeletalAnimationState",fq);let zq=e("Socket",(mq=Zc("cc.SkeletalAnimation.Socket"),gq=Ol(Yx),mq((xq=Bc((yq=class{constructor(e="",t=null){Fc(this,"path",xq,this),Fc(this,"target",Sq,this),this.path=e,this.target=t}}).prototype,"path",[il,dl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),Sq=Bc(yq.prototype,"target",[gq],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),vq=yq))||vq));Ae.setClassAlias(zq,"cc.SkeletalAnimationComponent.Socket");const Fq=new xi,Bq=new xi;function Uq(e,t="",n=[]){for(let i=0;i<e.children.length;i++){const s=e.children[i];if(!s)continue;const r=t?`${t}/${s.name}`:s.name;n.push(r),Uq(s,r,n)}return n}let Gq=function(t){return e({SkeletalAnimation:t,SkeletalAnimationComponent:t}),t}((Cq=Zc("cc.SkeletalAnimation"),Tq=pl(),bq=Jc(99),Eq=ll(),Aq=Ol([zq]),Pq=vl(),wq=vl(),Iq=Ol([zq]),Cq(Rq=Tq(Rq=bq(Rq=cl(Rq=Eq((Lq=Nq=class extends NU{constructor(...e){super(...e),Fc(this,"_useBakedAnimation",Oq,this),Fc(this,"_sockets",Mq,this),this._users=new Set,this._currentBakedState=null}get sockets(){return this._sockets}set sockets(e){if(!this._useBakedAnimation){const t=i.director.getAnimationManager();t.removeSockets(this.node,this._sockets),t.addSockets(this.node,e)}this._sockets=e,this.rebuildSocketAnimations()}get useBakedAnimation(){return this._useBakedAnimation}set useBakedAnimation(e){this._useBakedAnimation=e,this._removeAllUsers();const t=this.node.getComponentsInChildren(RW);for(let e=0;e<t.length;++e){const n=t[e];n.skinningRoot===this.node&&n.notifyAnimationUsable(this)}this._useBakedAnimation?i.director.getAnimationManager().removeSockets(this.node,this._sockets):(i.director.getAnimationManager().addSockets(this.node,this._sockets),this._currentBakedState=null)}onDestroy(){super.onDestroy(),i.director.root.dataPoolManager.jointAnimationInfo.destroy(this.node.uuid),i.director.getAnimationManager().removeSockets(this.node,this._sockets)}start(){this.sockets=this._sockets,this.useBakedAnimation=this._useBakedAnimation,super.start()}pause(){var e;this._useBakedAnimation?null===(e=this._currentBakedState)||void 0===e||e.pause():super.pause()}resume(){var e;this._useBakedAnimation?null===(e=this._currentBakedState)||void 0===e||e.resume():super.resume()}stop(){this._useBakedAnimation?this._currentBakedState&&(this._currentBakedState.stop(),this._currentBakedState=null):super.stop()}querySockets(){const e=this._defaultClip&&Object.keys(ML.getOrExtract(this._defaultClip).joints).sort().reduce(((e,t)=>(t.startsWith(e[e.length-1])||e.push(t),e)),[])||[];if(!e.length)return["please specify a valid default animation clip first"];const t=[];for(let n=0;n<e.length;n++){const i=e[n],s=this.node.getChildByPath(i);s&&(t.push(i),Uq(s,i,t))}return t}rebuildSocketAnimations(){for(const e of this._sockets){const t=this.node.getChildByPath(e.path),{target:n}=e;t&&n&&(n.name=`${e.path.substring(e.path.lastIndexOf("/")+1)} Socket`,n.parent=this.node,qU(t,this.node,Fq),xi.fromRTS(Bq,n.rotation,n.position,n.scale),xi.equals(Bq,Fq)||(n.matrix=Fq))}for(const e of Object.keys(this._nameToState))this._nameToState[e].rebuildSocketCurves(this._sockets)}createSocket(e){const t=this._sockets.find((t=>t.path===e));if(t)return t.target;if(!this.node.getChildByPath(e))return console.warn("illegal socket path"),null;const n=new Yx;return n.parent=this.node,this._sockets.push(new zq(e,n)),this.rebuildSocketAnimations(),n}addUser(e){this._users.add(e);const{_useBakedAnimation:t}=this;if(e.setUseBakedAnimation(t,!0),t){const{_currentBakedState:t}=this;t&&e.uploadAnimation(t.clip)}}removeUser(e){e.setUseBakedAnimation(!1),e.notifyAnimationUnusable(),this._users.delete(e)}getUsers(){return this._users}_createState(e,t){return new fq(e,t)}_doCreateState(e,t){const n=super._doCreateState(e,t);return n.rebuildSocketCurves(this._sockets),n}doPlayOrCrossFade(e,t){if(this._useBakedAnimation){this._currentBakedState&&this._currentBakedState.stop();const t=e;this._currentBakedState=t,t.play()}else super.doPlayOrCrossFade(e,t)}_removeAllUsers(){Array.from(this._users).forEach((e=>{this.removeUser(e)}))}},Nq.Socket=zq,Bc((Dq=Lq).prototype,"sockets",[Aq,Pq],Object.getOwnPropertyDescriptor(Dq.prototype,"sockets"),Dq.prototype),Bc(Dq.prototype,"useBakedAnimation",[wq],Object.getOwnPropertyDescriptor(Dq.prototype,"useBakedAnimation"),Dq.prototype),Oq=Bc(Dq.prototype,"_useBakedAnimation",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),Mq=Bc(Dq.prototype,"_sockets",[Iq],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Rq=Dq))||Rq)||Rq)||Rq)||Rq)||Rq));i.SkeletalAnimationComponent=Gq,Ae.setClassAlias(Gq,"cc.SkeletalAnimationComponent"),i.utils=uV;const Hq=[new Qr(yr.ATTR_POSITION,zs.RGB32F)],kq=[new Qr(yr.ATTR_POSITION,zs.RGB32F),new Qr(yr.ATTR_COLOR,zs.RGBA32F)],Vq=[new Qr(yr.ATTR_POSITION,zs.RGB32F),new Qr(yr.ATTR_TEX_COORD,zs.RG32F),new Qr(yr.ATTR_COLOR,zs.RGBA32F)],jq=[new Qr(yr.ATTR_POSITION,zs.RGB32F),new Qr(yr.ATTR_TEX_COORD,zs.RG32F),new Qr(yr.ATTR_COLOR,zs.RGBA32F),new Qr(yr.ATTR_COLOR2,zs.RGBA32F)];function Wq(e){let t=0;for(let n=0;n<e.length;n++){const i=e[n];t+=To[i.format].count}return t}function qq(e){let t=0;for(let n=0;n<e.length;n++){const i=e[n];t+=To[i.format].size}return t}i.internal.vfmtPosUvColor=Vq,i.internal.vfmtPosUvTwoColor=jq,e("UIVertexFormat",Object.freeze({__proto__:null,vfmt:Hq,vfmtPosColor:kq,vfmtPosUvColor:Vq,vfmtPosUvTwoColor:jq,getComponentPerVertex:Wq,getAttributeStride:qq}));const Xq=new ri,Yq=new xi;function Kq(e,t,n,i){const s=n.chunk,r=n.data,o=s.vb,a=n.vertexCount;e.getWorldMatrix(Yq);let c=0;for(let e=0;e<a;e++){const t=r[e];ri.set(Xq,t.x,t.y,0),ri.transformMat4(Xq,Xq,Yq),o[c++]=Xq.x,o[c++]=Xq.y,o[c++]=Xq.z,ti.toArray(o,i,c+2),c+=6}const l=s.bufferId,h=s.vertexOffset,_=s.vertexAccessor.getMeshBuffer(s.bufferId),u=s.vertexAccessor.getIndexBuffer(l);let p=_.indexOffset;for(let e=0,t=a/4;e<t;e++){const t=h+4*e;u[p++]=t,u[p++]=t+1,u[p++]=t+2,u[p++]=t+1,u[p++]=t+3,u[p++]=t+2}_.indexOffset+=n.indexCount,_.setDirty()}class $q{constructor(e,t){this._texture=void 0,this._width=void 0,this._height=void 0,this._x=void 0,this._y=void 0,this._nexty=void 0,this._innerTextureInfos={},this._innerSpriteFrames=void 0,this._count=void 0;const n=new Zq;n.initWithSize(e,t),this._texture=n,this._width=e,this._height=t,this._x=2,this._y=2,this._nexty=2,this._innerTextureInfos={},this._innerSpriteFrames=[],this._count=0}insertSpriteFrame(e){const t=e.rect,n=e.texture,s=this._innerTextureInfos[n.getId()];let r=t.x,o=t.y;if(s)r+=s.x,o+=s.y;else{const e=n.width,t=n.height;if(this._x+e+2>this._width&&(this._x=2,this._y=this._nexty),this._y+t+2>this._nexty&&(this._nexty=this._y+t+2),this._nexty>this._height)return null;i.internal.dynamicAtlasManager.textureBleeding&&((e<=8||t<=8)&&(this._texture.drawTextureAt(n.image,this._x-1,this._y-1),this._texture.drawTextureAt(n.image,this._x-1,this._y+1),this._texture.drawTextureAt(n.image,this._x+1,this._y-1),this._texture.drawTextureAt(n.image,this._x+1,this._y+1)),this._texture.drawTextureAt(n.image,this._x-1,this._y),this._texture.drawTextureAt(n.image,this._x+1,this._y),this._texture.drawTextureAt(n.image,this._x,this._y-1),this._texture.drawTextureAt(n.image,this._x,this._y+1)),this._texture.drawTextureAt(n.image,this._x,this._y),this._innerTextureInfos[n.getId()]={x:this._x,y:this._y,texture:n},this._count++,r+=this._x,o+=this._y,this._x+=e+2}const a={x:r,y:o,texture:this._texture};return this._innerSpriteFrames.push(e),a}deleteInnerTexture(e){e&&this._innerTextureInfos[e.getId()]&&(delete this._innerTextureInfos[e.getId()],this._count--)}isEmpty(){return this._count<=0}reset(){this._x=2,this._y=2,this._nexty=2;const e=this._innerSpriteFrames;for(let t=0,n=e.length;t<n;t++){const n=e[t];n.isValid&&n._resetDynamicAtlasFrame()}this._innerSpriteFrames.length=0,this._innerTextureInfos={}}destroy(){this.reset(),this._texture.destroy()}}class Zq extends ym{initWithSize(e,t,n=Lf.RGBA8888){this.reset({width:e,height:t,format:n})}drawTextureAt(e,t,n){const i=this.getGFXTexture();if(!e||!i)return;const s=this._getGFXDevice();if(!s)return void console.warn("Unable to get device");const r=new Ir;r.texOffset.x=t,r.texOffset.y=n,r.texExtent.width=e.width,r.texExtent.height=e.height,s.copyTexImagesToTexture([e.data],i,[r])}}class Qq{constructor(){this._atlases=[],this._atlasIndex=-1,this._maxAtlasCount=5,this._textureSize=2048,this._maxFrameSize=512,this._textureBleeding=!0,this._enabled=!1}get enabled(){return this._enabled}set enabled(e){this._enabled!==e&&(e?(this.reset(),i.director.on(i.Director.EVENT_BEFORE_SCENE_LAUNCH,this.beforeSceneLoad,this)):(this.reset(),i.director.off(i.Director.EVENT_BEFORE_SCENE_LAUNCH,this.beforeSceneLoad,this)),this._enabled=e)}get maxAtlasCount(){return this._maxAtlasCount}set maxAtlasCount(e){this._maxAtlasCount=e}get atlasCount(){return this._atlases.length}get textureBleeding(){return this._textureBleeding}set textureBleeding(e){this._textureBleeding=e}get textureSize(){return this._textureSize}set textureSize(e){this._textureSize=e}get maxFrameSize(){return this._maxFrameSize}set maxFrameSize(e){this._maxFrameSize=e}newAtlas(){let e=this._atlases[++this._atlasIndex];return e||(e=new $q(this._textureSize,this._textureSize),this._atlases.push(e)),e}beforeSceneLoad(){this.reset()}insertSpriteFrame(e){if(!this._enabled||this._atlasIndex===this._maxAtlasCount||!e||e._original)return null;if(!e.packable)return null;const t=e.texture.getSamplerInfo();if(t.minFilter!==Ff.LINEAR||t.magFilter!==Ff.LINEAR||t.mipFilter!==Ff.NONE)return null;let n=this._atlases[this._atlasIndex];n||(n=this.newAtlas());const i=n.insertSpriteFrame(e);return i||this._atlasIndex===this._maxAtlasCount?i:(n=this.newAtlas(),n.insertSpriteFrame(e))}reset(){for(let e=0,t=this._atlases.length;e<t;e++)this._atlases[e].destroy();this._atlases.length=0,this._atlasIndex=-1}deleteAtlasSpriteFrame(e){if(!e._original)return;let t;for(let n=this._atlases.length-1;n>=0;n--)t=this._atlases[n],Ae.array.fastRemove(t._innerSpriteFrames,e);const n=e._original._texture;this.deleteAtlasTexture(n)}deleteAtlasTexture(e){if(e)for(let t=this._atlases.length-1;t>=0;t--)this._atlases[t].deleteInnerTexture(e),this._atlases[t].isEmpty()&&(this._atlases[t].destroy(),this._atlases.splice(t,1),this._atlasIndex--)}packToDynamicAtlas(e,t){if(t&&!t._original&&t.packable){const e=this.insertSpriteFrame(t);e&&t._setDynamicAtlasFrame(e)}}}Qq.instance=void 0;const Jq=e("dynamicAtlasManager",Qq.instance=new Qq);var eX,tX,nX;i.internal.dynamicAtlasManager=Jq;const iX=[{u:0,v:0},{u:0,v:0},{u:0,v:0},{u:0,v:0}];let sX=e("SpriteFrame",Zc("cc.SpriteFrame")((nX=tX=class e extends bh{static createWithImage(t){const n=t instanceof jf?t:new jf(t),i=new ym;i.image=n;const s=new e;return s.texture=i,s}get insetTop(){return this._capInsets[1]}set insetTop(e){this._capInsets[1]!==e&&(this._capInsets[1]=e,this._texture&&this._calculateSlicedUV())}get insetBottom(){return this._capInsets[3]}set insetBottom(e){this._capInsets[3]!==e&&(this._capInsets[3]=e,this._texture&&this._calculateSlicedUV())}get insetLeft(){return this._capInsets[0]}set insetLeft(e){this._capInsets[0]!==e&&(this._capInsets[0]=e,this._texture&&this._calculateSlicedUV())}get insetRight(){return this._capInsets[2]}set insetRight(e){this._capInsets[2]!==e&&(this._capInsets[2]=e,this._texture&&this._calculateSlicedUV())}get rect(){return this._rect}set rect(e){this._rect.equals(e)||(this._rect.set(e),this._texture&&this._calculateUV())}get originalSize(){return this._originalSize}set originalSize(e){this._originalSize.equals(e)||(this._originalSize.set(e),this._texture&&this._calculateUV())}get offset(){return this._offset}set offset(e){this._offset.set(e)}get rotated(){return this._rotated}set rotated(e){this._rotated!==e&&(this._rotated=e,this._texture&&this._calculateUV())}get texture(){return this._texture}set texture(e){e?this.reset({texture:e},!0):console.warn(`Error Texture in ${this.name}`)}get atlasUuid(){return this._atlasUuid}set atlasUuid(e){this._atlasUuid=e}get width(){return this._texture.width}get height(){return this._texture.height}set _textureSource(e){window.Build?this._texture=e:e&&(this._refreshTexture(e),this._calculateUV())}get flipUVX(){return this._isFlipUVX}set flipUVX(e){this._isFlipUVX=e,this._calculateUV()}get flipUVY(){return this._isFlipUVY}set flipUVY(e){this._isFlipUVY=e,this._calculateUV()}get packable(){return this._packable}set packable(e){this._packable=e}get original(){return this._original}constructor(){super(),this.vertices=null,this.uv=[],this.unbiasUV=[],this.uvSliced=[],this._rect=new Mi,this._offset=new bi,this._originalSize=new Di,this._rotated=!1,this._capInsets=[0,0,0,0],this._atlasUuid="",this._texture=void 0,this._isFlipUVY=!1,this._isFlipUVX=!1,this._original=null,this._packable=!0}textureLoaded(){return!!this.texture}isRotated(){return this._rotated}setRotated(e){this.rotated=e}getRect(e){return e?(e.set(this._rect),e):this._rect.clone()}setRect(e){this.rect=e}getOriginalSize(e){return e?(e.set(this._originalSize),e):this._originalSize.clone()}setOriginalSize(e){this.originalSize=e}getOffset(e){return e?(e.set(this._offset),e):this._offset.clone()}setOffset(e){this.offset=e}getGFXTexture(){return this._texture.getGFXTexture()}getGFXSampler(){return this._texture.getGFXSampler()}getHash(){return this._texture.getHash()}getSamplerInfo(){return this._texture.getSamplerInfo()}reset(e,t=!1){let n=!1;t&&(this._originalSize.set(0,0),this._rect.set(0,0,0,0),this._offset.set(0,0),this._capInsets=[0,0,0,0],this._rotated=!1,n=!0),e&&(e.texture&&(this._rect.x=this._rect.y=0,this._rect.width=e.texture.width,this._rect.height=e.texture.height,this._refreshTexture(e.texture),this.checkRect(this._texture)),e.originalSize&&this._originalSize.set(e.originalSize),e.rect&&this._rect.set(e.rect),e.offset&&this._offset.set(e.offset),void 0!==e.borderTop&&(this._capInsets[1]=e.borderTop),void 0!==e.borderBottom&&(this._capInsets[3]=e.borderBottom),void 0!==e.borderLeft&&(this._capInsets[0]=e.borderLeft),void 0!==e.borderRight&&(this._capInsets[2]=e.borderRight),void 0!==e.isRotate&&(this._rotated=!!e.isRotate),void 0!==e.isFlipUv&&(this._isFlipUVY=!!e.isFlipUv),n=!0),n&&this.texture&&this._calculateUV()}checkRect(e){const t=this._rect;let n=t.x,i=t.y;return this._rotated?(n+=t.height,i+=t.width):(n+=t.width,i+=t.height),n>e.width?(E(3300,`${this.name}/${e.name}`,n,e.width),!1):!(i>e.height&&(E(3301,`${this.name}/${e.name}`,i,e.height),1))}destroy(){return this._packable&&Jq&&Jq.deleteAtlasSpriteFrame(this),super.destroy()}_calculateSlicedUV(){const t=this._rect,n=this.texture,i=n.width,s=n.height,r=this._capInsets[0],o=this._capInsets[2],a=t.width-r-o,c=this._capInsets[1],l=this._capInsets[3],h=t.height-c-l,_=this.uvSliced;if(_.length=0,this._rotated){iX[0].u=t.x/i,iX[1].u=(t.x+l)/i,iX[2].u=(t.x+l+h)/i,iX[3].u=(t.x+t.height)/i,iX[3].v=t.y/s,iX[2].v=(t.y+r)/s,iX[1].v=(t.y+r+a)/s,iX[0].v=(t.y+t.width)/s;for(let e=0;e<4;++e){const t=iX[e];for(let e=0;e<4;++e){const n=iX[3-e];_.push({u:t.u,v:n.v})}}}else{iX[0].u=t.x/i,iX[1].u=(t.x+r)/i,iX[2].u=(t.x+r+a)/i,iX[3].u=(t.x+t.width)/i,iX[3].v=t.y/s,iX[2].v=(t.y+c)/s,iX[1].v=(t.y+c+h)/s,iX[0].v=(t.y+t.height)/s;for(let e=0;e<4;++e){const t=iX[e];for(let e=0;e<4;++e){const n=iX[e];_.push({u:n.u,v:t.v})}}}this.emit(e.EVENT_UV_UPDATED,this)}_calculateUV(){const e=this._rect,t=this.uv,n=this.unbiasUV,i=this.texture,s=i.width,r=i.height;if(this._rotated){const i=0===s?0:e.x/s,o=0===s?1:(e.x+e.height)/s,a=0===r?0:e.y/r,c=0===r?1:(e.y+e.width)/r;this._isFlipUVX&&this._isFlipUVY?(t[0]=o,t[1]=c,t[2]=o,t[3]=a,t[4]=i,t[5]=c,t[6]=i,t[7]=a):this._isFlipUVX?(t[0]=o,t[1]=a,t[2]=o,t[3]=c,t[4]=i,t[5]=a,t[6]=i,t[7]=c):this._isFlipUVY?(t[0]=i,t[1]=c,t[2]=i,t[3]=a,t[4]=o,t[5]=c,t[6]=o,t[7]=a):(t[0]=i,t[1]=a,t[2]=i,t[3]=c,t[4]=o,t[5]=a,t[6]=o,t[7]=c);const l=0===s?0:e.x/s,h=0===s?1:(e.x+e.height)/s,_=0===r?0:e.y/r,u=0===r?1:(e.y+e.width)/r;this._isFlipUVX&&this._isFlipUVY?(n[0]=h,n[1]=u,n[2]=h,n[3]=_,n[4]=l,n[5]=u,n[6]=l,n[7]=_):this._isFlipUVX?(n[0]=h,n[1]=_,n[2]=h,n[3]=u,n[4]=l,n[5]=_,n[6]=l,n[7]=u):this._isFlipUVY?(n[0]=l,n[1]=u,n[2]=l,n[3]=_,n[4]=h,n[5]=u,n[6]=h,n[7]=_):(n[0]=l,n[1]=_,n[2]=l,n[3]=u,n[4]=h,n[5]=_,n[6]=h,n[7]=u)}else{const i=0===s?0:e.x/s,o=0===s?1:(e.x+e.width)/s,a=0===r?1:(e.y+e.height)/r,c=0===r?0:e.y/r;this._isFlipUVX&&this._isFlipUVY?(t[0]=o,t[1]=c,t[2]=i,t[3]=c,t[4]=o,t[5]=a,t[6]=i,t[7]=a):this._isFlipUVX?(t[0]=o,t[1]=a,t[2]=i,t[3]=a,t[4]=o,t[5]=c,t[6]=i,t[7]=c):this._isFlipUVY?(t[0]=i,t[1]=c,t[2]=o,t[3]=c,t[4]=i,t[5]=a,t[6]=o,t[7]=a):(t[0]=i,t[1]=a,t[2]=o,t[3]=a,t[4]=i,t[5]=c,t[6]=o,t[7]=c);const l=0===s?0:e.x/s,h=0===s?1:(e.x+e.width)/s,_=0===r?1:(e.y+e.height)/r,u=0===r?0:e.y/r;this._isFlipUVX&&this._isFlipUVY?(n[0]=h,n[1]=u,n[2]=l,n[3]=u,n[4]=h,n[5]=_,n[6]=l,n[7]=_):this._isFlipUVX?(n[0]=h,n[1]=_,n[2]=l,n[3]=_,n[4]=h,n[5]=u,n[6]=l,n[7]=u):this._isFlipUVY?(n[0]=l,n[1]=u,n[2]=h,n[3]=u,n[4]=l,n[5]=_,n[6]=h,n[7]=_):(n[0]=l,n[1]=_,n[2]=h,n[3]=_,n[4]=l,n[5]=u,n[6]=h,n[7]=u)}const o=this.vertices;if(o){o.nu.length=0,o.nv.length=0;for(let e=0;e<o.u.length;e++)o.nu[e]=o.u[e]/s,o.nv[e]=o.v[e]/r}this._calculateSlicedUV()}_setDynamicAtlasFrame(e){e&&(this._original={_texture:this._texture,_x:this._rect.x,_y:this._rect.y},this._texture=e.texture,this._rect.x=e.x,this._rect.y=e.y,this._calculateUV())}_resetDynamicAtlasFrame(){this._original&&(this._rect.x=this._original._x,this._rect.y=this._original._y,this._texture=this._original._texture,this._original=null,this._calculateUV())}_checkPackable(){const e=Jq;if(!e)return;const t=this._texture;if(!(t instanceof ym)||t.isCompressed)return void(this._packable=!1);const n=this.width,i=this.height;!t.image||n>e.maxFrameSize||i>e.maxFrameSize?this._packable=!1:t.image&&t.image instanceof HTMLCanvasElement&&(this._packable=!0)}_serialize(e){return null}_deserialize(e,t){const n=e,i=n.rect;i&&(this._rect=new Mi(i.x,i.y,i.width,i.height));const s=n.offset;n.offset&&(this._offset=new bi(s.x,s.y));const r=n.originalSize;n.originalSize&&(this._originalSize=new Di(r.width,r.height)),this._rotated=!!n.rotated,this._name=n.name,this._packable=!!n.packable;const o=n.capInsets;o&&(this._capInsets[0]=o[0],this._capInsets[1]=o[1],this._capInsets[2]=o[2],this._capInsets[3]=o[3]),this.vertices=n.vertices,this.vertices&&(this.vertices.nu=[],this.vertices.nv=[])}clone(){var t,n,i,s;const r=new e,o=this.vertices;return r.vertices=o?{x:o.x,y:o.y,triangles:o.triangles,nu:null===(t=o.nu)||void 0===t?void 0:t.slice(0),u:null===(n=o.u)||void 0===n?void 0:n.slice(0),nv:null===(i=o.nv)||void 0===i?void 0:i.slice(0),v:null===(s=o.v)||void 0===s?void 0:s.slice(0)}:null,r.uv.splice(0,r.uv.length,...this.uv),r.unbiasUV.splice(0,r.unbiasUV.length,...this.unbiasUV),r.uvSliced.splice(0,r.uvSliced.length,...this.uvSliced),r._rect.set(this._rect),r._offset.set(this._offset),r._originalSize.set(this._originalSize),r._rotated=this._rotated,r._capInsets.splice(0,r._capInsets.length,...this._capInsets),r._atlasUuid=this._atlasUuid,r._texture=this._texture,r._isFlipUVX=this._isFlipUVX,r._isFlipUVY=this._isFlipUVY,r}_refreshTexture(e){this._texture=e;const t=this._texture,n={};let i=!1;0!==this._rect.width&&0!==this._rect.height&&this.checkRect(t)||(n.rect=new Mi(0,0,t.width,t.height),i=!0),(0===this._originalSize.width||0===this._originalSize.height||i)&&(n.originalSize=new Di(t.width,t.height),i=!0),i&&(this.reset(n),this.onLoaded()),this._checkPackable()}initDefault(e){super.initDefault(e);const t=new ym;t.initDefault(),this._refreshTexture(t),this._calculateUV()}validate(){return this._texture&&this._rect&&0!==this._rect.width&&0!==this._rect.height}_calculateTillingOffset(){this._rotated?(this.tillingOffset[0]=this.uv[4]-this.uv[0],this.tillingOffset[1]=this.uv[3]-this.uv[5],this.tillingOffset[2]=this.uv[0],this.tillingOffset[3]=this.uv[5],this.tillingOffset[0]=-this.tillingOffset[0]):(this.tillingOffset[0]=this.uv[2]-this.uv[0],this.tillingOffset[1]=this.uv[1]-this.uv[5],this.tillingOffset[2]=this.uv[4],this.tillingOffset[3]=this.uv[5])}_calculateSlicedData(){const e=this._rect,t=this._capInsets[0],n=this._capInsets[2],i=e.width-t-n,s=this._capInsets[1],r=this._capInsets[3],o=e.height-s-r,a=this.slicedData;a.length=0,a[0]=t/e.width,a[1]=s/e.height,a[2]=(t+i)/e.width,a[3]=(s+o)/e.height}},tX.EVENT_UV_UPDATED="uv_updated",eX=nX))||eX);var rX,oX,aX;i.SpriteFrame=sX;let cX=e("SpriteAtlas",Zc("cc.SpriteAtlas")((aX=Bc((oX=class extends bh{constructor(...e){super(...e),Fc(this,"spriteFrames",aX,this)}getTexture(){const e=Object.keys(this.spriteFrames);if(e.length>0){const t=this.spriteFrames[e[0]];return t&&t.texture}return null}getSpriteFrame(e){const t=this.spriteFrames[e];return t?(t.name||(t.name=e),t):null}getSpriteFrames(){const e=[],t=this.spriteFrames;for(const n of Object.keys(t))e.push(t[n]);return e}_serialize(e){}_deserialize(e,t){const n=e;this._name=n.name;const i=n.spriteFrames;this.spriteFrames=Z();for(let e=0;e<i.length;e+=2)t.result.push(this.spriteFrames,i[e],i[e+1],Te(sX))}}).prototype,"spriteFrames",[il,dl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Z()}}),rX=oX))||rX);var lX;i.SpriteAtlas=cX;let hX=e("Font",Zc("cc.Font")(lX=class extends bh{})||lX);var _X,uX,pX;i.Font=hX;let dX=e("TTFFont",Zc("cc.TTFFont")((pX=Bc((uX=class extends hX{constructor(...e){super(...e),Fc(this,"_fontFamily",pX,this)}get _nativeAsset(){return this._fontFamily}set _nativeAsset(e){this._fontFamily=e||"Arial"}get _nativeDep(){return{uuid:this._uuid,__nativeName__:this._native,ext:nn(this._native),__isNative__:!0}}initDefault(e){this._fontFamily="Arial",super.initDefault(e)}}).prototype,"_fontFamily",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Bc(uX.prototype,"_nativeAsset",[Ml,Dl],Object.getOwnPropertyDescriptor(uX.prototype,"_nativeAsset"),uX.prototype),Bc(uX.prototype,"_nativeDep",[Ml],Object.getOwnPropertyDescriptor(uX.prototype,"_nativeDep"),uX.prototype),_X=uX))||_X);var fX,mX,gX,vX,yX,xX,SX,CX;i.TTFFont=dX;class TX{constructor(){this.u=0,this.v=0,this.w=0,this.h=0,this.offsetX=0,this.offsetY=0,this.textureID=0,this.valid=!1,this.xAdvance=0}}class bX{constructor(e){this.letterDefinitions={},this.texture=e}addLetterDefinitions(e,t){this.letterDefinitions[e]=t}cloneLetterDefinition(){const e={};for(const t of Object.keys(this.letterDefinitions)){const n=new TX;ce(n,this.letterDefinitions[t]),e[t]=n}return e}getTexture(){return this.texture}getLetter(e){return this.letterDefinitions[e]}getLetterDefinitionForChar(e,t){const n=e.charCodeAt(0);let i;return i=this.letterDefinitions.hasOwnProperty(n)?this.letterDefinitions[n]:null,i}clear(){this.letterDefinitions={}}}let EX=e("BitmapFont",(fX=Zc("cc.BitmapFont"),mX=Ol(sX),fX((yX=Bc((vX=class extends hX{constructor(...e){super(...e),Fc(this,"fntDataStr",yX,this),Fc(this,"spriteFrame",xX,this),Fc(this,"fontSize",SX,this),Fc(this,"fntConfig",CX,this)}onLoaded(){const e=this.spriteFrame;!this.fontDefDictionary&&e&&(this.fontDefDictionary=new bX(e.texture));const t=this.fntConfig;if(!t)return void p("The fnt config is not exists!");const n=t.fontDefDictionary;for(const e in n){const t=new TX,i=n[e].rect;t.offsetX=n[e].xOffset,t.offsetY=n[e].yOffset,t.w=i.width,t.h=i.height,t.u=i.x,t.v=i.y,t.textureID=0,t.valid=!0,t.xAdvance=n[e].xAdvance,this.fontDefDictionary.addLetterDefinitions(e,t)}}}).prototype,"fntDataStr",[il,dl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),xX=Bc(vX.prototype,"spriteFrame",[mX],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),SX=Bc(vX.prototype,"fontSize",[il,dl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return-1}}),CX=Bc(vX.prototype,"fntConfig",[il,dl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),gX=vX))||gX));var AX;i.BitmapFont=EX;let PX=e("LabelAtlas",Zc("cc.LabelAtlas")(AX=class extends EX{})||AX);i.LabelAtlas=PX;const wX=e("BASELINE_RATIO",.26),IX=e("MIDDLE_RATIO",(wX+1)/2-wX);const RX=new be(2);RX.get=function(){return this._get()||{key:"",value:0,prev:null,next:null}};const DX=new class{constructor(e){this.count=0,this.limit=0,this.datas={},this.limit=e}moveToHead(e){e.next=this.head,e.prev=null,this.head&&(this.head.prev=e),this.head=e,this.tail||(this.tail=e),this.count++,this.datas[e.key]=e}put(e,t){const n=RX.get();if(n.key=e,n.value=t,this.count>=this.limit){const e=this.tail;delete this.datas[e.key],this.count--,this.tail=e.prev,this.tail.next=null,e.prev=null,e.next=null,RX.put(e)}this.moveToHead(n)}remove(e){e.prev?e.prev.next=e.next:this.head=e.next,e.next?e.next.prev=e.prev:this.tail=e.prev,delete this.datas[e.key],this.count--}get(e){const t=this.datas[e];return t?(this.remove(t),this.moveToHead(t),t.value):null}clear(){this.count=0,this.datas={},this.head=null,this.tail=null}has(e){return!!this.datas[e]}delete(e){const t=this.datas[e];this.remove(t)}}(100),OX=/([a-zA-Z0-9ÄÖÜäöüßéèçàùêâîôûа-яА-ЯЁё]+|\S)/,MX=/^[!,.:;'}\]%\?>、‘“》？。，！]/,NX=/([a-zA-Z0-9ÄÖÜäöüßéèçàùêâîôûаíìÍÌïÁÀáàÉÈÒÓòóŐőÙÚŰúűñÑæÆœŒÃÂãÔõěščřžýáíéóúůťďňĚŠČŘŽÁÍÉÓÚŤżźśóńłęćąŻŹŚÓŃŁĘĆĄ-яА-ЯЁё]+|\S)$/,LX=/[a-zA-Z0-9ÄÖÜäöüßéèçàùêâîôûаíìÍÌïÁÀáàÉÈÒÓòóŐőÙÚŰúűñÑæÆœŒÃÂãÔõěščřžýáíéóúůťďňĚŠČŘŽÁÍÉÓÚŤżźśóńłęćąŻŹŚÓŃŁĘĆĄ-яА-ЯЁё]+$/,zX=/^[a-zA-Z0-9ÄÖÜäöüßéèçàùêâîôûаíìÍÌïÁÀáàÉÈÒÓòóŐőÙÚŰúűñÑæÆœŒÃÂãÔõěščřžýáíéóúůťďňĚŠČŘŽÁÍÉÓÚŤżźśóńłęćąŻŹŚÓŃŁĘĆĄ-яА-ЯЁё]/;function FX(e){return/^[\u4E00-\u9FFF\u3400-\u4DFF]+$/.test(e)||/[\u3000-\u303F]|[\u3040-\u309F]|[\u30A0-\u30FF]|[\uFF00-\uFFEF]|[\u4E00-\u9FAF]|[\u2605-\u2606]|[\u2190-\u2195]|\u203B/g.test(e)||/^[\u1100-\u11FF]|[\u3130-\u318F]|[\uA960-\uA97F]|[\uAC00-\uD7AF]|[\uD7B0-\uD7FF]+$/.test(e)}function BX(e){const t=e.charCodeAt(0);return t>=9&&t<=13||32===t||133===t||160===t||5760===t||t>=8192&&t<=8202||8232===t||8233===t||8239===t||8287===t||12288===t}function UX(e,t,n){const i=`${n||e.font}🎮${t}`,s=DX.get(i);if(null!==s)return s;const r=e.measureText(t),o=r&&r.width||0;return DX.put(i,o),o}function GX(e,t,n){let i=t,s=n;const r=e[t];if(r>="\udc00"&&r<="\udfff"&&i--,void 0!==n)if(n-1!==t){const t=e[n-1];t>="\ud800"&&t<="\udbff"&&s--}else r>="\ud800"&&r<="\udbff"&&s++;return e.substring(i,s)}function HX(e,t,n,i){const s=[];if(0===e.length||n<0)return s.push(""),s;let r=e;for(;t>n&&r.length>1;){let e=r.length*(n/t)|0,o=GX(r,e),a=t-i(o),c=o,l=0,h=0;const _=10;for(;a>n&&h++<_;)e*=n/a,e|=0,o=GX(r,e),a=t-i(o);for(h=0;a<=n&&h++<_;){if(o){const e=OX.exec(o);l=e?e[0].length:1,c=o}e+=l,o=GX(r,e),a=t-i(o)}e-=l,0===e?(e=1,c=GX(r,1)):1===e&&r[0]>="\ud800"&&r[0]<="\udbff"&&(e=2,c=GX(r,2));let u,p=GX(r,0,e);MX.test(c||o)&&(u=NX.exec(p),e-=u?u[0].length:0,0===e&&(e=1),c=GX(r,e),p=GX(r,0,e)),zX.test(c)&&(u=LX.exec(p),u&&p!==u[0]&&(e-=u[0].length,c=GX(r,e),p=GX(r,0,e))),0===s.length?s.push(p):(p=p.trim(),p.length>0&&s.push(p)),r=c||o,t=i(r)}return 0===s.length?s.push(r):(r=r.trim(),r.length>0&&s.push(r)),s}let kX;class VX{constructor(){this.pool=[]}static getInstance(){return kX||(kX=new VX),kX}get(){let e=this.pool.pop();if(!e){const t=document.createElement("canvas"),n=t.getContext("2d");e={canvas:t,context:n}}return e}put(e){this.pool.length>=Ue.MAX_LABEL_CANVAS_POOL_SIZE||this.pool.push(e)}}e("CanvasPool",VX);const jX=ti.WHITE.clone();class WX{constructor(){this.u=0,this.v=0,this.w=0,this.h=0,this.texture=null,this.offsetX=0,this.offsetY=0,this.valid=!1,this.xAdvance=0}}const qX=`rgba(255, 255, 255, ${(1/255).toFixed(3)})`;class XX{constructor(e,t){this.image=null,this.labelInfo=void 0,this.char=void 0,this.data=null,this.canvas=null,this.context=null,this.width=0,this.height=0,this.offsetY=0,this.hash=void 0,this.char=e,this.labelInfo=t,this.hash=e.charCodeAt(0)+t.hash}updateRenderData(){this._updateProperties(),this._updateTexture()}destroy(){this.image=null}_updateProperties(){if(this.data=VX.getInstance().get(),this.canvas=this.data.canvas,this.context=this.data.context,this.context){this.context.font=this.labelInfo.fontDesc;const e=UX(this.context,this.char,this.labelInfo.fontDesc),t=2*this.labelInfo.margin+2;this.width=parseFloat(e.toFixed(2))+t,this.height=(1+wX)*this.labelInfo.fontSize+t,this.offsetY=-this.labelInfo.fontSize*wX/2}this.canvas.width!==this.width&&(this.canvas.width=this.width),this.canvas.height!==this.height&&(this.canvas.height=this.height),this.image||(this.image=new jf),this.image.reset(this.canvas)}_updateTexture(){if(!this.context||!this.canvas)return;const e=this.context,t=this.labelInfo,n=this.canvas.width,i=this.canvas.height;e.textAlign="center",e.textBaseline="alphabetic",e.clearRect(0,0,n,i),e.fillStyle=qX,e.fillRect(0,0,n,i),e.font=t.fontDesc;const s=t.fontSize,r=n/2,o=i/2+s*IX+0*s,a=t.color;if(e.lineJoin="round",e.fillStyle=`rgba(${a.r}, ${a.g}, ${a.b}, 1)`,t.isOutlined){const n=t.out||jX;e.strokeStyle=`rgba(${n.r}, ${n.g}, ${n.b}, ${n.a/255})`,e.lineWidth=2*t.margin,e.strokeText(this.char,r,o)}e.fillText(this.char,r,o)}}class YX extends ym{initWithSize(e,t,n=Lf.RGBA8888){this.reset({width:e,height:t,format:n})}drawTextureAt(e,t,n){const i=this.getGFXTexture();if(!e||!i)return;const s=this._getGFXDevice();if(!s)return void console.warn("Unable to get device");const r=new Ir;r.texOffset.x=t,r.texOffset.y=n,r.texExtent.width=e.width,r.texExtent.height=e.height,s.copyTexImagesToTexture([e.data],i,[r])}}class KX{get width(){return this._width}get height(){return this._height}constructor(e,t){this._x=0,this._y=0,this._nextY=0,this._width=0,this._height=0,this._halfBleed=0,this._dirty=!1;const n=new YX;n.initWithSize(e,t),this.fontDefDictionary=new bX(n),this._halfBleed=1,this._width=e,this._height=t,aI.on(oI.EVENT_BEFORE_SCENE_LAUNCH,this.beforeSceneLoad,this)}insertLetterTexture(e){const t=e.image,n=aI.root.device;if(!t||!this.fontDefDictionary||!n)return null;const i=t.width,s=t.height;if(this._x+i+0>this._width&&(this._x=0,this._y=this._nextY),this._y+s>this._nextY&&(this._nextY=this._y+s+0),this._nextY>this._height)return T(12100),null;this.fontDefDictionary.texture.drawTextureAt(t,this._x,this._y),this._dirty=!0;const r=new WX;return r.u=this._x+this._halfBleed,r.v=this._y+this._halfBleed,r.texture=this.fontDefDictionary.texture,r.valid=!0,r.w=e.width-2,r.h=e.height-2,r.xAdvance=r.w,r.offsetY=e.offsetY,this._x+=i+0,this.fontDefDictionary.addLetterDefinitions(e.hash,r),r}update(){this._dirty&&(this._dirty=!1)}reset(){this._x=0,this._y=0,this._nextY=0,this.fontDefDictionary.clear()}destroy(){this.reset(),this.fontDefDictionary&&(this.fontDefDictionary.texture.destroy(),this.fontDefDictionary.texture=null)}getTexture(){return this.fontDefDictionary.getTexture()}beforeSceneLoad(){this.clearAllCache()}clearAllCache(){this.destroy();const e=new YX;e.initWithSize(this._width,this._height),this.fontDefDictionary.texture=e}getLetter(e){return this.fontDefDictionary.letterDefinitions[e]}getLetterDefinitionForChar(e,t){const n=e.charCodeAt(0)+t.hash;let i=this.fontDefDictionary.letterDefinitions[n];if(!i){const n=new XX(e,t);n.updateRenderData(),i=this.insertLetterTexture(n),n.destroy()}return i}}const $X={fontAtlas:null,fontSize:0,lineHeight:0,hAlign:0,vAlign:0,hash:"",fontFamily:"",fontDesc:"Arial",color:ti.WHITE.clone(),isOutlined:!1,out:ti.WHITE.clone(),margin:0},ZX=qq(Vq)>>2;class QX{get vertexCount(){return this._vc}get indexCount(){return this._ic}get stride(){return this._floatStride<<2}get floatStride(){return this._floatStride}get vertexFormat(){return this._vertexFormat}constructor(e=Vq){this.material=null,this.chunk=null,this.dataHash=0,this.isMeshBuffer=!1,this._vc=0,this._ic=0,this._floatStride=0,this._vertexFormat=Vq,this._floatStride=e===Vq?ZX:qq(e)>>2,this._vertexFormat=e}isValid(){return this._ic>0&&this.chunk.vertexAccessor}resize(e,t){if(e===this._vc&&t===this._ic&&this.chunk)return;this._vc=e,this._ic=t;const n=aI.root.batcher2D.switchBufferAccessor(this._vertexFormat);this.chunk&&(n.recycleChunk(this.chunk),this.chunk=null),this.chunk=n.allocateChunk(e,t)}}e("BaseRenderData",QX);class JX extends QX{constructor(...e){super(...e),this.vertDirty=!0,this._data=[],this._indices=[],this._pivotX=0,this._pivotY=0,this._width=0,this._height=0,this.frame=void 0,this.layer=0,this.blendHash=-1,this.textureHash=0,this.nodeDirty=!0,this.passDirty=!0,this.textureDirty=!0,this.hashDirty=!0}static add(e=Vq){const t=iY.add();return t._floatStride=e===Vq?ZX:qq(e)>>2,t._vertexFormat=e,t}static remove(e){const t=iY.data.indexOf(e);-1!==t&&(iY.data[t].clear(),iY.removeAt(t))}get dataLength(){return this._data.length}set dataLength(e){const t=this._data;if(t.length!==e){const n=t.length;let i=0;for(i=e;i<n;i++)nY.free(t[i]);for(i=n;i<e;i++)t[i]=nY.alloc();t.length=e}}get data(){return this._data}resize(e,t){super.resize(e,t),this.updateHash()}updateNode(e){this.layer=e.node.layer,this.nodeDirty=!1,this.hashDirty=!0}updatePass(e){this.material=e.getRenderMaterial(0),this.blendHash=e.blendHash,this.passDirty=!1,this.hashDirty=!0}updateTexture(e){this.frame=e,this.textureHash=e.getHash(),this.textureDirty=!1,this.hashDirty=!0}updateHash(){const e=`${this.chunk?this.chunk.bufferId:-1}${this.layer} ${this.blendHash} ${this.textureHash}`;this.dataHash=Ko(e,666),this.hashDirty=!1}updateRenderData(e,t){if(this.passDirty&&(this.material=e.getRenderMaterial(0),this.blendHash=e.blendHash,this.passDirty=!1,this.hashDirty=!0),this.nodeDirty){const t=e.node.scene?e._getRenderScene():null;this.layer=e.node.layer,null!==t&&(this.nodeDirty=!1),this.hashDirty=!0}this.textureDirty&&(this.frame=t,this.textureHash=t.getHash(),this.textureDirty=!1,this.hashDirty=!0),this.hashDirty&&this.updateHash()}updateSizeNPivot(e,t,n,i){e===this._width&&t===this._height&&n===this._pivotX&&i===this._pivotY||(this._width=e,this._height=t,this._pivotX=n,this._pivotY=i,this.vertDirty=!0)}clear(){this.resize(0,0),this._data.length=0,this._indices.length=0,this._pivotX=0,this._pivotY=0,this._width=0,this._height=0,this.vertDirty=!0,this.material=null,this.nodeDirty=!0,this.passDirty=!0,this.textureDirty=!0,this.hashDirty=!0,this.layer=0,this.blendHash=-1,this.frame=null,this.textureHash=0,this.dataHash=0,this._vertexFormat=Vq}}e("RenderData",JX);class eY extends QX{static add(e=Vq){const t=sY.add();return t._floatStride=e===Vq?ZX:qq(e)>>2,t._vertexFormat=e,t}static remove(e){const t=sY.data.indexOf(e);-1!==t&&(sY.data[t].clear(),sY.removeAt(t))}set formatByte(e){}get formatByte(){return this.stride}get floatStride(){return this._floatStride}get vDataOffset(){return this._byteLength>>>2}constructor(e=Vq){super(e),this.isMeshBuffer=!0,this.vData=void 0,this.iData=void 0,this.vertexStart=0,this.vertexRange=0,this.indexStart=0,this.indexRange=0,this.lastFilledIndex=0,this.lastFilledVertex=0,this._byteLength=0,this._vertexBuffers=[],this._indexBuffer=null,this._iaPool=null,this._iaInfo=null,this.vData=new Float32Array(256*this.stride),this.iData=new Uint16Array(1536)}request(e,t){const n=this._byteLength+e*this.stride;return!!this.reserve(e,t)&&(this._vc+=e,this._ic+=t,this._byteLength=n,!0)}reserve(e,t){const n=this._byteLength+e*this.stride,i=this.indexCount+t;if(e+this.vertexCount>65535)return!1;let s=this.vData.byteLength,r=this.iData.length,o=this.vData.length,a=this.iData.length;if(n>s||i>r){for(;s<n||r<i;)o*=2,a*=2,s=4*o,r=a;this._reallocBuffer(o,a)}return!0}resize(e,t){const n=e*this.stride;e>=0&&t>=0&&n<=this.vData.byteLength&&this.iData.length,this._vc=e,this._ic=t,this._byteLength=n,this.updateRange(0,e,0,t)}updateRange(e,t,n,i){t>=0&&i>=0&&t<=this._vc&&this._ic,this.vertexStart=e,this.indexStart=n,this.vertexRange=t,this.indexRange=i}requestIA(e){this._initIAInfo(e);const t=this._iaPool.add();return t.firstIndex=this.indexStart,t.indexCount=this.indexRange,t}uploadBuffers(){if(0===this._byteLength||!this._vertexBuffers[0]||!this._indexBuffer)return;const e=this._ic,t=new Float32Array(this.vData.buffer,0,this._byteLength>>2),n=new Uint16Array(this.iData.buffer,0,e),i=this._vertexBuffers[0];this._byteLength>i.size&&i.resize(this._byteLength),i.update(t);const s=e<<1;s>this._indexBuffer.size&&this._indexBuffer.resize(s),this._indexBuffer.update(n)}freeIAPool(){this._iaPool&&this._iaPool.reset()}reset(){this._vc=0,this._ic=0,this._byteLength=0,this.vertexStart=0,this.vertexRange=0,this.indexStart=0,this.indexRange=0,this.lastFilledIndex=0,this.lastFilledVertex=0,this.material=null,this.freeIAPool()}clear(){this.reset(),this._iaPool&&this._iaPool.destroy(),this._vertexBuffers[0]&&(this._vertexBuffers[0].destroy(),this._vertexBuffers=[]),this._iaInfo=null,this.vData=new Float32Array(256*this.stride),this.iData=new Uint16Array(1536)}_initIAInfo(e){if(!this._iaInfo){const t=this.stride,n=this._vertexBuffers;n.length||n.push(e.createBuffer(new Lr(Us.VERTEX|Us.TRANSFER_DST,ks.DEVICE,t,t)));const i=Uint16Array.BYTES_PER_ELEMENT;this._indexBuffer||(this._indexBuffer=e.createBuffer(new Lr(Us.INDEX|Us.TRANSFER_DST,ks.DEVICE,i,i))),this._iaInfo=new eo(this._vertexFormat,n,this._indexBuffer),this._iaPool=new Re((()=>e.createInputAssembler(this._iaInfo)),1,(e=>{e.destroy()}))}}_reallocBuffer(e,t){const n=this.vData;this.vData=new Float32Array(e),n&&this.vData.set(n,0);const i=this.iData;this.iData=new Uint16Array(t),i&&this.iData.set(i,0)}}e("MeshRenderData",eY);class tY extends eY{_fillQuadBuffer(){const e=this.iData.length/6,t=this.iData;for(let n=0,i=0;n<e;n++){const e=4*n;t[i++]=e,t[i++]=e+1,t[i++]=e+2,t[i++]=e+1,t[i++]=e+3,t[i++]=e+2}}_reallocBuffer(e,t){super._reallocBuffer(e,t),this._fillQuadBuffer()}}e("QuadRenderData",tY);const nY=new Ie((()=>({x:0,y:0,z:0,u:0,v:0,color:ti.WHITE.clone()})),128),iY=new Re((()=>new JX),32),sY=new Re((()=>new eY),32);var rY,oY,aY,cY,lY,hY,_Y,uY,pY,dY,fY,mY,gY,vY;const yY=new bi,xY=new bi,SY=new ri,CY=new xi,TY=new xi,bY=new xi,EY=new xi(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),AY=new Mi;let PY,wY=function(t){return e({UITransform:t,UITransformComponent:t}),t}((rY=Zc("cc.UITransform"),oY=pl(),aY=Jc(110),cY=ll(),lY=bl(),hY=vl(),_Y=bl(),uY=vl(),rY(pY=oY(pY=aY(pY=cY(pY=el(pY=cl((vY=gY=class e extends jh{get contentSize(){return this._contentSize}set contentSize(e){this._contentSize.equals(e)||(this._contentSize.set(e),this.node.emit(cx.SIZE_CHANGED),this._markRenderDataDirty())}get width(){return this._contentSize.width}set width(e){this._contentSize.width!==e&&(this._contentSize.width=e,this.node.emit(cx.SIZE_CHANGED),this._markRenderDataDirty())}get height(){return this._contentSize.height}set height(e){this.contentSize.height!==e&&(this._contentSize.height=e,this.node.emit(cx.SIZE_CHANGED),this._markRenderDataDirty())}get anchorPoint(){return this._anchorPoint}set anchorPoint(e){this._anchorPoint.equals(e)||(this._anchorPoint.set(e),this.node.emit(cx.ANCHOR_CHANGED,this._anchorPoint),this._markRenderDataDirty())}get anchorX(){return this._anchorPoint.x}set anchorX(e){this._anchorPoint.x!==e&&(this._anchorPoint.x=e,this.node.emit(cx.ANCHOR_CHANGED,this._anchorPoint),this._markRenderDataDirty())}get anchorY(){return this._anchorPoint.y}set anchorY(e){this._anchorPoint.y!==e&&(this._anchorPoint.y=e,this.node.emit(cx.ANCHOR_CHANGED,this._anchorPoint),this._markRenderDataDirty())}get priority(){return this._priority}set priority(t){this._priority!==t&&(this.node.getComponent("cc.RenderRoot2D")?T(6706):(this._priority=t,this.node.parent&&e.insertChangeMap(this.node.parent)))}get visibility(){const e=aI.root.batcher2D.getFirstRenderCamera(this.node);return e?e.visibility:0}get cameraPriority(){const e=aI.root.batcher2D.getFirstRenderCamera(this.node);return e?e.priority:0}constructor(){super(),this._priority=0,Fc(this,"_contentSize",fY,this),Fc(this,"_anchorPoint",mY,this)}__preload(){this.node._uiProps.uiTransformComp=this}onLoad(){this.node.parent&&e.insertChangeMap(this.node.parent)}onEnable(){this.node.on(cx.PARENT_CHANGED,this._parentChanged,this),this._markRenderDataDirty()}onDisable(){this.node.off(cx.PARENT_CHANGED,this._parentChanged,this)}onDestroy(){this.node._uiProps.uiTransformComp=null}setContentSize(e,t){const n=this._contentSize;if(void 0===t){if((e=e).width===n.width&&e.height===n.height)return;n.width=e.width,n.height=e.height}else{if(e===n.width&&t===n.height)return;n.width=e,n.height=t}this.node.emit(cx.SIZE_CHANGED),this._markRenderDataDirty()}setAnchorPoint(e,t){const n=this._anchorPoint;if(void 0===t){if((e=e).x===n.x&&e.y===n.y)return;n.x=e.x,n.y=e.y}else{if(e===n.x&&t===n.y)return;n.x=e,n.y=t}this.node.emit(cx.ANCHOR_CHANGED,this._anchorPoint),this._markRenderDataDirty()}isHit(e){var t;const n=this._contentSize.width,i=this._contentSize.height,s=yY,r=xY,o=null===(t=this.node)||void 0===t?void 0:t.eventProcessor,a=this._getRenderScene().cameras;for(let t=0;t<a.length;t++){const c=a[t];if(!(c.visibility&this.node.layer))continue;c.node.getWorldRT(CY);const l=CY.m12,h=CY.m13,_=lI.center;if(CY.m12=_.x-(CY.m00*l+CY.m04*h),CY.m13=_.y-(CY.m01*l+CY.m05*h),xi.invert(CY,CY),bi.transformMat4(s,e,CY),this.node.getWorldMatrix(bY),xi.invert(CY,bY),xi.strictEquals(CY,EY))continue;bi.transformMat4(r,s,CY),r.x+=this._anchorPoint.x*n,r.y+=this._anchorPoint.y*i;let u=!1;if(r.x>=0&&r.y>=0&&r.x<=n&&r.y<=i&&(u=!0,o&&o.maskList)){const e=o.maskList;let t=this.node;const n=e?e.length:0;for(let i=0,r=0;t&&r<n;++i,t=t.parent){const n=e[r];if(i===n.index){if(t!==n.comp.node){e.length=r;break}{const e=n.comp;if(e&&e._enabled&&!e.isHit(s)){u=!1;break}r++}}else if(i>n.index){e.length=r;break}}}if(u)return!0}return!1}convertToNodeSpaceAR(e,t){return this.node.getWorldMatrix(bY),xi.invert(CY,bY),t||(t=new ri),ri.transformMat4(t,e,CY)}convertToWorldSpaceAR(e,t){return this.node.getWorldMatrix(bY),t||(t=new ri),ri.transformMat4(t,e,bY)}getBoundingBox(){xi.fromRTS(TY,this.node.getRotation(),this.node.getPosition(),this.node.getScale());const e=this._contentSize.width,t=this._contentSize.height,n=new Mi(-this._anchorPoint.x*e,-this._anchorPoint.y*t,e,t);return n.transformMat4(TY),n}getBoundingBoxToWorld(){return this.node.parent?(this.node.parent.getWorldMatrix(bY),this.getBoundingBoxTo(bY)):this.getBoundingBox()}getBoundingBoxTo(t){xi.fromRTS(TY,this.node.getRotation(),this.node.getPosition(),this.node.getScale());const n=this._contentSize.width,i=this._contentSize.height,s=new Mi(-this._anchorPoint.x*n,-this._anchorPoint.y*i,n,i);if(xi.multiply(bY,t,TY),s.transformMat4(bY),!this.node.children)return s;const r=this.node.children;for(const n of r)if(n&&n.active){const i=n.getComponent(e);if(i){const e=i.getBoundingBoxTo(t);e&&Mi.union(s,s,e)}}return s}getComputeAABB(e){const t=this._contentSize.width,n=this._contentSize.height;AY.set(-this._anchorPoint.x*t,-this._anchorPoint.y*n,t,n),AY.transformMat4(this.node.worldMatrix);const i=AY.x+.5*AY.width,s=AY.y+.5*AY.height,r=this.node.worldPosition.z,o=AY.width/2,a=AY.height/2;return null!=e?(Ac.set(e,i,s,r,o,a,.001),e):new Ac(i,s,r,o,a,.001)}_parentChanged(t){this.node.getComponent("cc.RenderRoot2D")||this.node.parent&&e.insertChangeMap(this.node.parent)}_markRenderDataDirty(){const e=this.node._uiProps.uiComp;e&&(e.markForUpdateRenderData(),e.renderData&&(e.renderData.vertDirty=!0))}checkAndUpdateRect(e,t){if(this._rectDirty){this._rectWithScale.x=t.x*this.width,this._rectWithScale.y=t.y*this.height,this._rectWithScale.z=t.z;const n=(.5-this.anchorPoint.x)*this.width*t.x,i=(.5-this.anchorPoint.y)*this.height*t.y;ri.transformQuat(this._anchorCache,SY.set(n,i,0),e)}}setRectDirty(e){e&gg.RS&&(this._rectDirty=!0)}static insertChangeMap(t){const n=t.uuid;e.priorityChangeNodeMap.has(n)||e.priorityChangeNodeMap.set(n,t)}static _sortChildrenSibling(e){const t=e.children;t&&t.sort(((e,t)=>{const n=e._uiProps.uiTransformComp,i=t._uiProps.uiTransformComp,s=(n?n._priority:0)-(i?i._priority:0);return 0===s?e.getSiblingIndex()-t.getSiblingIndex():s}))}static _sortSiblings(){e.priorityChangeNodeMap.forEach((t=>{e._sortChildrenSibling(t),t._updateSiblingIndex(),t.emit("childrenSiblingOrderChanged")})),e.priorityChangeNodeMap.clear()}static _cleanChangeMap(){e.priorityChangeNodeMap.clear()}},gY.EventType=cx,gY.priorityChangeNodeMap=new Map,Bc((dY=vY).prototype,"contentSize",[lY,hY],Object.getOwnPropertyDescriptor(dY.prototype,"contentSize"),dY.prototype),Bc(dY.prototype,"anchorPoint",[_Y,uY],Object.getOwnPropertyDescriptor(dY.prototype,"anchorPoint"),dY.prototype),fY=Bc(dY.prototype,"_contentSize",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Di(100,100)}}),mY=Bc(dY.prototype,"_anchorPoint",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new bi(.5,.5)}}),pY=dY))||pY)||pY)||pY)||pY)||pY)||pY));aI.on(oI.EVENT_AFTER_UPDATE,wY._sortSiblings),aI.on(oI.EVENT_BEFORE_SCENE_LAUNCH,wY._cleanChangeMap),function(e){e[e.DISABLED=0]="DISABLED",e[e.CLEAR=1]="CLEAR",e[e.ENTER_LEVEL=2]="ENTER_LEVEL",e[e.ENABLED=3]="ENABLED",e[e.EXIT_LEVEL=4]="EXIT_LEVEL",e[e.CLEAR_INVERTED=5]="CLEAR_INVERTED",e[e.ENTER_LEVEL_INVERTED=6]="ENTER_LEVEL_INVERTED"}(PY||(PY={}));class IY{constructor(){this.stage=PY.DISABLED,this._maskStack=[],this._stencilPattern={stencilTest:!0,func:$s.ALWAYS,stencilMask:65535,writeMask:65535,failOp:Zs.KEEP,zFailOp:Zs.KEEP,passOp:Zs.KEEP,ref:1},this.stencilStateMap=new Map,this.stencilStateMapWithDepth=new Map}get pattern(){return this._stencilPattern}pushMask(e){this._maskStack.push(e)}clear(e){e.stencilStage=e.inverted?PY.CLEAR_INVERTED:PY.CLEAR}enterLevel(e){e.graphics.stencilStage=e.inverted?PY.ENTER_LEVEL_INVERTED:PY.ENTER_LEVEL}enableMask(){this.stage=PY.ENABLED}exitMask(){0!==this._maskStack.length&&(this._maskStack.pop(),0===this._maskStack.length?this.stage=PY.DISABLED:this.stage=PY.ENABLED)}getWriteMask(){return 1<<this._maskStack.length-1}getExitWriteMask(){return 1<<this._maskStack.length}getStencilRef(){let e=0;for(let t=0;t<this._maskStack.length;++t)e+=1<<t;return e}reset(){this._maskStack.length=0,this.stage=PY.DISABLED}destroy(){this.stencilStateMap.forEach((e=>{e.destroy()})),this.stencilStateMap.clear()}getStencilStage(e,t){let n=0,i=!1,s=!1,r=$s.LESS,o=this.stencilStateMap;if(t&&t.passes[0]){const a=t.passes[0].depthStencilState;let c=0,l=0;a.depthTest&&(c=1),a.depthWrite&&(l=1),n=c|l<<1|a.depthFunc<<2|e<<6|this._maskStack.length<<9,i=a.depthTest,s=a.depthWrite,r=a.depthFunc,o=this.stencilStateMapWithDepth}else n=e<<16|this._maskStack.length;if(o&&o.has(n))return o.get(n);this.setStateFromStage(e);const a=new _a(i,s,r,this._stencilPattern.stencilTest,this._stencilPattern.func,this._stencilPattern.stencilMask,this._stencilPattern.writeMask,this._stencilPattern.failOp,this._stencilPattern.zFailOp,this._stencilPattern.passOp,this._stencilPattern.ref,this._stencilPattern.stencilTest,this._stencilPattern.func,this._stencilPattern.stencilMask,this._stencilPattern.writeMask,this._stencilPattern.failOp,this._stencilPattern.zFailOp,this._stencilPattern.passOp,this._stencilPattern.ref);return o.set(n,a),a}getStencilHash(e){return e<<8|this._maskStack.length}setStateFromStage(e){const t=this._stencilPattern;e===PY.DISABLED?(t.stencilTest=!1,t.func=$s.ALWAYS,t.failOp=Zs.KEEP,t.stencilMask=t.writeMask=65535,t.ref=1):(t.stencilTest=!0,e===PY.ENABLED?(t.func=$s.EQUAL,t.failOp=Zs.KEEP,t.stencilMask=t.ref=this.getStencilRef(),t.writeMask=this.getWriteMask()):e===PY.CLEAR?(t.func=$s.NEVER,t.failOp=Zs.ZERO,t.writeMask=t.stencilMask=t.ref=this.getWriteMask()):e===PY.CLEAR_INVERTED||e===PY.ENTER_LEVEL?(t.func=$s.NEVER,t.failOp=Zs.REPLACE,t.writeMask=t.stencilMask=t.ref=this.getWriteMask()):e===PY.ENTER_LEVEL_INVERTED&&(t.func=$s.NEVER,t.failOp=Zs.ZERO,t.writeMask=t.stencilMask=t.ref=this.getWriteMask()))}}var RY,DY,OY,MY,NY,LY,zY,FY,BY,UY,GY,HY,kY,VY,jY,WY,qY,XY,YY;let KY;e("StencilManager",IY),IY.sharedManager=null,IY.sharedManager=new IY,Fe(Qs),function(e){e[e.ADD_COLOR=0]="ADD_COLOR",e[e.ADD_COLOR_AND_TEXTURE=1]="ADD_COLOR_AND_TEXTURE",e[e.GRAYSCALE=2]="GRAYSCALE",e[e.USE_ALPHA_SEPARATED=3]="USE_ALPHA_SEPARATED",e[e.USE_ALPHA_SEPARATED_AND_GRAY=4]="USE_ALPHA_SEPARATED_AND_GRAY"}(KY||(KY=e("InstanceMaterialType",{})));let $Y=function(t){return e({Renderable2D:t,RenderComponent:t,UIRenderable:t}),t}((RY=Zc("cc.Renderable2D"),DY=Qc(wY),OY=fl(),MY=Ol(Ug),NY=Ol(Ug),LY=bl(),zY=vl(),FY=gl(),BY=bl(),UY=vl(),RY(GY=DY(GY=el(GY=cl((YY=XY=class e extends xO{get sharedMaterials(){return this._materials}set sharedMaterials(e){for(let t=0;t<e.length;t++)e[t]!==this._materials[t]&&this.setMaterial(e[t],t);if(e.length<this._materials.length){for(let t=e.length;t<this._materials.length;t++)this.setMaterial(null,t);this._materials.splice(e.length)}}get customMaterial(){return this._customMaterial}set customMaterial(e){this._customMaterial=e,this.updateMaterial()}get srcBlendFactor(){return this._customMaterial&&T(12001),this._srcBlendFactor}set srcBlendFactor(e){this._customMaterial?T(12001):this._srcBlendFactor!==e&&(this._srcBlendFactor=e,this._updateBlendFunc())}get dstBlendFactor(){return this._customMaterial&&T(12001),this._dstBlendFactor}set dstBlendFactor(e){this._customMaterial?T(12001):this._dstBlendFactor!==e&&(this._dstBlendFactor=e,this._updateBlendFunc())}get color(){return this._color}set color(e){this._color.equals(e)||(this._color.set(e),this._updateColor())}get renderData(){return this._renderData}set delegateSrc(e){this._delegateSrc=e}constructor(){super(),Fc(this,"_materials",kY,this),Fc(this,"_customMaterial",VY,this),this.stencilStage=PY.DISABLED,Fc(this,"_srcBlendFactor",jY,this),Fc(this,"_dstBlendFactor",WY,this),Fc(this,"_color",qY,this),this._assembler=null,this._postAssembler=null,this._renderData=null,this._renderDataFlag=!0,this._renderFlag=!0,this._delegateSrc=null,this._instanceMaterialType=-1,this._blendState=new la,this._blendHash=0,this._lastParent=null}get blendHash(){return this._blendHash}updateBlendHash(){const e=this._blendState.targets[0].blendDst<<4;this._blendHash=e|this._blendState.targets[0].blendSrc}__preload(){this.node._uiProps.uiComp=this,this._flushAssembler&&this._flushAssembler()}onEnable(){this.node.on(cx.ANCHOR_CHANGED,this._nodeStateChange,this),this.node.on(cx.SIZE_CHANGED,this._nodeStateChange,this),this.updateMaterial(),this._renderFlag=this._canRender()}onRestore(){this.updateMaterial(),this.markForUpdateRenderData()}onDisable(){this.node.off(cx.ANCHOR_CHANGED,this._nodeStateChange,this),this.node.off(cx.SIZE_CHANGED,this._nodeStateChange,this),this._renderFlag=!1}onDestroy(){if(this.node._uiProps.uiComp===this&&(this.node._uiProps.uiComp=null),this.destroyRenderData(),this._materialInstances)for(let e=0;e<this._materialInstances.length;e++){const t=this._materialInstances[e];t&&t.destroy()}this._renderData=null,this._blendState&&this._blendState.destroy()}markForUpdateRenderData(e=!0){if(this._renderFlag=this._canRender(),e&&this._renderFlag){const t=this._renderData;t&&(t.vertDirty=!0),this._renderDataFlag=e}else e||(this._renderDataFlag=e)}requestRenderData(){const e=JX.add();return this._renderData=e,e}destroyRenderData(){this._renderData&&(JX.remove(this._renderData),this._renderData=null)}updateAssembler(e){this._renderDataFlag&&(this._assembler.updateRenderData(this),this._renderDataFlag=!1),this._renderFlag&&this._render(e)}postUpdateAssembler(e){this._postAssembler&&this._renderFlag&&this._postRender(e)}_render(e){}_postRender(e){}_canRender(){return this.isValid&&null!==this.getMaterial(0)&&this.enabled&&(this._delegateSrc?this._delegateSrc.activeInHierarchy:this.enabledInHierarchy)&&this._color.a>0}_postCanRender(){}updateMaterial(){if(this._customMaterial)return this.setMaterial(this._customMaterial,0),this._renderData&&(this._renderData.material=this._customMaterial,this.markForUpdateRenderData(),this._renderData.passDirty=!0),void(this._blendHash=-1);const e=this._updateBuiltinMaterial();this.setMaterial(e,0),this._renderData&&(this._renderData.material=e,this.markForUpdateRenderData()),this._updateBlendFunc()}_updateColor(){this.node._uiProps.colorDirty=!0,this._assembler&&(this._assembler.updateColor(this),this._renderFlag=this._canRender())}_updateBlendFunc(){let e=this._blendState.targets[0];e||(e=new ca,this._blendState.setTarget(0,e)),e.blendDst===this._dstBlendFactor&&e.blendSrc===this._srcBlendFactor||(e.blend=!0,e.blendDstAlpha=Qs.ONE_MINUS_SRC_ALPHA,e.blendDst=this._dstBlendFactor,e.blendSrc=this._srcBlendFactor,this.renderData&&(this.renderData.passDirty=!0)),this.updateBlendHash()}getBlendState(){return this._blendState}_nodeStateChange(t){this._renderData&&this.markForUpdateRenderData();for(let t=0;t<this.node.children.length;++t){const n=this.node.children[t].getComponent(e);n&&n.markForUpdateRenderData()}}_onMaterialModified(e,t){this._renderData&&(this.markForUpdateRenderData(),this._renderData.passDirty=!0),super._onMaterialModified(e,t)}_updateBuiltinMaterial(){let e;switch(this._instanceMaterialType){case KY.ADD_COLOR:e=Jm.get("ui-base-material");break;case KY.GRAYSCALE:e=Jm.get("ui-sprite-gray-material");break;case KY.USE_ALPHA_SEPARATED:e=Jm.get("ui-sprite-alpha-sep-material");break;case KY.USE_ALPHA_SEPARATED_AND_GRAY:e=Jm.get("ui-sprite-gray-alpha-sep-material");break;default:e=Jm.get("ui-sprite-material")}return e}setNodeDirty(){this.renderData&&(this.renderData.nodeDirty=!0)}setTextureDirty(){this.renderData&&(this.renderData.textureDirty=!0)}},XY.BlendState=Qs,XY.Assembler=null,XY.PostAssembler=null,kY=Bc((HY=YY).prototype,"_materials",[Ml],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Bc(HY.prototype,"sharedMaterials",[Ml,OY],Object.getOwnPropertyDescriptor(HY.prototype,"sharedMaterials"),HY.prototype),VY=Bc(HY.prototype,"_customMaterial",[MY],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Bc(HY.prototype,"customMaterial",[NY,LY,zY,FY],Object.getOwnPropertyDescriptor(HY.prototype,"customMaterial"),HY.prototype),Bc(HY.prototype,"color",[BY,UY],Object.getOwnPropertyDescriptor(HY.prototype,"color"),HY.prototype),jY=Bc(HY.prototype,"_srcBlendFactor",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Qs.SRC_ALPHA}}),WY=Bc(HY.prototype,"_dstBlendFactor",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Qs.ONE_MINUS_SRC_ALPHA}}),qY=Bc(HY.prototype,"_color",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return ti.WHITE.clone()}}),GY=HY))||GY)||GY)||GY)||GY));var ZY,QY,JY,eK,tK,nK,iK,sK,rK,oK,aK,cK,lK,hK,_K,uK,pK,dK,fK,mK,gK,vK,yK,xK,SK,CK,TK,bK,EK,AK,PK,wK,IK,RK,DK,OK,MK,NK,LK,zK,FK,BK,UK,GK,HK,kK,VK,jK,WK,qK,XK,YK,KK,$K,ZK,QK,JK,e$,t$,n$,i$,s$,r$,o$,a$,c$;let l$,h$,_$,u$;i.internal.Renderable2D=$Y,function(e){e[e.LEFT=0]="LEFT",e[e.CENTER=1]="CENTER",e[e.RIGHT=2]="RIGHT"}(l$||(l$=e("HorizontalTextAlignment",{}))),Fe(l$),function(e){e[e.TOP=0]="TOP",e[e.CENTER=1]="CENTER",e[e.BOTTOM=2]="BOTTOM"}(h$||(h$=e("VerticalTextAlignment",{}))),Fe(h$),function(e){e[e.NONE=0]="NONE",e[e.CLAMP=1]="CLAMP",e[e.SHRINK=2]="SHRINK",e[e.RESIZE_HEIGHT=3]="RESIZE_HEIGHT"}(_$||(_$=e("Overflow",{}))),Fe(_$),function(e){e[e.NONE=0]="NONE",e[e.BITMAP=1]="BITMAP",e[e.CHAR=2]="CHAR"}(u$||(u$=e("CacheMode",{}))),Fe(u$);let p$,d$,f$,m$=function(t){return e({Label:t,LabelComponent:t}),t}((ZY=Zc("cc.Label"),QY=pl(),JY=Jc(110),eK=ll(),tK=bl(),nK=vl(),iK=Ol(l$),sK=bl(),rK=vl(),oK=Ol(h$),aK=bl(),cK=vl(),lK=bl(),hK=vl(),_K=bl(),uK=fl(),pK=vl(),dK=bl(),fK=vl(),mK=fl(),gK=bl(),vK=vl(),yK=Ol(_$),xK=bl(),SK=vl(),CK=bl(),TK=vl(),bK=Ol(hX),EK=bl(),AK=fl(),PK=vl(),wK=bl(),IK=vl(),RK=Ol(u$),DK=bl(),OK=vl(),MK=bl(),NK=vl(),LK=bl(),zK=vl(),FK=bl(),BK=vl(),UK=fl(),GK=bl(),HK=vl(),ZY(kK=QY(kK=JY(kK=eK((c$=a$=class e extends $Y{get string(){return this._string}set string(e){e=null==e?"":e.toString(),this._string!==e&&(this._string=e,this.updateRenderData())}get horizontalAlign(){return this._horizontalAlign}set horizontalAlign(e){this._horizontalAlign!==e&&(this._horizontalAlign=e,this.updateRenderData())}get verticalAlign(){return this._verticalAlign}set verticalAlign(e){this._verticalAlign!==e&&(this._verticalAlign=e,this.updateRenderData())}get actualFontSize(){return this._actualFontSize}set actualFontSize(e){this._actualFontSize=e}get fontSize(){return this._fontSize}set fontSize(e){this._fontSize!==e&&(this._fontSize=e,this.updateRenderData())}get fontFamily(){return this._fontFamily}set fontFamily(e){this._fontFamily!==e&&(this._fontFamily=e,this.updateRenderData())}get lineHeight(){return this._lineHeight}set lineHeight(e){this._lineHeight!==e&&(this._lineHeight=e,this.updateRenderData())}get spacingX(){return this._spacingX}set spacingX(e){this._spacingX!==e&&(this._spacingX=e,this.updateRenderData())}get overflow(){return this._overflow}set overflow(e){this._overflow!==e&&(this._overflow=e,this.updateRenderData())}get enableWrapText(){return this._enableWrapText}set enableWrapText(e){this._enableWrapText!==e&&(this._enableWrapText=e,this.updateRenderData())}get font(){return this._font}set font(e){this._font!==e&&(this._isSystemFontUsed=!e,this._font=e,this._renderData&&(this.destroyRenderData(),this._renderData=null),this._fontAtlas=null,this.updateRenderData(!0))}get useSystemFont(){return this._isSystemFontUsed}set useSystemFont(e){this._isSystemFontUsed!==e&&(this.destroyRenderData(),this._renderData=null,this._isSystemFontUsed=!!e,e&&(this.font=null),this._flushAssembler(),this.updateRenderData())}get cacheMode(){return this._cacheMode}set cacheMode(e){this._cacheMode!==e&&(this._cacheMode!==u$.BITMAP||this._font instanceof EX||!this._ttfSpriteFrame||this._ttfSpriteFrame._resetDynamicAtlasFrame(),this._cacheMode===u$.CHAR&&(this._ttfSpriteFrame=null),this._cacheMode=e,this.updateRenderData(!0))}get isBold(){return this._isBold}set isBold(e){this._isBold!==e&&(this._isBold=e,this.updateRenderData())}get isItalic(){return this._isItalic}set isItalic(e){this._isItalic!==e&&(this._isItalic=e,this.updateRenderData())}get isUnderline(){return this._isUnderline}set isUnderline(e){this._isUnderline!==e&&(this._isUnderline=e,this.updateRenderData())}get underlineHeight(){return this._underlineHeight}set underlineHeight(e){this._underlineHeight!==e&&(this._underlineHeight=e,this.updateRenderData())}get spriteFrame(){return this._texture}get ttfSpriteFrame(){return this._ttfSpriteFrame}get assemblerData(){return this._assemblerData}get fontAtlas(){return this._fontAtlas}set fontAtlas(e){this._fontAtlas=e}get _bmFontOriginalSize(){return this._font instanceof EX?this._font.fontSize:-1}constructor(){super(),Fc(this,"_string",jK,this),Fc(this,"_horizontalAlign",WK,this),Fc(this,"_verticalAlign",qK,this),Fc(this,"_actualFontSize",XK,this),Fc(this,"_fontSize",YK,this),Fc(this,"_fontFamily",KK,this),Fc(this,"_lineHeight",$K,this),Fc(this,"_overflow",ZK,this),Fc(this,"_enableWrapText",QK,this),Fc(this,"_font",JK,this),Fc(this,"_isSystemFontUsed",e$,this),Fc(this,"_spacingX",t$,this),Fc(this,"_isItalic",n$,this),Fc(this,"_isBold",i$,this),Fc(this,"_isUnderline",s$,this),Fc(this,"_underlineHeight",r$,this),Fc(this,"_cacheMode",o$,this),this._N$file=null,this._texture=null,this._ttfSpriteFrame=null,this._userDefinedFont=null,this._assemblerData=null,this._fontAtlas=null,this._letterTexture=null,this._ttfSpriteFrame=null}onEnable(){super.onEnable(),this._font||this._isSystemFontUsed||(this.useSystemFont=!0),this._isSystemFontUsed&&!this._fontFamily&&(this.fontFamily="Arial"),this._applyFontTexture()}onDestroy(){if(this._assembler&&this._assembler.resetAssemblerData&&this._assembler.resetAssemblerData(this._assemblerData),this._assemblerData=null,this._ttfSpriteFrame){this._ttfSpriteFrame._resetDynamicAtlasFrame();const e=this._ttfSpriteFrame.texture;if(this._ttfSpriteFrame.destroy(),e){const t=e;t.image&&t.image.destroy(),e.destroy()}this._ttfSpriteFrame=null}this._letterTexture=null,super.onDestroy()}updateRenderData(e=!1){this.markForUpdateRenderData(),e&&(this._flushAssembler(),this.renderData&&(this.renderData.vertDirty=!0),this._applyFontTexture(),this._assembler&&this._assembler.updateRenderData(this))}_render(e){e.commitComp(this,this.renderData,this._texture,this._assembler,null)}_updateColor(){super._updateColor(),this.updateRenderData(!1)}_canRender(){if(!super._canRender()||!this._string)return!1;const e=this._font;if(e&&e instanceof EX){const t=e.spriteFrame;if(!t||!t.texture)return!1}return!0}_flushAssembler(){const t=e.Assembler.getAssembler(this);this._assembler!==t&&(this.destroyRenderData(),this._assembler=t),this._renderData||this._assembler&&this._assembler.createData&&(this._renderData=this._assembler.createData(this),this._renderData.material=this.material)}_applyFontTexture(){this.markForUpdateRenderData();const e=this._font;if(e instanceof EX){const t=e.spriteFrame;t&&t.texture&&(this._texture=t,this.renderData&&(this.renderData.textureDirty=!0),this.changeMaterialForDefine(),this._assembler&&this._assembler.updateRenderData(this))}else{if(this.cacheMode===u$.CHAR)this._letterTexture=this._assembler.getAssemblerData(),this._texture=this._letterTexture;else if(!this._ttfSpriteFrame){this._ttfSpriteFrame=new sX,this._assemblerData=this._assembler.getAssemblerData();const e=new jf(this._assemblerData.canvas),t=new ym;t.image=e,this._ttfSpriteFrame.texture=t}this.cacheMode!==u$.CHAR&&(this._texture=this._ttfSpriteFrame),this.changeMaterialForDefine()}}changeMaterialForDefine(){if(!this._texture)return;let e=!1;if(this.cacheMode!==u$.CHAR){const t=this._texture.texture;if(t instanceof sm){const n=t.getPixelFormat();e=n===Lf.RGBA_ETC1||n===Lf.RGB_A_PVRTC_4BPPV1||n===Lf.RGB_A_PVRTC_2BPPV1}}this._instanceMaterialType=e?KY.USE_ALPHA_SEPARATED:KY.ADD_COLOR_AND_TEXTURE,this.updateMaterial()}},a$.HorizontalAlign=l$,a$.VerticalAlign=h$,a$.Overflow=_$,a$.CacheMode=u$,a$._canvasPool=VX.getInstance(),Bc((VK=c$).prototype,"string",[tK,nK,Al],Object.getOwnPropertyDescriptor(VK.prototype,"string"),VK.prototype),Bc(VK.prototype,"horizontalAlign",[iK,sK,rK],Object.getOwnPropertyDescriptor(VK.prototype,"horizontalAlign"),VK.prototype),Bc(VK.prototype,"verticalAlign",[oK,aK,cK],Object.getOwnPropertyDescriptor(VK.prototype,"verticalAlign"),VK.prototype),Bc(VK.prototype,"fontSize",[lK,hK],Object.getOwnPropertyDescriptor(VK.prototype,"fontSize"),VK.prototype),Bc(VK.prototype,"fontFamily",[_K,uK,pK],Object.getOwnPropertyDescriptor(VK.prototype,"fontFamily"),VK.prototype),Bc(VK.prototype,"lineHeight",[dK,fK],Object.getOwnPropertyDescriptor(VK.prototype,"lineHeight"),VK.prototype),Bc(VK.prototype,"spacingX",[mK,gK,vK],Object.getOwnPropertyDescriptor(VK.prototype,"spacingX"),VK.prototype),Bc(VK.prototype,"overflow",[yK,xK,SK],Object.getOwnPropertyDescriptor(VK.prototype,"overflow"),VK.prototype),Bc(VK.prototype,"enableWrapText",[CK,TK],Object.getOwnPropertyDescriptor(VK.prototype,"enableWrapText"),VK.prototype),Bc(VK.prototype,"font",[bK,EK,AK,PK],Object.getOwnPropertyDescriptor(VK.prototype,"font"),VK.prototype),Bc(VK.prototype,"useSystemFont",[wK,IK],Object.getOwnPropertyDescriptor(VK.prototype,"useSystemFont"),VK.prototype),Bc(VK.prototype,"cacheMode",[RK,DK,OK],Object.getOwnPropertyDescriptor(VK.prototype,"cacheMode"),VK.prototype),Bc(VK.prototype,"isBold",[MK,NK],Object.getOwnPropertyDescriptor(VK.prototype,"isBold"),VK.prototype),Bc(VK.prototype,"isItalic",[LK,zK],Object.getOwnPropertyDescriptor(VK.prototype,"isItalic"),VK.prototype),Bc(VK.prototype,"isUnderline",[FK,BK],Object.getOwnPropertyDescriptor(VK.prototype,"isUnderline"),VK.prototype),Bc(VK.prototype,"underlineHeight",[UK,dl,GK,HK],Object.getOwnPropertyDescriptor(VK.prototype,"underlineHeight"),VK.prototype),jK=Bc(VK.prototype,"_string",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return"label"}}),WK=Bc(VK.prototype,"_horizontalAlign",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return l$.CENTER}}),qK=Bc(VK.prototype,"_verticalAlign",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return h$.CENTER}}),XK=Bc(VK.prototype,"_actualFontSize",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),YK=Bc(VK.prototype,"_fontSize",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 40}}),KK=Bc(VK.prototype,"_fontFamily",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return"Arial"}}),$K=Bc(VK.prototype,"_lineHeight",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 40}}),ZK=Bc(VK.prototype,"_overflow",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return _$.NONE}}),QK=Bc(VK.prototype,"_enableWrapText",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),JK=Bc(VK.prototype,"_font",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),e$=Bc(VK.prototype,"_isSystemFontUsed",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),t$=Bc(VK.prototype,"_spacingX",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),n$=Bc(VK.prototype,"_isItalic",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),i$=Bc(VK.prototype,"_isBold",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),s$=Bc(VK.prototype,"_isUnderline",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),r$=Bc(VK.prototype,"_underlineHeight",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 2}}),o$=Bc(VK.prototype,"_cacheMode",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return u$.NONE}}),kK=VK))||kK)||kK)||kK)||kK));!function(e){e[e.BUTT=0]="BUTT",e[e.ROUND=1]="ROUND",e[e.SQUARE=2]="SQUARE"}(p$||(p$={})),Fe(p$),function(e){e[e.BEVEL=0]="BEVEL",e[e.ROUND=1]="ROUND",e[e.MITER=2]="MITER"}(d$||(d$={})),Fe(d$),function(e){e[e.PT_CORNER=1]="PT_CORNER",e[e.PT_LEFT=2]="PT_LEFT",e[e.PT_BEVEL=4]="PT_BEVEL",e[e.PT_INNERBEVEL=8]="PT_INNERBEVEL"}(f$||(f$={})),Fe(f$);const g$=Math.PI,v$=Math.min,y$=Math.max,x$=Math.cos,S$=Math.sin,C$=Math.abs,T$=Math.sign,b$=.5522847493;function E$(e,t,n,i,s){e.moveTo(t-i,n),e.bezierCurveTo(t-i,n+s*b$,t-i*b$,n+s,t,n+s),e.bezierCurveTo(t+i*b$,n+s,t+i,n+s*b$,t+i,n),e.bezierCurveTo(t+i,n-s*b$,t+i*b$,n-s,t,n-s),e.bezierCurveTo(t-i*b$,n-s,t-i,n-s*b$,t-i,n),e.close()}function A$(e,t,n,i,s,r,o,a,c,l,h){let _=0,u=0,p=0,d=0,f=0,m=0,g=0,v=0,y=0,x=0,S=0,C=0,T=0,b=0,E=0,A=0;l>10||(_=.5*(t+i),u=.5*(n+s),p=.5*(i+r),d=.5*(s+o),f=.5*(r+a),m=.5*(o+c),g=.5*(_+p),v=.5*(u+d),T=a-t,b=c-n,E=C$((i-a)*b-(s-c)*T),A=C$((r-a)*b-(o-c)*T),(E+A)*(E+A)<e.tessTol*(T*T+b*b)?e.addPoint(a,c,0===h?h|f$.PT_BEVEL:h):(y=.5*(p+f),x=.5*(d+m),S=.5*(g+y),C=.5*(v+x),A$(e,t,n,_,u,g,v,S,C,l+1,0),A$(e,S,C,y,x,f,m,a,c,l+1,h)))}class P$ extends bi{constructor(e,t){super(e,t),this.dx=0,this.dy=0,this.dmx=0,this.dmy=0,this.flags=0,this.len=0,this.reset()}reset(){this.dx=0,this.dy=0,this.dmx=0,this.dmy=0,this.flags=0,this.len=0}}class w${constructor(){this.closed=!1,this.bevel=0,this.complex=!0,this.points=[],this.reset()}reset(){this.closed=!1,this.bevel=0,this.complex=!0,this.points?this.points.length=0:this.points=[]}}class I${constructor(){this.dataOffset=0,this.updatePathOffset=!1,this.pathLength=0,this.pathOffset=0,this.paths=[],this.tessTol=.25,this.distTol=.01,this.fillColor=ti.WHITE.clone(),this.lineCap=p$.BUTT,this.strokeColor=ti.BLACK.clone(),this.lineJoin=d$.MITER,this.lineWidth=0,this.pointsOffset=0,this._commandX=0,this._commandY=0,this._points=[],this._renderDataList=[],this._curPath=null}moveTo(e,t){this.updatePathOffset&&(this.pathOffset=this.pathLength,this.updatePathOffset=!1),this._addPath(),this.addPoint(e,t,f$.PT_CORNER),this._commandX=e,this._commandY=t}lineTo(e,t){this.addPoint(e,t,f$.PT_CORNER),this._commandX=e,this._commandY=t}bezierCurveTo(e,t,n,i,s,r){const o=this._curPath,a=o.points[o.points.length-1];a&&(a.x!==e||a.y!==t||n!==s||i!==r?(A$(this,a.x,a.y,e,t,n,i,s,r,0,f$.PT_CORNER),this._commandX=s,this._commandY=r):this.lineTo(s,r))}quadraticCurveTo(e,t,n,i){const s=this._commandX,r=this._commandY;this.bezierCurveTo(s+2/3*(e-s),r+2/3*(t-r),n+2/3*(e-n),i+2/3*(t-i),n,i)}arc(e,t,n,i,s,r){!function(e,t,n,i,s,r,o){let a=0,c=0,l=0,h=0,_=0,u=0,p=0,d=0,f=0,m=0,g=0,v=0,y=0,x=0,S=0,C=0;if(c=r-s,o=o||!1)if(C$(c)>=2*g$)c=2*g$;else for(;c<0;)c+=2*g$;else if(C$(c)>=2*g$)c=2*-g$;else for(;c>0;)c-=2*g$;for(C=0|y$(1,v$(C$(c)/(.5*g$)+.5,5)),l=c/C/2,h=C$(4/3*(1-x$(l))/S$(l)),o||(h=-h),S=0;S<=C;S++)a=s+c*(S/C),_=x$(a),u=S$(a),p=t+_*i,d=n+u*i,f=-u*i*h,m=_*i*h,0===S?e.moveTo(p,d):e.bezierCurveTo(g+y,v+x,p-f,d-m,p,d),g=p,v=d,y=f,x=m}(this,e,t,n,i,s,r)}ellipse(e,t,n,i){E$(this,e,t,n,i),this._curPath.complex=!1}circle(e,t,n){E$(this,e,t,n,n),this._curPath.complex=!1}rect(e,t,n,i){this.moveTo(e,t),this.lineTo(e+n,t),this.lineTo(e+n,t+i),this.lineTo(e,t+i),this.close(),this._curPath.complex=!1}roundRect(e,t,n,i,s){!function(e,t,n,i,s,r){if(r<.1)e.rect(t,n,i,s);else{const o=v$(r,.5*C$(i))*T$(i),a=v$(r,.5*C$(s))*T$(s);e.moveTo(t,n+a),e.lineTo(t,n+s-a),e.bezierCurveTo(t,n+s-a*(1-b$),t+o*(1-b$),n+s,t+o,n+s),e.lineTo(t+i-o,n+s),e.bezierCurveTo(t+i-o*(1-b$),n+s,t+i,n+s-a*(1-b$),t+i,n+s-a),e.lineTo(t+i,n+a),e.bezierCurveTo(t+i,n+a*(1-b$),t+i-o*(1-b$),n,t+i-o,n),e.lineTo(t+o,n),e.bezierCurveTo(t+o*(1-b$),n,t,n+a*(1-b$),t,n+a),e.close()}}(this,e,t,n,i,s),this._curPath.complex=!1}clear(){this.pathLength=0,this.pathOffset=0,this.pointsOffset=0,this.dataOffset=0,this._curPath=null,this.paths.length=0,this._points.length=0;const e=this._renderDataList;for(let t=0,n=e.length;t<n;t++){const n=e[t];n&&eY.remove(n)}this._renderDataList.length=0}close(){this._curPath.closed=!0}requestRenderData(){const e=eY.add();return this._renderDataList.push(e),e}getRenderDataList(){return 0===this._renderDataList.length&&this.requestRenderData(),this._renderDataList}addPoint(e,t,n){const i=this._curPath;if(!i)return;const s=this._points,r=i.points;let o=s[this.pointsOffset++];o?(o.x=e,o.y=t):(o=new P$(e,t),s.push(o)),o.flags=n,r.push(o)}_addPath(){const e=this.pathLength;let t=this.paths[e];return t?t.reset():(t=new w$,this.paths.push(t)),this.pathLength++,this._curPath=t,t}}var R$,D$,O$,M$,N$,L$,z$,F$,B$,U$,G$,H$,k$,V$,j$,W$,q$,X$,Y$,K$,$$,Z$,Q$;const J$=kq.concat([new Qr("a_dist",zs.R32F)]),eZ=Wq(J$),tZ=qq(J$);let nZ=function(t){return e({Graphics:t,GraphicsComponent:t}),t}((R$=Zc("cc.Graphics"),D$=pl(),O$=Jc(110),M$=ll(),N$=vl(),L$=Ol(d$),z$=vl(),F$=Ol(p$),B$=vl(),U$=vl(),G$=vl(),H$=vl(),k$=fl(),R$(V$=D$(V$=O$(V$=M$((Q$=Z$=class e extends $Y{get lineWidth(){return this._lineWidth}set lineWidth(e){this._lineWidth=e,this.impl&&(this.impl.lineWidth=e)}get lineJoin(){return this._lineJoin}set lineJoin(e){this._lineJoin=e,this.impl&&(this.impl.lineJoin=e)}get lineCap(){return this._lineCap}set lineCap(e){this._lineCap=e,this.impl&&(this.impl.lineCap=e)}get strokeColor(){return this._strokeColor}set strokeColor(e){this.impl&&(this._strokeColor.set(e),this.impl.strokeColor=this._strokeColor)}get fillColor(){return this._fillColor}set fillColor(e){this.impl&&(this._fillColor.set(e),this.impl.fillColor=this._fillColor)}get miterLimit(){return this._miterLimit}set miterLimit(e){this._miterLimit=e}get color(){return this._color}set color(e){this._color!==e&&this._color.set(e)}get srcBlendFactor(){return this._srcBlendFactor}set srcBlendFactor(e){}get dstBlendFactor(){return this._dstBlendFactor}set dstBlendFactor(e){}constructor(){super(),this.impl=null,this.model=null,Fc(this,"_lineWidth",W$,this),Fc(this,"_strokeColor",q$,this),Fc(this,"_lineJoin",X$,this),Fc(this,"_lineCap",Y$,this),Fc(this,"_fillColor",K$,this),Fc(this,"_miterLimit",$$,this),this._isDrawing=!1,this._isNeedUploadData=!0,this._graphicsUseSubMeshes=[],this._instanceMaterialType=KY.ADD_COLOR,this.impl=new I$}onRestore(){this.impl||this._flushAssembler()}onLoad(){this.model=aI.root.createModel(fg),this.model.node=this.model.transform=this.node,this._flushAssembler()}onEnable(){super.onEnable(),this._updateMtlForGraphics()}onDisable(){super.onDisable()}onDestroy(){super.onDestroy(),this._sceneGetter=null,this.model&&(aI.root.destroyModel(this.model),this.model=null);const e=this._graphicsUseSubMeshes.length;if(e>0){for(let t=0;t<e;++t)this._graphicsUseSubMeshes[t].destroy();this._graphicsUseSubMeshes.length=0}this.impl&&(this._isDrawing=!1,this.impl.clear(),this.impl=null)}moveTo(e,t){this.impl&&this.impl.moveTo(e,t)}lineTo(e,t){this.impl&&this.impl.lineTo(e,t)}bezierCurveTo(e,t,n,i,s,r){this.impl&&this.impl.bezierCurveTo(e,t,n,i,s,r)}quadraticCurveTo(e,t,n,i){this.impl&&this.impl.quadraticCurveTo(e,t,n,i)}arc(e,t,n,i,s,r){this.impl&&this.impl.arc(e,t,n,i,s,r)}ellipse(e,t,n,i){this.impl&&this.impl.ellipse(e,t,n,i)}circle(e,t,n){this.impl&&this.impl.circle(e,t,n)}rect(e,t,n,i){this.impl&&this.impl.rect(e,t,n,i)}roundRect(e,t,n,i,s){this.impl&&this.impl.roundRect(e,t,n,i,s)}fillRect(e,t,n,i){this.rect(e,t,n,i),this.fill()}clear(){if(this.impl){if(this.impl.clear(),this._isDrawing=!1,this.model)for(let e=0;e<this.model.subModels.length;e++)this.model.subModels[e].inputAssembler.indexCount=0;this.markForUpdateRenderData()}}close(){this.impl&&this.impl.close()}stroke(){this._assembler||this._flushAssembler(),this._isDrawing=!0,this._isNeedUploadData=!0,this._assembler.stroke(this)}fill(){this._assembler||this._flushAssembler(),this._isDrawing=!0,this._isNeedUploadData=!0,this._assembler.fill(this)}_updateMtlForGraphics(){let e;this._customMaterial?e=this.getMaterialInstance(0):(e=Jm.get("ui-graphics-material"),this.setMaterial(e,0),e=this.getMaterialInstance(0),e.recompileShaders({USE_LOCAL:!0}))}activeSubModel(e){if(this.model){if(this.model.subModels.length<=e){const t=i.director.root.device,n=t.createBuffer(new Lr(Us.VERTEX|Us.TRANSFER_DST,ks.DEVICE,65535*tZ,tZ)),s=t.createBuffer(new Lr(Us.INDEX|Us.TRANSFER_DST,ks.DEVICE,131070*Uint16Array.BYTES_PER_ELEMENT,Uint16Array.BYTES_PER_ELEMENT)),r=new sT([n],J$,cr.TRIANGLE_LIST,s);r.subMeshIdx=0,this.model.initSubModel(e,r,this.getMaterialInstance(0)),this._graphicsUseSubMeshes.push(r)}}else T(4500,this.node.name)}_uploadData(){const e=this.impl;if(!e)return;const t=e&&e.getRenderDataList();if(t.length<=0||!this.model)return;const n=this.model.subModels;for(let e=0;e<t.length;e++){const i=t[e],s=n[e].inputAssembler;if(i.lastFilledVertex===i.vertexStart)continue;const r=new Float32Array(i.vData.buffer,0,i.vertexStart*eZ);s.vertexBuffers[0].update(r),s.vertexCount=i.vertexStart;const o=new Uint16Array(i.iData.buffer,0,i.indexStart);s.indexBuffer.update(o),s.indexCount=i.indexStart,i.lastFilledVertex=i.vertexStart,i.lastFilledIndex=i.indexStart}this._isNeedUploadData=!1}_render(e){if(this._isNeedUploadData){if(this.impl){const e=this.impl.getRenderDataList(),t=this.model.subModels.length;if(e.length>t)for(let n=t;n<e.length;n++)this.activeSubModel(n)}this._uploadData()}e.commitModel(this,this.model,this.getMaterialInstance(0))}_flushAssembler(){const t=e.Assembler.getAssembler(this);this._assembler!==t&&(this._assembler=t)}_canRender(){return!!super._canRender()&&!!this.model&&this._isDrawing}},Z$.LineJoin=d$,Z$.LineCap=p$,Bc((j$=Q$).prototype,"lineWidth",[dl,N$],Object.getOwnPropertyDescriptor(j$.prototype,"lineWidth"),j$.prototype),Bc(j$.prototype,"lineJoin",[L$,z$],Object.getOwnPropertyDescriptor(j$.prototype,"lineJoin"),j$.prototype),Bc(j$.prototype,"lineCap",[F$,B$],Object.getOwnPropertyDescriptor(j$.prototype,"lineCap"),j$.prototype),Bc(j$.prototype,"strokeColor",[U$],Object.getOwnPropertyDescriptor(j$.prototype,"strokeColor"),j$.prototype),Bc(j$.prototype,"fillColor",[G$],Object.getOwnPropertyDescriptor(j$.prototype,"fillColor"),j$.prototype),Bc(j$.prototype,"miterLimit",[H$],Object.getOwnPropertyDescriptor(j$.prototype,"miterLimit"),j$.prototype),Bc(j$.prototype,"color",[Ml,k$],Object.getOwnPropertyDescriptor(j$.prototype,"color"),j$.prototype),W$=Bc(j$.prototype,"_lineWidth",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),q$=Bc(j$.prototype,"_strokeColor",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return ti.BLACK.clone()}}),X$=Bc(j$.prototype,"_lineJoin",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return d$.MITER}}),Y$=Bc(j$.prototype,"_lineCap",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return p$.BUTT}}),K$=Bc(j$.prototype,"_fillColor",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return ti.WHITE.clone()}}),$$=Bc(j$.prototype,"_miterLimit",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 10}}),V$=j$))||V$)||V$)||V$)||V$));var iZ,sZ,rZ,oZ,aZ,cZ,lZ,hZ,_Z,uZ,pZ,dZ,fZ,mZ,gZ,vZ,yZ,xZ,SZ,CZ,TZ,bZ,EZ,AZ,PZ;const wZ=new xi,IZ=new bi,RZ=new xi,DZ=[];let OZ;!function(e){e[e.RECT=0]="RECT",e[e.ELLIPSE=1]="ELLIPSE",e[e.GRAPHICS_STENCIL=2]="GRAPHICS_STENCIL",e[e.IMAGE_STENCIL=3]="IMAGE_STENCIL"}(OZ||(OZ={})),Fe(OZ);let MZ=function(t){return e({Mask:t,MaskComponent:t}),t}((iZ=Zc("cc.Mask"),sZ=pl(),rZ=Jc(110),oZ=ll(),aZ=Ol(OZ),cZ=bl(),lZ=vl(),hZ=bl(),_Z=vl(),uZ=fl(),pZ=Ol(sX),dZ=fl(),fZ=fl(),mZ=yl(),gZ=fl(),vZ=fl(),iZ(yZ=sZ(yZ=rZ(yZ=oZ((PZ=AZ=class e extends $Y{get type(){return this._type}set type(e){this._type!==e&&(this._type=e,this.markForUpdateRenderData(!1),this._updateMaterial(),this._type!==OZ.IMAGE_STENCIL?(this._spriteFrame=null,this._updateGraphics(),this._renderData&&(this.destroyRenderData(),this._renderData=null)):(this._useRenderData(),this._graphics&&this._graphics.clear()))}get inverted(){return this._inverted}set inverted(e){this._inverted=e,this.stencilStage=PY.DISABLED,this._graphics&&(this._graphics.stencilStage=PY.DISABLED)}get segments(){return this._segments}set segments(e){this._segments!==e&&(this._segments=zn(e,3,1e4),this._updateGraphics())}get spriteFrame(){return this._spriteFrame}set spriteFrame(e){if(this._spriteFrame===e)return;const t=this._spriteFrame;this._spriteFrame=e,this._type===OZ.IMAGE_STENCIL&&!t&&e&&this.markForUpdateRenderData()}get alphaThreshold(){return this._alphaThreshold}set alphaThreshold(e){this._alphaThreshold!==e&&(this._alphaThreshold=e,this.type===OZ.IMAGE_STENCIL&&this._graphics)&&this._graphics.getMaterialInstance(0).setProperty("alphaThreshold",this._alphaThreshold)}get graphics(){return this._graphics}get dstBlendFactor(){return this._dstBlendFactor}set dstBlendFactor(e){this._dstBlendFactor!==e&&(this._dstBlendFactor=e,this._updateBlendFunc())}get srcBlendFactor(){return this._srcBlendFactor}set srcBlendFactor(e){this._srcBlendFactor!==e&&(this._srcBlendFactor=e,this._updateBlendFunc())}get color(){return this._color}set color(e){this._color!==e&&(this._color.set(e),this.markForUpdateRenderData())}get customMaterial(){return this._customMaterial}set customMaterial(e){}constructor(){super(),this._clearStencilMtl=null,this._clearModel=null,Fc(this,"_type",SZ,this),Fc(this,"_inverted",CZ,this),Fc(this,"_segments",TZ,this),Fc(this,"_spriteFrame",bZ,this),Fc(this,"_alphaThreshold",EZ,this),this._graphics=null,this._clearModelMesh=null,this._instanceMaterialType=KY.ADD_COLOR}onLoad(){this._createClearModel(),this._createGraphics(),this._graphics&&this._graphics.onLoad()}onEnable(){super.onEnable(),this._updateGraphics(),this._enableGraphics()}onRestore(){this._createGraphics(),super.updateMaterial(),this._updateGraphics(),this._renderFlag=this._canRender()}onDisable(){super.onDisable(),this._disableGraphics()}onDestroy(){super.onDestroy(),this._clearModel&&this._clearModelMesh&&(aI.root.destroyModel(this._clearModel),this._clearModelMesh.destroy()),this._clearStencilMtl&&this._clearStencilMtl.destroy(),this._removeGraphics()}isHit(e){const t=this.node._uiProps.uiTransformComp,n=t.contentSize,i=n.width,s=n.height,r=IZ;this.node.getWorldMatrix(wZ),xi.invert(RZ,wZ),bi.transformMat4(r,e,RZ);const o=t.anchorPoint;r.x+=o.x*i,r.y+=o.y*s;let a=!1;if(this.type===OZ.RECT||this.type===OZ.GRAPHICS_STENCIL||this.type===OZ.IMAGE_STENCIL)a=r.x>=0&&r.y>=0&&r.x<=i&&r.y<=s;else if(this.type===OZ.ELLIPSE){const e=i/2,t=s/2,n=r.x-.5*i,o=r.y-.5*s;a=n*n/(e*e)+o*o/(t*t)<1}return this._inverted&&(a=!a),a}_render(e){e.commitComp(this,this.renderData,null,this._assembler,null)}_postRender(e){this._postAssembler&&e.commitComp(this,null,null,this._postAssembler,null)}_nodeStateChange(e){super._nodeStateChange(e),this._updateGraphics()}_canRender(){return!!super._canRender()&&null!==this._graphics&&(this._type!==OZ.IMAGE_STENCIL||null!==this._spriteFrame)}_flushAssembler(){const t=e.Assembler.getAssembler(this),n=e.PostAssembler.getAssembler(this);this._assembler!==t&&(this.destroyRenderData(),this._assembler=t),this._postAssembler!==n&&(this._postAssembler=n),this._useRenderData()}_createGraphics(){if(!this._graphics){const e=this._graphics=new nZ;e._objFlags|=Dt.Flags.IsOnLoadCalled,e.node=this.node,e.node.getWorldMatrix(),e.lineWidth=0;const t=ti.WHITE.clone();t.a=0,e.fillColor=t}this._updateMaterial()}_updateGraphics(){if(!this._graphics||this._type!==OZ.RECT&&this._type!==OZ.ELLIPSE)return;const e=this.node._uiProps.uiTransformComp,t=this._graphics;t.clear();const n=e.contentSize,i=n.width,s=n.height,r=e.anchorPoint,o=-i*r.x,a=-s*r.y;if(this._type===OZ.RECT)t.rect(o,a,i,s);else if(this._type===OZ.ELLIPSE){const e=function(e,t,n){DZ.length=0;const i=2*Math.PI/n;for(let s=0;s<n;++s)DZ.push(new ri(t.x*Math.cos(i*s)+e.x,t.y*Math.sin(i*s)+e.y,0));return DZ}(new ri(o+i/2,a+s/2,0),new ri(i/2,s/2,0),this._segments);for(let n=0;n<e.length;++n){const i=e[n];0===n?t.moveTo(i.x,i.y):t.lineTo(i.x,i.y)}t.close()}t.fill()}_createClearModel(){if(!this._clearModel){const e=Jm.get("default-clear-stencil");this._clearStencilMtl=new tv({parent:e,owner:this,subModelIdx:0}),this._clearModel=aI.root.createModel(fg),this._clearModel.node=this._clearModel.transform=this.node;const t=qq(Hq),n=i.director.root.device,s=n.createBuffer(new Lr(Us.VERTEX|Us.TRANSFER_DST,ks.DEVICE,4*t,t)),r=new Float32Array([-1,-1,0,1,-1,0,-1,1,0,1,1,0]);s.update(r);const o=n.createBuffer(new Lr(Us.INDEX|Us.TRANSFER_DST,ks.DEVICE,6*Uint16Array.BYTES_PER_ELEMENT,Uint16Array.BYTES_PER_ELEMENT)),a=new Uint16Array([0,1,2,2,1,3]);o.update(a),this._clearModelMesh=new sT([s],Hq,cr.TRIANGLE_LIST,o),this._clearModelMesh.subMeshIdx=0,this._clearModel.initSubModel(0,this._clearModelMesh,this._clearStencilMtl)}}_updateMaterial(){if(this._graphics){const e=this._graphics;let t;e.stencilStage=PY.DISABLED,this._type===OZ.IMAGE_STENCIL?(t=Jm.get("ui-alpha-test-material"),e.setMaterial(t,0),t=e.getMaterialInstance(0),t.setProperty("alphaThreshold",this._alphaThreshold)):(t=Jm.get("ui-graphics-material"),e.setMaterial(t,0),e.getMaterialInstance(0))}}_enableGraphics(){this._graphics&&(this._graphics._renderFlag=this._graphics._canRender())}_disableGraphics(){this._graphics&&this._graphics.onDisable()}_removeGraphics(){this._graphics&&(this._graphics.destroy(),this._graphics._destroyImmediate(),this._graphics=null)}_useRenderData(){this._type!==OZ.IMAGE_STENCIL||this._renderData||this._assembler&&this._assembler.createData&&(this._renderData=this._assembler.createData(this),this.markForUpdateRenderData())}},AZ.Type=OZ,Bc((xZ=PZ).prototype,"type",[aZ,cZ,lZ],Object.getOwnPropertyDescriptor(xZ.prototype,"type"),xZ.prototype),Bc(xZ.prototype,"inverted",[hZ,_Z],Object.getOwnPropertyDescriptor(xZ.prototype,"inverted"),xZ.prototype),Bc(xZ.prototype,"segments",[uZ],Object.getOwnPropertyDescriptor(xZ.prototype,"segments"),xZ.prototype),Bc(xZ.prototype,"spriteFrame",[pZ,dZ],Object.getOwnPropertyDescriptor(xZ.prototype,"spriteFrame"),xZ.prototype),Bc(xZ.prototype,"alphaThreshold",[fZ,mZ,Tl],Object.getOwnPropertyDescriptor(xZ.prototype,"alphaThreshold"),xZ.prototype),Bc(xZ.prototype,"color",[Ml,gZ],Object.getOwnPropertyDescriptor(xZ.prototype,"color"),xZ.prototype),Bc(xZ.prototype,"customMaterial",[Ml,vZ],Object.getOwnPropertyDescriptor(xZ.prototype,"customMaterial"),xZ.prototype),SZ=Bc(xZ.prototype,"_type",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return OZ.RECT}}),CZ=Bc(xZ.prototype,"_inverted",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),TZ=Bc(xZ.prototype,"_segments",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 64}}),bZ=Bc(xZ.prototype,"_spriteFrame",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),EZ=Bc(xZ.prototype,"_alphaThreshold",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.1}}),yZ=xZ))||yZ)||yZ)||yZ)||yZ));pT._maskComp=MZ,i.Mask=MZ;const NZ=/^(click)(\s)*=|(param)(\s)*=/,LZ=/(\s)*src(\s)*=|(\s)*height(\s)*=|(\s)*width(\s)*=|(\s)*align(\s)*=|(\s)*offset(\s)*=|(\s)*click(\s)*=|(\s)*param(\s)*=/;class zZ{constructor(){this._specialSymbolArray=[],this._stack=[],this._resultObjectArray=[],this._specialSymbolArray.push([/&lt;/g,"<"]),this._specialSymbolArray.push([/&gt;/g,">"]),this._specialSymbolArray.push([/&amp;/g,"&"]),this._specialSymbolArray.push([/&quot;/g,'"']),this._specialSymbolArray.push([/&apos;/g,"'"])}parse(e){this._resultObjectArray.length=0,this._stack.length=0;let t=0;const n=e.length;for(;t<n;){let i=e.indexOf(">",t),s=-1;if(i>=0&&(s=e.lastIndexOf("<",i),s<t-1&&(s=e.indexOf("<",i+1),i=e.indexOf(">",s+1))),s<0)this._stack.pop(),this._processResult(e.substring(t)),t=n;else{let n=e.substring(t,s);const r=e.substring(s+1,i);""===r&&(n=e.substring(t,i+1)),this._processResult(n),-1===i?i=s:"/"===e.charAt(s+1)?this._stack.pop():this._addToStack(r),t=i+1}}return this._resultObjectArray}_attributeToObject(e){e=e.trim();const t={};let n=/^(color|size)(\s)*=/.exec(e),i="",s=0,r="";if(n){if(i=n[0],""===(e=e.substring(i.length).trim()))return t;switch(s=e.indexOf(" "),i[0]){case"c":t.color=s>-1?e.substring(0,s).trim():e;break;case"s":t.size=parseInt(e)}return s>-1&&(r=e.substring(s+1).trim(),t.event=this._processEventHandler(r)),t}if(n=/^(br(\s)*\/)/.exec(e),n&&n[0].length>0&&(i=n[0].trim(),i.startsWith("br")&&"/"===i[i.length-1]))return t.isNewLine=!0,this._resultObjectArray.push({text:"",style:{isNewLine:!0}}),t;n=/^(img(\s)*src(\s)*=[^>]+\/)/.exec(e);let o="";if(n&&n[0].length>0&&(i=n[0].trim(),i.startsWith("img")&&"/"===i[i.length-1])){let r;n=LZ.exec(e);let a=!1;for(;n;){if(i=(e=e.substring(e.indexOf(n[0]))).substr(0,n[0].length),o=e.substring(i.length).trim(),s=o.indexOf(" "),r=s>-1?o.substr(0,s):o,i=i.replace(/[^a-zA-Z]/g,"").trim(),i=i.toLowerCase(),e=o.substring(s).trim(),r.endsWith("/")&&(r=r.slice(0,-1)),"src"===i){switch(r.charCodeAt(0)){case 34:case 39:a=!0,r=r.slice(1,-1)}t.isImage=!0,t.src=r}else if("height"===i)t.imageHeight=parseInt(r);else if("width"===i)t.imageWidth=parseInt(r);else if("align"===i){switch(r.charCodeAt(0)){case 34:case 39:r=r.slice(1,-1)}t.imageAlign=r.toLowerCase()}else"offset"===i?t.imageOffset=r:"click"===i&&(t.event=this._processEventHandler(`${i}=${r}`));t.event&&"param"===i&&(t.event[i]=r.replace(/^"|"$/g,"")),n=LZ.exec(e)}return a&&t.isImage&&this._resultObjectArray.push({text:"",style:t}),{}}if(n=/^(outline(\s)*[^>]*)/.exec(e),n){const r={color:"#ffffff",width:1};if(e=n[0].substring("outline".length).trim()){const a=/(\s)*color(\s)*=|(\s)*width(\s)*=|(\s)*click(\s)*=|(\s)*param(\s)*=/;let c;for(n=a.exec(e);n;)i=(e=e.substring(e.indexOf(n[0]))).substr(0,n[0].length),o=e.substring(i.length).trim(),s=o.indexOf(" "),c=s>-1?o.substr(0,s):o,i=i.replace(/[^a-zA-Z]/g,"").trim(),i=i.toLowerCase(),e=o.substring(s).trim(),"click"===i?t.event=this._processEventHandler(`${i}=${c}`):"color"===i?r.color=c:"width"===i&&(r.width=parseInt(c)),t.event&&"param"===i&&(t.event[i]=c.replace(/^"|"$/g,"")),n=a.exec(e)}t.outline=r}if(n=/^(on|u|b|i)(\s)*/.exec(e),n&&n[0].length>0){switch(i=n[0],e=e.substring(i.length).trim(),i[0]){case"u":t.underline=!0;break;case"i":t.italic=!0;break;case"b":t.bold=!0}if(""===e)return t;t.event=this._processEventHandler(e)}return t}_processEventHandler(e){const t={};let n=0,i=!1,s=NZ.exec(e);for(;s;){let r=s[0],o="";if(i=!1,'"'===(e=e.substring(r.length).trim()).charAt(0))n=e.indexOf('"',1),n>-1&&(o=e.substring(1,n).trim(),i=!0),n++;else if("'"===e.charAt(0))n=e.indexOf("'",1),n>-1&&(o=e.substring(1,n).trim(),i=!0),n++;else{const t=/(\S)+/.exec(e);o=t?t[0]:"",n=o.length}i&&(r=r.substring(0,r.length-1).trim(),t[r]=o),e=e.substring(n).trim(),s=NZ.exec(e)}return t}_addToStack(e){const t=this._attributeToObject(e);if(0===this._stack.length)this._stack.push(t);else{if(t.isNewLine||t.isImage)return;const e=this._stack[this._stack.length-1];for(const n in e)t[n]||(t[n]=e[n]);this._stack.push(t)}}_processResult(e){0!==e.length&&(e=this._escapeSpecialSymbol(e),this._stack.length>0?this._resultObjectArray.push({text:e,style:this._stack[this._stack.length-1]}):this._resultObjectArray.push({text:e}))}_escapeSpecialSymbol(e){for(const t of this._specialSymbolArray){const n=t[0],i=t[1];e=e.replace(n,i)}return e}}var FZ,BZ,UZ,GZ,HZ,kZ,VZ,jZ,WZ,qZ,XZ;e("HtmlTextParser",zZ);let YZ=function(t){return e({LabelOutline:t,LabelOutlineComponent:t}),t}((FZ=Zc("cc.LabelOutline"),BZ=pl(),UZ=Jc(110),GZ=ll(),HZ=Qc(m$),kZ=vl(),VZ=vl(),FZ(jZ=BZ(jZ=UZ(jZ=GZ(jZ=HZ(jZ=cl((qZ=Bc((WZ=class extends jh{constructor(...e){super(...e),Fc(this,"_color",qZ,this),Fc(this,"_width",XZ,this)}get color(){return this._color}set color(e){this._color!==e&&(this._color.set(e),this._updateRenderData())}get width(){return this._width}set width(e){this._width!==e&&(this._width=e,this._updateRenderData())}onEnable(){this._updateRenderData()}onDisable(){this._updateRenderData()}_updateRenderData(){const e=this.node.getComponent(m$);e&&e.updateRenderData(!0)}}).prototype,"_color",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new ti(0,0,0,255)}}),XZ=Bc(WZ.prototype,"_width",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 2}}),Bc(WZ.prototype,"color",[kZ],Object.getOwnPropertyDescriptor(WZ.prototype,"color"),WZ.prototype),Bc(WZ.prototype,"width",[VZ],Object.getOwnPropertyDescriptor(WZ.prototype,"width"),WZ.prototype),jZ=WZ))||jZ)||jZ)||jZ)||jZ)||jZ)||jZ));var KZ,$Z,ZZ,QZ,JZ,eQ,tQ,nQ,iQ,sQ,rQ,oQ,aQ,cQ,lQ,hQ,_Q,uQ,pQ,dQ,fQ,mQ,gQ,vQ,yQ,xQ,SQ,CQ,TQ,bQ,EQ,AQ,PQ,wQ,IQ,RQ,DQ,OQ,MQ,NQ,LQ,zQ,FQ,BQ;let UQ;var GQ,HQ,kQ;!function(e){e[e.SIMPLE=0]="SIMPLE",e[e.SLICED=1]="SLICED",e[e.TILED=2]="TILED",e[e.FILLED=3]="FILLED"}(UQ||(UQ={})),Fe(UQ),function(e){e[e.HORIZONTAL=0]="HORIZONTAL",e[e.VERTICAL=1]="VERTICAL",e[e.RADIAL=2]="RADIAL"}(GQ||(GQ={})),Fe(GQ),function(e){e[e.CUSTOM=0]="CUSTOM",e[e.TRIMMED=1]="TRIMMED",e[e.RAW=2]="RAW"}(HQ||(HQ={})),Fe(HQ),function(e){e.SPRITE_FRAME_CHANGED="spriteframe-changed"}(kQ||(kQ={}));let VQ=function(t){return e({Sprite:t,SpriteComponent:t}),t}((KZ=Zc("cc.Sprite"),$Z=pl(),ZZ=Jc(110),QZ=ll(),JZ=Ol(Ug),eQ=bl(),tQ=gl(),nQ=Ol(cX),iQ=bl(),sQ=vl(),rQ=Ol(sX),oQ=bl(),aQ=vl(),cQ=Ol(UQ),lQ=bl(),hQ=vl(),_Q=Ol(GQ),uQ=vl(),pQ=vl(),dQ=yl(),fQ=vl(),mQ=yl(),gQ=vl(),vQ=fl(),yQ=bl(),xQ=vl(),SQ=vl(),CQ=Ol(HQ),TQ=bl(),bQ=vl(),KZ(EQ=$Z(EQ=ZZ(EQ=QZ((BQ=FQ=class e extends $Y{get customMaterial(){return this._customMaterial}set customMaterial(e){this._customMaterial=e,this.updateMaterial()}get spriteAtlas(){return this._atlas}set spriteAtlas(e){this._atlas!==e&&(this._atlas=e)}get spriteFrame(){return this._spriteFrame}set spriteFrame(e){if(this._spriteFrame===e)return;const t=this._spriteFrame;this._spriteFrame=e,this.markForUpdateRenderData(!1),this._applySpriteFrame(t)}get type(){return this._type}set type(e){this._type!==e&&(this._type=e,this._flushAssembler())}get fillType(){return this._fillType}set fillType(e){this._fillType!==e&&(e===GQ.RADIAL||this._fillType===GQ.RADIAL?(this.destroyRenderData(),this._renderData=null):this._renderData&&this.markForUpdateRenderData(!0)),this._fillType=e,this._flushAssembler()}get fillCenter(){return this._fillCenter}set fillCenter(e){this._fillCenter.x=e.x,this._fillCenter.y=e.y,this._type===UQ.FILLED&&this._renderData&&this.markForUpdateRenderData()}get fillStart(){return this._fillStart}set fillStart(e){this._fillStart=zn(e,0,1),this._type===UQ.FILLED&&this._renderData&&(this.markForUpdateRenderData(),this._updateUVs())}get fillRange(){return this._fillRange}set fillRange(e){this._fillRange=zn(e,-1,1),this._type===UQ.FILLED&&this._renderData&&(this.markForUpdateRenderData(),this._updateUVs())}get trim(){return this._isTrimmedMode}set trim(e){this._isTrimmedMode!==e&&(this._isTrimmedMode=e,this._type===UQ.SIMPLE&&this._renderData&&this.markForUpdateRenderData(!0))}get grayscale(){return this._useGrayscale}set grayscale(e){this._useGrayscale!==e&&(this._useGrayscale=e,this._instanceMaterialType=!0===e?KY.GRAYSCALE:KY.ADD_COLOR_AND_TEXTURE,this.updateMaterial())}get sizeMode(){return this._sizeMode}set sizeMode(e){this._sizeMode!==e&&(this._sizeMode=e,e!==HQ.CUSTOM&&this._applySpriteSize())}constructor(){super(),Fc(this,"_spriteFrame",PQ,this),Fc(this,"_type",wQ,this),Fc(this,"_fillType",IQ,this),Fc(this,"_sizeMode",RQ,this),Fc(this,"_fillCenter",DQ,this),Fc(this,"_fillStart",OQ,this),Fc(this,"_fillRange",MQ,this),Fc(this,"_isTrimmedMode",NQ,this),Fc(this,"_useGrayscale",LQ,this),Fc(this,"_atlas",zQ,this)}__preload(){this.changeMaterialForDefine(),super.__preload()}onEnable(){super.onEnable(),this._activateMaterial();const e=this._spriteFrame;e&&(this._updateUVs(),this._type===UQ.SLICED&&e.on(sX.EVENT_UV_UPDATED,this._updateUVs,this))}onDisable(){this._spriteFrame&&this._type===UQ.SLICED&&this._spriteFrame.off(sX.EVENT_UV_UPDATED,this._updateUVs,this)}onDestroy(){this.destroyRenderData(),super.onDestroy()}changeSpriteFrameFromAtlas(e){if(!this._atlas)return void console.warn("SpriteAtlas is null.");const t=this._atlas.getSpriteFrame(e);this.spriteFrame=t}changeMaterialForDefine(){let e;const t=this._instanceMaterialType;this._spriteFrame&&(e=this._spriteFrame.texture);let n=!1;if(e instanceof sm){const t=e.getPixelFormat();n=t===Lf.RGBA_ETC1||t===Lf.RGB_A_PVRTC_4BPPV1||t===Lf.RGB_A_PVRTC_2BPPV1}n&&this.grayscale?this._instanceMaterialType=KY.USE_ALPHA_SEPARATED_AND_GRAY:n?this._instanceMaterialType=KY.USE_ALPHA_SEPARATED:this.grayscale?this._instanceMaterialType=KY.GRAYSCALE:this._instanceMaterialType=KY.ADD_COLOR_AND_TEXTURE,t!==this._instanceMaterialType&&this.updateMaterial()}_updateBuiltinMaterial(){let e=super._updateBuiltinMaterial();if(this.spriteFrame&&this.spriteFrame.texture instanceof KC){const t={SAMPLE_FROM_RT:!0,...e.passes[0].defines},n=new Ug;n.initialize({effectAsset:e.effectAsset,defines:t}),e=n}return e}_render(e){e.commitComp(this,this.renderData,this._spriteFrame,this._assembler,null)}_canRender(){if(!super._canRender())return!1;const e=this._spriteFrame;return!(!e||!e.texture)}_flushAssembler(){const t=e.Assembler.getAssembler(this);this._assembler!==t&&(this.destroyRenderData(),this._assembler=t),this._renderData||this._assembler&&this._assembler.createData&&(this._renderData=this._assembler.createData(this),this._renderData.material=this.getRenderMaterial(0),this.markForUpdateRenderData(),this.spriteFrame&&this._assembler.updateUVs(this),this._updateColor()),this._spriteFrame&&(this._type===UQ.SLICED?this._spriteFrame.on(sX.EVENT_UV_UPDATED,this._updateUVs,this):this._spriteFrame.off(sX.EVENT_UV_UPDATED,this._updateUVs,this))}_applySpriteSize(){if(this._spriteFrame){if(!this._spriteFrame.isDefault)if(HQ.RAW===this._sizeMode){const e=this._spriteFrame.originalSize;this.node._uiProps.uiTransformComp.setContentSize(e)}else if(HQ.TRIMMED===this._sizeMode){const e=this._spriteFrame.rect;this.node._uiProps.uiTransformComp.setContentSize(e.width,e.height)}this._activateMaterial()}}_resized(){}_activateMaterial(){const e=this._spriteFrame,t=this.getRenderMaterial(0);e&&t&&this.markForUpdateRenderData(),this._renderData&&(this._renderData.material=t)}_updateUVs(){this._assembler&&this._assembler.updateUVs(this)}_applySpriteFrame(e){const t=this._spriteFrame;e&&this._type===UQ.SLICED&&e.off(sX.EVENT_UV_UPDATED,this._updateUVs,this),this._updateUVs();let n=!1;t&&(e&&e.texture===t.texture||(n=!0),n&&(this._renderData&&(this._renderData.textureDirty=!0),this.changeMaterialForDefine()),this._applySpriteSize(),this._type===UQ.SLICED&&t.on(sX.EVENT_UV_UPDATED,this._updateUVs,this))}_calculateSlicedData(e){const t=this.node._uiProps.uiTransformComp.contentSize,n=t.width,i=t.height,s=this.spriteFrame.insetLeft,r=n-s-this.spriteFrame.insetRight,o=this.spriteFrame.insetTop,a=i-o-this.spriteFrame.insetBottom;return e.length=0,e[0]=s/n,e[1]=o/i,e[2]=(s+r)/n,e[3]=(o+a)/i,e}calculateTiledData(e){const t=this.node._uiProps.uiTransformComp.contentSize,n=this.spriteFrame.rect;e.x=t.width/n.width,e.y=t.height/n.height}_updateUVWithTrim(){this.tillingOffsetWithTrim.length=0;const e=this.spriteFrame,t=e.originalSize,n=e.rect,i=e.texture,s=i.width,r=i.height;let o=0,a=0;e.original&&(o=n.x-e.original._x,a=n.y-e.original._y);let c=0===s?0:o/s,l=0===s?1:(o+t.width)/s,h=0===r?1:(a+t.height)/r,_=0===r?0:a/r;e.rotated&&(c=0===s?0:o/s,l=0===s?1:(o+t.height)/s,_=0===r?0:a/r,h=0===r?1:(a+t.width)/r),this.tillingOffsetWithTrim[0]=l-c,this.tillingOffsetWithTrim[1]=h-_,this.tillingOffsetWithTrim[2]=c,this.tillingOffsetWithTrim[3]=_,e.rotated&&(this.tillingOffsetWithTrim[0]=-this.tillingOffsetWithTrim[0])}},FQ.FillType=GQ,FQ.Type=UQ,FQ.SizeMode=HQ,FQ.EventType=kQ,Bc((AQ=BQ).prototype,"customMaterial",[JZ,eQ,tQ,Ml],Object.getOwnPropertyDescriptor(AQ.prototype,"customMaterial"),AQ.prototype),Bc(AQ.prototype,"spriteAtlas",[nQ,iQ,sQ],Object.getOwnPropertyDescriptor(AQ.prototype,"spriteAtlas"),AQ.prototype),Bc(AQ.prototype,"spriteFrame",[rQ,oQ,aQ],Object.getOwnPropertyDescriptor(AQ.prototype,"spriteFrame"),AQ.prototype),Bc(AQ.prototype,"type",[cQ,lQ,hQ],Object.getOwnPropertyDescriptor(AQ.prototype,"type"),AQ.prototype),Bc(AQ.prototype,"fillType",[_Q,uQ],Object.getOwnPropertyDescriptor(AQ.prototype,"fillType"),AQ.prototype),Bc(AQ.prototype,"fillCenter",[pQ],Object.getOwnPropertyDescriptor(AQ.prototype,"fillCenter"),AQ.prototype),Bc(AQ.prototype,"fillStart",[dQ,fQ],Object.getOwnPropertyDescriptor(AQ.prototype,"fillStart"),AQ.prototype),Bc(AQ.prototype,"fillRange",[mQ,gQ],Object.getOwnPropertyDescriptor(AQ.prototype,"fillRange"),AQ.prototype),Bc(AQ.prototype,"trim",[vQ,yQ,xQ],Object.getOwnPropertyDescriptor(AQ.prototype,"trim"),AQ.prototype),Bc(AQ.prototype,"grayscale",[dl,SQ],Object.getOwnPropertyDescriptor(AQ.prototype,"grayscale"),AQ.prototype),Bc(AQ.prototype,"sizeMode",[CQ,TQ,bQ],Object.getOwnPropertyDescriptor(AQ.prototype,"sizeMode"),AQ.prototype),PQ=Bc(AQ.prototype,"_spriteFrame",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),wQ=Bc(AQ.prototype,"_type",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return UQ.SIMPLE}}),IQ=Bc(AQ.prototype,"_fillType",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return GQ.HORIZONTAL}}),RQ=Bc(AQ.prototype,"_sizeMode",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return HQ.TRIMMED}}),DQ=Bc(AQ.prototype,"_fillCenter",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new bi(0,0)}}),OQ=Bc(AQ.prototype,"_fillStart",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),MQ=Bc(AQ.prototype,"_fillRange",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),NQ=Bc(AQ.prototype,"_isTrimmedMode",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),LQ=Bc(AQ.prototype,"_useGrayscale",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),zQ=Bc(AQ.prototype,"_atlas",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),EQ=AQ))||EQ)||EQ)||EQ)||EQ));var jQ;let WQ=e("RenderRoot2D",Zc("cc.RenderRoot2D")(jQ=Jc(100)(jQ=ll()(jQ=Qc(wY)(jQ=el(jQ=cl(jQ=class extends jh{onEnable(){i.director.root.batcher2D.addScreen(this)}onDisable(){i.director.root.batcher2D.removeScreen(this)}onDestroy(){i.director.root.batcher2D.removeScreen(this)}})||jQ)||jQ)||jQ)||jQ)||jQ)||jQ);var qQ,XQ,YQ,KQ,$Q,ZQ,QQ,JQ,eJ,tJ,nJ,iJ;const sJ=new ri,rJ=Ne({OVERLAY:0,INTERSPERSE:1});let oJ=function(t){return e({Canvas:t,CanvasComponent:t}),t}((qQ=Zc("cc.Canvas"),XQ=pl(),YQ=Jc(100),KQ=ll(),$Q=Ol(cO),ZQ=vl(),QQ=vl(),JQ=Ol(cO),qQ(eJ=XQ(eJ=YQ(eJ=KQ(eJ=cl(eJ=el((Bc((tJ=class extends WQ{get renderMode(){return this._renderMode}set renderMode(e){this._renderMode=e,this._cameraComponent&&(this._cameraComponent.priority=this._getViewPriority())}get cameraComponent(){return this._cameraComponent}set cameraComponent(e){this._cameraComponent!==e&&(this._cameraComponent=e,this._onResizeCamera())}get alignCanvasWithScreen(){return this._alignCanvasWithScreen}set alignCanvasWithScreen(e){this._alignCanvasWithScreen=e,this._onResizeCamera()}constructor(){super(),Fc(this,"_cameraComponent",nJ,this),Fc(this,"_alignCanvasWithScreen",iJ,this),this._thisOnCameraResized=void 0,this._fitDesignResolution=void 0,this._pos=new ri,this._renderMode=rJ.OVERLAY,this._thisOnCameraResized=this._onResizeCamera.bind(this)}__preload(){const e=this.getComponent("cc.Widget");e&&e.updateAlignment(),this._cameraComponent&&(this._cameraComponent._createCamera(),this._cameraComponent.node.on(cO.TARGET_TEXTURE_CHANGE,this._thisOnCameraResized)),this._onResizeCamera(),this.node.on(cx.TRANSFORM_CHANGED,this._thisOnCameraResized)}onEnable(){super.onEnable(),this._cameraComponent&&this._cameraComponent.node.on(cO.TARGET_TEXTURE_CHANGE,this._thisOnCameraResized)}onDisable(){super.onDisable(),this._cameraComponent&&this._cameraComponent.node.off(cO.TARGET_TEXTURE_CHANGE,this._thisOnCameraResized)}onDestroy(){super.onDestroy(),this.node.off(cx.TRANSFORM_CHANGED,this._thisOnCameraResized)}_onResizeCamera(){if(this._cameraComponent&&this._alignCanvasWithScreen){if(this._cameraComponent.targetTexture)this._cameraComponent.orthoHeight=lI.height/2;else{const e=Jh.windowSize;this._cameraComponent.orthoHeight=e.height/mI.getScaleY()/2}this.node.getWorldPosition(sJ),this._cameraComponent.node.setWorldPosition(sJ.x,sJ.y,1e3)}}_getViewPriority(){if(this._cameraComponent){var e;let t=null===(e=this.cameraComponent)||void 0===e?void 0:e.priority;return t=this._renderMode===rJ.OVERLAY?t|1<<30:t&~(1<<30),t}return 0}}).prototype,"cameraComponent",[$Q,ZQ],Object.getOwnPropertyDescriptor(tJ.prototype,"cameraComponent"),tJ.prototype),Bc(tJ.prototype,"alignCanvasWithScreen",[QQ],Object.getOwnPropertyDescriptor(tJ.prototype,"alignCanvasWithScreen"),tJ.prototype),nJ=Bc(tJ.prototype,"_cameraComponent",[JQ],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),iJ=Bc(tJ.prototype,"_alignCanvasWithScreen",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),eJ=tJ))||eJ)||eJ)||eJ)||eJ)||eJ)||eJ));var aJ,cJ,lJ,hJ,_J,uJ,pJ,dJ,fJ,mJ,gJ,vJ,yJ,xJ,SJ,CJ,TJ,bJ,EJ,AJ,PJ,wJ,IJ,RJ,DJ,OJ,MJ,NJ,LJ,zJ,FJ,BJ,UJ,GJ,HJ,kJ;i.Canvas=oJ,Tn(e("UIComponent",Zc("cc.UIComponent")(aJ=Qc(wY)(aJ=Jc(110)(aJ=el(aJ=cl(aJ=class extends jh{constructor(...e){super(...e),this._lastParent=null,this.stencilStage=PY.DISABLED}__preload(){this.node._uiProps.uiComp=this}onEnable(){}onDisable(){}onDestroy(){this.node._uiProps.uiComp===this&&(this.node._uiProps.uiComp=null)}updateAssembler(e){}postUpdateAssembler(e){}markForUpdateRenderData(e=!0){}setNodeDirty(){}setTextureDirty(){}})||aJ)||aJ)||aJ)||aJ)||aJ).prototype,"UIComponent",[{name:"_visibility"},{name:"setVisibility"}]),Cn(oJ.prototype,"Canvas.prototype",[{name:"camera",newName:"cameraComponent.camera",customGetter(){return this._cameraComponent.camera}},{name:"clearFlag",newName:"cameraComponent.clearFlags",customGetter(){return this._cameraComponent?this._cameraComponent.clearFlags:0},customSetter(e){this._cameraComponent&&(this._cameraComponent.clearFlags=e)}},{name:"color",newName:"cameraComponent.clearColor",customGetter(){return this._cameraComponent?this._cameraComponent.clearColor:ti.BLACK},customSetter(e){this._cameraComponent&&(this._cameraComponent.clearColor=e)}},{name:"priority",newName:"cameraComponent.priority",customGetter(){return this._cameraComponent?this._cameraComponent.priority:0},customSetter(e){this._cameraComponent&&(this._cameraComponent.priority=e)}},{name:"targetTexture",newName:"cameraComponent.targetTexture",customGetter(){return this._cameraComponent?this._cameraComponent.targetTexture:null},customSetter(e){this._cameraComponent&&(this._cameraComponent.targetTexture=e)}},{name:"visibility",newName:"cameraComponent.visibility",customGetter(){return this._cameraComponent?this._cameraComponent.visibility:0}}]),bn($Y.prototype,"Renderable2D.prototype",[{name:"srcBlendFactor",suggest:"Please use a custom material to specify blending options instead."},{name:"dstBlendFactor",suggest:"Please use a custom material to specify blending options instead."}]),bn(wY.prototype,"UITransform.prototype",[{name:"priority",suggest:"Please use setSiblingIndex to change index of the current node in its parent's children array."}]),i.UITransformComponent=wY,Ae.setClassAlias(wY,"cc.UITransformComponent"),Ae.setClassAlias($Y,"cc.RenderComponent"),i.CanvasComponent=oJ,Ae.setClassAlias(oJ,"cc.CanvasComponent");const VJ=new zZ,jJ="RICHTEXT_CHILD",WJ="RICHTEXT_Image_CHILD",qJ=new be((e=>{if(!i.isValid(e.node))return!1;{const t=e.node.getComponent(YZ);t&&(t.width=0)}return!0}),20),XJ=new be((e=>i.isValid(e.node)),10);function YJ(e){return{node:new Yx(e),comp:null,lineCount:0,styleIndex:0,imageOffset:"",clickParam:"",clickHandler:"",type:e}}function KJ(e,t){let n;e===jJ?n=qJ._get():e===WJ&&(n=XJ._get()),n=n||YJ(e);let i=n.node;return i||(i=new Yx(e)),i.hideFlags|=Dt.Flags.DontSave|Dt.Flags.HideInHierarchy,e===WJ?(n.comp=i.getComponent(VQ)||i.addComponent(VQ),n.comp.spriteFrame=t,n.comp.type=VQ.Type.SLICED,n.comp.sizeMode=VQ.SizeMode.CUSTOM):(n.comp=i.getComponent(m$)||i.addComponent(m$),n.comp.string=t,n.comp.horizontalAlign=l$.LEFT,n.comp.verticalAlign=h$.TOP),i.setPosition(0,0,0),i._uiProps.uiTransformComp.setAnchorPoint(.5,.5),n.node=i,n.lineCount=0,n.styleIndex=0,n.imageOffset="",n.clickParam="",n.clickHandler="",n}let $J=function(t){return e({RichText:t,RichTextComponent:t}),t}((cJ=Zc("cc.RichText"),lJ=pl(),hJ=Jc(110),_J=ll(),uJ=vl(),pJ=Ol(l$),dJ=vl(),fJ=vl(),mJ=vl(),gJ=Ol(hX),vJ=vl(),yJ=vl(),xJ=Ol(u$),SJ=vl(),CJ=vl(),TJ=vl(),bJ=Ol(cX),EJ=vl(),AJ=vl(),cJ(PJ=lJ(PJ=hJ(PJ=_J(PJ=cl((kJ=HJ=class extends jh{get string(){return this._string}set string(e){this._string!==e&&(this._string=e,this._updateRichTextStatus())}get horizontalAlign(){return this._horizontalAlign}set horizontalAlign(e){this.horizontalAlign!==e&&(this._horizontalAlign=e,this._layoutDirty=!0,this._updateRichTextStatus())}get fontSize(){return this._fontSize}set fontSize(e){this._fontSize!==e&&(this._fontSize=e,this._layoutDirty=!0,this._updateRichTextStatus())}get fontFamily(){return this._fontFamily}set fontFamily(e){this._fontFamily!==e&&(this._fontFamily=e,this._layoutDirty=!0,this._updateRichTextStatus())}get font(){return this._font}set font(e){this._font!==e&&(this._font=e,this._layoutDirty=!0,this._font?(this.useSystemFont=!1,this._onTTFLoaded()):this.useSystemFont=!0,this._updateRichTextStatus())}get useSystemFont(){return this._isSystemFontUsed}set useSystemFont(e){this._isSystemFontUsed!==e&&(this._isSystemFontUsed=e,this._layoutDirty=!0,this._updateRichTextStatus())}get cacheMode(){return this._cacheMode}set cacheMode(e){this._cacheMode!==e&&(this._cacheMode=e,this._updateRichTextStatus())}get maxWidth(){return this._maxWidth}set maxWidth(e){this._maxWidth!==e&&(this._maxWidth=e,this._layoutDirty=!0,this._updateRichTextStatus())}get lineHeight(){return this._lineHeight}set lineHeight(e){this._lineHeight!==e&&(this._lineHeight=e,this._layoutDirty=!0,this._updateRichTextStatus())}get imageAtlas(){return this._imageAtlas}set imageAtlas(e){this._imageAtlas!==e&&(this._imageAtlas=e,this._layoutDirty=!0,this._updateRichTextStatus())}get handleTouchEvent(){return this._handleTouchEvent}set handleTouchEvent(e){this._handleTouchEvent!==e&&(this._handleTouchEvent=e,this.enabledInHierarchy&&(this.handleTouchEvent?this._addEventListeners():this._removeEventListeners()))}constructor(){super(),Fc(this,"_lineHeight",IJ,this),Fc(this,"_string",RJ,this),Fc(this,"_horizontalAlign",DJ,this),Fc(this,"_fontSize",OJ,this),Fc(this,"_maxWidth",MJ,this),Fc(this,"_fontFamily",NJ,this),Fc(this,"_font",LJ,this),Fc(this,"_isSystemFontUsed",zJ,this),Fc(this,"_userDefinedFont",FJ,this),Fc(this,"_cacheMode",BJ,this),Fc(this,"_imageAtlas",UJ,this),Fc(this,"_handleTouchEvent",GJ,this),this._textArray=[],this._segments=[],this._labelSegmentsCache=[],this._linesWidth=[],this._lineCount=1,this._labelWidth=0,this._labelHeight=0,this._layoutDirty=!0,this._lineOffsetX=0,this._updateRichTextStatus=void 0,this._updateRichTextStatus=this._updateRichText}onLoad(){this.node.on(cx.LAYER_CHANGED,this._applyLayer,this)}onEnable(){this.handleTouchEvent&&this._addEventListeners(),this._updateRichText(),this._activateChildren(!0)}onDisable(){this.handleTouchEvent&&this._removeEventListeners(),this._activateChildren(!1)}start(){this._onTTFLoaded(),this.node.on(cx.ANCHOR_CHANGED,this._updateRichTextPosition,this)}onRestore(){}onDestroy(){for(const e of this._segments)e.node.removeFromParent(),e.type===jJ?qJ.put(e):e.type===WJ&&XJ.put(e);this.node.off(cx.ANCHOR_CHANGED,this._updateRichTextPosition,this),this.node.off(cx.LAYER_CHANGED,this._applyLayer,this)}_addEventListeners(){this.node.on(cx.TOUCH_END,this._onTouchEnded,this)}_removeEventListeners(){this.node.off(cx.TOUCH_END,this._onTouchEnded,this)}_updateLabelSegmentTextAttributes(){this._segments.forEach((e=>{this._applyTextAttribute(e)}))}_createFontLabel(e){return KJ(jJ,e)}_createImage(e){return KJ(WJ,e)}_onTTFLoaded(){this._font,this._layoutDirty=!0,this._updateRichText()}_measureText(e,t){const n=t=>{let n;return 0===this._labelSegmentsCache.length?(n=this._createFontLabel(t),this._labelSegmentsCache.push(n)):(n=this._labelSegmentsCache[0],n.node.getComponent(m$).string=t),n.styleIndex=e,this._applyTextAttribute(n),n.node._uiProps.uiTransformComp.contentSize.width};return t?n(t):n}_onTouchEnded(e){const t=this.node.getComponents(jh);for(const n of this._segments){const i=n.clickHandler,s=n.clickParam;i&&this._containsTouchLocation(n,e.touch.getUILocation())&&(t.forEach((t=>{const n=t[i];t.enabledInHierarchy&&n&&n.call(t,e,s)})),e.propagationStopped=!0)}}_containsTouchLocation(e,t){const n=e.node.getComponent(wY);return!!n&&n.getBoundingBoxToWorld().contains(t)}_resetState(){const e=this.node.children;for(let t=e.length-1;t>=0;t--){const n=e[t];if(n.name===jJ||n.name===WJ){n.parent===this.node?n.parent=null:e.splice(t,1);const i=YJ(n.name);i.node=n,n.name===jJ?(i.comp=n.getComponent(m$),qJ.put(i)):(i.comp=n.getComponent(VQ),XJ.put(i))}}e.length=0,this._segments.length=0,this._labelSegmentsCache.length=0,this._linesWidth.length=0,this._lineOffsetX=0,this._lineCount=1,this._labelWidth=0,this._labelHeight=0,this._layoutDirty=!0}_activateChildren(e){for(let t=this.node.children.length-1;t>=0;t--){const n=this.node.children[t];n.name!==jJ&&n.name!==WJ||(n.active=e)}}_addLabelSegment(e,t){let n;if(0===this._labelSegmentsCache.length)n=this._createFontLabel(e);else{n=this._labelSegmentsCache.pop();const t=n.node.getComponent(m$);t&&(t.string=e)}return n.styleIndex=t,n.lineCount=this._lineCount,n.node._uiProps.uiTransformComp.setAnchorPoint(0,0),n.node.layer=this.node.layer,this.node.addChild(n.node),this._applyTextAttribute(n),this._segments.push(n),n}_updateRichTextWithMaxWidth(e,t,n){let i,s=t;if(this._lineOffsetX>0&&s+this._lineOffsetX>this._maxWidth){let t=0;for(;this._lineOffsetX<=this._maxWidth;){const i=this._getFirstWordLen(e,t,e.length),r=e.substr(t,i),o=this._measureText(n,r);if(!(this._lineOffsetX+o<=this._maxWidth)){if(t>0){const i=e.substr(0,t);this._addLabelSegment(i,n),e=e.substr(t,e.length),s=this._measureText(n,e)}this._updateLineInfo();break}this._lineOffsetX+=o,t+=i}}if(s>this._maxWidth){const t=HX(e,s,this._maxWidth,this._measureText(n));for(let e=0;e<t.length;++e){const s=t[e];i=this._addLabelSegment(s,n);const r=i.node._uiProps.uiTransformComp.contentSize;this._lineOffsetX+=r.width,t.length>1&&e<t.length-1&&this._updateLineInfo()}}else this._lineOffsetX+=s,this._addLabelSegment(e,n)}_isLastComponentCR(e){return e.length-1===e.lastIndexOf("\n")}_updateLineInfo(){this._linesWidth.push(this._lineOffsetX),this._lineOffsetX=0,this._lineCount++}_needsUpdateTextLayout(e){if(this._layoutDirty||!this._textArray||!e)return!0;if(this._textArray.length!==e.length)return!0;for(let t=0;t<this._textArray.length;t++){const n=this._textArray[t],i=e[t];if(n.text!==i.text)return!0;{const e=n.style,t=i.style;if(e){if(t){if(!!t.outline!=!!e.outline)return!0;if(e.size!==t.size||e.italic!==t.italic||e.isImage!==t.isImage)return!0;if(e.src!==t.src||e.imageAlign!==t.imageAlign||e.imageHeight!==t.imageHeight||e.imageWidth!==t.imageWidth||e.imageOffset!==t.imageOffset)return!0}else if(e.size||e.italic||e.isImage||e.outline)return!0}else if(t&&(t.size||t.italic||t.isImage||t.outline))return!0}}return!1}_addRichTextImageElement(e){if(!e.style)return;const t=e.style,n=t.src,i=this._imageAtlas&&n&&this._imageAtlas.getSpriteFrame(n);if(i){const e=this._createImage(i);switch(e.comp,t.imageAlign){case"top":e.node._uiProps.uiTransformComp.setAnchorPoint(0,1);break;case"center":e.node._uiProps.uiTransformComp.setAnchorPoint(0,.5);break;default:e.node._uiProps.uiTransformComp.setAnchorPoint(0,0)}t.imageOffset&&(e.imageOffset=t.imageOffset),e.node.layer=this.node.layer,this.node.addChild(e.node),this._segments.push(e);const n=i.rect.clone();let s=1,r=n.width,o=n.height;const a=t.imageWidth||0,c=t.imageHeight||0;c>0?(s=c/o,r*=s,o*=s):(s=this._lineHeight/o,r*=s,o*=s),a>0&&(r=a),this._maxWidth>0?(this._lineOffsetX+r>this._maxWidth&&this._updateLineInfo(),this._lineOffsetX+=r):(this._lineOffsetX+=r,this._lineOffsetX>this._labelWidth&&(this._labelWidth=this._lineOffsetX)),e.node._uiProps.uiTransformComp.setContentSize(r,o),e.lineCount=this._lineCount,e.clickHandler="",e.clickParam="";const l=t.event;l&&(e.clickHandler=l.click,e.clickParam=l.param)}else T(4400)}_updateRichText(){if(!this.enabledInHierarchy)return;const e=VJ.parse(this._string);if(!this._needsUpdateTextLayout(e))return this._textArray=e.slice(),void this._updateLabelSegmentTextAttributes();this._textArray=e.slice(),this._resetState();let t,n=!1;for(let e=0;e<this._textArray.length;++e){const i=this._textArray[e],s=i.text;if(void 0===s)continue;if(""===s){if(i.style&&i.style.isNewLine){this._updateLineInfo();continue}if(i.style&&i.style.isImage&&this._imageAtlas){this._addRichTextImageElement(i);continue}}const r=s.split("\n");for(let i=0;i<r.length;++i){const o=r[i];if(""!==o)if(n=!1,this._maxWidth>0){const t=this._measureText(e,o);this._updateRichTextWithMaxWidth(o,t,e),r.length>1&&i<r.length-1&&this._updateLineInfo()}else t=this._addLabelSegment(o,e),this._lineOffsetX+=t.node._uiProps.uiTransformComp.width,this._lineOffsetX>this._labelWidth&&(this._labelWidth=this._lineOffsetX),r.length>1&&i<r.length-1&&this._updateLineInfo();else{if(this._isLastComponentCR(s)&&i===r.length-1)continue;this._updateLineInfo(),n=!0}}}n||this._linesWidth.push(this._lineOffsetX),this._maxWidth>0&&(this._labelWidth=this._maxWidth),this._labelHeight=(this._lineCount+wX)*this._lineHeight,this.node._uiProps.uiTransformComp.setContentSize(this._labelWidth,this._labelHeight),this._updateRichTextPosition(),this._layoutDirty=!1}_getFirstWordLen(e,t,n){let i=e.charAt(t);if(FX(i)||BX(i))return 1;let s=1;for(let r=t+1;r<n&&(i=e.charAt(r),!BX(i)&&!FX(i));++r)s++;return s}_updateRichTextPosition(){let e=0,t=1;const n=this._lineCount,i=this.node._uiProps.uiTransformComp,s=i.anchorX,r=i.anchorY;for(let i=0;i<this._segments.length;++i){const o=this._segments[i],a=o.lineCount;a>t&&(e=0,t=a);let c=this._labelWidth*(.5*this._horizontalAlign-s);switch(this._horizontalAlign){case l$.LEFT:break;case l$.CENTER:c-=this._linesWidth[a-1]/2;break;case l$.RIGHT:c-=this._linesWidth[a-1]}const l=o.node.position;if(o.node.setPosition(e+c,this._lineHeight*(n-a)-this._labelHeight*r,l.z),a===t&&(e+=o.node._uiProps.uiTransformComp.width),o.node.getComponent(VQ)){const e=o.node.position.clone(),t=this._lineHeight,n=this._lineHeight*(1+wX);switch(o.node._uiProps.uiTransformComp.anchorY){case 1:e.y+=t+(n-t)/2;break;case.5:e.y+=n/2;break;default:e.y+=(n-t)/2}if(o.imageOffset){const t=o.imageOffset.split(",");if(1===t.length&&t[0]){const n=parseFloat(t[0]);Number.isInteger(n)&&(e.y+=n)}else if(2===t.length){const n=parseFloat(t[0]),i=parseFloat(t[1]);Number.isInteger(n)&&(e.x+=n),Number.isInteger(i)&&(e.y+=i)}}o.node.position=e}const h=o.node.getComponent(YZ);if(h){const e=o.node.position.clone();e.y-=h.width,o.node.position=e}}}_convertLiteralColorValue(e){const t=e.toUpperCase();return ti[t]?ti[t]:(new ti).fromHEX(e)}_applyTextAttribute(e){const t=e.node.getComponent(m$);if(!t)return;this._resetLabelState(t);const n=e.styleIndex;let i;if(this._textArray[n]&&(i=this._textArray[n].style),i){if(t.color=this._convertLiteralColorValue(i.color||"white"),t.isBold=!!i.bold,t.isItalic=!!i.italic,t.isUnderline=!!i.underline,i.outline){let t=e.node.getComponent(YZ);t||(t=e.node.addComponent(YZ)),t.color=this._convertLiteralColorValue(i.outline.color),t.width=i.outline.width}t.fontSize=i.size||this._fontSize,e.clickHandler="",e.clickParam="";const n=i.event;n&&(e.clickHandler=n.click||"",e.clickParam=n.param||"")}t.cacheMode=this._cacheMode,this._font instanceof hX&&!this._isSystemFontUsed?t.font=this._font:t.fontFamily=this._fontFamily,t.useSystemFont=this._isSystemFontUsed,t.lineHeight=this._lineHeight,t.updateRenderData(!0);const s=t._assembler;s&&s.updateRenderData(t)}_applyLayer(){for(const e of this._segments)e.node.layer=this.node.layer}_resetLabelState(e){e.fontSize=this._fontSize,e.color=ti.WHITE,e.isBold=!1,e.isItalic=!1,e.isUnderline=!1}},HJ.HorizontalAlign=l$,HJ.VerticalAlign=h$,Bc((wJ=kJ).prototype,"string",[Al,uJ],Object.getOwnPropertyDescriptor(wJ.prototype,"string"),wJ.prototype),Bc(wJ.prototype,"horizontalAlign",[pJ,dJ],Object.getOwnPropertyDescriptor(wJ.prototype,"horizontalAlign"),wJ.prototype),Bc(wJ.prototype,"fontSize",[fJ],Object.getOwnPropertyDescriptor(wJ.prototype,"fontSize"),wJ.prototype),Bc(wJ.prototype,"fontFamily",[mJ],Object.getOwnPropertyDescriptor(wJ.prototype,"fontFamily"),wJ.prototype),Bc(wJ.prototype,"font",[gJ,vJ],Object.getOwnPropertyDescriptor(wJ.prototype,"font"),wJ.prototype),Bc(wJ.prototype,"useSystemFont",[yJ],Object.getOwnPropertyDescriptor(wJ.prototype,"useSystemFont"),wJ.prototype),Bc(wJ.prototype,"cacheMode",[xJ,SJ],Object.getOwnPropertyDescriptor(wJ.prototype,"cacheMode"),wJ.prototype),Bc(wJ.prototype,"maxWidth",[CJ],Object.getOwnPropertyDescriptor(wJ.prototype,"maxWidth"),wJ.prototype),Bc(wJ.prototype,"lineHeight",[TJ],Object.getOwnPropertyDescriptor(wJ.prototype,"lineHeight"),wJ.prototype),Bc(wJ.prototype,"imageAtlas",[bJ,EJ],Object.getOwnPropertyDescriptor(wJ.prototype,"imageAtlas"),wJ.prototype),Bc(wJ.prototype,"handleTouchEvent",[AJ],Object.getOwnPropertyDescriptor(wJ.prototype,"handleTouchEvent"),wJ.prototype),IJ=Bc(wJ.prototype,"_lineHeight",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 40}}),RJ=Bc(wJ.prototype,"_string",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return"<color=#00ff00>Rich</color><color=#0fffff>Text</color>"}}),DJ=Bc(wJ.prototype,"_horizontalAlign",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return l$.LEFT}}),OJ=Bc(wJ.prototype,"_fontSize",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 40}}),MJ=Bc(wJ.prototype,"_maxWidth",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),NJ=Bc(wJ.prototype,"_fontFamily",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return"Arial"}}),LJ=Bc(wJ.prototype,"_font",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),zJ=Bc(wJ.prototype,"_isSystemFontUsed",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),FJ=Bc(wJ.prototype,"_userDefinedFont",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),BJ=Bc(wJ.prototype,"_cacheMode",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return u$.NONE}}),UJ=Bc(wJ.prototype,"_imageAtlas",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),GJ=Bc(wJ.prototype,"_handleTouchEvent",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),PJ=wJ))||PJ)||PJ)||PJ)||PJ)||PJ));var ZJ;let QJ=function(t){return e({UIMeshRenderer:t,UIModelComponent:t}),t}(Zc("cc.UIMeshRenderer")(ZJ=pl()(ZJ=Jc(110)(ZJ=ll()(ZJ=class extends jh{constructor(...e){super(...e),this._models=null,this._modelComponent=null,this.stencilStage=PY.DISABLED}get modelComponent(){return this._modelComponent}__preload(){this.node._uiProps.uiComp=this}onLoad(){this.node._uiProps.uiTransformComp||this.node.addComponent("cc.UITransform"),this._modelComponent=this.getComponent("cc.RenderableComponent"),this._modelComponent?this._models=this._modelComponent._collectModels():console.warn(`node '${this.node&&this.node.name}' doesn't have any renderable component`)}onDestroy(){this.node._uiProps.uiComp===this&&(this.node._uiProps.uiComp=null),this._modelComponent=this.getComponent("cc.RenderableComponent"),this._modelComponent&&(this._modelComponent._sceneGetter=null,this._models=null)}updateAssembler(e){if(this._models){this._modelComponent._detachFromScene();for(const t of this._models)e.commitModel.call(e,this,t,this._modelComponent.material);return!0}return!1}postUpdateAssembler(e){}update(){this._fitUIRenderQueue()}_fitUIRenderQueue(){if(!this._modelComponent)return;const e=this._modelComponent.sharedMaterials.length;for(let t=0;t<e;t++){const e=this._modelComponent.getMaterialInstance(t);if(null==e)continue;const n=e.passes,i=n.length;for(let t=0;t<i;t++)n[t]._priority=pd.MAX-11,e.recompileShaders({CC_FORCE_FORWARD_SHADING:!0},t)}}markForUpdateRenderData(e=!0){}setNodeDirty(){}setTextureDirty(){}})||ZJ)||ZJ)||ZJ)||ZJ);const JJ=_d.Enum.NONE|_d.Enum.UI_3D;class e0{get native(){return this._nativeObj}get inputAssembler(){return this._inputAssembler}set inputAssembler(e){this._inputAssembler=e,this._nativeObj.inputAssembler=e}get descriptorSet(){return this._descriptorSet}set descriptorSet(e){this._descriptorSet=e,this._nativeObj.descriptorSet=e}get visFlags(){return this._visFlags}set visFlags(e){this._visFlags=e,this._nativeObj.visFlags=e}get passes(){return this._passes}get shaders(){return this._shaders}constructor(){this.bufferBatch=null,this.camera=null,this.renderScene=null,this.model=null,this.texture=null,this.sampler=null,this.useLocalData=null,this.isStatic=!1,this.textureHash=0,this.samplerHash=0,this._passes=[],this._shaders=[],this._visFlags=JJ,this._inputAssembler=null,this._descriptorSet=null,this._nativeObj=new Ji,this._nativeObj.visFlags=this._visFlags}destroy(e){this._passes=[],this._nativeObj=null}clear(){this.bufferBatch=null,this.inputAssembler=null,this.descriptorSet=null,this.camera=null,this.texture=null,this.sampler=null,this.model=null,this.isStatic=!1,this.useLocalData=null,this.visFlags=JJ,this.renderScene=null}fillPasses(e,t,n,s,r,o,a){if(e){const a=e.passes;if(!a)return;let c=0,l=!1;this._shaders.length=a.length;for(let e=0;e<a.length;e++){this._passes[e]||(this._passes[e]=new ag(i.director.root));const h=a[e],_=this._passes[e];h.update(),t||(t=h.depthStencilState,n=0),s||(s=h.blendState,r=0),-1===r&&(r=0),c=n<<16|r,_._initPassFromTarget(h,t,s,c),this._shaders[e]=_.getShaderVariant(o),l=!0}if(l){const e=[],t=this._passes;for(let n=0;n<t.length;n++)e.push(t[n].native);this._nativeObj.passes=e,this._nativeObj.shaders=this._shaders}}}}var t0,n0,i0,s0,r0,o0,a0;e("UIDrawBatch",e0);let c0=function(t){return e({UIStaticBatch:t,UIStaticBatchComponent:t}),t}((t0=Zc("cc.UIStaticBatch"),n0=pl(),i0=ll(),s0=Jc(110),r0=fl(),t0(o0=n0(o0=i0(o0=s0((Bc((a0=class extends $Y{constructor(...e){super(...e),this._init=!1,this._bufferAccessor=null,this._dirty=!0,this._uiDrawBatchList=[]}get color(){return this._color}set color(e){this._color!==e&&this._color.set(e)}get drawBatchList(){return this._uiDrawBatchList}onLoad(){}onDestroy(){}updateAssembler(e){}postUpdateAssembler(e){}markAsDirty(){}_requireDrawBatch(){const e=new e0;return e.isStatic=!0,this._uiDrawBatchList.push(e),e}_clearData(){if(this._bufferAccessor){this._bufferAccessor.reset();const e=this._getBatcher();for(let t=0;t<this._uiDrawBatchList.length;t++)this._uiDrawBatchList[t].destroy(e)}this._uiDrawBatchList.length=0,this._init=!1}_getBatcher(){return aI.root&&aI.root.batcher2D?aI.root.batcher2D:(T(9301),null)}}).prototype,"color",[Ml,r0],Object.getOwnPropertyDescriptor(a0.prototype,"color"),a0.prototype),o0=a0))||o0)||o0)||o0)||o0));var l0,h0,_0,u0,p0,d0,f0,m0,g0,v0,y0,x0,S0;let C0=e("LabelShadow",(l0=Zc("cc.LabelShadow"),h0=pl(),_0=Jc(110),u0=ll(),p0=Qc(m$),d0=vl(),f0=vl(),m0=vl(),l0(g0=h0(g0=_0(g0=u0(g0=p0(g0=cl((y0=Bc((v0=class extends jh{constructor(...e){super(...e),Fc(this,"_color",y0,this),Fc(this,"_offset",x0,this),Fc(this,"_blur",S0,this)}get color(){return this._color}set color(e){this._color!==e&&(this._color.set(e),this._updateRenderData())}get offset(){return this._offset}set offset(e){this._offset=e,this._updateRenderData()}get blur(){return this._blur}set blur(e){this._blur=e,this._updateRenderData()}onEnable(){this._updateRenderData()}onDisable(){this._updateRenderData()}_updateRenderData(){const e=this.node.getComponent(m$);e&&e.updateRenderData(!0)}}).prototype,"_color",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new ti(0,0,0,255)}}),x0=Bc(v0.prototype,"_offset",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new bi(2,2)}}),S0=Bc(v0.prototype,"_blur",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 2}}),Bc(v0.prototype,"color",[d0],Object.getOwnPropertyDescriptor(v0.prototype,"color"),v0.prototype),Bc(v0.prototype,"offset",[f0],Object.getOwnPropertyDescriptor(v0.prototype,"offset"),v0.prototype),Bc(v0.prototype,"blur",[m0],Object.getOwnPropertyDescriptor(v0.prototype,"blur"),v0.prototype),g0=v0))||g0)||g0)||g0)||g0)||g0)||g0));var T0,b0,E0,A0,P0,w0,I0,R0;let D0=function(t){return e({UIOpacity:t,UIOpacityComponent:t}),t}((T0=Zc("cc.UIOpacity"),b0=pl(),E0=Jc(110),A0=ll(),P0=vl(),T0(w0=b0(w0=E0(w0=A0(w0=cl((Bc((I0=class extends jh{constructor(...e){super(...e),Fc(this,"_opacity",R0,this)}get opacity(){return this._opacity}set opacity(e){this._opacity!==e&&(e=Ke(e,0,255),this._opacity=e,this.node._uiProps.localOpacity=e/255)}onEnable(){this.node._uiProps.localOpacity=this._opacity/255}onDisable(){this.node._uiProps.localOpacity=1}}).prototype,"opacity",[dl,P0],Object.getOwnPropertyDescriptor(I0.prototype,"opacity"),I0.prototype),R0=Bc(I0.prototype,"_opacity",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 255}}),w0=I0))||w0)||w0)||w0)||w0)||w0));i.MaskComponent=MZ,Ae.setClassAlias(MZ,"cc.MaskComponent"),i.LabelComponent=m$,Ae.setClassAlias(m$,"cc.LabelComponent"),i.LabelOutlineComponent=YZ,Ae.setClassAlias(YZ,"cc.LabelOutlineComponent"),i.RichTextComponent=$J,Ae.setClassAlias($J,"cc.RichTextComponent"),i.SpriteComponent=VQ,Ae.setClassAlias(VQ,"cc.SpriteComponent"),i.UIModelComponent=QJ,Ae.setClassAlias(QJ,"cc.UIModelComponent"),i.GraphicsComponent=nZ,Ae.setClassAlias(nZ,"cc.GraphicsComponent"),Ae.setClassAlias(c0,"cc.UIStaticBatchComponent"),Ae.setClassAlias(D0,"cc.UIOpacityComponent");class O0{constructor(e,t,n){this.i=void 0,this.x=void 0,this.y=void 0,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1,this.i=e,this.x=t,this.y=n}}function M0(e,t,n,i,s){let r=0,o=null;if(s===function(e,t,n,i){let s=0;for(let r=t,o=n-i;r<n;r+=i)s+=(e[o]-e[r])*(e[r+1]+e[o+1]),o=r;return s}(e,t,n,i)>0)for(r=t;r<n;r+=i)o=Z0(r,e[r],e[r+1],o);else for(r=n-i;r>=t;r-=i)o=Z0(r,e[r],e[r+1],o);return o&&X0(o,o.next)&&(Q0(o),o=o.next),o}function N0(e,t=null){if(!e)return e;t||(t=e);let n=e,i=!1;do{if(i=!1,n.steiner||!X0(n,n.next)&&0!==q0(n.prev,n,n.next))n=n.next;else{if(Q0(n),n=t=n.prev,n===n.next)return null;i=!0}}while(i||n!==t);return t}function L0(e,t,n,i,s,r,o=0){if(!e)return;!o&&r&&function(e,t,n,i){let s=e;do{null===s.z&&(s.z=k0(s.x,s.y,t,n,i)),s.prevZ=s.prev,s.nextZ=s.next,s=s.next}while(s!==e);s.prevZ.nextZ=null,s.prevZ=null,function(e){let t=0,n=null,i=null,s=null,r=null,o=0,a=0,c=0,l=1;do{for(n=e,e=null,r=null,o=0;n;){for(o++,i=n,a=0,t=0;t<l&&(a++,i=i.nextZ,i);t++);for(c=l;a>0||c>0&&i;)0===a?(s=i,i=i.nextZ,c--):0!==c&&i?n.z<=i.z?(s=n,n=n.nextZ,a--):(s=i,i=i.nextZ,c--):(s=n,n=n.nextZ,a--),r?r.nextZ=s:e=s,s.prevZ=r,r=s;n=i}r.nextZ=null,l*=2}while(o>1)}(s)}(e,i,s,r);let a=e,c=null,l=null;for(;e.prev!==e.next;)if(c=e.prev,l=e.next,r?F0(e,i,s,r):z0(e))t.push(c.i/n),t.push(e.i/n),t.push(l.i/n),Q0(e),e=l.next,a=l.next;else if((e=l)===a){o?1===o?L0(e=B0(e,t,n),t,n,i,s,r,2):2===o&&U0(e,t,n,i,s,r):L0(N0(e),t,n,i,s,r,1);break}}function z0(e){const t=e.prev,n=e,i=e.next;if(q0(t,n,i)>=0)return!1;let s=e.next.next;for(;s!==e.prev;){if(j0(t.x,t.y,n.x,n.y,i.x,i.y,s.x,s.y)&&q0(s.prev,s,s.next)>=0)return!1;s=s.next}return!0}function F0(e,t,n,i){const s=e.prev,r=e,o=e.next;if(q0(s,r,o)>=0)return!1;const a=s.x<r.x?s.x<o.x?s.x:o.x:r.x<o.x?r.x:o.x,c=s.y<r.y?s.y<o.y?s.y:o.y:r.y<o.y?r.y:o.y,l=s.x>r.x?s.x>o.x?s.x:o.x:r.x>o.x?r.x:o.x,h=s.y>r.y?s.y>o.y?s.y:o.y:r.y>o.y?r.y:o.y,_=k0(a,c,t,n,i),u=k0(l,h,t,n,i);let p=e.nextZ;for(;p&&p.z<=u;){if(p!==e.prev&&p!==e.next&&j0(s.x,s.y,r.x,r.y,o.x,o.y,p.x,p.y)&&q0(p.prev,p,p.next)>=0)return!1;p=p.nextZ}for(p=e.prevZ;p&&p.z>=_;){if(p!==e.prev&&p!==e.next&&j0(s.x,s.y,r.x,r.y,o.x,o.y,p.x,p.y)&&q0(p.prev,p,p.next)>=0)return!1;p=p.prevZ}return!0}function B0(e,t,n){let i=e;do{const s=i.prev,r=i.next.next;!X0(s,r)&&Y0(s,i,i.next,r)&&K0(s,r)&&K0(r,s)&&(t.push(s.i/n),t.push(i.i/n),t.push(r.i/n),Q0(i),Q0(i.next),i=e=r),i=i.next}while(i!==e);return i}function U0(e,t,n,i,s,r){let o=e;do{let e=o.next.next;for(;e!==o.prev;){if(o.i!==e.i&&W0(o,e)){let a=$0(o,e);return o=N0(o,o.next),a=N0(a,a.next),L0(o,t,n,i,s,r),void L0(a,t,n,i,s,r)}e=e.next}o=o.next}while(o!==e)}function G0(e,t){return e.x-t.x}function H0(e,t){if(t=function(e,t){let n=t;const i=e.x,s=e.y;let r=-1/0,o=null;do{if(s<=n.y&&s>=n.next.y){const e=n.x+(s-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(e<=i&&e>r){if(r=e,e===i){if(s===n.y)return n;if(s===n.next.y)return n.next}o=n.x<n.next.x?n:n.next}}n=n.next}while(n!==t);if(!o)return null;if(i===r)return o.prev;const a=o,c=o.x,l=o.y;let h,_=1/0;for(n=o.next;n!==a;)i>=n.x&&n.x>=c&&j0(s<l?i:r,s,c,l,s<l?r:i,s,n.x,n.y)&&(h=Math.abs(s-n.y)/(i-n.x),(h<_||h===_&&n.x>o.x)&&K0(n,e)&&(o=n,_=h)),n=n.next;return o}(e,t)){const n=$0(t,e);N0(n,n.next)}}function k0(e,t,n,i,s){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-n)/s)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-i)/s)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function V0(e){let t=e,n=e;do{t.x<n.x&&(n=t),t=t.next}while(t!==e);return n}function j0(e,t,n,i,s,r,o,a){return(s-o)*(t-a)-(e-o)*(r-a)>=0&&(e-o)*(i-a)-(n-o)*(t-a)>=0&&(n-o)*(r-a)-(s-o)*(i-a)>=0}function W0(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){let n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&Y0(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}(e,t)&&K0(e,t)&&K0(t,e)&&function(e,t){let n=e,i=!1;const s=(e.x+t.x)/2,r=(e.y+t.y)/2;do{n.y>r!=n.next.y>r&&s<(n.next.x-n.x)*(r-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next}while(n!==e);return i}(e,t)}function q0(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function X0(e,t){return e.x===t.x&&e.y===t.y}function Y0(e,t,n,i){return!!(X0(e,t)&&X0(n,i)||X0(e,i)&&X0(n,t))||q0(e,t,n)>0!=q0(e,t,i)>0&&q0(n,i,e)>0!=q0(n,i,t)>0}function K0(e,t){return q0(e.prev,e,e.next)<0?q0(e,t,e.next)>=0&&q0(e,e.prev,t)>=0:q0(e,t,e.prev)<0||q0(e,e.next,t)<0}function $0(e,t){const n=new O0(e.i,e.x,e.y),i=new O0(t.i,t.x,t.y),s=e.next,r=t.prev;return e.next=t,t.prev=e,n.next=s,s.prev=n,i.next=n,n.prev=i,r.next=i,i.prev=r,i}function Z0(e,t,n,i){const s=new O0(e,t,n);return i?(s.next=i.next,s.prev=i,i.next.prev=s,i.next=s):(s.prev=s,s.next=s),s}function Q0(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function J0(e,t,n){n=n||3;const i=t?t.length:0,s=i?t[0]*n:e.length;let r=M0(e,0,s,n,!0);const o=[];if(!r)return o;let a=0,c=0,l=0,h=0,_=0,u=0,p=0;if(i&&(r=function(e,t,n,i){const s=[];let r=0,o=0,a=0,c=0,l=null;for(r=0,o=t.length;r<o;r++)a=t[r]*i,c=r<o-1?t[r+1]*i:e.length,l=M0(e,a,c,i,!1),l&&(l===l.next&&(l.steiner=!0),s.push(V0(l)));if(s.sort(G0),!n)return n;for(r=0;r<s.length;r++)H0(s[r],n),n=N0(n,n.next);return n}(e,t,r,n)),e.length>80*n){a=l=e[0],c=h=e[1];for(let t=n;t<s;t+=n)_=e[t],u=e[t+1],_<a&&(a=_),u<c&&(c=u),_>l&&(l=_),u>h&&(h=u);p=Math.max(l-a,h-c)}return L0(r,o,n,a,c,p),o}const e1=Math.PI,t1=Math.min,n1=Math.max,i1=Math.ceil,s1=Math.acos,r1=Math.cos,o1=Math.sin,a1=Math.atan2;let c1=null,l1=null;const h1=new ti,_1=[];for(let e=0;e<4;e++)_1.push(new ri);function u1(e,t,n){return e<t?t:e>n?n:e}const p1={useModel:!0,updateRenderData(e){},fillBuffers(e,t){},renderIA(e,t){},getRenderData(e,t){if(!l1)return null;const n=l1.getRenderDataList();let i=n[l1.dataOffset];if(!i)return null;let s=i;const r=s?s.vertexStart+t:0;return(r>65535||3*r>131070)&&(++l1.dataOffset,l1.dataOffset<n.length?i=n[l1.dataOffset]:(i=l1.requestRenderData(),n[l1.dataOffset]=i),s=i),s&&s.vertexCount<r&&s.request(t,3*t),i},stroke(e){ti.copy(h1,e.strokeColor),e.impl&&(this._flattenPaths(e.impl),this._expandStroke(e),e.impl.updatePathOffset=!0,this.end(e))},fill(e){ti.copy(h1,e.fillColor),this._expandFill(e),e.impl&&(e.impl.updatePathOffset=!0),this.end(e)},end(e){e.markForUpdateRenderData()},_expandStroke(e){const t=.5*e.lineWidth,n=e.lineCap,i=e.lineJoin,s=e.miterLimit;if(l1=e.impl,!l1)return;const r=function(e,t,n){const i=2*s1(e/(e+n));return n1(2,i1(t/i))}(t,e1,l1.tessTol);this._calculateJoins(l1,t,i,s);const o=l1.paths;let a=0;for(let e=l1.pathOffset,t=l1.pathLength;e<t;e++){const t=o[e],s=t.points.length;i===d$.ROUND?a+=2*(s+t.bevel*(r+2)+1):a+=2*(s+5*t.bevel+1),t.closed||(n===p$.ROUND?a+=2*(2*r+2):a+=12)}const c=c1=this.getRenderData(e,a);if(!c)return;const l=c.vData,h=c.iData;for(let e=l1.pathOffset,s=l1.pathLength;e<s;e++){const s=o[e],a=s.points,_=a.length,u=c.vertexStart;let p,d,f=0,m=0;const g=s.closed;if(g?(p=a[_-1],d=a[0],f=0,m=_):(p=a[0],d=a[1],f=1,m=_-1),d=d||p,!g){const e=new P$(d.x,d.y);e.subtract(p),e.normalize();const i=e.x,s=e.y;n===p$.BUTT?this._buttCapStart(p,i,s,t,0):n===p$.SQUARE?this._buttCapStart(p,i,s,t,t):n===p$.ROUND&&this._roundCapStart(p,i,s,t,r)}for(let e=f;e<m;++e)i===d$.ROUND?this._roundJoin(p,d,t,t,r):0!=(d.flags&(f$.PT_BEVEL|f$.PT_INNERBEVEL))?this._bevelJoin(p,d,t,t):(this._vSet(d.x+d.dmx*t,d.y+d.dmy*t,1),this._vSet(d.x-d.dmx*t,d.y-d.dmy*t,-1)),p=d,d=a[e+1];if(g){const e=8*u;this._vSet(l[e],l[e+1],1),this._vSet(l[e+8],l[e+8+1],-1)}else{const e=new P$(d.x,d.y);e.subtract(p),e.normalize();const i=e.x,s=e.y;n===p$.BUTT?this._buttCapEnd(d,i,s,t,0):n===p$.SQUARE?this._buttCapEnd(d,i,s,t,t):n===p$.ROUND&&this._roundCapEnd(d,i,s,t,r)}let v=c.indexStart;for(let e=u+2,t=c.vertexStart;e<t;e++)h[v++]=e-2,h[v++]=e-1,h[v++]=e;c.indexStart=v}c1=null,l1=null},_expandFill(e){if(l1=e.impl,!l1)return;const t=l1.paths;let n=0;for(let e=l1.pathOffset,i=l1.pathLength;e<i;e++)n+=t[e].points.length;const i=c1=this.getRenderData(e,n);if(!i)return;const s=i,r=s.vData,o=s.iData;for(let e=l1.pathOffset,n=l1.pathLength;e<n;e++){const n=t[e],a=n.points,c=a.length;if(0===c)continue;const l=i.vertexStart;for(let e=0;e<c;++e)this._vSet(a[e].x,a[e].y);let h=i.indexStart;if(n.complex){const e=[];for(let t=l,n=i.vertexStart;t<n;t++){let n=8*t;e.push(r[n++]),e.push(r[n++]),e.push(r[n++])}const t=J0(e,null,3);if(!t||0===t.length)continue;for(let e=0,n=t.length;e<n;e++)o[h++]=t[e]+l}else{const e=l;for(let t=l+2,n=s.vertexStart;t<n;t++)o[h++]=e,o[h++]=t-1,o[h++]=t}s.indexStart=h}c1=null,l1=null},_calculateJoins(e,t,n,i){let s=0;t>0&&(s=1/t);const r=e.paths;for(let t=e.pathOffset,o=e.pathLength;t<o;t++){const e=r[t],o=e.points,a=o.length;let c=o[a-1],l=o[0];e.bevel=0;for(let t=0;t<a;t++){let r=0,a=0,h=0;const _=c.dy,u=-c.dx,p=l.dy,d=-l.dx;if(l.dmx=.5*(_+p),l.dmy=.5*(u+d),r=l.dmx*l.dmx+l.dmy*l.dmy,r>1e-6){let e=1/r;e>600&&(e=600),l.dmx*=e,l.dmy*=e}a=l.dx*c.dy-c.dx*l.dy,a>0&&(l.flags|=f$.PT_LEFT),h=n1(11,t1(c.len,l.len)*s),r*h*h<1&&(l.flags|=f$.PT_INNERBEVEL),l.flags&f$.PT_CORNER&&(r*i*i<1||n===d$.BEVEL||n===d$.ROUND)&&(l.flags|=f$.PT_BEVEL),0!=(l.flags&(f$.PT_BEVEL|f$.PT_INNERBEVEL))&&e.bevel++,c=l,l=o[t+1]}}},_flattenPaths(e){const t=e.paths;for(let n=e.pathOffset,i=e.pathLength;n<i;n++){const e=t[n],i=e.points;let s=i[i.length-1],r=i[0];i.length>2&&s.equals(r)&&(e.closed=!0,i.pop(),s=i[i.length-1]);for(let e=0,t=i.length;e<t;e++){const t=new P$(r.x,r.y);t.subtract(s),s.len=t.length(),(t.x||t.y)&&t.normalize(),s.dx=t.x,s.dy=t.y,s=r,r=i[e+1]}}},_chooseBevel(e,t,n,i){const s=n.x,r=n.y;let o=0,a=0,c=0,l=0;return 0!==e?(o=s+t.dy*i,a=r-t.dx*i,c=s+n.dy*i,l=r-n.dx*i):(o=c=s+n.dmx*i,a=l=r+n.dmy*i),[o,a,c,l]},_buttCapStart(e,t,n,i,s){const r=e.x-t*s,o=e.y-n*s,a=n,c=-t;this._vSet(r+a*i,o+c*i,1),this._vSet(r-a*i,o-c*i,-1)},_buttCapEnd(e,t,n,i,s){const r=e.x+t*s,o=e.y+n*s,a=n,c=-t;this._vSet(r+a*i,o+c*i,1),this._vSet(r-a*i,o-c*i,-1)},_roundCapStart(e,t,n,i,s){const r=e.x,o=e.y,a=n,c=-t;for(let e=0;e<s;e++){const l=e/(s-1)*e1,h=r1(l)*i,_=o1(l)*i;this._vSet(r-a*h-t*_,o-c*h-n*_,1),this._vSet(r,o,0)}this._vSet(r+a*i,o+c*i,1),this._vSet(r-a*i,o-c*i,-1)},_roundCapEnd(e,t,n,i,s){const r=e.x,o=e.y,a=n,c=-t;this._vSet(r+a*i,o+c*i,1),this._vSet(r-a*i,o-c*i,-1);for(let e=0;e<s;e++){const l=e/(s-1)*e1,h=r1(l)*i,_=o1(l)*i;this._vSet(r,o,0),this._vSet(r-a*h+t*_,o-c*h+n*_,1)}},_roundJoin(e,t,n,i,s){const r=e.dy,o=-e.dx,a=t.dy,c=-t.dx,l=t.x,h=t.y;if(0!=(t.flags&f$.PT_LEFT)){const _=this._chooseBevel(t.flags&f$.PT_INNERBEVEL,e,t,n),u=_[0],p=_[1],d=_[2],f=_[3],m=a1(-o,-r);let g=a1(-c,-a);g>m&&(g-=2*e1),this._vSet(u,p,1),this._vSet(l-r*i,t.y-o*i,-1);const v=u1(i1((m-g)/e1)*s,2,s);for(let e=0;e<v;e++){const t=m+e/(v-1)*(g-m),n=l+r1(t)*i,s=h+o1(t)*i;this._vSet(l,h,0),this._vSet(n,s,-1)}this._vSet(d,f,1),this._vSet(l-a*i,h-c*i,-1)}else{const _=this._chooseBevel(t.flags&f$.PT_INNERBEVEL,e,t,-i),u=_[0],p=_[1],d=_[2],f=_[3],m=a1(o,r);let g=a1(c,a);g<m&&(g+=2*e1),this._vSet(l+r*i,h+o*i,1),this._vSet(u,p,-1);const v=u1(i1((g-m)/e1)*s,2,s);for(let e=0;e<v;e++){const t=m+e/(v-1)*(g-m),i=l+r1(t)*n,s=h+o1(t)*n;this._vSet(i,s,1),this._vSet(l,h,0)}this._vSet(l+a*i,h+c*i,1),this._vSet(d,f,-1)}},_bevelJoin(e,t,n,i){let s=0,r=0,o=0,a=0,c=0,l=0,h=0,_=0;const u=e.dy,p=-e.dx,d=t.dy,f=-t.dx;if(t.flags&f$.PT_LEFT){const s=this._chooseBevel(t.flags&f$.PT_INNERBEVEL,e,t,n);c=s[0],l=s[1],h=s[2],_=s[3],this._vSet(c,l,1),this._vSet(t.x-u*i,t.y-p*i,-1),this._vSet(h,_,1),this._vSet(t.x-d*i,t.y-f*i,-1)}else{const c=this._chooseBevel(t.flags&f$.PT_INNERBEVEL,e,t,-i);s=c[0],r=c[1],o=c[2],a=c[3],this._vSet(t.x+u*n,t.y+p*n,1),this._vSet(s,r,-1),this._vSet(t.x+d*n,t.y+f*n,1),this._vSet(o,a,-1)}},_vSet(e,t,n=0){if(!c1)return;const i=c1;let s=8*i.vertexStart;const r=i.vData;r[s++]=e,r[s++]=t,r[s++]=0,ti.toArray(r,h1,s),s+=4,r[s++]=n,i.vertexStart++}},d1=e("graphicsAssembler",{getAssembler:()=>p1});nZ.Assembler=d1;class f1{constructor(){this.char="",this.valid=!0,this.x=0,this.y=0,this.line=0,this.hash=""}}const m1=new Mi;let g1=null,v1=null;const y1=[],x1=[],S1=[],C1=[],T1=new Di,b1=new Di,E1=new bi;let A1=null,P1=0,w1=0,I1=0,R1=0,D1=0,O1=1,M1=null,N1="",L1=0,z1=0,F1=0,B1=0,U1=0,G1=0,H1=0,k1=!1,V1=0,j1=0,W1=0;const q1={updateRenderData(e){e.renderData&&g1!==e&&(e.renderData.vertDirty&&(g1=e,v1=g1.node._uiProps.uiTransformComp,this._updateFontFamily(e),this._updateProperties(e),this._updateLabelInfo(e),this._updateContent(),g1.actualFontSize=L1,v1.setContentSize(b1),this.updateUVs(e),g1.renderData.vertDirty=!1,g1.markForUpdateRenderData(!1),g1=null,this._resetProperties()),e.spriteFrame)&&e.renderData.updateRenderData(e,e.spriteFrame)},updateUVs(e){const t=e.renderData,n=t.chunk.vb,i=t.vertexCount,s=t.data;let r=3;for(let e=0;e<i;e++){const t=s[e];n[r]=t.u,n[r+1]=t.v,r+=9}},_updateFontScale(){O1=L1/z1},_updateFontFamily(e){const t=e.font;M1=t.spriteFrame,A1=t.fntConfig,$X.fontAtlas=t.fontDefDictionary,Jq.packToDynamicAtlas(e,M1)},_updateLabelInfo(e){$X.hash="",$X.margin=0},_updateProperties(e){N1=e.string.toString(),L1=e.fontSize,z1=A1?A1.fontSize:e.fontSize,F1=e.horizontalAlign,B1=e.verticalAlign,U1=e.spacingX,H1=e.overflow,G1=e._lineHeight;const t=v1.contentSize;b1.width=t.width,b1.height=t.height,H1===_$.NONE?(k1=!1,b1.width+=2*$X.margin,b1.height+=2*$X.margin):H1===_$.RESIZE_HEIGHT?(k1=!0,b1.height+=2*$X.margin):k1=e.enableWrapText,$X.lineHeight=G1,$X.fontSize=L1,this._setupBMFontOverflowMetrics()},_resetProperties(){A1=null,M1=null,$X.hash="",$X.margin=0},_updateContent(){this._updateFontScale(),this._computeHorizontalKerningForText(),this._alignText()},_computeHorizontalKerningForText(){const e=N1,t=e.length,n=A1.kerningDict,i=y1;let s=-1;for(let r=0;r<t;++r){const o=e.charCodeAt(r),a=n[s<<16|65535&o]||0;i[r]=r<t-1?a:0,s=o}},_multilineTextWrap(e){const t=N1.length;let n=0,i=0,s=0,r=0,o=0,a=0,c=0,l=null;for(let h=0;h<t;){let _=N1.charAt(h);if("\n"===_){S1.push(o),o=0,n++,i=0,s-=G1*this._getFontScale()+0,this._recordPlaceholderInfo(h,_),h++;continue}const u=e(N1,h,t);let p=a,d=c,f=o,m=i,g=!1;for(let e=0;e<u;++e){const r=h+e;if(_=N1.charAt(r),"\r"===_){this._recordPlaceholderInfo(r,_);continue}if(l=$X.fontAtlas.getLetterDefinitionForChar(_,$X),!l){this._recordPlaceholderInfo(r,_),console.log(`Can't find letter definition in texture atlas ${A1.atlasName} for letter:${_}`);continue}const a=m+l.offsetX*O1-$X.margin;if(k1&&W1>0&&i>0&&a+l.w*O1>W1&&!BX(_)){S1.push(o),o=0,n++,i=0,s-=G1*this._getFontScale()+0,g=!0;break}E1.x=a,E1.y=s-l.offsetY*O1,this._recordLetterInfo(E1,_,r,n),r+1<y1.length&&r<t-1&&(m+=y1[r+1]),m+=l.xAdvance*O1+U1,f=E1.x+l.w*O1,p<E1.y&&(p=E1.y),d>E1.y-l.h*O1&&(d=E1.y-l.h*O1)}g||(i=m,o=f,a<p&&(a=p),c>d&&(c=d),r<o&&(r=o),h+=u)}return S1.push(o),P1=n+1,w1=P1*G1*this._getFontScale(),P1>1&&(w1+=0*(P1-1)),b1.width=V1,b1.height=j1,V1<=0&&(b1.width=parseFloat(r.toFixed(2))+2*$X.margin),j1<=0&&(b1.height=parseFloat(w1.toFixed(2))+2*$X.margin),R1=b1.height,D1=0,a>0&&(R1=b1.height+a),c<-w1&&(D1=w1+c),!0},_getFirstCharLen:()=>1,_getFontScale:()=>H1===_$.SHRINK?O1:1,_getFirstWordLen(e,t,n){let i=e.charAt(t);if(FX(i)||"\n"===i||BX(i))return 1;let s=1,r=$X.fontAtlas.getLetterDefinitionForChar(i,$X);if(!r)return s;let o=r.xAdvance*O1+U1,a=0;for(let c=t+1;c<n&&(i=e.charAt(c),r=$X.fontAtlas.getLetterDefinitionForChar(i,$X),r);++c){if(a=o+r.offsetX*O1,a+r.w*O1>W1&&!BX(i)&&W1>0)return s;if(o+=r.xAdvance*O1+U1,"\n"===i||BX(i)||FX(i))break;s++}return s},_multilineTextWrapByWord(){return this._multilineTextWrap(this._getFirstWordLen)},_multilineTextWrapByChar(){return this._multilineTextWrap(this._getFirstCharLen)},_recordPlaceholderInfo(e,t){if(e>=x1.length){const e=new f1;x1.push(e)}x1[e].char=t,x1[e].hash=`${t.charCodeAt(0)}${$X.hash}`,x1[e].valid=!1},_recordLetterInfo(e,t,n,i){if(n>=x1.length){const e=new f1;x1.push(e)}const s=`${t.charCodeAt(0)}${$X.hash}`;x1[n].line=i,x1[n].char=t,x1[n].hash=s,x1[n].valid=$X.fontAtlas.getLetter(s).valid,x1[n].x=e.x,x1[n].y=e.y},_alignText(){w1=0,S1.length=0,this._multilineTextWrapByWord(),this._computeAlignmentOffset(),H1===_$.SHRINK&&L1>0&&this._isVerticalClamp()&&this._shrinkLabelToContentSize(this._isVerticalClamp),this._updateQuads()||H1===_$.SHRINK&&this._shrinkLabelToContentSize(this._isHorizontalClamp)},_scaleFontSizeDown(e){let t=!0;e||(e=.1,t=!1),L1=e,t&&this._updateContent()},_shrinkLabelToContentSize(e){let t=0,n=0|L1,i=0;for(;t<n;){i=t+n+1>>1;const s=i;if(s<=0)break;O1=s/z1,this._multilineTextWrapByWord(),this._computeAlignmentOffset(),e()?n=i-1:t=i}t>=0&&this._scaleFontSizeDown(t)},_isVerticalClamp:()=>w1>b1.height,_isHorizontalClamp(){let e=!1;for(let t=0,n=N1.length;t<n;++t){const n=x1[t];if(n.valid){const t=$X.fontAtlas.getLetterDefinitionForChar(n.char,$X);if(!t)continue;const i=n.x+t.w*O1,s=n.line;if(V1>0)if(k1){if(S1[s]>b1.width&&(i>b1.width||i<0)){e=!0;break}}else if(i>b1.width){e=!0;break}}}return e},_isHorizontalClamped(e,t){const n=S1[t],i=e>b1.width||e<0;return k1?n>b1.width&&i:i},_updateQuads(){if(!g1)return!1;const e=M1?M1.texture:$X.fontAtlas.getTexture(),t=g1.renderData;t.dataLength=0,t.resize(0,0);const n=v1.anchorPoint,i=b1,s=n.x*i.width,r=n.y*i.height;let o=!0;for(let t=0,n=N1.length;t<n;++t){const n=x1[t];if(!n.valid)continue;const i=$X.fontAtlas.getLetter(n.hash);if(!i){console.warn("Can't find letter in this bitmap-font");continue}m1.height=i.h,m1.width=i.w,m1.x=i.u,m1.y=i.v;let a=n.y+I1;if(j1>0){if(a>R1){const e=a-R1;m1.y+=e,m1.height-=e,a-=e}a-i.h*O1<D1&&H1===_$.CLAMP&&(m1.height=a<D1?0:(a-D1)/O1)}const c=n.line,l=n.x+i.w/2*O1+C1[c];if(V1>0&&this._isHorizontalClamped(l,c))if(H1===_$.CLAMP)m1.width=0;else if(H1===_$.SHRINK){if(b1.width>i.w){o=!1;break}m1.width=0}if(m1.height>0&&m1.width>0){const t=this._determineRect(),i=n.x+C1[n.line];this.appendQuad(g1,e,m1,t,i-s,a-r,O1)}}return o},appendQuad(e,t,n,i,s,r,o){},_determineRect(){const e=M1.isRotated(),t=M1.getOriginalSize(),n=M1.getRect(),i=M1.getOffset(),s=i.x+(t.width-n.width)/2,r=i.y-(t.height-n.height)/2;if(e){const e=m1.x;m1.x=n.x+n.height-m1.y-m1.height-r,m1.y=e+n.y-s,m1.y<0&&(m1.height+=r)}else m1.x+=n.x-s,m1.y+=n.y+r;return e},_computeAlignmentOffset(){switch(C1.length=0,F1){case l$.LEFT:for(let e=0;e<P1;++e)C1.push(0);break;case l$.CENTER:for(let e=0,t=S1.length;e<t;e++)C1.push((b1.width-S1[e])/2);break;case l$.RIGHT:for(let e=0,t=S1.length;e<t;e++)C1.push(b1.width-S1[e])}if(I1=b1.height,B1!==h$.TOP){const e=b1.height-w1+G1*this._getFontScale()-z1*O1;B1===h$.BOTTOM?I1-=e:I1-=e/2}},_setupBMFontOverflowMetrics(){let e=b1.width,t=b1.height;H1===_$.RESIZE_HEIGHT&&(t=0),H1===_$.NONE&&(e=0,t=0),V1=e,j1=t,T1.width=e,T1.height=t,W1=e}},X1=new ti(255,255,255,255),Y1={createData:e=>e.requestRenderData(),fillBuffers(e,t){const n=e.node;X1.set(e.color),X1.a=255*n._uiProps.opacity,Kq(n,0,e.renderData,X1)},appendQuad(e,t,n,i,s,r,o){const a=e.renderData;if(!a)return;const c=a.dataLength;a.dataLength+=4,a.resize(a.dataLength,a.dataLength/2*3);const l=a.data,h=t.width,_=t.height,u=n.width,p=n.height;let d=0,f=0,m=0,g=0;i?(d=n.x/h,g=(n.x+p)/h,f=(n.y+u)/_,m=n.y/_,l[c].u=d,l[c].v=m,l[c+1].u=d,l[c+1].v=f,l[c+2].u=g,l[c+2].v=m,l[c+3].u=g,l[c+3].v=f):(d=n.x/h,g=(n.x+u)/h,f=(n.y+p)/_,m=n.y/_,l[c].u=d,l[c].v=f,l[c+1].u=g,l[c+1].v=f,l[c+2].u=d,l[c+2].v=m,l[c+3].u=g,l[c+3].v=m),l[c].x=s,l[c].y=r-p*o,l[c+1].x=s+u*o,l[c+1].y=r-p*o,l[c+2].x=s,l[c+2].y=r,l[c+3].x=s+u*o,l[c+3].y=r},updateColor(e){}};ae(Y1,q1);let K1=null;const $1=ce(q1,{getAssemblerData:()=>(K1||(K1=new KX(1024,1024)),K1.getTexture()),_updateFontFamily(e){$X.fontAtlas=K1,$X.fontFamily=this._getFontFamily(e);const t=e.getComponent(YZ);t&&t.enabled?($X.isOutlined=!0,$X.margin=t.width,$X.out=t.color.clone(),$X.out.a=t.color.a*e.color.a/255):($X.isOutlined=!1,$X.margin=0)},_getFontFamily(e){let t="Arial";return e.useSystemFont?t=e.fontFamily||"Arial":e.font&&(t=e.font._nativeAsset||"Arial"),t},_updateLabelInfo(e){$X.fontDesc=this._getFontDesc(),$X.color=e.color,$X.hash=function(e){const t=e.color.toHEX();let n="";return e.isOutlined&&e.margin>0&&(n=n+e.margin+e.out.toHEX()),""+e.fontSize+e.fontFamily+t+n}($X)},_getFontDesc(){let e=`${$X.fontSize.toString()}px `;return e+=$X.fontFamily,e},_computeHorizontalKerningForText(){},_determineRect:()=>!1}),Z1=new ti(255,255,255,255),Q1={createData:e=>e.requestRenderData(),fillBuffers(e,t){if(!e.renderData)return;const n=e.node;Z1.a=255*n._uiProps.opacity,Kq(n,0,e.renderData,Z1)},updateColor(e){},appendQuad:Y1.appendQuad};ae(Q1,$1);const J1=m$.Overflow,e2=(1/255).toFixed(3);let t2=null,n2=null,i2=null,s2="",r2="",o2=0,a2=0,c2=[];const l2=new Di;let h2=0,_2=0,u2=0,p2=new ti,d2=1,f2="",m2=J1.NONE,g2=!1,v2=null;const y2=ti.BLACK.clone();let x2=null;const S2=ti.BLACK.clone(),C2=new Mi,T2=Di.ZERO.clone(),b2=Di.ZERO.clone(),E2=bi.ZERO.clone(),A2=bi.ZERO.clone();let P2=0,w2=0,I2=!1,R2=!1,D2=!1;const O2=["left","center","right"],M2={getAssemblerData:()=>m$._canvasPool.get(),resetAssemblerData(e){e&&m$._canvasPool.put(e)},updateRenderData(e){if(e.renderData){if(e.renderData.vertDirty){const t=e.node._uiProps.uiTransformComp;this._updateFontFamily(e),this._updateProperties(e,t),this._calculateLabelFont(),this._updateLabelDimensions(),this._updateTexture(e),this._calDynamicAtlas(e),e.actualFontSize=o2,t.setContentSize(l2),this.updateVertexData(e),this.updateUVs(e),e.markForUpdateRenderData(!1),t2=null,n2=null,i2=null}e.spriteFrame&&e.renderData.updateRenderData(e,e.spriteFrame)}},updateVertexData(e){},updateUVs(e){},_updateFontFamily(e){f2=e.useSystemFont?e.fontFamily||"Arial":e.font&&e.font._nativeAsset||"Arial"},_updateProperties(e,t){const n=e.assemblerData;n&&(t2=n.context,n2=n.canvas,i2=e.spriteFrame,r2=e.string.toString(),o2=e.fontSize,a2=o2,m2=e.overflow,b2.width=l2.width=t.width,b2.height=l2.height=t.height,w2=e.underlineHeight,h2=e.lineHeight,_2=e.horizontalAlign,u2=e.verticalAlign,p2=e.color,d2=e.node._uiProps.opacity,I2=e.isBold,R2=e.isItalic,D2=e.isUnderline,g2=m2!==J1.NONE&&(m2===J1.RESIZE_HEIGHT||e.enableWrapText),v2=YZ&&e.getComponent(YZ),v2=v2&&v2.enabled&&v2.width>0?v2:null,v2&&y2.set(v2.color),x2=C0&&e.getComponent(C0),x2=x2&&x2.enabled?x2:null,x2&&S2.set(x2.color),this._updatePaddingRect())},_updatePaddingRect(){let e=0,t=0,n=0,i=0,s=0;if(T2.width=T2.height=0,v2&&(s=v2.width,e=t=n=i=s,T2.width=T2.height=2*s),x2){const r=x2.blur+s,o=x2.offset.x,a=x2.offset.y;n=Math.max(n,-o+r),i=Math.max(i,o+r),e=Math.max(e,a+r),t=Math.max(t,-a+r)}if(R2){const e=a2*Math.tan(.20943951);i+=e,T2.width+=e}C2.x=n,C2.y=e,C2.width=n+i,C2.height=e+t},_calculateFillTextStartPosition(){let e=0;_2===l$.RIGHT?e=l2.width-C2.width:_2===l$.CENTER&&(e=(l2.width-C2.width)/2);const t=this._getLineHeight()*(c2.length-1);let n=o2*(1-wX/2);if(u2!==h$.TOP){let e=t+C2.height+o2-l2.height;u2===h$.BOTTOM?(e+=wX/2*o2,n-=e):n-=e/2}n+=0*o2,E2.set(e+C2.x,n+C2.y)},_updateTexture(e){if(!t2||!n2)return;t2.clearRect(0,0,n2.width,n2.height),t2.font=s2,this._calculateFillTextStartPosition();const t=this._getLineHeight();t2.lineJoin="round",v2?(t2.fillStyle=`rgba(${y2.r}, ${y2.g}, ${y2.b}, ${e2})`,t2.fillRect(0,0,n2.width,n2.height)):e._srcBlendFactor===Qs.SRC_ALPHA&&(t2.fillStyle=`rgba(${p2.r}, ${p2.g}, ${p2.b}, ${e2})`,t2.fillRect(0,0,n2.width,n2.height)),t2.fillStyle=`rgb(${p2.r}, ${p2.g}, ${p2.b})`;const n=E2.x;let i=0;this._drawTextEffect(E2,t);for(let e=0;e<c2.length;++e)i=E2.y+e*t,v2&&t2.strokeText(c2[e],n,i),t2.fillText(c2[e],n,i);x2&&(t2.shadowColor="transparent"),this._uploadTexture(e)},_uploadTexture(e){if(e.cacheMode===m$.CacheMode.BITMAP){const t=e.ttfSpriteFrame;Jq.deleteAtlasSpriteFrame(t),t._resetDynamicAtlasFrame()}if(i2&&n2){let t;t=i2 instanceof sX?i2.texture:i2,0!==n2.width&&0!==n2.height&&(t.reset({width:n2.width,height:n2.height,mipmapLevel:1}),t.uploadData(n2),i2 instanceof sX&&(i2.rect=new Mi(0,0,n2.width,n2.height),i2._calculateUV()),e.renderData&&(e.renderData.textureDirty=!0),i.director.root&&i.director.root.batcher2D&&i.director.root.batcher2D._releaseDescriptorSetCache(t.getHash()))}},_calDynamicAtlas(e){if(e.cacheMode!==m$.CacheMode.BITMAP)return;const t=e.ttfSpriteFrame;Jq.packToDynamicAtlas(e,t)},_setupOutline(){t2.strokeStyle=`rgba(${y2.r}, ${y2.g}, ${y2.b}, ${y2.a/255})`,t2.lineWidth=2*v2.width},_setupShadow(){t2.shadowColor=`rgba(${S2.r}, ${S2.g}, ${S2.b}, ${S2.a/255})`,t2.shadowBlur=x2.blur,t2.shadowOffsetX=x2.offset.x,t2.shadowOffsetY=-x2.offset.y},_drawTextEffect(e,t){if(!x2&&!v2&&!D2)return;const n=c2.length>1&&x2,i=this._measureText(t2,s2);let s=0,r=0;x2&&this._setupShadow(),v2&&this._setupOutline();for(let o=0;o<c2.length;++o)s=e.x,r=e.y+o*t,n&&(v2&&t2.strokeText(c2[o],s,r),t2.fillText(c2[o],s,r)),D2&&(P2=i(c2[o]),_2===l$.RIGHT?A2.x=e.x-P2:_2===l$.CENTER?A2.x=e.x-P2/2:A2.x=e.x,A2.y=r+a2/8,t2.fillRect(A2.x,A2.y,P2,w2));n&&(t2.shadowColor="transparent")},_updateLabelDimensions(){l2.width=Math.min(l2.width,2048),l2.height=Math.min(l2.height,2048);let e=!1;n2.width!==l2.width&&(n2.width=l2.width,e=!0),n2.height!==l2.height&&(n2.height=l2.height,e=!0),e&&(t2.font=s2),t2.textAlign=O2[_2],t2.textBaseline="alphabetic"},_getFontDesc(){let e=`${o2.toString()}px `;return e+=f2,I2&&(e=`bold ${e}`),R2&&(e=`italic ${e}`),e},_getLineHeight(){let e=h2;return e=0===e?o2:e*o2/a2,0|e},_calculateParagraphLength(e,t){const n=[];for(const i of e){const e=UX(t,i,s2);n.push(e)}return n},_measureText:(e,t)=>n=>UX(e,n,t),_calculateShrinkFont(e){if(!t2)return;const t=this._calculateParagraphLength(e,t2);let n=0,i=0,s=0;if(g2){const t=b2.width,s=b2.height;if(t<0||s<0)return;i=s+1;let r=[],o=0,a=0|o2+1,c=0;for(;o<a;){if(c=o+a+1>>1,c<=0){S(4003);break}o2=c,s2=this._getFontDesc(),t2.font=s2;const l=this._getLineHeight();for(i=0,n=0;n<e.length;++n){const s=UX(t2,e[n],s2);r=HX(e[n],s,t,this._measureText(t2,s2)),i+=r.length*l}i>s?a=c-1:o=c}0===o?S(4003):(o2=o,s2=this._getFontDesc(),t2.font=s2)}else{for(i=e.length*this._getLineHeight(),n=0;n<e.length;++n)s<t[n]&&(s=t[n]);const r=(l2.width-C2.width)/s,o=l2.height/i;o2=a2*Math.min(1,r,o)|0,s2=this._getFontDesc(),t2.font=s2}},_calculateWrapText(e){if(!g2||!t2)return;c2=[];const t=b2.width;for(let n=0;n<e.length;++n){const i=UX(t2,e[n],s2),s=HX(e[n],i,t,this._measureText(t2,s2));c2=c2.concat(s)}},_calculateLabelFont(){if(!t2)return;const e=r2.split("\n");switch(c2=e,s2=this._getFontDesc(),t2.font=s2,m2){case J1.NONE:{let t=0,n=0;for(let n=0;n<e.length;++n){const i=UX(t2,e[n],s2);t=t>i?t:i}n=(c2.length+wX)*this._getLineHeight();const i=parseFloat(t.toFixed(2)),s=parseFloat(n.toFixed(2));l2.width=i+C2.width,l2.height=s+C2.height,b2.width=i+T2.width,b2.height=s+T2.height;break}case J1.SHRINK:this._calculateShrinkFont(e),this._calculateWrapText(e);break;case J1.CLAMP:this._calculateWrapText(e);break;case J1.RESIZE_HEIGHT:{this._calculateWrapText(e);const t=(c2.length+wX)*this._getLineHeight();l2.height=t+C2.height,b2.height=t+T2.height;break}}}},N2=ti.WHITE.clone(),L2={createData(e){const t=e.requestRenderData();t.dataLength=2,t.resize(4,6);const n=t.chunk.vb;n[3]=n[21]=n[22]=n[31]=0,n[4]=n[12]=n[13]=n[30]=1;let i=5;for(let e=0;e<4;e++)ti.toArray(n,N2,i),i+=9;return t},fillBuffers(e,t){const n=e.renderData.chunk,i=e.renderData.data,s=e.node,r=n.vb,o=i[0],a=i[1];s.updateWorldTransform();const c=s._pos,l=s._rot,h=s._scale,_=o.x*h.x,u=a.x*h.x,p=o.y*h.y,d=a.y*h.y,f=l.x,m=l.y,g=l.z,v=l.w,y=f*m,x=g*v,S=f*f-m*m,C=v*v-g*g,T=C+S,b=2*(y-x),E=C-S,A=2*(y+x),P=c.x,w=c.y;r[0]=T*_+b*p+P,r[1]=E*p+A*_+w,r[9]=T*u+b*p+P,r[10]=E*p+A*u+w,r[18]=T*_+b*d+P,r[19]=E*d+A*_+w,r[27]=T*u+b*d+P,r[28]=E*d+A*u+w;const I=n.bufferId,R=n.vertexOffset,D=n.vertexAccessor.getMeshBuffer(n.bufferId),O=n.vertexAccessor.getIndexBuffer(I);let M=D.indexOffset;O[M++]=R,O[M++]=R+1,O[M++]=R+2,O[M++]=R+2,O[M++]=R+1,O[M++]=R+3,D.indexOffset+=6},updateVertexData(e){const t=e.renderData;if(!t)return;const n=e.node._uiProps.uiTransformComp,i=n.width,s=n.height,r=n.anchorX*i,o=n.anchorY*s,a=t.data;a[0].x=-r,a[0].y=-o,a[1].x=i-r,a[1].y=s-o},updateUVs(e){const t=e.renderData;if(!t||!e.ttfSpriteFrame)return;const n=t.chunk.vb,i=e.ttfSpriteFrame.uv;n[3]=i[0],n[4]=i[1],n[12]=i[2],n[13]=i[3],n[21]=i[4],n[22]=i[5],n[30]=i[6],n[31]=i[7]},updateColor(e){}};ae(L2,M2);const z2=e("labelAssembler",{getAssembler(e){let t=L2;return e.font instanceof EX?t=Y1:e.cacheMode===m$.CacheMode.CHAR&&(t=Q1),t}});m$.Assembler=z2;const F2=VQ.FillType,B2=new xi,U2=new ri,G2={updateRenderData(e){const t=e.spriteFrame;Jq.packToDynamicAtlas(e,t);const n=e.renderData;if(n&&t){if(n.updateRenderData(e,t),!n.vertDirty)return;let i=e.fillStart,s=e.fillRange;s<0&&(i+=s,s=-s),s=i+s,i=i>1?1:i,i=i<0?0:i,s=s>1?1:s,s=s<0?0:s,s-=i,s=s<0?0:s;let r=i+s;r=r>1?1:r,this.updateUVs(e,i,r),this.updateVertexData(e,i,r)}},updateUVs(e,t,n){const i=e.spriteFrame,s=e.renderData.chunk.vb,r=i.width,o=i.height,a=i.rect;let c=0,l=0,h=0,_=0,u=0,p=0,d=0,f=0,m=0,g=0,v=0,y=0;switch(i.isRotated()?(c=a.x/r,l=(a.y+a.width)/o,h=(a.x+a.height)/r,_=a.y/o,u=d=c,m=v=h,f=y=l,p=g=_):(c=a.x/r,l=(a.y+a.height)/o,h=(a.x+a.width)/r,_=a.y/o,u=m=c,d=v=h,p=f=l,g=y=_),e.fillType){case F2.HORIZONTAL:s[3]=u+(d-u)*t,s[4]=p+(f-p)*t,s[12]=u+(d-u)*n,s[13]=p+(f-p)*n,s[21]=m+(v-m)*t,s[22]=g+(y-g)*t,s[30]=m+(v-m)*n,s[31]=g+(y-g)*n;break;case F2.VERTICAL:s[3]=u+(m-u)*t,s[4]=p+(g-p)*t,s[12]=d+(v-d)*t,s[13]=f+(y-f)*t,s[21]=u+(m-u)*n,s[22]=p+(g-p)*n,s[30]=d+(v-d)*n,s[31]=f+(y-f)*n;break;default:E(2626)}},updateVertexData(e,t,n){const i=e.renderData.data,s=e.node._uiProps.uiTransformComp,r=s.width,o=s.height,a=s.anchorX*r,c=s.anchorY*o;let l=-a,h=-c,_=r-a,u=o-c,p=0,d=0;switch(e.fillType){case F2.HORIZONTAL:p=l+(_-l)*t,d=l+(_-l)*n,l=p,_=d;break;case F2.VERTICAL:p=h+(u-h)*t,d=h+(u-h)*n,h=p,u=d;break;default:E(2626)}i[0].x=l,i[0].y=h,i[1].x=_,i[1].y=h,i[2].x=l,i[2].y=u,i[3].x=_,i[3].y=u},createData(e){const t=e.requestRenderData();t.dataLength=4,t.resize(4,6);const n=t.data;for(const e of n)e.z=0;return t},updateWorldVertexData(e,t){e.node.getWorldMatrix(B2);const n=e.renderData.floatStride,i=e.renderData.data,s=t.vb;let r=0;for(let e=0;e<4;e++){const t=i[e];ri.transformMat4(U2,t,B2),r=e*n,s[r]=U2.x,s[r+1]=U2.y,s[r+2]=U2.z}},fillBuffers(e,t){const n=e.renderData,i=n.chunk;(e.node.hasChangedFlags||n.vertDirty)&&(this.updateWorldVertexData(e,i),n.vertDirty=!1);const s=i.bufferId,r=i.vertexOffset,o=i.vertexAccessor.getMeshBuffer(i.bufferId),a=i.vertexAccessor.getIndexBuffer(s);let c=o.indexOffset;a[c++]=r,a[c++]=r+1,a[c++]=r+2,a[c++]=r+2,a[c++]=r+1,a[c++]=r+3,o.indexOffset+=6},updateColor(e){const t=e.renderData,n=t.chunk.vb,i=t.floatStride;let s=5;const r=e.color,o=r.r/255,a=r.g/255,c=r.b/255,l=e.node._uiProps.opacity;for(let e=0;e<4;e++)n[s]=o,n[s+1]=a,n[s+2]=c,n[s+3]=l,s+=i}},H2=2*Math.PI,k2=1e-6,V2=new xi,j2=new ri,W2=[new bi,new bi,new bi,new bi],q2=new Array(4),X2=new Array(8),Y2=[new bi,new bi,new bi,new bi],K2=[new bi,new bi,new bi,new bi],$2=new bi,Z2=[new bi,new bi,new bi,new bi];function Q2(e,t,n,i,s,r,o){let a=Math.sin(r);a=Math.abs(a)>k2?a:0;let c=Math.cos(r);c=Math.abs(c)>k2?c:0;let l=0,h=0;if(0!==c){if(l=a/c,(e-s.x)*c>0){const t=s.y+l*(e-s.x);o[0].x=e,o[0].y=t}if((t-s.x)*c>0){const e=s.y+l*(t-s.x);o[2].x=t,o[2].y=e}}if(0!==a){if(h=c/a,(i-s.y)*a>0){const e=s.x+h*(i-s.y);o[3].x=e,o[3].y=i}if((n-s.y)*a>0){const e=s.x+h*(n-s.y);o[1].x=e,o[1].y=n}}}function J2(e,t){const n=t.x-e.x,i=t.y-e.y;if(0===n&&0===i)return 0;if(0===n)return i>0?.5*Math.PI:1.5*Math.PI;{let e=Math.atan(i/n);return n<0&&(e+=Math.PI),e}}function e4(e,t,n,i,s){const r=q2,o=r[0],a=r[1],c=r[2],l=r[3];e[t].x=n.x,e[t].y=n.y,e[t+1].x=i.x,e[t+1].y=i.y,e[t+2].x=s.x,e[t+2].y=s.y;let h=0,_=0;h=(n.x-o)/(c-o),_=(n.y-a)/(l-a),t4(h,_,e,t),h=(i.x-o)/(c-o),_=(i.y-a)/(l-a),t4(h,_,e,t+1),h=(s.x-o)/(c-o),_=(s.y-a)/(l-a),t4(h,_,e,t+2)}function t4(e,t,n,i){const s=X2,r=s[0]+(s[2]-s[0])*e,o=s[4]+(s[6]-s[4])*e,a=s[1]+(s[3]-s[1])*e,c=s[5]+(s[7]-s[5])*e,l=n[i];l.u=r+(o-r)*t,l.v=a+(c-a)*t}const n4={useModel:!1,createData:e=>e.requestRenderData(),updateRenderData(e){const t=e.spriteFrame;Jq.packToDynamicAtlas(e,t),this.updateUVs(e);const n=e.renderData;if(n&&t){if(!n.vertDirty)return;const i=n.data;let s=e.fillStart,r=e.fillRange;for(r<0&&(s+=r,r=-r);s>=1;)s-=1;for(;s<0;)s+=1;s*=H2,r*=H2;const o=s+r;!function(e){const t=e.node._uiProps.uiTransformComp,n=t.width,i=t.height,s=t.anchorX*n,r=t.anchorY*i,o=-s,a=-r,c=n-s,l=i-r,h=q2;h[0]=o,h[1]=a,h[2]=c,h[3]=l;const _=e.fillCenter,u=$2.x=Math.min(Math.max(0,_.x),1)*(c-o)+o,p=$2.y=Math.min(Math.max(0,_.y),1)*(l-a)+a;W2[0].x=W2[3].x=o,W2[1].x=W2[2].x=c,W2[0].y=W2[1].y=a,W2[2].y=W2[3].y=l;for(const e of Z2)bi.set(e,0,0);u!==h[0]&&bi.set(Z2[0],3,0),u!==h[2]&&bi.set(Z2[2],1,2),p!==h[1]&&bi.set(Z2[1],0,1),p!==h[3]&&bi.set(Z2[3],2,3)}(e),function(e){const t=e.width,n=e.height,i=e.getRect();let s=0,r=0,o=0,a=0;const c=X2;e.isRotated()?(s=i.x/t,r=(i.x+i.height)/t,o=i.y/n,a=(i.y+i.width)/n,c[0]=c[2]=s,c[4]=c[6]=r,c[3]=c[7]=a,c[1]=c[5]=o):(s=i.x/t,r=(i.x+i.width)/t,o=i.y/n,a=(i.y+i.height)/n,c[0]=c[4]=s,c[2]=c[6]=r,c[1]=c[3]=a,c[5]=c[7]=o)}(t),Q2(q2[0],q2[2],q2[1],q2[3],$2,s,Y2),Q2(q2[0],q2[2],q2[1],q2[3],$2,s+r,K2);let a=0;for(let e=0;e<4;++e){const t=Z2[e];if(!t)continue;if(r>=H2){n.dataLength=a+3,e4(i,a,$2,W2[t.x],W2[t.y]),a+=3;continue}let c=J2($2,W2[t.x]),l=J2($2,W2[t.y]);l<c&&(l+=H2),c-=H2,l-=H2;for(let r=0;r<3;++r)c>=o||(c>=s?(n.dataLength=a+3,e4(i,a,$2,W2[t.x],l>=o?K2[e]:W2[t.y]),a+=3):l>s&&(l<=o?(n.dataLength=a+3,e4(i,a,$2,Y2[e],W2[t.y]),a+=3):(n.dataLength=a+3,e4(i,a,$2,Y2[e],K2[e]),a+=3))),c+=H2,l+=H2}n.resize(a,a),n.updateRenderData(e,t)}},fillBuffers(e,t){const n=e.node,i=e.renderData,s=i.chunk;(n.hasChangedFlags||i.vertDirty)&&(this.updateWorldVertexAndUVData(e,s),i.vertDirty=!1),this.updataColorLate(e);const r=s.bufferId,o=s.vertexOffset,a=s.vertexAccessor.getMeshBuffer(s.bufferId),c=s.vertexAccessor.getIndexBuffer(r),l=a.indexOffset;for(let e=0;e<i.indexCount;e++)c[l+e]=o+e;a.indexOffset+=i.indexCount,a.setDirty()},updateWorldVertexAndUVData(e,t){e.node.getWorldMatrix(V2);const n=e.renderData,i=n.floatStride,s=e.renderData.data,r=t.vb,o=n.vertexCount;let a=0;for(let e=0;e<o;e++){const t=s[e];ri.set(j2,t.x,t.y,0),ri.transformMat4(j2,j2,V2),r[a+0]=j2.x,r[a+1]=j2.y,r[a+2]=j2.z,r[a+3]=t.u,r[a+4]=t.v,a+=i}},updateUVs(e){e.renderData.vertDirty=!0,e.markForUpdateRenderData()},updataColorLate(e){const t=e.renderData,n=t.chunk.vb,i=t.floatStride,s=t.vertexCount;let r=5;const o=e.color,a=o.r/255,c=o.g/255,l=o.b/255,h=e.node._uiProps.opacity;for(let e=0;e<s;e++)n[r]=a,n[r+1]=c,n[r+2]=l,n[r+3]=h,r+=i},updateColor(e){}},i4=[];for(let e=0;e<4;e++)i4.push(new ri);const s4={createData(e){const t=e.requestRenderData();return t.dataLength=2,t.resize(4,6),t},updateRenderData(e){const t=e.spriteFrame;Jq.packToDynamicAtlas(e,t),this.updateUVs(e);const n=e.renderData;n&&t&&(n.vertDirty&&this.updateVertexData(e),n.updateRenderData(e,t))},updateWorldVerts(e,t){const n=e.renderData,i=t.vb,s=n.data,r=e.node,o=s[0],a=s[1],c=r.worldMatrix,l=c.m00,h=c.m01,_=c.m04,u=c.m05,p=1===l&&0===h&&0===_&&1===u,d=c.m12,f=c.m13,m=o.x,g=a.x,v=o.y,y=a.y;if(p){const e=m+d,t=g+d,n=v+f,s=y+f;i[0]=e,i[1]=n,i[9]=t,i[10]=n,i[18]=e,i[19]=s,i[27]=t,i[28]=s}else{const e=l*m,t=l*g,n=h*m,s=h*g,r=_*v+d,o=_*y+d,a=u*v+f,c=u*y+f;i[0]=e+r,i[1]=n+a,i[9]=t+r,i[10]=s+a,i[18]=e+o,i[19]=n+c,i[27]=t+o,i[28]=s+c}},fillBuffers(e,t){if(null===e)return;const n=e.renderData,i=n.chunk;(e.node.hasChangedFlags||n.vertDirty)&&(this.updateWorldVerts(e,i),n.vertDirty=!1);const s=i.bufferId,r=i.vertexOffset,o=i.vertexAccessor.getMeshBuffer(i.bufferId),a=i.vertexAccessor.getIndexBuffer(s);let c=o.indexOffset;a[c++]=r,a[c++]=r+1,a[c++]=r+2,a[c++]=r+2,a[c++]=r+1,a[c++]=r+3,o.indexOffset+=6},updateVertexData(e){const t=e.renderData;if(!t)return;const n=e.node._uiProps.uiTransformComp,i=t.data,s=n.width,r=n.height,o=n.anchorX*s,a=n.anchorY*r;let c=0,l=0,h=0,_=0;if(e.trim)c=-o,l=-a,h=s-o,_=r-a;else{const t=e.spriteFrame,n=t.getOriginalSize(),i=t.getRect(),u=n.width,p=n.height,d=i.width,f=i.height,m=t.getOffset(),g=s/u,v=r/p,y=m.x+(u-d)/2,x=m.x-(u-d)/2;c=y*g-o,l=(m.y+(p-f)/2)*v-a,h=s+x*g-o,_=r+(m.y-(p-f)/2)*v-a}i[0].x=c,i[0].y=l,i[1].x=h,i[1].y=_,t.vertDirty=!0},updateUVs(e){if(!e.spriteFrame)return;const t=e.renderData.chunk.vb,n=e.spriteFrame.uv;t[3]=n[0],t[4]=n[1],t[12]=n[2],t[13]=n[3],t[21]=n[4],t[22]=n[5],t[30]=n[6],t[31]=n[7]},updateColor(e){const t=e.renderData,n=t.chunk.vb;let i=5;const s=e.color,r=s.r/255,o=s.g/255,a=s.b/255,c=s.a/255;for(let e=0;e<4;e++,i+=t.floatStride)n[i]=r,n[i+1]=o,n[i+2]=a,n[i+3]=c}},r4=new ri,o4=new xi,a4={createData(e){const t=e.requestRenderData();return t.dataLength=4,t.resize(16,54),t},updateRenderData(e){const t=e.spriteFrame;Jq.packToDynamicAtlas(e,t),this.updateUVs(e);const n=e.renderData;n&&t&&(n.vertDirty&&this.updateVertexData(e),n.updateRenderData(e,t))},updateVertexData(e){const t=e.renderData.data,n=e.node._uiProps.uiTransformComp,i=n.width,s=n.height,r=n.anchorX*i,o=n.anchorY*s,a=e.spriteFrame,c=a.insetLeft,l=a.insetRight,h=a.insetTop,_=a.insetBottom;let u=i-c-l,p=s-h-_,d=i/(c+l),f=s/(h+_);d=Number.isNaN(d)||d>1?1:d,f=Number.isNaN(f)||f>1?1:f,u=u<0?0:u,p=p<0?0:p,t[0].x=-r,t[0].y=-o,t[1].x=c*d-r,t[1].y=_*f-o,t[2].x=t[1].x+u,t[2].y=t[1].y+p,t[3].x=i-r,t[3].y=s-o},fillBuffers(e,t){const n=e.renderData,i=n.chunk;(e.node.hasChangedFlags||n.vertDirty)&&(this.updateWorldVertexData(e,i),n.vertDirty=!1);const s=i.bufferId,r=i.vertexOffset,o=i.vertexAccessor.getMeshBuffer(i.bufferId),a=i.vertexAccessor.getIndexBuffer(s);let c=o.indexOffset;for(let e=0;e<3;++e)for(let t=0;t<3;++t){const n=r+4*e+t;a[c++]=n,a[c++]=n+1,a[c++]=n+4,a[c++]=n+1,a[c++]=n+5,a[c++]=n+4}o.indexOffset=c},updateWorldVertexData(e,t){e.node.getWorldMatrix(o4);const n=e.renderData,i=n.floatStride,s=n.data,r=t.vb;let o=0;for(let e=0;e<4;++e){const t=s[e];for(let n=0;n<4;++n){const a=s[n];ri.set(r4,a.x,t.y,0),ri.transformMat4(r4,r4,o4),o=(4*e+n)*i,r[o++]=r4.x,r[o++]=r4.y,r[o++]=r4.z}}},updateUVs(e){if(!e.spriteFrame)return;const t=e.renderData,n=t.chunk.vb,i=t.floatStride,s=e.spriteFrame.uvSliced;let r=3;for(let e=0;e<16;e++)n[r]=s[e].u,n[r+1]=s[e].v,r+=i},updateColor(e){const t=e.renderData,n=t.chunk.vb,i=t.floatStride;let s=5;const r=e.color,o=r.r/255,a=r.g/255,c=r.b/255,l=e.node._uiProps.opacity;for(let e=0;e<16;e++)n[s]=o,n[s+1]=a,n[s+2]=c,n[s+3]=l,s+=i}},c4=[];for(let e=0;e<4;e++)c4.push(new ri);const l4=new xi,h4={createData:e=>e.requestRenderData(),updateRenderData(e){const t=e.renderData,n=e.spriteFrame;if(!n||!t)return;if(t.updateRenderData(e,n),!t.vertDirty)return;const i=e.node._uiProps.uiTransformComp,s=Math.abs(i.width),r=Math.abs(i.height),o=n.getRect(),a=n.insetLeft,c=n.insetRight,l=o.width-a-c,h=n.insetTop,_=n.insetBottom,u=o.height-h-_;let p=s-a-c,d=r-h-_;p=p>0?p:0,d=d>0?d:0;const f=0===l?p:p/l,m=0===u?d:d/u,g=Math.ceil(m+2),v=Math.ceil(f+2);t.dataLength=Math.max(8,g+1,v+1),this.updateVerts(e,p,d,g,v),t.resize(g*v*4,g*v*6)},updateUVs(e){e.renderData.vertDirty=!0,e.markForUpdateRenderData()},fillBuffers(e,t){const n=e.node,i=e.renderData,s=i.chunk;(n.hasChangedFlags||i.vertDirty)&&(this.updateWorldVertexAndUVData(e,s),i.vertDirty=!1),this.updataColorLate(e);const r=s.bufferId;let o=s.vertexOffset;const a=s.vertexAccessor.getMeshBuffer(s.bufferId),c=s.vertexAccessor.getIndexBuffer(r);let l=a.indexOffset;for(let e=0;e<i.indexCount;e+=6)c[l++]=o,c[l++]=o+1,c[l++]=o+2,c[l++]=o+1,c[l++]=o+3,c[l++]=o+2,o+=4,a.indexOffset+=6;a.setDirty()},updateWorldVertexAndUVData(e,t){const n=e.node;n.getWorldMatrix(l4);const i=e.renderData,s=i.floatStride,r=i.data,o=t.vb,a=n._uiProps.uiTransformComp,c=Math.abs(a.width),l=Math.abs(a.height),h=e.spriteFrame,_=h.rotated,u=h.uv,p=h.uvSliced,d=h.rect,f=h.insetLeft,m=h.insetRight,g=d.width-f-m,v=h.insetTop,y=h.insetBottom,x=d.height-v-y;let S=c-f-m,C=l-v-y;S=S>0?S:0,C=C>0?C:0;const T=0===g?S:S/g,b=0===x?C:C/x,E=Math.ceil(b+2),A=Math.ceil(T+2);let P=0,w=0,I=0,R=0,D=0;for(let e=0,t=E;e<t;++e){R=r[e].y,D=r[e+1].y;for(let e=0,t=A;e<t;++e){w=r[e].x,I=r[e+1].x,ri.set(c4[0],w,R,0),ri.set(c4[1],I,R,0),ri.set(c4[2],w,D,0),ri.set(c4[3],I,D,0);for(let e=0;e<4;e++){const t=c4[e];ri.transformMat4(t,t,l4);const n=e*s;o[P+n]=t.x,o[P+n+1]=t.y,o[P+n+2]=t.z}P+=4*s}}P=0;const O=s,M=2*s,N=3*s,L=4*s;let z=0,F=0;const B=[],U=[];for(let e=0,t=E;e<t;++e){F=C>x?C>=e*x?1:b%1:b;for(let t=0,n=A;t<n;++t){z=S>g?S>=t*g?1:T%1:T;const n=P+3,i=n+1;_?(0===e?(B[0]=p[0].u,B[1]=p[0].u,B[2]=p[4].u+(p[8].u-p[4].u)*F):e<E-1?(B[0]=p[4].u,B[1]=p[4].u,B[2]=p[4].u+(p[8].u-p[4].u)*F):e===E-1&&(B[0]=p[8].u,B[1]=p[8].u,B[2]=p[12].u),0===t?(U[0]=p[0].v,U[1]=p[1].v+(p[2].v-p[1].v)*z,U[2]=p[0].v):t<A-1?(U[0]=p[1].v,U[1]=p[1].v+(p[2].v-p[1].v)*z,U[2]=p[1].v):t===A-1&&(U[0]=p[2].v,U[1]=p[3].v,U[2]=p[2].v),B[3]=B[2],U[3]=U[1]):(0===t?(B[0]=p[0].u,B[1]=p[1].u+(p[2].u-p[1].u)*z,B[2]=u[0]):t<A-1?(B[0]=p[1].u,B[1]=p[1].u+(p[2].u-p[1].u)*z,B[2]=p[1].u):t===A-1&&(B[0]=p[2].u,B[1]=p[3].u,B[2]=p[2].u),0===e?(U[0]=p[0].v,U[1]=p[0].v,U[2]=p[4].v+(p[8].v-p[4].v)*F):e<E-1?(U[0]=p[4].v,U[1]=p[4].v,U[2]=p[4].v+(p[8].v-p[4].v)*F):e===E-1&&(U[0]=p[8].v,U[1]=p[8].v,U[2]=p[12].v),B[3]=B[1],U[3]=U[2]),o[n]=B[0],o[i]=U[0],o[n+O]=B[1],o[i+O]=U[1],o[n+M]=B[2],o[i+M]=U[2],o[n+N]=B[3],o[i+N]=U[3],P+=L}}},updateVerts(e,t,n,i,s){const r=e.node._uiProps.uiTransformComp,o=e.renderData.data,a=e.spriteFrame,c=a.rect,l=Math.abs(r.width),h=Math.abs(r.height),_=r.anchorX*l,u=r.anchorY*h,p=a.insetLeft,d=a.insetRight,f=c.width-p-d,m=a.insetTop,g=a.insetBottom,v=c.height-m-g,y=r.width/(p+d)>1?1:r.width/(p+d),x=r.height/(m+g)>1?1:r.height/(m+g);let S=0,C=0;S=f>0?Math.floor(1e3*t)/1e3%f==0?f:t%f:t,C=v>0?Math.floor(1e3*n)/1e3%v==0?v:n%v:n;for(let e=0;e<=s;e++)0===e?o[e].x=-_:e>0&&e<s?o[e].x=1===e?p*y+Math.min(f,t)-_:f>0?e===s-1?p+S+f*(e-2)-_:p+Math.min(f,t)+f*(e-2)-_:p+t-_:e===s&&(o[e].x=Math.min(p+t+d,l)-_);for(let e=0;e<=i;e++)0===e?o[e].y=-u:e>0&&e<i?o[e].y=1===e?g*x+Math.min(v,n)-u:v>0?e===i-1?g+C+(e-2)*v-u:g+Math.min(v,n)+(e-2)*v-u:g+n-u:e===i&&(o[e].y=Math.min(g+n+m,h)-u)},updataColorLate(e){const t=e.renderData,n=t.chunk.vb,i=t.floatStride,s=t.vertexCount;let r=5;const o=e.color,a=o.r/255,c=o.g/255,l=o.b/255,h=e.node._uiProps.opacity;for(let e=0;e<s;e++)n[r]=a,n[r+1]=c,n[r+2]=l,n[r+3]=h,r+=i},updateColor(e){}},_4=VQ.Type,u4=VQ.FillType,p4=e("spriteAssembler",{getAssembler(e){let t=s4;const n=e;switch(n.type){case _4.SLICED:t=a4;break;case _4.TILED:t=h4;break;case _4.FILLED:t=n.fillType===u4.RADIAL?n4:G2}return t}});VQ.Assembler=p4;const d4=IY.sharedManager,f4={createData(e){const t=e.requestRenderData();return t.dataLength=2,t.resize(4,6),t},updateRenderData(e){e.type===OZ.IMAGE_STENCIL&&(s4.updateRenderData(e),s4.updateColor(e))},fillBuffers(e,t){(e.type!==OZ.IMAGE_STENCIL||e.spriteFrame)&&(d4.pushMask(e),t.finishMergeBatches(),function(e,t){d4.clear(e),t.commitModel(e,e._clearModel,e._clearStencilMtl)}(e,t),function(e,t){if(d4.enterLevel(e),e.type===OZ.IMAGE_STENCIL){s4.fillBuffers(e,t);const n=e.graphics.getMaterialInstance(0);t.forceMergeBatches(n,e.spriteFrame,e.graphics)}else e.graphics.updateAssembler(t)}(e,t),d4.enableMask())}},m4={fillBuffers(e,t){d4.exitMask()}},g4={getAssembler:()=>f4},v4={getAssembler:()=>m4};MZ.Assembler=g4,MZ.PostAssembler=v4;class y4{constructor(){this.byteOffset=0,this.vertexOffset=0,this.indexOffset=0,this.vData=null,this.iData=null,this._dirty=!1,this._vertexFormatBytes=0,this._floatsPerVertex=0,this._initVDataCount=0,this._initIDataCount=0,this._attributes=null,this._iaPool=[],this._iaInfo=null,this._nextFreeIAHandle=0}get attributes(){return this._attributes}get vertexFormatBytes(){return this._vertexFormatBytes}initialize(e,t){this._initVDataCount=1024*Ue.BATCHER2D_MEM_INCREMENT/Float32Array.BYTES_PER_ELEMENT,this._initVDataCount,I(9005),this._initIDataCount=this._initVDataCount*y4.IB_SCALE,this._attributes=t,this._floatsPerVertex=Wq(t),this.vData&&this.iData||(this.vData=new Float32Array(this._initVDataCount),this.iData=new Uint16Array(this._initIDataCount)),this._iaPool.push(this.createNewIA(e))}reset(){this._nextFreeIAHandle=0,this._dirty=!1}destroy(){this.reset(),this._attributes=null,this._iaInfo=null,this.vData=null,this.iData=null;for(let e=0;e<this._iaPool.length;++e){const t=this._iaPool[e];t.vertexBuffers[0]&&t.vertexBuffers[0].destroy(),t.indexBuffer&&t.indexBuffer.destroy(),t.ia.destroy()}this._iaPool.length=0}setDirty(){this._dirty=!0}request(e,t){return T(9002),!1}requireFreeIA(e){return this._iaPool.length<=this._nextFreeIAHandle&&this._iaPool.push(this.createNewIA(e)),this._iaPool[this._nextFreeIAHandle++].ia}recycleIA(e){const t=this._iaPool;for(let n=0;n<this._nextFreeIAHandle;++n)if(e===t[n].ia){const e=t[n];return t[n]=t[--this._nextFreeIAHandle],void(t[this._nextFreeIAHandle]=e)}}checkCapacity(e,t){const n=this.vertexOffset+e,i=this.indexOffset+t;return!(n>this._initVDataCount||i>this._initIDataCount)}uploadBuffers(){if(0===this.byteOffset||!this._dirty)return;const e=e_.__isWebIOS14OrIPadOS14Env?this._nextFreeIAHandle:1,t=this.byteOffset,n=this.indexOffset;for(let i=0;i<e;++i){const e=this._iaPool[i],s=new Float32Array(this.vData.buffer,0,t>>2),r=new Uint16Array(this.iData.buffer,0,n),o=e.vertexBuffers[0];t>o.size&&o.resize(t),o.update(s),2*n>e.indexBuffer.size&&e.indexBuffer.resize(2*n),e.indexBuffer.update(r)}this._dirty=!1}createNewIA(e){let t,n,i;if(e_.__isWebIOS14OrIPadOS14Env||!this._iaPool[0]){const s=this._vertexFormatBytes=this._floatsPerVertex*Float32Array.BYTES_PER_ELEMENT,r=Uint16Array.BYTES_PER_ELEMENT,o=e.createBuffer(new Lr(Us.VERTEX|Us.TRANSFER_DST,ks.HOST|ks.DEVICE,s,s));i=e.createBuffer(new Lr(Us.INDEX|Us.TRANSFER_DST,ks.HOST|ks.DEVICE,r,r)),n=[o],this._iaInfo=new eo(this._attributes,n,i),t=e.createInputAssembler(this._iaInfo)}else t=e.createInputAssembler(this._iaInfo),n=this._iaInfo.vertexBuffers,i=this._iaInfo.indexBuffer;return{ia:t,vertexBuffers:n,indexBuffer:i}}}e("MeshBuffer",y4),y4.IB_SCALE=4;const x4=[wP.EventType.MOUSE_DOWN,wP.EventType.MOUSE_MOVE,wP.EventType.MOUSE_UP,wP.EventType.MOUSE_WHEEL],S4=[wP.EventType.TOUCH_START,wP.EventType.TOUCH_MOVE,wP.EventType.TOUCH_END,wP.EventType.TOUCH_CANCEL];new class{constructor(){this.priority=EP.UI,this._isListDirty=!1,this._inDispatchCount=0,this._pointerEventProcessorList=[],this._processorListToAdd=[],this._processorListToRemove=[],IP._registerEventDispatcher(this),pT.callbacksInvoker.on(uT.ADD_POINTER_EVENT_PROCESSOR,this.addPointerEventProcessor,this),pT.callbacksInvoker.on(uT.REMOVE_POINTER_EVENT_PROCESSOR,this.removePointerEventProcessor,this),pT.callbacksInvoker.on(uT.MARK_LIST_DIRTY,this._markListDirty,this)}dispatchEvent(e){const t=e.type;return S4.includes(t)?this.dispatchEventTouch(e):!x4.includes(t)||this.dispatchEventMouse(e)}addPointerEventProcessor(e){0===this._inDispatchCount?(this._pointerEventProcessorList.push(e),this._isListDirty=!0):(Ae.array.remove(this._processorListToRemove,e),this._processorListToAdd.push(e))}removePointerEventProcessor(e){0===this._inDispatchCount?(Ae.array.remove(this._pointerEventProcessorList,e),this._isListDirty=!0):(Ae.array.remove(this._processorListToAdd,e),this._processorListToRemove.push(e))}dispatchEventMouse(e){this._inDispatchCount++,this._sortPointerEventProcessorList();const t=this._pointerEventProcessorList,n=t.length;let i=!0;for(let s=0;s<n;++s){const n=t[s];if(n.isEnabled&&n.shouldHandleEventMouse&&n._handleEventMouse(e)){if(i=!1,!e.preventSwallow)break;e.preventSwallow=!1}}return--this._inDispatchCount<=0&&this._updatePointerEventProcessorList(),i}dispatchEventTouch(e){this._inDispatchCount++,this._sortPointerEventProcessorList();const t=this._pointerEventProcessorList,n=t.length,i=e.touch;let s=!0;for(let r=0;r<n;++r){const n=t[r];if(n.isEnabled&&n.shouldHandleEventTouch)if(e.type===oT.TOUCH_START){if(n._handleEventTouch(e)){if(n.claimedTouchIdList.push(i.getID()),s=!1,!e.preventSwallow)break;e.preventSwallow=!1}}else if(n.claimedTouchIdList.length>0){const t=n.claimedTouchIdList.indexOf(i.getID());if(-1!==t){if(n._handleEventTouch(e),e.type!==oT.TOUCH_END&&e.type!==oT.TOUCH_CANCEL||Ae.array.removeAt(n.claimedTouchIdList,t),s=!1,!e.preventSwallow)break;e.preventSwallow=!1}}}return--this._inDispatchCount<=0&&this._updatePointerEventProcessorList(),s}_updatePointerEventProcessorList(){const e=this._processorListToAdd,t=e.length;for(let n=0;n<t;++n)this.addPointerEventProcessor(e[n]);e.length=0;const n=this._processorListToRemove,i=n.length;for(let e=0;e<i;++e)this.removePointerEventProcessor(n[e]);n.length=0}_sortPointerEventProcessorList(){if(!this._isListDirty)return;const e=this._pointerEventProcessorList,t=e.length;for(let n=0;n<t;++n){const t=e[n],i=t.node._uiProps.uiTransformComp;t.cachedCameraPriority=i.cameraPriority}e.sort(this._sortByPriority),this._isListDirty=!1}_sortByPriority(e,t){const n=e.node,i=t.node;if(!(t&&i&&i.activeInHierarchy&&i._uiProps.uiTransformComp))return-1;if(!(e&&n&&n.activeInHierarchy&&n._uiProps.uiTransformComp))return 1;if(e.cachedCameraPriority!==t.cachedCameraPriority)return t.cachedCameraPriority-e.cachedCameraPriority;let s=n,r=i,o=!1;for(;(null===(a=s.parent)||void 0===a?void 0:a._id)!==(null===(c=r.parent)||void 0===c?void 0:c._id);){var a,c,l,h,_,u;s=null===(null===(l=s)||void 0===l||null===(h=l.parent)||void 0===h?void 0:h.parent)?(o=!0)&&i:s&&s.parent,r=null===(null===(_=r)||void 0===_||null===(u=_.parent)||void 0===u?void 0:u.parent)?(o=!0)&&n:r&&r.parent}if(s._id===r._id){if(s._id===i._id)return-1;if(s._id===n._id)return 1}const p=s?s.getSiblingIndex():0,d=r?r.getSiblingIndex():0;return o?p-d:d-p}_markListDirty(){this._isListDirty=!0}};const C4=new Ie((()=>({offset:0,length:0})),32);class T4{constructor(e,t,n,i,s){this.vertexAccessor=e,this.bufferId=t,this.vertexOffset=n,this.vb=i}}class b4 extends class{get attributes(){return this._attributes}get vertexFormatBytes(){return this._vertexFormatBytes}get floatsPerVertex(){return this._floatsPerVertex}constructor(e,t){this._device=null,this._attributes=null,this._vertexFormatBytes=void 0,this._floatsPerVertex=void 0,this._buffers=[],this._device=e,this._attributes=t,this._floatsPerVertex=Wq(t),this._vertexFormatBytes=this._floatsPerVertex*Float32Array.BYTES_PER_ELEMENT}initialize(){}reset(){}request(e=4,t=6){}appendBuffers(e,t){}uploadBuffers(){}destroy(){this._attributes.length=0}}{constructor(e,t){super(e,t),this._freeLists=[],this._allocateBuffer()}destroy(){for(let e=0;e<this._buffers.length;++e){this._buffers[e].destroy();const t=this._freeLists[e];for(let e=0;e<t.length;++e)C4.free(t[e])}this._buffers.length=0,this._freeLists.length=0,super.destroy()}reset(){for(let e=0;e<this._buffers.length;++e){const t=this._buffers[e];t.indexOffset=0,t.reset()}}getVertexBuffer(e){return this._buffers[e].vData}getIndexBuffer(e){return this._buffers[e].iData}getMeshBuffer(e){return this._buffers[e]}uploadBuffers(){for(let e=0;e<this._buffers.length;++e){const t=this._freeLists[e][0],n=this._buffers[e];(!t||t.length<n.vData.byteLength)&&n.uploadBuffers()}}appendIndices(e){}allocateChunk(e,t){const n=e*this.vertexFormatBytes;let i,s=null,r=0,o=-1,a=null;for(let e=0;e<this._buffers.length;++e){s=this._buffers[e],i=this._freeLists[e];for(let t=0;t<i.length;++t)if(i[t].length>=n){a=i[t],r=e,o=t;break}if(a)break}if(a||(r=this._allocateBuffer(),s=this._buffers[r],s&&s.checkCapacity(e,t)&&(o=0,a=this._freeLists[r][o])),a){const e=a.offset/this.vertexFormatBytes,i=new Float32Array(s.vData.buffer,a.offset,n>>2).fill(0);return this._allocateChunkFromEntry(r,o,a,n),new T4(this,r,e,i,t)}return T(9004,n),null}recycleChunk(e){const t=this._freeLists[e.bufferId],n=this._buffers[e.bufferId];let i=e.vertexOffset*this.vertexFormatBytes,s=e.vb.byteLength;if(0===s)return;let r=!1,o=0,a=null,c=t[o];for(;c&&c.offset<i;)a=c,c=t[++o];if(a&&0==i-(a.offset+a.length)&&(a.length+=s,i=a.offset,s=a.length,c&&c.offset-(i+s)==0&&(a.length+=c.length,t.splice(o,1),C4.free(c),c=null),r=!0),!r&&c){if(0==c.offset-(i+s))c.offset=i,c.length+=s;else{const e=C4.alloc();e.offset=i,e.length=s,t.splice(o,0,e)}r=!0}if(r)i+s===n.byteOffset&&(n.byteOffset=i);else{const e=C4.alloc();e.offset=i,e.length=s,t.push(e)}}_allocateChunkFromEntry(e,t,n,i){const s=n.length-i,r=n.offset+i,o=this._buffers[e];o.byteOffset<r&&(o.byteOffset=r),P(s>=0,9004,e,n.offset,n.length),0===s?(this._freeLists[e].splice(t,1),C4.free(n)):(n.offset+=i,n.length=s)}_allocateBuffer(){P(this._buffers.length===this._freeLists.length,9003);const e=new y4;e.initialize(this._device,this._attributes),this._buffers.push(e);const t=C4.alloc();t.offset=0,t.length=e.vData.byteLength;const n=[t];return this._freeLists.push(n),this._buffers.length-1}}const E4=new _o(null),A4=new xi;class P4{get currBufferAccessor(){return this._staticVBBuffer||(this._staticVBBuffer=this.switchBufferAccessor()),this._staticVBBuffer}get batches(){return this._batches}set currStaticRoot(e){this._currStaticRoot=e}set currIsStatic(e){this._currIsStatic=e}constructor(e){this.device=void 0,this._screens=[],this._staticVBBuffer=null,this._bufferAccessors=new Map,this._meshBufferUseCount=new Map,this._drawBatchPool=void 0,this._batches=void 0,this._currBID=-1,this._indexStart=0,this._emptyMaterial=new Ug,this._currRenderData=null,this._currMaterial=this._emptyMaterial,this._currTexture=null,this._currSampler=null,this._currStaticRoot=null,this._currComponent=null,this._currTransform=null,this._currTextureHash=0,this._currSamplerHash=0,this._currLayer=0,this._currDepthStencilStateStage=null,this._currIsStatic=!1,this._currHash=0,this._pOpacity=1,this._opacityDirty=0,this._descriptorSetCache=new I4,this._meshDataArray=[],this._root=e,this.device=e.device,this._batches=new De(64),this._drawBatchPool=new Ie((()=>new e0),128,(e=>e.destroy(this)))}initialize(){return!0}destroy(){for(let e=0;e<this._batches.length;e++)this._batches.array[e]&&this._batches.array[e].destroy(this);this._batches.destroy(),this._bufferAccessors.forEach((e=>{e.destroy()})),this._bufferAccessors.clear(),this._drawBatchPool&&this._drawBatchPool.destroy(),this._descriptorSetCache.destroy(),IY.sharedManager.destroy()}addScreen(e){this._screens.push(e),this._screens.sort(this._screenSort)}removeScreen(e){const t=this._screens.indexOf(e);-1!==t&&this._screens.splice(t,1)}sortScreens(){this._screens.sort(this._screenSort)}getFirstRenderCamera(e){if(e.scene&&e.scene.renderScene){const t=e.scene.renderScene.cameras;for(let n=0;n<t.length;n++){const i=t[n];if(i.visibility&e.layer)return i}}return null}update(){const e=this._screens;let t=0;for(let n=0;n<e.length;++n){const i=e[n],s=i._getRenderScene();if(!i.enabledInHierarchy||!s)continue;this._opacityDirty=0,this._pOpacity=1,this.walk(i.node),this.autoMergeBatches(this._currComponent);let r=0;if(this._batches.length>t)for(;t<this._batches.length;++t){const e=this._batches.array[t];if(e.model){const t=e.model.subModels;for(let e=0;e<t.length;e++)t[e].priority=r++}else e.descriptorSet=this._descriptorSetCache.getDescriptorSet(e);s.addBatch(e)}}}uploadBuffers(){this._batches.length>0&&(this._meshDataArray.forEach((e=>{e.uploadBuffers()})),this._bufferAccessors.forEach((e=>{e.uploadBuffers(),e.reset()})),this._descriptorSetCache.update())}reset(){for(let e=0;e<this._batches.length;++e){const t=this._batches.array[e];t.isStatic||(t.clear(),this._drawBatchPool.free(t))}this._bufferAccessors.forEach((e=>{e.reset()})),this._meshDataArray.forEach((e=>{e.freeIAPool()})),this._meshDataArray.length=0,this._staticVBBuffer=null,this._currBID=-1,this._indexStart=0,this._currHash=0,this._currLayer=0,this._currRenderData=null,this._currMaterial=this._emptyMaterial,this._currTexture=null,this._currSampler=null,this._currComponent=null,this._currTransform=null,this._meshBufferUseCount.clear(),this._batches.clear(),IY.sharedManager.reset()}switchBufferAccessor(e=Vq){const t=e===Vq?36:qq(e);if(!this._staticVBBuffer||this._staticVBBuffer.vertexFormatBytes!==t){let n=this._bufferAccessors.get(t);n||(n=new b4(this.device,e),this._bufferAccessors.set(t,n)),this._staticVBBuffer=n,this._currBID=-1}return this._staticVBBuffer}updateBuffer(e,t){const n=this.switchBufferAccessor(e);this._currBID!==t&&(this._currBID=t,this._indexStart=n.getMeshBuffer(t).indexOffset)}commitComp(e,t,n,i,s){let r,o=0,a=-1;if(t&&t.chunk){if(!t.isValid())return;o=t.dataHash,r=t.material,a=t.chunk.bufferId}e.stencilStage=IY.sharedManager.stage;const c=e.stencilStage;this._currHash===o&&0!==o&&this._currMaterial===r&&this._currDepthStencilStateStage===c||(this.autoMergeBatches(this._currComponent),t&&!t.isMeshBuffer&&this.updateBuffer(t.vertexFormat,a),this._currRenderData=t,this._currHash=t?t.dataHash:0,this._currComponent=e,this._currTransform=s,this._currMaterial=e.getRenderMaterial(0),this._currDepthStencilStateStage=c,this._currLayer=e.node.layer,n?(this._currTexture=n.getGFXTexture(),this._currSampler=n.getGFXSampler(),this._currTextureHash=n.getHash(),this._currSamplerHash=this._currSampler.hash):(this._currTexture=null,this._currSampler=null,this._currTextureHash=0,this._currSamplerHash=0)),i.fillBuffers(e,this)}commitModel(e,t,n){let s;this._currMaterial!==this._emptyMaterial&&this.autoMergeBatches(this._currComponent);let r=0;n&&(e.stencilStage!==PY.ENABLED&&e.stencilStage!==PY.DISABLED||(e.stencilStage=IY.sharedManager.stage),s=IY.sharedManager.getStencilStage(e.stencilStage,n),r=IY.sharedManager.getStencilHash(e.stencilStage));const o=i.director.getTotalFrames();t&&(t.updateTransform(o),t.updateUBOs(o));for(let i=0;i<t.subModels.length;i++){const o=this._drawBatchPool.alloc(),a=t.subModels[i];o.visFlags=e.node.layer,o.model=t,o.texture=null,o.sampler=null,o.useLocalData=null,s||(s=null),o.fillPasses(n,s,r,null,0,a.patches,this),o.inputAssembler=a.inputAssembler,o.model.visFlags=o.visFlags,o.descriptorSet=a.descriptorSet,this._batches.push(o)}this._currMaterial=this._emptyMaterial,this._currRenderData=null,this._currComponent=null,this._currTransform=null,this._currTexture=null,this._currSampler=null,this._currTextureHash=0,this._currLayer=0}setupStaticBatch(e,t){this.finishMergeBatches(),this._staticVBBuffer=t,this.currStaticRoot=e}endStaticBatch(){this.finishMergeBatches(),this.currStaticRoot=null,this._staticVBBuffer=null,this.switchBufferAccessor()}commitStaticBatch(e){this._batches.concat(e.drawBatchList),this.finishMergeBatches()}autoMergeBatches(e){const t=this._currMaterial;if(!t)return;let n;const i=this._currRenderData,s=this._staticVBBuffer;if(i&&i.isMeshBuffer)n=i.requestIA(this.device),-1===this._meshDataArray.indexOf(i)&&this._meshDataArray.push(i);else if(s){const e=this._currBID,t=s.getMeshBuffer(e);if(!t)return;const i=t.indexOffset-this._indexStart;if(i<=0)return;this._indexStart,t.indexOffset,t.setDirty(),n=t.requireFreeIA(this.device),n.firstIndex=this._indexStart,n.indexCount=i,this._indexStart=t.indexOffset}if(this._currBID=-1,!n)return;let r,o,a=0,c=0;e&&(r=-1===e.blendHash?null:e.getBlendState(),c=e.blendHash,o=null!==e.customMaterial?IY.sharedManager.getStencilStage(e.stencilStage,t):IY.sharedManager.getStencilStage(e.stencilStage),a=IY.sharedManager.getStencilHash(e.stencilStage));const l=this._currStaticRoot?this._currStaticRoot._requireDrawBatch():this._drawBatchPool.alloc();l.visFlags=this._currLayer,l.texture=this._currTexture,l.sampler=this._currSampler,l.inputAssembler=n,l.useLocalData=this._currTransform,l.textureHash=this._currTextureHash,l.samplerHash=this._currSamplerHash,l.fillPasses(t,o,a,r,c,null,this),this._batches.push(l)}forceMergeBatches(e,t,n){this._currMaterial=e,t?(this._currTexture=t.getGFXTexture(),this._currSampler=t.getGFXSampler(),this._currTextureHash=t.getHash(),this._currSamplerHash=this._currSampler.hash):(this._currTexture=this._currSampler=null,this._currTextureHash=this._currSamplerHash=0),this._currLayer=n.node.layer,this.autoMergeBatches(n)}finishMergeBatches(){this.autoMergeBatches(),this._currMaterial=this._emptyMaterial,this._currTexture=null,this._currComponent=null,this._currTransform=null,this._currTextureHash=0,this._currSamplerHash=0,this._currLayer=0}flushMaterial(e){this._currMaterial=e}walk(e,t=0){if(!e.activeInHierarchy)return;const n=e.children,i=e._uiProps,s=i.uiComp,r=this._pOpacity;let o=r;const a=s&&s.color?s.color.a/255:1;if(this._pOpacity=o*=a*i.localOpacity,i._opacity=o,i.colorDirty&&this._opacityDirty++,s&&s.enabledInHierarchy&&s.updateAssembler(this),this._opacityDirty&&s&&s.renderData&&s.renderData.vertexCount>0&&function(e,t){e.vertexFormat;const n=e.chunk.vb,i=e.floatStride;for(let e=i-1;e<n.length;e+=i)n[e]=t}(s.renderData,o),n.length>0&&!e._static)for(let e=0;e<n.length;++e){const i=n[e];this.walk(i,t)}i.colorDirty&&(this._opacityDirty--,i.colorDirty=!1),this._pOpacity=r,s&&s.enabledInHierarchy&&s.postUpdateAssembler(this),t+=1}_screenSort(e,t){return e.node.getSiblingIndex()-t.node.getSiblingIndex()}_releaseDescriptorSetCache(e){this._descriptorSetCache.releaseDescriptorSetCache(e)}}e("UI",P4);class w4{get descriptorSet(){return this._descriptorSet}constructor(){this._descriptorSet=null,this._transform=null,this._textureHash=0,this._samplerHash=0,this._localBuffer=null,this._transformUpdate=!0;const e=i.director.root.device;this._localData=new Float32Array(Ud.COUNT),this._localBuffer=e.createBuffer(new Lr(Us.UNIFORM|Us.TRANSFER_DST,ks.HOST|ks.DEVICE,Ud.SIZE,Ud.SIZE))}initialize(e){const t=i.director.root.device;this._transform=e.useLocalData,this._textureHash=e.textureHash,this._samplerHash=e.samplerHash,E4.layout=e.passes[0].localSetLayout,this._descriptorSet=t.createDescriptorSet(E4),this._descriptorSet.bindBuffer(Ud.BINDING,this._localBuffer);const n=yd.SAMPLER_SPRITE;this._descriptorSet.bindTexture(n,e.texture),this._descriptorSet.bindSampler(n,e.sampler),this._descriptorSet.update(),this._transformUpdate=!0}updateTransform(e){e!==this._transform&&(this._transform=e,this._transformUpdate=!0,this.uploadLocalData())}equals(e,t,n){return this._transform===e&&this._textureHash===t&&this._samplerHash===n}reset(){this._transform=null,this._textureHash=0,this._samplerHash=0}destroy(){this._localBuffer&&(this._localBuffer.destroy(),this._localBuffer=null),this._descriptorSet&&(this._descriptorSet.destroy(),this._descriptorSet=null),this._localData=null}isValid(){return this._transform&&this._transform.isValid}uploadLocalData(){const e=this._transform;if((e.hasChangedFlags||e._dirtyFlags)&&(e.updateWorldTransform(),this._transformUpdate=!0),this._transformUpdate){const t=e.worldMatrix;xi.toArray(this._localData,t,Ud.MAT_WORLD_OFFSET),xi.inverseTranspose(A4,t),xi.toArray(this._localData,A4,Ud.MAT_WORLD_IT_OFFSET),this._localBuffer.update(this._localData),this._transformUpdate=!1}}}class I4{constructor(){this._descriptorSetCache=new Map,this._dsCacheHashByTexture=new Map,this._localDescriptorSetCache=[],this._localCachePool=void 0,this._localCachePool=new Ie((()=>new w4),16,(e=>e.destroy()))}getDescriptorSet(e){const t=i.director.root;let n;if(e.useLocalData){const t=this._localDescriptorSetCache;for(let n=0,i=t.length;n<i;n++){const i=t[n];if(i.equals(e.useLocalData,e.textureHash,e.samplerHash))return i.descriptorSet}const n=this._localCachePool.alloc();return n.initialize(e),this._localDescriptorSetCache.push(n),n.descriptorSet}if(n=e.textureHash^e.samplerHash,this._descriptorSetCache.has(n))return this._descriptorSetCache.get(n);{E4.layout=e.passes[0].localSetLayout;const i=t.device.createDescriptorSet(E4),s=yd.SAMPLER_SPRITE;return i.bindTexture(s,e.texture),i.bindSampler(s,e.sampler),i.update(),this._descriptorSetCache.set(n,i),this._dsCacheHashByTexture.set(e.textureHash,n),i}}update(){const e=this._localDescriptorSetCache,t=[];e.forEach((n=>{if(n.isValid())n.uploadLocalData();else{n.reset();const i=e.indexOf(n);t.push(i)}}));for(let n=t.length-1;n>=0;n--)e.splice(t[n],1)}reset(){this._localDescriptorSetCache.forEach((e=>{this._localCachePool.free(e)})),this._localDescriptorSetCache.length=0}releaseDescriptorSetCache(e){const t=this._dsCacheHashByTexture.get(e);t&&this._descriptorSetCache.has(t)&&(this._descriptorSetCache.get(t).destroy(),this._descriptorSetCache.delete(t),this._dsCacheHashByTexture.delete(e))}destroy(){this._descriptorSetCache.forEach((e=>{e.destroy()})),this._descriptorSetCache.clear(),this._dsCacheHashByTexture.clear(),this._localDescriptorSetCache.length=0,this._localCachePool.destroy()}}i.internal.Batcher2D=P4,bn(y4.prototype,"MeshBuffer",["byteStart","vertexStart","indicesStart","request"].map((e=>({name:e,suggest:`please use meshBuffer.accessor.${e} instead`})))),Cn(y4.prototype,"MeshBuffer",[{name:"indicesOffset",newName:"indexOffset"}]),Tn(y4.prototype,"MeshBuffer",[{name:"vertexBuffers"},{name:"indexBuffer"}]),Cn(P4.prototype,"Batcher2D",[{name:"currBufferBatch",newName:"currBufferAccessor"},{name:"acquireBufferBatch",newName:"switchBufferAccessor"}]),Tn(eY.prototype,"MeshRenderData",[{name:"formatByte"},{name:"byteStart"},{name:"byteCount"}]),Cn(eY.prototype,"MeshRenderData",[{name:"indicesStart",newName:"indexStart"}]);let R4=null,D4=-1;const O4="BES bswy:->@123丁ぁᄁ",M4=Object.create(null),N4=[],L4=3e3,z4=(()=>{let e;return()=>{if(void 0===e)if("FontFace"in window){const t=/Gecko.*Firefox\/(\d+)/.exec(window.navigator.userAgent),n=/OS X.*Version\/10\..*Safari/.exec(window.navigator.userAgent)&&/Apple/.exec(window.navigator.vendor);e=t?parseInt(t[1],10)>42:!n}else e=!1;return e}})();function F4(){let e=!0;const t=Date.now();for(let n=N4.length-1;n>=0;n--){const i=N4[n],s=i.fontFamilyName;if(t-i.startTime>L4){T(4933,s),i.onComplete(null,s),N4.splice(n,1);continue}const r=i.refWidth,o=`40px ${s}`;R4.font=o,r!==UX(R4,O4,o)?(N4.splice(n,1),i.onComplete(null,s)):e=!1}e&&(clearInterval(D4),D4=-1)}function B4(e,t,n){const i=function(e){const t=e.lastIndexOf(".ttf");if(-1===t)return e;const n=e.lastIndexOf("/");let i;return i=-1===n?`${e.substring(0,t)}_LABEL`:`${e.substring(n+1,t)}_LABEL`,-1!==i.indexOf(" ")&&(i=`"${i}"`),i}(e);if(M4[i])return void n(null,i);if(!R4){const e=document.createElement("canvas");e.width=100,e.height=100,R4=e.getContext("2d")}const s=UX(R4,O4,`40px ${i}`),r=document.createElement("style");r.type="text/css";let o="";Number.isNaN(i)?o+=`@font-face { font-family:${i}; src:`:o+=`@font-face { font-family:"${i}"; src:`,o+=`url("${e}");`,r.textContent=`${o}}`,document.body.appendChild(r);const a=document.createElement("div"),c=a.style;if(c.fontFamily=i,a.innerHTML=".",c.position="absolute",c.left="-100px",c.top="-100px",document.body.appendChild(a),z4())!function(e,t,n){const i=new Promise(((n,i)=>{const s=()=>{Date.now()-e>=L4?i():document.fonts.load(`40px ${t}`).then((e=>{e.length>=1?n():setTimeout(s,100)}),(()=>{i()}))};s()}));let s=null;const r=new Promise(((e,t)=>{s=setTimeout(t,L4)}));Promise.race([r,i]).then((()=>{s&&(clearTimeout(s),s=null),n(null,t)}),(()=>{T(4933,t),n(null,t)}))}(Date.now(),i,n);else{const e={fontFamilyName:i,refWidth:s,onComplete:n,startTime:Date.now()};N4.push(e),-1===D4&&(D4=setInterval(F4,100))}M4[i]=r}function U4(e,t,n,i){const s=new dX;s._nativeUrl=e,s._nativeAsset=t,i(null,s)}var G4,H4,k4,V4,j4,W4,q4,X4,Y4,K4,$4,Z4,Q4,J4,e3,t3,n3,i3,s3,r3,o3,a3,c3,l3,h3,_3,u3,p3,d3,f3,m3,g3,v3,y3,x3,S3,C3,T3,b3,E3,A3,P3,w3,I3,R3,D3,O3,M3,N3,L3;$I.register({".font":B4,".eot":B4,".ttf":B4,".woff":B4,".svg":B4,".ttc":B4}),iR.register({".font":U4,".eot":U4,".ttf":U4,".woff":U4,".svg":U4,".ttc":U4}),i.UI={MeshBuffer:y4,spriteAssembler:p4,graphicsAssembler:d1,labelAssembler:z2,RenderData:JX,MeshRenderData:eY,QuadRenderData:tY};const z3=new ti;var F3,B3;let U3;!function(e){e[e.NONE=0]="NONE",e[e.COLOR=1]="COLOR",e[e.SPRITE=2]="SPRITE",e[e.SCALE=3]="SCALE"}(F3||(F3={})),Fe(F3),function(e){e.NORMAL="normal",e.HOVER="hover",e.PRESSED="pressed",e.DISABLED="disabled"}(B3||(B3={})),function(e){e.CLICK="click"}(U3||(U3={}));let G3,H3,k3,V3=function(t){return e({Button:t,ButtonComponent:t}),t}((G4=Zc("cc.Button"),H4=pl(),k4=Jc(110),V4=ll(),j4=Qc(wY),W4=Ol(Yx),q4=bl(),X4=vl(),Y4=bl(),K4=vl(),$4=Ol(F3),Z4=bl(),Q4=vl(),J4=vl(),e3=vl(),t3=vl(),n3=vl(),i3=xl(),s3=Sl(),r3=vl(),o3=vl(),a3=Ol(sX),c3=vl(),l3=Ol(sX),h3=vl(),_3=Ol(sX),u3=vl(),p3=Ol(sX),d3=vl(),f3=Ol([HR]),m3=bl(),g3=vl(),G4(v3=H4(v3=k4(v3=V4(v3=j4(v3=cl((L3=N3=class extends jh{constructor(...e){super(...e),Fc(this,"clickEvents",x3,this),Fc(this,"_interactable",S3,this),Fc(this,"_transition",C3,this),Fc(this,"_normalColor",T3,this),Fc(this,"_hoverColor",b3,this),Fc(this,"_pressedColor",E3,this),Fc(this,"_disabledColor",A3,this),Fc(this,"_normalSprite",P3,this),Fc(this,"_hoverSprite",w3,this),Fc(this,"_pressedSprite",I3,this),Fc(this,"_disabledSprite",R3,this),Fc(this,"_duration",D3,this),Fc(this,"_zoomScale",O3,this),Fc(this,"_target",M3,this),this._pressed=!1,this._hovered=!1,this._fromColor=new ti,this._toColor=new ti,this._time=0,this._transitionFinished=!0,this._fromScale=new ri,this._toScale=new ri,this._originalScale=null,this._sprite=null,this._targetScale=new ri}get target(){return this._target||this.node}set target(e){this._target!==e&&(this._target&&this._unregisterTargetEvent(this._target),this._target=e,this._applyTarget())}get interactable(){return this._interactable}set interactable(e){this._interactable=e,this._updateState(),this._interactable||this._resetState()}set _resizeToTarget(e){e&&this._resizeNodeToTargetNode()}get transition(){return this._transition}set transition(e){this._transition!==e&&(this._transition===F3.COLOR?this._updateColorTransition(B3.NORMAL):this._transition===F3.SPRITE&&this._updateSpriteTransition(B3.NORMAL),this._transition=e,this._updateState())}get normalColor(){return this._normalColor}set normalColor(e){this._normalColor!==e&&(this._normalColor.set(e),this._updateState())}get pressedColor(){return this._pressedColor}set pressedColor(e){this._pressedColor!==e&&this._pressedColor.set(e)}get hoverColor(){return this._hoverColor}set hoverColor(e){this._hoverColor!==e&&this._hoverColor.set(e)}get disabledColor(){return this._disabledColor}set disabledColor(e){this._disabledColor!==e&&(this._disabledColor.set(e),this._updateState())}get duration(){return this._duration}set duration(e){this._duration!==e&&(this._duration=e)}get zoomScale(){return this._zoomScale}set zoomScale(e){this._zoomScale!==e&&(this._zoomScale=e)}get normalSprite(){return this._normalSprite}set normalSprite(e){if(this._normalSprite===e)return;this._normalSprite=e;const t=this.node.getComponent(VQ);t&&(t.spriteFrame=e),this._updateState()}get pressedSprite(){return this._pressedSprite}set pressedSprite(e){this._pressedSprite!==e&&(this._pressedSprite=e,this._updateState())}get hoverSprite(){return this._hoverSprite}set hoverSprite(e){this._hoverSprite!==e&&(this._hoverSprite=e,this._updateState())}get disabledSprite(){return this._disabledSprite}set disabledSprite(e){this._disabledSprite!==e&&(this._disabledSprite=e,this._updateState())}__preload(){this.target||(this.target=this.node);const e=this.node.getComponent(VQ);e&&(this._normalSprite=e.spriteFrame),this._applyTarget(),this._resetState()}onEnable(){this._registerNodeEvent()}onDisable(){this._resetState(),this._unregisterNodeEvent()}onDestroy(){this.target.isValid&&this._unregisterTargetEvent(this.target)}update(e){const t=this.target;if(this._transitionFinished||!t)return;if(this._transition!==F3.COLOR&&this._transition!==F3.SCALE)return;this._time+=e;let n=1;if(this._duration>0&&(n=this._time/this._duration),n>=1&&(n=1),this._transition===F3.COLOR){const e=t._uiProps.uiComp;ti.lerp(z3,this._fromColor,this._toColor,n),e&&(e.color=z3)}else this.transition===F3.SCALE&&(t.getScale(this._targetScale),this._targetScale.x=Bn(this._fromScale.x,this._toScale.x,n),this._targetScale.y=Bn(this._fromScale.y,this._toScale.y,n),t.setScale(this._targetScale));1===n&&(this._transitionFinished=!0)}_resizeNodeToTargetNode(){this.target&&this.target._uiProps.uiTransformComp}_resetState(){this._pressed=!1,this._hovered=!1;const e=this.target;if(!e)return;const t=this._transition;if(t===F3.COLOR&&this._interactable){const t=e.getComponent($Y);t&&(t.color=this._normalColor)}else t===F3.SCALE&&this._originalScale&&e.setScale(this._originalScale);this._transitionFinished=!0}_registerNodeEvent(){this.node.on(cx.TOUCH_START,this._onTouchBegan,this),this.node.on(cx.TOUCH_MOVE,this._onTouchMove,this),this.node.on(cx.TOUCH_END,this._onTouchEnded,this),this.node.on(cx.TOUCH_CANCEL,this._onTouchCancel,this),this.node.on(cx.MOUSE_ENTER,this._onMouseMoveIn,this),this.node.on(cx.MOUSE_LEAVE,this._onMouseMoveOut,this)}_registerTargetEvent(e){e.on(cx.TRANSFORM_CHANGED,this._onTargetTransformChanged,this)}_unregisterNodeEvent(){this.node.off(cx.TOUCH_START,this._onTouchBegan,this),this.node.off(cx.TOUCH_MOVE,this._onTouchMove,this),this.node.off(cx.TOUCH_END,this._onTouchEnded,this),this.node.off(cx.TOUCH_CANCEL,this._onTouchCancel,this),this.node.off(cx.MOUSE_ENTER,this._onMouseMoveIn,this),this.node.off(cx.MOUSE_LEAVE,this._onMouseMoveOut,this)}_unregisterTargetEvent(e){e.off(cx.TRANSFORM_CHANGED)}_getTargetSprite(e){let t=null;return e&&(t=e.getComponent(VQ)),t}_applyTarget(){this.target&&(this._sprite=this._getTargetSprite(this.target),this._originalScale||(this._originalScale=new ri),ri.copy(this._originalScale,this.target.getScale()),this._registerTargetEvent(this.target))}_onTargetSpriteFrameChanged(e){this._transition===F3.SPRITE&&this._setCurrentStateSpriteFrame(e.spriteFrame)}_setCurrentStateSpriteFrame(e){if(e)switch(this._getButtonState()){case B3.NORMAL:this._normalSprite=e;break;case B3.HOVER:this._hoverSprite=e;break;case B3.PRESSED:this._pressedSprite=e;break;case B3.DISABLED:this._disabledSprite=e}}_onTargetColorChanged(e){this._transition===F3.COLOR&&this._setCurrentStateColor(e)}_setCurrentStateColor(e){switch(this._getButtonState()){case B3.NORMAL:this._normalColor=e;break;case B3.HOVER:this._hoverColor=e;break;case B3.PRESSED:this._pressedColor=e;break;case B3.DISABLED:this._disabledColor=e}}_onTargetTransformChanged(e){e&gg.SCALE&&this._originalScale&&this._transition===F3.SCALE&&this._transitionFinished&&ri.copy(this._originalScale,this.target.getScale())}_onTouchBegan(e){this._interactable&&this.enabledInHierarchy&&(this._pressed=!0,this._updateState(),e&&(e.propagationStopped=!0))}_onTouchMove(e){if(!this._interactable||!this.enabledInHierarchy||!this._pressed)return;if(!e)return;const t=e.touch;if(!t)return;const n=this.node._uiProps.uiTransformComp.isHit(t.getUILocation());if(this._transition===F3.SCALE&&this.target&&this._originalScale)n?(ri.copy(this._fromScale,this._originalScale),ri.multiplyScalar(this._toScale,this._originalScale,this._zoomScale),this._transitionFinished=!1):(this._time=0,this._transitionFinished=!0,this.target.setScale(this._originalScale));else{let e;e=n?B3.PRESSED:B3.NORMAL,this._applyTransition(e)}e&&(e.propagationStopped=!0)}_onTouchEnded(e){this._interactable&&this.enabledInHierarchy&&(this._pressed&&(HR.emitEvents(this.clickEvents,e),this.node.emit(U3.CLICK,this)),this._pressed=!1,this._updateState(),e&&(e.propagationStopped=!0))}_onTouchCancel(e){this._interactable&&this.enabledInHierarchy&&(this._pressed=!1,this._updateState())}_onMouseMoveIn(e){!this._pressed&&this.interactable&&this.enabledInHierarchy&&(this._transition!==F3.SPRITE||this._hoverSprite)&&(this._hovered||(this._hovered=!0,this._updateState()))}_onMouseMoveOut(e){this._hovered&&(this._hovered=!1,this._updateState())}_updateState(){const e=this._getButtonState();this._applyTransition(e)}_getButtonState(){let e=B3.NORMAL;return this._interactable?this._pressed?e=B3.PRESSED:this._hovered&&(e=B3.HOVER):e=B3.DISABLED,e.toString()}_updateColorTransition(e){var t;const n=this[`${e}Color`],i=null===(t=this.target)||void 0===t?void 0:t.getComponent($Y);i&&(e===B3.DISABLED?i.color=n:(this._fromColor=i.color.clone(),this._toColor=n,this._time=0,this._transitionFinished=!1))}_updateSpriteTransition(e){const t=this[`${e}Sprite`];this._sprite&&t&&(this._sprite.spriteFrame=t)}_updateScaleTransition(e){this._interactable&&(e===B3.PRESSED?this._zoomUp():this._zoomBack())}_zoomUp(){this._originalScale&&(ri.copy(this._fromScale,this._originalScale),ri.multiplyScalar(this._toScale,this._originalScale,this._zoomScale),this._time=0,this._transitionFinished=!1)}_zoomBack(){this.target&&this._originalScale&&(ri.copy(this._fromScale,this.target.getScale()),ri.copy(this._toScale,this._originalScale),this._time=0,this._transitionFinished=!1)}_applyTransition(e){const t=this._transition;t===F3.COLOR?this._updateColorTransition(e):t===F3.SPRITE?this._updateSpriteTransition(e):t===F3.SCALE&&this._updateScaleTransition(e)}},N3.Transition=F3,N3.EventType=U3,Bc((y3=L3).prototype,"target",[W4,q4,X4],Object.getOwnPropertyDescriptor(y3.prototype,"target"),y3.prototype),Bc(y3.prototype,"interactable",[Y4,K4],Object.getOwnPropertyDescriptor(y3.prototype,"interactable"),y3.prototype),Bc(y3.prototype,"transition",[$4,Z4,Q4],Object.getOwnPropertyDescriptor(y3.prototype,"transition"),y3.prototype),Bc(y3.prototype,"normalColor",[J4],Object.getOwnPropertyDescriptor(y3.prototype,"normalColor"),y3.prototype),Bc(y3.prototype,"pressedColor",[e3],Object.getOwnPropertyDescriptor(y3.prototype,"pressedColor"),y3.prototype),Bc(y3.prototype,"hoverColor",[t3],Object.getOwnPropertyDescriptor(y3.prototype,"hoverColor"),y3.prototype),Bc(y3.prototype,"disabledColor",[n3],Object.getOwnPropertyDescriptor(y3.prototype,"disabledColor"),y3.prototype),Bc(y3.prototype,"duration",[i3,s3,r3],Object.getOwnPropertyDescriptor(y3.prototype,"duration"),y3.prototype),Bc(y3.prototype,"zoomScale",[o3],Object.getOwnPropertyDescriptor(y3.prototype,"zoomScale"),y3.prototype),Bc(y3.prototype,"normalSprite",[a3,c3],Object.getOwnPropertyDescriptor(y3.prototype,"normalSprite"),y3.prototype),Bc(y3.prototype,"pressedSprite",[l3,h3],Object.getOwnPropertyDescriptor(y3.prototype,"pressedSprite"),y3.prototype),Bc(y3.prototype,"hoverSprite",[_3,u3],Object.getOwnPropertyDescriptor(y3.prototype,"hoverSprite"),y3.prototype),Bc(y3.prototype,"disabledSprite",[p3,d3],Object.getOwnPropertyDescriptor(y3.prototype,"disabledSprite"),y3.prototype),x3=Bc(y3.prototype,"clickEvents",[f3,il,m3,g3],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),S3=Bc(y3.prototype,"_interactable",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),C3=Bc(y3.prototype,"_transition",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return F3.NONE}}),T3=Bc(y3.prototype,"_normalColor",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return ti.WHITE.clone()}}),b3=Bc(y3.prototype,"_hoverColor",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new ti(211,211,211,255)}}),E3=Bc(y3.prototype,"_pressedColor",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return ti.WHITE.clone()}}),A3=Bc(y3.prototype,"_disabledColor",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new ti(124,124,124,255)}}),P3=Bc(y3.prototype,"_normalSprite",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),w3=Bc(y3.prototype,"_hoverSprite",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),I3=Bc(y3.prototype,"_pressedSprite",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),R3=Bc(y3.prototype,"_disabledSprite",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),D3=Bc(y3.prototype,"_duration",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.1}}),O3=Bc(y3.prototype,"_zoomScale",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1.2}}),M3=Bc(y3.prototype,"_target",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),v3=y3))||v3)||v3)||v3)||v3)||v3)||v3));(function(e){e[e.DEFAULT=0]="DEFAULT",e[e.DONE=1]="DONE",e[e.SEND=2]="SEND",e[e.SEARCH=3]="SEARCH",e[e.GO=4]="GO",e[e.NEXT=5]="NEXT"})(G3||(G3={})),Ne(G3),function(e){e[e.ANY=0]="ANY",e[e.EMAIL_ADDR=1]="EMAIL_ADDR",e[e.NUMERIC=2]="NUMERIC",e[e.PHONE_NUMBER=3]="PHONE_NUMBER",e[e.URL=4]="URL",e[e.DECIMAL=5]="DECIMAL",e[e.SINGLE_LINE=6]="SINGLE_LINE"}(H3||(H3={})),Ne(H3),function(e){e[e.PASSWORD=0]="PASSWORD",e[e.SENSITIVE=1]="SENSITIVE",e[e.INITIAL_CAPS_WORD=2]="INITIAL_CAPS_WORD",e[e.INITIAL_CAPS_SENTENCE=3]="INITIAL_CAPS_SENTENCE",e[e.INITIAL_CAPS_ALL_CHARACTERS=4]="INITIAL_CAPS_ALL_CHARACTERS",e[e.DEFAULT=5]="DEFAULT"}(k3||(k3={})),Ne(k3);var j3,W3,q3,X3,Y3,K3,$3,Z3,Q3,J3,e5,t5,n5,i5,s5,r5,o5,a5,c5,l5,h5,_5,u5,p5,d5,f5,m5,g5,v5,y5,x5,S5,C5,T5,b5,E5,A5,P5,w5,I5,R5,D5,O5,M5,N5,L5,z5,F5,B5,U5,G5,H5,k5,V5,j5,W5,q5,X5,Y5,K5,$5;new xi,new xi,new ri,function(e){e.EDITING_DID_BEGAN="editing-did-began",e.EDITING_DID_ENDED="editing-did-ended",e.TEXT_CHANGED="text-changed",e.EDITING_RETURN="editing-return"}($5||($5={}));let Z5=function(t){return e({EditBox:t,EditBoxComponent:t}),t}((j3=Zc("cc.EditBox"),W3=pl(),q3=Jc(110),X3=ll(),Y3=Qc(wY),K3=bl(),$3=vl(),Z3=bl(),Q3=vl(),J3=Ol(m$),e5=bl(),t5=vl(),n5=Ol(m$),i5=bl(),s5=vl(),r5=Ol(sX),o5=bl(),a5=vl(),c5=Ol(k3),l5=bl(),h5=vl(),_5=Ol(H3),u5=bl(),p5=vl(),d5=Ol(G3),f5=bl(),m5=vl(),g5=bl(),v5=vl(),y5=bl(),x5=vl(),S5=Ol([HR]),C5=bl(),T5=vl(),b5=Ol([HR]),E5=bl(),A5=vl(),P5=Ol([HR]),w5=bl(),I5=vl(),R5=Ol([HR]),D5=bl(),O5=vl(),j3(M5=W3(M5=q3(M5=X3(M5=Y3(M5=cl((K5=Y5=class e extends jh{constructor(...e){super(...e),Fc(this,"editingDidBegan",L5,this),Fc(this,"textChanged",z5,this),Fc(this,"editingDidEnded",F5,this),Fc(this,"editingReturn",B5,this),this._impl=null,this._background=null,Fc(this,"_textLabel",U5,this),Fc(this,"_placeholderLabel",G5,this),Fc(this,"_returnType",H5,this),Fc(this,"_string",k5,this),Fc(this,"_tabIndex",V5,this),Fc(this,"_backgroundImage",j5,this),Fc(this,"_inputFlag",W5,this),Fc(this,"_inputMode",q5,this),Fc(this,"_maxLength",X5,this),this._isLabelVisible=!1}get string(){return this._string}set string(e){this._maxLength>=0&&e.length>=this._maxLength&&(e=e.slice(0,this._maxLength)),this._string=e,this._updateString(e)}get placeholder(){return this._placeholderLabel?this._placeholderLabel.string:""}set placeholder(e){this._placeholderLabel&&(this._placeholderLabel.string=e)}get textLabel(){return this._textLabel}set textLabel(e){this._textLabel!==e&&(this._textLabel=e,this._textLabel&&(this._updateTextLabel(),this._updateLabels()))}get placeholderLabel(){return this._placeholderLabel}set placeholderLabel(e){this._placeholderLabel!==e&&(this._placeholderLabel=e,this._placeholderLabel&&(this._updatePlaceholderLabel(),this._updateLabels()))}get backgroundImage(){return this._backgroundImage}set backgroundImage(e){this._backgroundImage!==e&&(this._backgroundImage=e,this._ensureBackgroundSprite(),this._background.spriteFrame=e)}get inputFlag(){return this._inputFlag}set inputFlag(e){this._inputFlag=e,this._updateString(this._string)}get inputMode(){return this._inputMode}set inputMode(e){this._inputMode!==e&&(this._inputMode=e,this._updateTextLabel(),this._updatePlaceholderLabel())}get returnType(){return this._returnType}set returnType(e){this._returnType=e}get maxLength(){return this._maxLength}set maxLength(e){this._maxLength=e}get tabIndex(){return this._tabIndex}set tabIndex(e){this._tabIndex!==e&&(this._tabIndex=e,this._impl&&this._impl.setTabIndex(e))}__preload(){this._init()}onEnable(){this._registerEvent(),this._ensureBackgroundSprite(),this._impl&&this._impl.onEnable()}update(){this._impl&&this._impl.update()}onDisable(){this._unregisterEvent(),this._unregisterBackgroundEvent(),this._impl&&this._impl.onDisable()}onDestroy(){this._impl&&this._impl.clear()}setFocus(){this._impl&&this._impl.setFocus(!0)}focus(){this._impl&&this._impl.setFocus(!0)}blur(){this._impl&&this._impl.setFocus(!1)}isFocused(){return!!this._impl&&this._impl.isFocused()}_editBoxEditingDidBegan(){HR.emitEvents(this.editingDidBegan,this),this.node.emit($5.EDITING_DID_BEGAN,this)}_editBoxEditingDidEnded(){HR.emitEvents(this.editingDidEnded,this),this.node.emit($5.EDITING_DID_ENDED,this)}_editBoxTextChanged(e){e=this._updateLabelStringStyle(e,!0),this.string=e,HR.emitEvents(this.textChanged,e,this),this.node.emit($5.TEXT_CHANGED,this)}_editBoxEditingReturn(){HR.emitEvents(this.editingReturn,this),this.node.emit($5.EDITING_RETURN,this)}_showLabels(){this._isLabelVisible=!0,this._updateLabels()}_hideLabels(){this._isLabelVisible=!1,this._textLabel&&(this._textLabel.node.active=!1),this._placeholderLabel&&(this._placeholderLabel.node.active=!1)}_onTouchBegan(e){e.propagationStopped=!0}_onTouchCancel(e){e.propagationStopped=!0}_onTouchEnded(e){this._impl&&this._impl.beginEditing(),e.propagationStopped=!0}_init(){this._updatePlaceholderLabel(),this._updateTextLabel(),this._isLabelVisible=!0,this.node.on(cx.SIZE_CHANGED,this._resizeChildNodes,this),(this._impl=new e._EditBoxImpl).init(this),this._updateString(this._string),this._syncSize()}_ensureBackgroundSprite(){if(!this._background){let e=this.node.getComponent(VQ);e||(e=this.node.addComponent(VQ)),e!==this._background&&(e.type=VQ.Type.SLICED,e.spriteFrame=this._backgroundImage,this._background=e,this._registerBackgroundEvent())}}_updateTextLabel(){let e=this._textLabel;if(!e){let t=this.node.getChildByName("TEXT_LABEL");t||(t=new Yx("TEXT_LABEL"),t.layer=this.node.layer),e=t.getComponent(m$),e||(e=t.addComponent(m$)),t.parent=this.node,this._textLabel=e}this._textLabel.node._uiProps.uiTransformComp.setAnchorPoint(0,1),e.overflow=m$.Overflow.CLAMP,this._inputMode===H3.ANY?(e.verticalAlign=h$.TOP,e.enableWrapText=!0):e.enableWrapText=!1,e.string=this._updateLabelStringStyle(this._string)}_updatePlaceholderLabel(){let e=this._placeholderLabel;if(!e){let t=this.node.getChildByName("PLACEHOLDER_LABEL");t||(t=new Yx("PLACEHOLDER_LABEL"),t.layer=this.node.layer),e=t.getComponent(m$),e||(e=t.addComponent(m$)),t.parent=this.node,this._placeholderLabel=e}this._placeholderLabel.node._uiProps.uiTransformComp.setAnchorPoint(0,1),e.overflow=m$.Overflow.CLAMP,this._inputMode===H3.ANY?(e.verticalAlign=h$.TOP,e.enableWrapText=!0):e.enableWrapText=!1,e.string=this.placeholder}_syncSize(){const e=this.node._uiProps.uiTransformComp,t=e.contentSize;if(this._background){const n=this._background.node._uiProps.uiTransformComp;n.anchorPoint=e.anchorPoint,n.setContentSize(t)}this._updateLabelPosition(t),this._impl&&this._impl.setSize(t.width,t.height)}_updateLabels(){if(this._isLabelVisible){const e=this._string;this._textLabel&&(this._textLabel.node.active=""!==e),this._placeholderLabel&&(this._placeholderLabel.node.active=""===e)}}_updateString(e){const t=this._textLabel;if(!t)return;let n=e;n&&(n=this._updateLabelStringStyle(n)),t.string=n,this._updateLabels()}_updateLabelStringStyle(e,t=!1){const n=this._inputFlag;if(t||n!==k3.PASSWORD)n===k3.INITIAL_CAPS_ALL_CHARACTERS?e=e.toUpperCase():n===k3.INITIAL_CAPS_WORD?e=e.replace(/(?:^|\s)\S/g,(e=>e.toUpperCase())):n===k3.INITIAL_CAPS_SENTENCE&&(e=(i=e).charAt(0).toUpperCase()+i.slice(1));else{let t="";const n=e.length;for(let e=0;e<n;++e)t+="●";e=t}var i;return e}_registerEvent(){this.node.on(cx.TOUCH_START,this._onTouchBegan,this),this.node.on(cx.TOUCH_END,this._onTouchEnded,this)}_unregisterEvent(){this.node.off(cx.TOUCH_START,this._onTouchBegan,this),this.node.off(cx.TOUCH_END,this._onTouchEnded,this)}_onBackgroundSpriteFrameChanged(){this._background&&(this.backgroundImage=this._background.spriteFrame)}_registerBackgroundEvent(){const e=this._background&&this._background.node;null==e||e.on(VQ.EventType.SPRITE_FRAME_CHANGED,this._onBackgroundSpriteFrameChanged,this)}_unregisterBackgroundEvent(){const e=this._background&&this._background.node;null==e||e.off(VQ.EventType.SPRITE_FRAME_CHANGED,this._onBackgroundSpriteFrameChanged,this)}_updateLabelPosition(e){const t=this.node._uiProps.uiTransformComp,n=-t.anchorX*t.width,i=-t.anchorY*t.height,s=this._placeholderLabel,r=this._textLabel;r&&(r.node._uiProps.uiTransformComp.setContentSize(e.width-2,e.height),r.node.setPosition(n+2,i+e.height,r.node.position.z),this._inputMode===H3.ANY&&(r.verticalAlign=h$.TOP),r.enableWrapText=this._inputMode===H3.ANY),s&&(s.node._uiProps.uiTransformComp.setContentSize(e.width-2,e.height),s.lineHeight=e.height,s.node.setPosition(n+2,i+e.height,s.node.position.z),this._inputMode===H3.ANY&&(s.verticalAlign=h$.TOP),s.enableWrapText=this._inputMode===H3.ANY)}_resizeChildNodes(){const e=this.node._uiProps.uiTransformComp,t=this._textLabel&&this._textLabel.node;t&&(t.setPosition(-e.width/2,e.height/2,t.position.z),t._uiProps.uiTransformComp.setContentSize(e.contentSize));const n=this._placeholderLabel&&this._placeholderLabel.node;n&&(n.setPosition(-e.width/2,e.height/2,n.position.z),n._uiProps.uiTransformComp.setContentSize(e.contentSize));const i=this._background&&this._background.node;i&&i._uiProps.uiTransformComp.setContentSize(e.contentSize)}},Y5._EditBoxImpl=class{constructor(){this._editing=!1,this._delegate=null}init(e){}onEnable(){}update(){}onDisable(){this._editing&&this.endEditing()}clear(){this._delegate=null}setTabIndex(e){}setSize(e,t){}setFocus(e){e?this.beginEditing():this.endEditing()}isFocused(){return this._editing}beginEditing(){}endEditing(){}},Y5.KeyboardReturnType=G3,Y5.InputFlag=k3,Y5.InputMode=H3,Y5.EventType=$5,Bc((N5=K5).prototype,"string",[K3,$3],Object.getOwnPropertyDescriptor(N5.prototype,"string"),N5.prototype),Bc(N5.prototype,"placeholder",[Z3,Q3],Object.getOwnPropertyDescriptor(N5.prototype,"placeholder"),N5.prototype),Bc(N5.prototype,"textLabel",[J3,e5,t5],Object.getOwnPropertyDescriptor(N5.prototype,"textLabel"),N5.prototype),Bc(N5.prototype,"placeholderLabel",[n5,i5,s5],Object.getOwnPropertyDescriptor(N5.prototype,"placeholderLabel"),N5.prototype),Bc(N5.prototype,"backgroundImage",[r5,o5,a5],Object.getOwnPropertyDescriptor(N5.prototype,"backgroundImage"),N5.prototype),Bc(N5.prototype,"inputFlag",[c5,l5,h5],Object.getOwnPropertyDescriptor(N5.prototype,"inputFlag"),N5.prototype),Bc(N5.prototype,"inputMode",[_5,u5,p5],Object.getOwnPropertyDescriptor(N5.prototype,"inputMode"),N5.prototype),Bc(N5.prototype,"returnType",[d5,f5,m5],Object.getOwnPropertyDescriptor(N5.prototype,"returnType"),N5.prototype),Bc(N5.prototype,"maxLength",[g5,v5],Object.getOwnPropertyDescriptor(N5.prototype,"maxLength"),N5.prototype),Bc(N5.prototype,"tabIndex",[y5,x5],Object.getOwnPropertyDescriptor(N5.prototype,"tabIndex"),N5.prototype),L5=Bc(N5.prototype,"editingDidBegan",[S5,il,C5,T5],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),z5=Bc(N5.prototype,"textChanged",[b5,il,E5,A5],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),F5=Bc(N5.prototype,"editingDidEnded",[P5,il,w5,I5],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),B5=Bc(N5.prototype,"editingReturn",[R5,il,D5,O5],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),U5=Bc(N5.prototype,"_textLabel",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),G5=Bc(N5.prototype,"_placeholderLabel",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),H5=Bc(N5.prototype,"_returnType",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return G3.DEFAULT}}),k5=Bc(N5.prototype,"_string",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),V5=Bc(N5.prototype,"_tabIndex",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),j5=Bc(N5.prototype,"_backgroundImage",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),W5=Bc(N5.prototype,"_inputFlag",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return k3.DEFAULT}}),q5=Bc(N5.prototype,"_inputMode",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return H3.ANY}}),X5=Bc(N5.prototype,"_maxLength",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 20}}),M5=N5))||M5)||M5)||M5)||M5)||M5)||M5));var Q5,J5,e8,t8,n8,i8,s8,r8,o8,a8,c8,l8,h8,_8,u8,p8,d8,f8,m8,g8,v8,y8,x8,S8,C8,T8,b8,E8,A8,P8,w8,I8,R8,D8,O8,M8,N8,L8,z8,F8,B8,U8,G8,H8,k8,V8,j8,W8,q8,X8,Y8,K8,$8,Z8,Q8,J8,e6,t6,n6,i6;i.internal.EditBox=Z5,function(e){e[e.NONE=0]="NONE",e[e.HORIZONTAL=1]="HORIZONTAL",e[e.VERTICAL=2]="VERTICAL",e[e.GRID=3]="GRID"}(Q8||(Q8={})),Fe(Q8),function(e){e[e.NONE=0]="NONE",e[e.CONTAINER=1]="CONTAINER",e[e.CHILDREN=2]="CHILDREN"}(J8||(J8={})),Fe(J8),function(e){e[e.HORIZONTAL=0]="HORIZONTAL",e[e.VERTICAL=1]="VERTICAL"}(e6||(e6={})),Fe(e6),function(e){e[e.BOTTOM_TO_TOP=0]="BOTTOM_TO_TOP",e[e.TOP_TO_BOTTOM=1]="TOP_TO_BOTTOM"}(t6||(t6={})),Fe(t6),function(e){e[e.LEFT_TO_RIGHT=0]="LEFT_TO_RIGHT",e[e.RIGHT_TO_LEFT=1]="RIGHT_TO_LEFT"}(n6||(n6={})),Fe(n6),function(e){e[e.NONE=0]="NONE",e[e.FIXED_ROW=1]="FIXED_ROW",e[e.FIXED_COL=2]="FIXED_COL"}(i6||(i6={})),Fe(i6);const s6=new ri;let r6=function(t){return e({Layout:t,LayoutComponent:t}),t}((Q5=Zc("cc.Layout"),J5=pl(),e8=Jc(110),t8=ll(),n8=Qc(wY),i8=fl(),s8=vl(),r8=fl(),o8=vl(),a8=Ol(Q8),c8=vl(),l8=Ol(J8),h8=fl(),_8=vl(),u8=fl(),p8=vl(),d8=Ol(e6),f8=vl(),m8=vl(),g8=vl(),v8=vl(),y8=vl(),x8=vl(),S8=vl(),C8=Ol(t6),T8=vl(),b8=Ol(n6),E8=vl(),A8=Ol(i6),P8=fl(),w8=vl(),I8=fl(),R8=vl(),D8=vl(),Q5(O8=J5(O8=e8(O8=t8(O8=n8(O8=cl((Z8=$8=class extends jh{constructor(...e){super(...e),Fc(this,"_resizeMode",N8,this),Fc(this,"_layoutType",L8,this),Fc(this,"_cellSize",z8,this),Fc(this,"_startAxis",F8,this),Fc(this,"_paddingLeft",B8,this),Fc(this,"_paddingRight",U8,this),Fc(this,"_paddingTop",G8,this),Fc(this,"_paddingBottom",H8,this),Fc(this,"_spacingX",k8,this),Fc(this,"_spacingY",V8,this),Fc(this,"_verticalDirection",j8,this),Fc(this,"_horizontalDirection",W8,this),Fc(this,"_constraint",q8,this),Fc(this,"_constraintNum",X8,this),Fc(this,"_affectedByScale",Y8,this),Fc(this,"_isAlign",K8,this),this._layoutSize=new Di(300,200),this._layoutDirty=!0,this._childrenDirty=!1,this._usefulLayoutObj=[],this._init=!1}get alignHorizontal(){return this._isAlign}set alignHorizontal(e){this._layoutType===Q8.HORIZONTAL&&(this._isAlign=e,this._doLayoutDirty())}get alignVertical(){return this._isAlign}set alignVertical(e){this._layoutType===Q8.VERTICAL&&(this._isAlign=e,this._doLayoutDirty())}get type(){return this._layoutType}set type(e){this._layoutType=e,this._doLayoutDirty()}get resizeMode(){return this._resizeMode}set resizeMode(e){this._layoutType!==Q8.NONE&&(this._resizeMode=e,this._doLayoutDirty())}get cellSize(){return this._cellSize}set cellSize(e){this._cellSize!==e&&(this._cellSize.set(e),this._doLayoutDirty())}get startAxis(){return this._startAxis}set startAxis(e){this._startAxis!==e&&(this._startAxis=e,this._doLayoutDirty())}get paddingLeft(){return this._paddingLeft}set paddingLeft(e){this._paddingLeft!==e&&(this._paddingLeft=e,this._doLayoutDirty())}get paddingRight(){return this._paddingRight}set paddingRight(e){this._paddingRight!==e&&(this._paddingRight=e,this._doLayoutDirty())}get paddingTop(){return this._paddingTop}set paddingTop(e){this._paddingTop!==e&&(this._paddingTop=e,this._doLayoutDirty())}get paddingBottom(){return this._paddingBottom}set paddingBottom(e){this._paddingBottom!==e&&(this._paddingBottom=e,this._doLayoutDirty())}get spacingX(){return this._spacingX}set spacingX(e){this._spacingX!==e&&(this._spacingX=e,this._doLayoutDirty())}get spacingY(){return this._spacingY}set spacingY(e){this._spacingY!==e&&(this._spacingY=e,this._doLayoutDirty())}get verticalDirection(){return this._verticalDirection}set verticalDirection(e){this._verticalDirection!==e&&(this._verticalDirection=e,this._doLayoutDirty())}get horizontalDirection(){return this._horizontalDirection}set horizontalDirection(e){this._horizontalDirection!==e&&(this._horizontalDirection=e,this._doLayoutDirty())}get padding(){return this._paddingLeft}set padding(e){this.paddingLeft===e&&this._paddingRight===e&&this._paddingTop===e&&this._paddingBottom===e||(this._paddingLeft=this._paddingRight=this._paddingTop=this._paddingBottom=e,this._doLayoutDirty())}get constraint(){return this._constraint}set constraint(e){this._layoutType!==Q8.NONE&&this._constraint!==e&&(this._constraint=e,this._doLayoutDirty())}get constraintNum(){return this._constraintNum}set constraintNum(e){this._constraint!==i6.NONE&&this._constraintNum!==e&&(e<=0&&p("Limit values to be greater than 0"),this._constraintNum=e,this._doLayoutDirty())}get affectedByScale(){return this._affectedByScale}set affectedByScale(e){this._affectedByScale=e,this._doLayoutDirty()}updateLayout(e=!1){(this._layoutDirty||e)&&this.node.children.length>0&&(this._doLayout(),this._layoutDirty=!1)}onEnable(){this._addEventListeners();const e=this.node._uiProps.uiTransformComp;e.contentSize.equals(Di.ZERO)&&e.setContentSize(this._layoutSize),this._childrenChanged()}onDisable(){this._usefulLayoutObj.length=0,this._removeEventListeners()}_checkUsefulObj(){this._usefulLayoutObj.length=0;const e=this.node.children;for(let t=0;t<e.length;++t){const n=e[t],i=n._uiProps.uiTransformComp;n.activeInHierarchy&&i&&this._usefulLayoutObj.push(i)}}_addEventListeners(){aI.on(oI.EVENT_AFTER_UPDATE,this.updateLayout,this),this.node.on(cx.SIZE_CHANGED,this._resized,this),this.node.on(cx.ANCHOR_CHANGED,this._doLayoutDirty,this),this.node.on(cx.CHILD_ADDED,this._childAdded,this),this.node.on(cx.CHILD_REMOVED,this._childRemoved,this),this.node.on(cx.SIBLING_ORDER_CHANGED,this._childrenChanged,this),this.node.on("childrenSiblingOrderChanged",this.updateLayout,this),this._addChildrenEventListeners()}_removeEventListeners(){aI.off(oI.EVENT_AFTER_UPDATE,this.updateLayout,this),this.node.off(cx.SIZE_CHANGED,this._resized,this),this.node.off(cx.ANCHOR_CHANGED,this._doLayoutDirty,this),this.node.off(cx.CHILD_ADDED,this._childAdded,this),this.node.off(cx.CHILD_REMOVED,this._childRemoved,this),this.node.off(cx.SIBLING_ORDER_CHANGED,this._childrenChanged,this),this.node.off("childrenSiblingOrderChanged",this.updateLayout,this),this._removeChildrenEventListeners()}_addChildrenEventListeners(){const e=this.node.children;for(let t=0;t<e.length;++t){const n=e[t];n.on(cx.SIZE_CHANGED,this._doLayoutDirty,this),n.on(cx.TRANSFORM_CHANGED,this._transformDirty,this),n.on(cx.ANCHOR_CHANGED,this._doLayoutDirty,this),n.on(cx.ACTIVE_IN_HIERARCHY_CHANGED,this._childrenChanged,this)}}_removeChildrenEventListeners(){const e=this.node.children;for(let t=0;t<e.length;++t){const n=e[t];n.off(cx.SIZE_CHANGED,this._doLayoutDirty,this),n.off(cx.TRANSFORM_CHANGED,this._transformDirty,this),n.off(cx.ANCHOR_CHANGED,this._doLayoutDirty,this),n.off(cx.ACTIVE_IN_HIERARCHY_CHANGED,this._childrenChanged,this)}}_childAdded(e){e.on(cx.SIZE_CHANGED,this._doLayoutDirty,this),e.on(cx.TRANSFORM_CHANGED,this._transformDirty,this),e.on(cx.ANCHOR_CHANGED,this._doLayoutDirty,this),e.on(cx.ACTIVE_IN_HIERARCHY_CHANGED,this._childrenChanged,this),this._childrenChanged()}_childRemoved(e){e.off(cx.SIZE_CHANGED,this._doLayoutDirty,this),e.off(cx.TRANSFORM_CHANGED,this._transformDirty,this),e.off(cx.ANCHOR_CHANGED,this._doLayoutDirty,this),e.off(cx.ACTIVE_IN_HIERARCHY_CHANGED,this._childrenChanged,this),this._childrenChanged()}_resized(){this._layoutSize.set(this.node._uiProps.uiTransformComp.contentSize),this._doLayoutDirty()}_doLayoutHorizontally(e,t,n,i){const s=this.node._uiProps.uiTransformComp.anchorPoint,r=this._getFixedBreakingNum();let o=1,a=this._paddingLeft;this._horizontalDirection===n6.RIGHT_TO_LEFT&&(o=-1,a=this._paddingRight);const c=(this._horizontalDirection-s.x)*e+o*a;let l=c-o*this._spacingX,h=0,_=0,u=0,p=0,d=!1;const f=this._usefulLayoutObj.length;let m=this._cellSize.width;const g=this._getPaddingH();this._layoutType!==Q8.GRID&&this._resizeMode===J8.CHILDREN&&(m=(e-g-(f-1)*this._spacingX)/f);const v=this._usefulLayoutObj;for(let a=0;a<v.length;++a){const f=v[a],y=f.node,x=y.scale,S=this._getUsedScaleValue(x.x),C=this._getUsedScaleValue(x.y);this._resizeMode===J8.CHILDREN&&(f.width=m/S,this._layoutType===Q8.GRID&&(f.height=this._cellSize.height/C));const T=Math.abs(this._horizontalDirection-f.anchorX),b=f.width*S,E=f.height*C;E>u&&(p=Math.max(u,p),_=u||E,u=E),l+=o*(T*b+this._spacingX);const A=o*(1-T)*b;if(t){if(r>0)d=a/r>0&&a%r==0,d&&(_=u>E?u:_);else if(b>e-g)l>c+o*T*b&&(d=!0);else{const t=(1-this._horizontalDirection-s.x)*e,n=l+A+o*(o>0?this._paddingRight:this._paddingLeft);d=Math.abs(n)>Math.abs(t)}d&&(l=c+o*T*b,E!==u&&(_=u),h+=_+this._spacingY,_=u=E)}const P=n(y,f,h);i&&y.setPosition(l,P),l+=A}return _=Math.max(_,u),Math.max(p,h+_)+this._getPaddingV()}_doLayoutVertically(e,t,n,i){const s=this.node._uiProps.uiTransformComp.anchorPoint,r=this._getFixedBreakingNum();let o=1,a=this._paddingBottom;this._verticalDirection===t6.TOP_TO_BOTTOM&&(o=-1,a=this._paddingTop);const c=(this._verticalDirection-s.y)*e+o*a;let l=c-o*this._spacingY,h=0,_=0,u=0,p=0,d=!1;const f=this._usefulLayoutObj.length;let m=this._cellSize.height;const g=this._getPaddingV();this._layoutType!==Q8.GRID&&this._resizeMode===J8.CHILDREN&&(m=(e-g-(f-1)*this._spacingY)/f);const v=this._usefulLayoutObj;for(let a=0;a<v.length;++a){const f=v[a],y=f.node,x=y.scale,S=this._getUsedScaleValue(x.x),C=this._getUsedScaleValue(x.y);this._resizeMode===J8.CHILDREN&&(f.height=m/C,this._layoutType===Q8.GRID&&(f.width=this._cellSize.width/S));const T=Math.abs(this._verticalDirection-f.anchorY),b=f.width*S,E=f.height*C;b>h&&(_=Math.max(h,_),u=h||b,h=b),l+=o*(T*E+this._spacingY);const A=o*(1-T)*E;if(t){if(r>0)d=a/r>0&&a%r==0,d&&(u=h>E?h:u);else if(E>e-g)l>c+o*T*E&&(d=!0);else{const t=(1-this._verticalDirection-s.y)*e,n=l+A+o*(o>0?this._paddingTop:this._paddingBottom);d=Math.abs(n)>Math.abs(t)}d&&(l=c+o*T*E,b!==h&&(u=h),p+=u+this._spacingX,u=h=b)}const P=n(y,f,p);i&&(y.getPosition(s6),y.setPosition(P,l,s6.z)),l+=A}return u=Math.max(u,h),Math.max(_,p+u)+this._getPaddingH()}_doLayoutGridAxisHorizontal(e,t){const n=t.width;let i=1,s=-e.y*t.height,r=this._paddingBottom;this._verticalDirection===t6.TOP_TO_BOTTOM&&(i=-1,s=(1-e.y)*t.height,r=this._paddingTop);const o=(e,t,n)=>s+i*(n+(1-t.anchorY)*t.height*this._getUsedScaleValue(e.scale.y)+r);let a=0;this._resizeMode===J8.CONTAINER&&(a=this._doLayoutHorizontally(n,!0,o,!1),s=-e.y*a,this._verticalDirection===t6.TOP_TO_BOTTOM&&(i=-1,s=(1-e.y)*a)),this._doLayoutHorizontally(n,!0,o,!0),this._resizeMode===J8.CONTAINER&&this.node._uiProps.uiTransformComp.setContentSize(n,a)}_doLayoutGridAxisVertical(e,t){const n=t.height;let i=1,s=-e.x*t.width,r=this._paddingLeft;this._horizontalDirection===n6.RIGHT_TO_LEFT&&(i=-1,s=(1-e.x)*t.width,r=this._paddingRight);const o=(e,t,n)=>s+i*(n+(1-t.anchorX)*t.width*this._getUsedScaleValue(e.scale.x)+r);let a=0;this._resizeMode===J8.CONTAINER&&(a=this._doLayoutVertically(n,!0,o,!1),s=-e.x*a,this._horizontalDirection===n6.RIGHT_TO_LEFT&&(i=-1,s=(1-e.x)*a)),this._doLayoutVertically(n,!0,o,!0),this._resizeMode===J8.CONTAINER&&this.node._uiProps.uiTransformComp.setContentSize(a,n)}_doLayoutGrid(){const e=this.node._uiProps.uiTransformComp,t=e.anchorPoint,n=e.contentSize;this.startAxis===e6.HORIZONTAL?this._doLayoutGridAxisHorizontal(t,n):this.startAxis===e6.VERTICAL&&this._doLayoutGridAxisVertical(t,n)}_getHorizontalBaseWidth(e=!0){const t=this._usefulLayoutObj;let n=0;const i=t.length;if(this._resizeMode===J8.CONTAINER){for(let e=0;e<t.length;++e){const i=t[e],s=i.node.scale;n+=i.width*this._getUsedScaleValue(s.x)}n+=(i-1)*this._spacingX+this._getPaddingH()}else n=this.node._uiProps.uiTransformComp.width;return n}_getVerticalBaseHeight(){const e=this._usefulLayoutObj;let t=0;const n=e.length;if(this._resizeMode===J8.CONTAINER){for(let n=0;n<e.length;++n){const i=e[n],s=i.node.scale;t+=i.height*this._getUsedScaleValue(s.y)}t+=(n-1)*this._spacingY+this._getPaddingV()}else t=this.node._uiProps.uiTransformComp.height;return t}_doLayout(){if(this._init&&!this._childrenDirty||(this._checkUsefulObj(),this._init=!0,this._childrenDirty=!1),this._layoutType===Q8.HORIZONTAL){const e=this._getHorizontalBaseWidth(),t=e=>(this._isAlign?ri.ZERO:e.position).y;this._doLayoutHorizontally(e,!1,t,!0),this.node._uiProps.uiTransformComp.width=e}else if(this._layoutType===Q8.VERTICAL){const e=this._getVerticalBaseHeight(),t=e=>(this._isAlign?ri.ZERO:e.position).x;this._doLayoutVertically(e,!1,t,!0),this.node._uiProps.uiTransformComp.height=e}else this._layoutType===Q8.GRID&&this._doLayoutGrid()}_getUsedScaleValue(e){return this._affectedByScale?Math.abs(e):1}_transformDirty(e){e&gg.SCALE&&e&gg.POSITION&&this._affectedByScale&&this._doLayoutDirty()}_doLayoutDirty(){this._layoutDirty=!0}_childrenChanged(){this._childrenDirty=!0,this._doLayoutDirty()}_getPaddingH(){return this._paddingLeft+this._paddingRight}_getPaddingV(){return this._paddingTop+this._paddingBottom}_getFixedBreakingNum(){if(this._layoutType!==Q8.GRID||this._constraint===i6.NONE||this._constraintNum<=0)return 0;let e=this._constraint===i6.FIXED_ROW?Math.ceil(this._usefulLayoutObj.length/this._constraintNum):this._constraintNum;return this._startAxis===e6.VERTICAL&&(e=this._constraint===i6.FIXED_COL?Math.ceil(this._usefulLayoutObj.length/this._constraintNum):this._constraintNum),e}},$8.Type=Q8,$8.VerticalDirection=t6,$8.HorizontalDirection=n6,$8.ResizeMode=J8,$8.AxisDirection=e6,$8.Constraint=i6,Bc((M8=Z8).prototype,"alignHorizontal",[i8,s8],Object.getOwnPropertyDescriptor(M8.prototype,"alignHorizontal"),M8.prototype),Bc(M8.prototype,"alignVertical",[r8,o8],Object.getOwnPropertyDescriptor(M8.prototype,"alignVertical"),M8.prototype),Bc(M8.prototype,"type",[a8,c8],Object.getOwnPropertyDescriptor(M8.prototype,"type"),M8.prototype),Bc(M8.prototype,"resizeMode",[l8,h8,_8],Object.getOwnPropertyDescriptor(M8.prototype,"resizeMode"),M8.prototype),Bc(M8.prototype,"cellSize",[u8,p8],Object.getOwnPropertyDescriptor(M8.prototype,"cellSize"),M8.prototype),Bc(M8.prototype,"startAxis",[d8,f8],Object.getOwnPropertyDescriptor(M8.prototype,"startAxis"),M8.prototype),Bc(M8.prototype,"paddingLeft",[m8],Object.getOwnPropertyDescriptor(M8.prototype,"paddingLeft"),M8.prototype),Bc(M8.prototype,"paddingRight",[g8],Object.getOwnPropertyDescriptor(M8.prototype,"paddingRight"),M8.prototype),Bc(M8.prototype,"paddingTop",[v8],Object.getOwnPropertyDescriptor(M8.prototype,"paddingTop"),M8.prototype),Bc(M8.prototype,"paddingBottom",[y8],Object.getOwnPropertyDescriptor(M8.prototype,"paddingBottom"),M8.prototype),Bc(M8.prototype,"spacingX",[x8],Object.getOwnPropertyDescriptor(M8.prototype,"spacingX"),M8.prototype),Bc(M8.prototype,"spacingY",[S8],Object.getOwnPropertyDescriptor(M8.prototype,"spacingY"),M8.prototype),Bc(M8.prototype,"verticalDirection",[C8,T8],Object.getOwnPropertyDescriptor(M8.prototype,"verticalDirection"),M8.prototype),Bc(M8.prototype,"horizontalDirection",[b8,E8],Object.getOwnPropertyDescriptor(M8.prototype,"horizontalDirection"),M8.prototype),Bc(M8.prototype,"constraint",[A8,P8,w8],Object.getOwnPropertyDescriptor(M8.prototype,"constraint"),M8.prototype),Bc(M8.prototype,"constraintNum",[I8,R8],Object.getOwnPropertyDescriptor(M8.prototype,"constraintNum"),M8.prototype),Bc(M8.prototype,"affectedByScale",[D8],Object.getOwnPropertyDescriptor(M8.prototype,"affectedByScale"),M8.prototype),N8=Bc(M8.prototype,"_resizeMode",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return J8.NONE}}),L8=Bc(M8.prototype,"_layoutType",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Q8.NONE}}),z8=Bc(M8.prototype,"_cellSize",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Di(40,40)}}),F8=Bc(M8.prototype,"_startAxis",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return e6.HORIZONTAL}}),B8=Bc(M8.prototype,"_paddingLeft",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),U8=Bc(M8.prototype,"_paddingRight",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),G8=Bc(M8.prototype,"_paddingTop",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),H8=Bc(M8.prototype,"_paddingBottom",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),k8=Bc(M8.prototype,"_spacingX",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),V8=Bc(M8.prototype,"_spacingY",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),j8=Bc(M8.prototype,"_verticalDirection",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return t6.TOP_TO_BOTTOM}}),W8=Bc(M8.prototype,"_horizontalDirection",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return n6.LEFT_TO_RIGHT}}),q8=Bc(M8.prototype,"_constraint",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return i6.NONE}}),X8=Bc(M8.prototype,"_constraintNum",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 2}}),Y8=Bc(M8.prototype,"_affectedByScale",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),K8=Bc(M8.prototype,"_isAlign",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),O8=M8))||O8)||O8)||O8)||O8)||O8)||O8));var o6,a6,c6,l6,h6,_6,u6,p6,d6,f6,m6,g6,v6,y6,x6,S6,C6,T6,b6,E6,A6,P6,w6;!function(e){e[e.HORIZONTAL=0]="HORIZONTAL",e[e.VERTICAL=1]="VERTICAL",e[e.FILLED=2]="FILLED"}(w6||(w6={})),Ne(w6);let I6=function(t){return e({ProgressBar:t,ProgressBarComponent:t}),t}((o6=Zc("cc.ProgressBar"),a6=pl(),c6=Jc(110),l6=ll(),h6=Qc(wY),_6=Ol(VQ),u6=vl(),p6=Ol(w6),d6=vl(),f6=vl(),m6=yl(),g6=vl(),v6=vl(),o6(y6=a6(y6=c6(y6=l6(y6=h6((P6=A6=class extends jh{constructor(...e){super(...e),Fc(this,"_barSprite",S6,this),Fc(this,"_mode",C6,this),Fc(this,"_totalLength",T6,this),Fc(this,"_progress",b6,this),Fc(this,"_reverse",E6,this)}get barSprite(){return this._barSprite}set barSprite(e){this._barSprite!==e&&(this._barSprite=e,this._initBarSprite())}get mode(){return this._mode}set mode(e){if(this._mode!==e&&(this._mode=e,this._barSprite)){const e=this._barSprite.node;if(!e)return;const t=e._uiProps.uiTransformComp.contentSize;this._mode===w6.HORIZONTAL?this.totalLength=t.width:this._mode===w6.VERTICAL?this.totalLength=t.height:this._mode===w6.FILLED&&(this.totalLength=this._barSprite.fillRange)}}get totalLength(){return this._totalLength}set totalLength(e){this._mode===w6.FILLED&&(e=Fn(e)),this._totalLength=e,this._updateBarStatus()}get progress(){return this._progress}set progress(e){this._progress!==e&&(this._progress=e,this._updateBarStatus())}get reverse(){return this._reverse}set reverse(e){this._reverse!==e&&(this._reverse=e,this._barSprite&&(this._barSprite.fillStart=1-this._barSprite.fillStart),this._updateBarStatus())}_initBarSprite(){if(this._barSprite){const e=this._barSprite.node;if(!e)return;const t=this.node._uiProps.uiTransformComp,n=t.contentSize,i=t.anchorPoint,s=e._uiProps.uiTransformComp.contentSize;if(this._barSprite.fillType===VQ.FillType.RADIAL&&(this._mode=w6.FILLED),this._mode===w6.HORIZONTAL?this.totalLength=s.width:this._mode===w6.VERTICAL?this.totalLength=s.height:this.totalLength=this._barSprite.fillRange,e.parent===this.node){const t=-n.width*i.x;e.setPosition(t,0,0)}}}_updateBarStatus(){if(this._barSprite){const e=this._barSprite.node;if(!e)return;const t=e._uiProps.uiTransformComp,n=t.anchorPoint,i=t.contentSize,s=e.getPosition();let r=new bi(0,.5);const o=Fn(this._progress);let a=this._totalLength*o,c=i,l=0,h=0;switch(this._mode){case w6.HORIZONTAL:this._reverse&&(r=new bi(1,.5)),c=new Di(a,i.height),l=this._totalLength,h=i.height;break;case w6.VERTICAL:r=this._reverse?new bi(.5,1):new bi(.5,0),c=new Di(i.width,a),l=i.width,h=this._totalLength}if(this._mode===w6.FILLED)this._barSprite.type!==VQ.Type.FILLED?p("ProgressBar FILLED mode only works when barSprite's Type is FILLED!"):(this._reverse&&(a*=-1),this._barSprite.fillRange=a);else if(this._barSprite.type!==VQ.Type.FILLED){const i=r.x-n.x,o=r.y-n.y,a=new ri(l*i,h*o,0);e.setPosition(s.x+a.x,s.y+a.y,s.z),t.setAnchorPoint(r),t.setContentSize(c)}else p("ProgressBar non-FILLED mode only works when barSprite's Type is non-FILLED!")}}},A6.Mode=w6,Bc((x6=P6).prototype,"barSprite",[_6,u6],Object.getOwnPropertyDescriptor(x6.prototype,"barSprite"),x6.prototype),Bc(x6.prototype,"mode",[p6,d6],Object.getOwnPropertyDescriptor(x6.prototype,"mode"),x6.prototype),Bc(x6.prototype,"totalLength",[f6],Object.getOwnPropertyDescriptor(x6.prototype,"totalLength"),x6.prototype),Bc(x6.prototype,"progress",[m6,Tl,g6],Object.getOwnPropertyDescriptor(x6.prototype,"progress"),x6.prototype),Bc(x6.prototype,"reverse",[v6],Object.getOwnPropertyDescriptor(x6.prototype,"reverse"),x6.prototype),S6=Bc(x6.prototype,"_barSprite",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),C6=Bc(x6.prototype,"_mode",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return w6.HORIZONTAL}}),T6=Bc(x6.prototype,"_totalLength",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),b6=Bc(x6.prototype,"_progress",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.1}}),E6=Bc(x6.prototype,"_reverse",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),y6=x6))||y6)||y6)||y6)||y6)||y6));var R6,D6,O6,M6,N6,L6,z6,F6,B6,U6,G6,H6,k6,V6,j6,W6,q6,X6,Y6,K6,$6,Z6,Q6,J6;const e7=new ri,t7=new ri,n7=new ri,i7=new bi,s7=new ti,r7=new bi;var o7;!function(e){e[e.HORIZONTAL=0]="HORIZONTAL",e[e.VERTICAL=1]="VERTICAL"}(o7||(o7={})),Fe(o7);let a7=function(t){return e({ScrollBar:t,ScrollBarComponent:t}),t}((R6=Zc("cc.ScrollBar"),D6=pl(),O6=Jc(110),M6=ll(),N6=Qc(wY),L6=Ol(VQ),z6=bl(),F6=vl(),B6=Ol(o7),U6=bl(),G6=vl(),H6=bl(),k6=vl(),V6=bl(),j6=vl(),R6(W6=D6(W6=O6(W6=M6(W6=N6((J6=Q6=class extends jh{constructor(...e){super(...e),Fc(this,"_scrollView",X6,this),Fc(this,"_handle",Y6,this),Fc(this,"_direction",K6,this),Fc(this,"_enableAutoHide",$6,this),Fc(this,"_autoHideTime",Z6,this),this._touching=!1,this._opacity=255,this._autoHideRemainingTime=0}get handle(){return this._handle}set handle(e){this._handle!==e&&(this._handle=e,this.onScroll(bi.ZERO))}get direction(){return this._direction}set direction(e){this._direction!==e&&(this._direction=e,this.onScroll(bi.ZERO))}get enableAutoHide(){return this._enableAutoHide}set enableAutoHide(e){this._enableAutoHide!==e&&(this._enableAutoHide=e,this._enableAutoHide&&this._setOpacity(0))}get autoHideTime(){return this._autoHideTime}set autoHideTime(e){this._autoHideTime!==e&&(this._autoHideTime=e)}hide(){this._autoHideRemainingTime=0,this._setOpacity(0)}show(){this._autoHideRemainingTime=this._autoHideTime,this._setOpacity(this._opacity)}onScroll(e){if(!this._scrollView)return;const t=this._scrollView.content;if(!t)return;const n=t._uiProps.uiTransformComp.contentSize,i=this._scrollView.node._uiProps.uiTransformComp.contentSize,s=this.node._uiProps.uiTransformComp.contentSize;if(this._conditionalDisableScrollBar(n,i))return;this._enableAutoHide&&(this._autoHideRemainingTime=this._autoHideTime,this._setOpacity(this._opacity));let r=0,o=0,a=0,c=0,l=0;const h=r7;h.set(0,0),this._direction===o7.HORIZONTAL?(r=n.width,o=i.width,l=s.width,a=e.x,this._convertToScrollViewSpace(h,t),c=-h.x):this._direction===o7.VERTICAL&&(r=n.height,o=i.height,l=s.height,a=e.y,this._convertToScrollViewSpace(h,t),c=-h.y);const _=this._calculateLength(r,o,l,a),u=r7;this._calculatePosition(u,r,o,l,c,a,_),this._updateLength(_),this._updateHandlerPosition(u)}setScrollView(e){this._scrollView=e}onTouchBegan(){this._enableAutoHide&&(this._touching=!0)}onTouchEnded(){if(this._enableAutoHide&&(this._touching=!1,!(this._autoHideTime<=0))){if(this._scrollView){const e=this._scrollView.content;if(e){const t=e._uiProps.uiTransformComp.contentSize,n=this._scrollView.node._uiProps.uiTransformComp.contentSize;if(this._conditionalDisableScrollBar(t,n))return}}this._autoHideRemainingTime=this._autoHideTime}}onEnable(){const e=this.node.getComponent(VQ);e&&(this._opacity=e.color.a)}start(){this._enableAutoHide&&this._setOpacity(0)}update(e){this._processAutoHide(e)}_convertToScrollViewSpace(e,t){const n=this._scrollView&&this._scrollView.node._uiProps.uiTransformComp,i=t._uiProps.uiTransformComp;if(n&&i){e7.set(-i.anchorX*i.width,-i.anchorY*i.height,0),i.convertToWorldSpaceAR(e7,t7);const t=n.convertToNodeSpaceAR(t7);t.x+=n.anchorX*n.width,t.y+=n.anchorY*n.height,e.set(t.x,t.y)}else e.set(bi.ZERO)}_setOpacity(e){if(this._handle){let t=this.node.getComponent(VQ);t&&(s7.set(t.color),s7.a=e,t.color=s7),t=this._handle.getComponent(VQ),t&&(s7.set(t.color),s7.a=e,t.color=s7)}}_updateHandlerPosition(e){if(this._handle){const t=n7;this._fixupHandlerPosition(t),this._handle.node.setPosition(e.x+t.x,e.y+t.y,t.z)}}_fixupHandlerPosition(e){const t=this.node._uiProps.uiTransformComp,n=t.contentSize,i=t.anchorPoint,s=this.handle.node._uiProps.uiTransformComp.contentSize,r=this.handle.node.parent;ri.set(e7,-n.width*i.x,-n.height*i.y,0);const o=this.node._uiProps.uiTransformComp.convertToWorldSpaceAR(e7,t7),a=e;a.set(0,0,0),r._uiProps.uiTransformComp.convertToNodeSpaceAR(o,a),this.direction===o7.HORIZONTAL?a.set(a.x,a.y+(n.height-s.height)/2,a.z):this.direction===o7.VERTICAL&&a.set(a.x+(n.width-s.width)/2,a.y,a.z),this.handle.node.setPosition(a)}_conditionalDisableScrollBar(e,t){return e.width<=t.width&&this._direction===o7.HORIZONTAL||e.height<=t.height&&this._direction===o7.VERTICAL}_calculateLength(e,t,n,i){let s=e;return i&&(s+=20*(i>0?i:-i)),n*(t/s)}_calculatePosition(e,t,n,i,s,r,o){let a=t-n;r&&(a+=Math.abs(r));let c=0;a&&(c=s/a,c=Fn(c));const l=(i-o)*c;this._direction===o7.VERTICAL?e.set(0,l):e.set(l,0)}_updateLength(e){if(this._handle){const t=this._handle.node._uiProps.uiTransformComp,n=t.contentSize,i=t.anchorPoint;i.x===i7.x&&i.y===i7.y||t.setAnchorPoint(i7),this._direction===o7.HORIZONTAL?t.setContentSize(e,n.height):t.setContentSize(n.width,e)}}_processAutoHide(e){if(this._enableAutoHide&&!(this._autoHideRemainingTime<=0)&&!this._touching&&(this._autoHideRemainingTime-=e,this._autoHideRemainingTime<=this._autoHideTime)){this._autoHideRemainingTime=Math.max(0,this._autoHideRemainingTime);const e=this._opacity*(this._autoHideRemainingTime/this._autoHideTime);this._setOpacity(e)}}},Q6.Direction=o7,Bc((q6=J6).prototype,"handle",[L6,z6,F6],Object.getOwnPropertyDescriptor(q6.prototype,"handle"),q6.prototype),Bc(q6.prototype,"direction",[B6,U6,G6],Object.getOwnPropertyDescriptor(q6.prototype,"direction"),q6.prototype),Bc(q6.prototype,"enableAutoHide",[H6,k6],Object.getOwnPropertyDescriptor(q6.prototype,"enableAutoHide"),q6.prototype),Bc(q6.prototype,"autoHideTime",[V6,j6],Object.getOwnPropertyDescriptor(q6.prototype,"autoHideTime"),q6.prototype),X6=Bc(q6.prototype,"_scrollView",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Y6=Bc(q6.prototype,"_handle",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),K6=Bc(q6.prototype,"_direction",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return o7.HORIZONTAL}}),$6=Bc(q6.prototype,"_enableAutoHide",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Z6=Bc(q6.prototype,"_autoHideTime",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),W6=q6))||W6)||W6)||W6)||W6)||W6));var c7;let l7=e("ViewGroup",Zc("cc.ViewGroup")(c7=Jc(110)(c7=class extends jh{})||c7)||c7);var h7,_7,u7,p7,d7,f7,m7,g7,v7,y7,x7,S7,C7,T7,b7,E7,A7,P7,w7,I7,R7,D7,O7,M7,N7,L7,z7,F7,B7,U7,G7,H7,k7,V7,j7,W7,q7,X7,Y7,K7,$7,Z7,Q7,J7,e9,t9,n9,i9;i.ViewGroup=l7;const s9=1e-4,r9=new ri,o9=new ri,a9=new bi,c9=new bi,l9=()=>(new Date).getMilliseconds(),h9={"scroll-to-top":0,"scroll-to-bottom":1,"scroll-to-left":2,"scroll-to-right":3,scrolling:4,"bounce-bottom":6,"bounce-left":7,"bounce-right":8,"bounce-top":5,"scroll-ended":9,"touch-up":10,"scroll-ended-with-threshold":11,"scroll-began":12};let _9;!function(e){e.SCROLL_TO_TOP="scroll-to-top",e.SCROLL_TO_BOTTOM="scroll-to-bottom",e.SCROLL_TO_LEFT="scroll-to-left",e.SCROLL_TO_RIGHT="scroll-to-right",e.SCROLL_BEGAN="scroll-began",e.SCROLL_ENDED="scroll-ended",e.BOUNCE_TOP="bounce-top",e.BOUNCE_BOTTOM="bounce-bottom",e.BOUNCE_LEFT="bounce-left",e.BOUNCE_RIGHT="bounce-right",e.SCROLLING="scrolling",e.SCROLL_ENG_WITH_THRESHOLD="scroll-ended-with-threshold",e.TOUCH_UP="touch-up"}(_9||(_9={}));let u9=function(t){return e({ScrollView:t,ScrollViewComponent:t}),t}((h7=Zc("cc.ScrollView"),_7=pl(),u7=Jc(110),p7=ll(),d7=Qc(wY),f7=yl(),m7=bl(),g7=vl(),v7=yl(),y7=bl(),x7=vl(),S7=bl(),C7=vl(),T7=bl(),b7=vl(),E7=Ol(Yx),A7=bl(),P7=vl(),w7=bl(),I7=vl(),R7=Ol(a7),D7=bl(),O7=vl(),M7=bl(),N7=vl(),L7=Ol(a7),z7=bl(),F7=vl(),B7=bl(),U7=vl(),G7=Ol([HR]),H7=bl(),k7=vl(),h7(V7=_7(V7=u7(V7=p7(V7=d7((i9=n9=class extends l7{constructor(...e){super(...e),Fc(this,"bounceDuration",W7,this),Fc(this,"brake",q7,this),Fc(this,"elastic",X7,this),Fc(this,"inertia",Y7,this),Fc(this,"horizontal",K7,this),Fc(this,"vertical",$7,this),Fc(this,"cancelInnerEvents",Z7,this),Fc(this,"scrollEvents",Q7,this),this._autoScrolling=!1,this._scrolling=!1,Fc(this,"_content",J7,this),Fc(this,"_horizontalScrollBar",e9,this),Fc(this,"_verticalScrollBar",t9,this),this._topBoundary=0,this._bottomBoundary=0,this._leftBoundary=0,this._rightBoundary=0,this._touchMoveDisplacements=[],this._touchMoveTimeDeltas=[],this._touchMovePreviousTimestamp=0,this._touchMoved=!1,this._autoScrollAttenuate=!1,this._autoScrollStartPosition=new ri,this._autoScrollTargetDelta=new ri,this._autoScrollTotalTime=0,this._autoScrollAccumulatedTime=0,this._autoScrollCurrentlyOutOfBoundary=!1,this._autoScrollBraking=!1,this._autoScrollBrakingStartPosition=new ri,this._outOfBoundaryAmount=new ri,this._outOfBoundaryAmountDirty=!0,this._stopMouseWheel=!1,this._mouseWheelEventElapsedTime=0,this._isScrollEndedWithThresholdEventFired=!1,this._scrollEventEmitMask=0,this._isBouncing=!1,this._contentPos=new ri,this._deltaPos=new ri}get content(){return this._content}set content(e){if(this._content===e)return;const t=e&&e.parent&&e.parent._uiProps.uiTransformComp;!e||e&&t?(this._content=e,this._calculateBoundary()):S(4302)}get horizontalScrollBar(){return this._horizontalScrollBar}set horizontalScrollBar(e){this._horizontalScrollBar!==e&&(this._horizontalScrollBar=e,this._horizontalScrollBar&&(this._horizontalScrollBar.setScrollView(this),this._updateScrollBar(bi.ZERO)))}get verticalScrollBar(){return this._verticalScrollBar}set verticalScrollBar(e){this._verticalScrollBar!==e&&(this._verticalScrollBar=e,this._verticalScrollBar&&(this._verticalScrollBar.setScrollView(this),this._updateScrollBar(bi.ZERO)))}get view(){const e=this._content&&this._content.parent;return e?e._uiProps.uiTransformComp:null}scrollToBottom(e,t=!0){const n=this._calculateMovePercentDelta({anchor:new bi(0,0),applyToHorizontal:!1,applyToVertical:!0});e?this._startAutoScroll(n,e,!1!==t):this._moveContent(n,!0)}scrollToTop(e,t=!0){const n=this._calculateMovePercentDelta({anchor:new bi(0,1),applyToHorizontal:!1,applyToVertical:!0});e?this._startAutoScroll(n,e,!1!==t):this._moveContent(n)}scrollToLeft(e,t=!0){const n=this._calculateMovePercentDelta({anchor:new bi(0,0),applyToHorizontal:!0,applyToVertical:!1});e?this._startAutoScroll(n,e,!1!==t):this._moveContent(n)}scrollToRight(e,t=!0){const n=this._calculateMovePercentDelta({anchor:new bi(1,0),applyToHorizontal:!0,applyToVertical:!1});e?this._startAutoScroll(n,e,!1!==t):this._moveContent(n)}scrollToTopLeft(e,t=!0){const n=this._calculateMovePercentDelta({anchor:new bi(0,1),applyToHorizontal:!0,applyToVertical:!0});e?this._startAutoScroll(n,e,!1!==t):this._moveContent(n)}scrollToTopRight(e,t=!0){const n=this._calculateMovePercentDelta({anchor:new bi(1,1),applyToHorizontal:!0,applyToVertical:!0});e?this._startAutoScroll(n,e,!1!==t):this._moveContent(n)}scrollToBottomLeft(e,t=!0){const n=this._calculateMovePercentDelta({anchor:new bi(0,0),applyToHorizontal:!0,applyToVertical:!0});e?this._startAutoScroll(n,e,!1!==t):this._moveContent(n)}scrollToBottomRight(e,t=!0){const n=this._calculateMovePercentDelta({anchor:new bi(1,0),applyToHorizontal:!0,applyToVertical:!0});e?this._startAutoScroll(n,e,!1!==t):this._moveContent(n)}scrollToOffset(e,t,n=!0){const i=this.getMaxScrollOffset(),s=new bi(0,0);0===i.x?s.x=0:s.x=e.x/i.x,0===i.y?s.y=1:s.y=(i.y-e.y)/i.y,this.scrollTo(s,t,n)}getScrollOffset(){const e=this._getContentTopBoundary()-this._topBoundary,t=this._getContentLeftBoundary()-this._leftBoundary;return new bi(t,e)}getMaxScrollOffset(){if(!this._content||!this.view)return bi.ZERO;const e=this._content._uiProps.uiTransformComp.contentSize;let t=e.width-this.view.width,n=e.height-this.view.height;return t=t>=0?t:0,n=n>=0?n:0,new bi(t,n)}scrollToPercentHorizontal(e,t,n){const i=this._calculateMovePercentDelta({anchor:new bi(e,0),applyToHorizontal:!0,applyToVertical:!1});t?this._startAutoScroll(i,t,!1!==n):this._moveContent(i)}scrollTo(e,t,n){const i=this._calculateMovePercentDelta({anchor:new bi(e),applyToHorizontal:!0,applyToVertical:!0});t?this._startAutoScroll(i,t,n):this._moveContent(i)}scrollToPercentVertical(e,t,n){const i=this._calculateMovePercentDelta({anchor:new bi(0,e),applyToHorizontal:!1,applyToVertical:!0});t?this._startAutoScroll(i,t,n):this._moveContent(i)}stopAutoScroll(){this._autoScrolling=!1,this._autoScrollAccumulatedTime=this._autoScrollTotalTime}setContentPosition(e){this._setContentPosition(e)}_setContentPosition(e){if(!this._content)return;const t=this._getContentPosition();Math.abs(e.x-t.x)<s9&&Math.abs(e.y-t.y)<s9||(this._content.setPosition(e),this._outOfBoundaryAmountDirty=!0)}getContentPosition(){return this._getContentPosition()}_getContentPosition(){return this._content?(this._contentPos.set(this._content.position),this._contentPos):ri.ZERO.clone()}isScrolling(){return this._scrolling}isAutoScrolling(){return this._autoScrolling}getScrollEndedEventTiming(){return s9}start(){this._calculateBoundary(),this._content&&aI.once(oI.EVENT_BEFORE_DRAW,this._adjustContentOutOfBoundary,this)}onEnable(){this._registerEvent(),this._content&&(this._content.on(cx.SIZE_CHANGED,this._calculateBoundary,this),this._content.on(cx.TRANSFORM_CHANGED,this._scaleChanged,this),this.view&&(this.view.node.on(cx.TRANSFORM_CHANGED,this._scaleChanged,this),this.view.node.on(cx.SIZE_CHANGED,this._calculateBoundary,this))),this._calculateBoundary(),this._updateScrollBarState()}update(e){this._autoScrolling&&this._processAutoScrolling(e)}onDisable(){this._unregisterEvent(),this._content&&(this._content.off(cx.SIZE_CHANGED,this._calculateBoundary,this),this._content.off(cx.TRANSFORM_CHANGED,this._scaleChanged,this),this.view&&(this.view.node.off(cx.TRANSFORM_CHANGED,this._scaleChanged,this),this.view.node.off(cx.SIZE_CHANGED,this._calculateBoundary,this))),this._hideScrollBar(),this.stopAutoScroll()}_registerEvent(){this.node.on(cx.TOUCH_START,this._onTouchBegan,this,!0),this.node.on(cx.TOUCH_MOVE,this._onTouchMoved,this,!0),this.node.on(cx.TOUCH_END,this._onTouchEnded,this,!0),this.node.on(cx.TOUCH_CANCEL,this._onTouchCancelled,this,!0),this.node.on(cx.MOUSE_WHEEL,this._onMouseWheel,this,!0)}_unregisterEvent(){this.node.off(cx.TOUCH_START,this._onTouchBegan,this,!0),this.node.off(cx.TOUCH_MOVE,this._onTouchMoved,this,!0),this.node.off(cx.TOUCH_END,this._onTouchEnded,this,!0),this.node.off(cx.TOUCH_CANCEL,this._onTouchCancelled,this,!0),this.node.off(cx.MOUSE_WHEEL,this._onMouseWheel,this,!0)}_onMouseWheel(e,t){if(!this.enabledInHierarchy)return;if(this._hasNestedViewGroup(e,t))return;const n=new ri,i=e.getScrollY();this.vertical?n.set(0,-.1*i,0):this.horizontal&&n.set(-.1*i,0,0),this._mouseWheelEventElapsedTime=0,this._processDeltaMove(n),this._stopMouseWheel||(this._handlePressLogic(),this.schedule(this._checkMouseWheel,1/60,NaN,0),this._stopMouseWheel=!0),this._stopPropagationIfTargetIsMe(e)}_onTouchBegan(e,t){this.enabledInHierarchy&&this._content&&(this._hasNestedViewGroup(e,t)||(this._handlePressLogic(),this._touchMoved=!1,this._stopPropagationIfTargetIsMe(e)))}_onTouchMoved(e,t){if(!this.enabledInHierarchy||!this._content)return;if(this._hasNestedViewGroup(e,t))return;const n=e.touch;if(this._handleMoveLogic(n),!this.cancelInnerEvents)return;const i=n.getUILocation(a9);if(i.subtract(n.getUIStartLocation(c9)),i.length()>7&&!this._touchMoved&&e.target!==this.node){const t=new uP(e.getTouches(),e.bubbles,rT.TOUCH_CANCEL);t.touch=e.touch,t.simulate=!0,e.target.dispatchEvent(t),this._touchMoved=!0}this._stopPropagationIfTargetIsMe(e)}_onTouchEnded(e,t){if(!this.enabledInHierarchy||!this._content||!e)return;if(this._hasNestedViewGroup(e,t))return;this._dispatchEvent(_9.TOUCH_UP);const n=e.touch;this._handleReleaseLogic(n),this._touchMoved?e.propagationStopped=!0:this._stopPropagationIfTargetIsMe(e)}_onTouchCancelled(e,t){if(this.enabledInHierarchy&&this._content&&!this._hasNestedViewGroup(e,t)){if(e&&!e.simulate){const t=e.touch;this._handleReleaseLogic(t)}this._stopPropagationIfTargetIsMe(e)}}_calculateBoundary(){if(this._content&&this.view){const e=this._content.getComponent(r6);e&&e.enabledInHierarchy&&e.updateLayout();const t=this.view,n=t.width*t.anchorX,i=t.height*t.anchorY;this._leftBoundary=-n,this._bottomBoundary=-i,this._rightBoundary=this._leftBoundary+t.width,this._topBoundary=this._bottomBoundary+t.height,this._moveContentToTopLeft(t.contentSize)}}_hasNestedViewGroup(e,t){if(!e||e.eventPhase!==aP.CAPTURING_PHASE)return!1;if(t)for(const n of t){const t=n;if(this.node===t)return!(!e.target||!e.target.getComponent(l7));if(t.getComponent(l7))return!0}return!1}_startInertiaScroll(e){const t=new ri(e);t.multiplyScalar(.7),this._startAttenuatingAutoScroll(t,e)}_calculateAttenuatedFactor(e){return this.brake<=0?1-this.brake:(1-this.brake)*(1/(1+14e-6*e+e*e*8e-9))}_startAttenuatingAutoScroll(e,t){const n=e.clone();if(n.normalize(),this._content&&this.view){const e=this._content._uiProps.uiTransformComp.contentSize,t=this.view.contentSize,i=e.width-t.width,s=e.height-t.height,r=this._calculateAttenuatedFactor(i),o=this._calculateAttenuatedFactor(s);n.x=n.x*i*(1-this.brake)*r,n.y=n.y*s*o*(1-this.brake),n.z=0}const i=e.length();let s=n.length()/i;if(n.add(e),this.brake>0&&s>7){s=Math.sqrt(s);const t=e.clone();t.multiplyScalar(s),n.set(t),n.add(e)}let r=this._calculateAutoScrollTimeByInitialSpeed(t.length());this.brake>0&&s>3&&(s=3,r*=s),0===this.brake&&s>1&&(r*=s),this._startAutoScroll(n,r,!0)}_calculateAutoScrollTimeByInitialSpeed(e){return Math.sqrt(Math.sqrt(e/5))}_startAutoScroll(e,t,n=!1){const i=this._flattenVectorByDirection(e);this._autoScrolling=!0,this._autoScrollTargetDelta=i,this._autoScrollAttenuate=n,ri.copy(this._autoScrollStartPosition,this._getContentPosition()),this._autoScrollTotalTime=t,this._autoScrollAccumulatedTime=0,this._autoScrollBraking=!1,this._isScrollEndedWithThresholdEventFired=!1,this._autoScrollBrakingStartPosition.set(0,0,0),this._getHowMuchOutOfBoundary().equals(ri.ZERO,s9)||(this._autoScrollCurrentlyOutOfBoundary=!0)}_calculateTouchMoveVelocity(){const e=new ri;let t=0;if(t=this._touchMoveTimeDeltas.reduce(((e,t)=>e+t),t),t<=0||t>=.5)e.set(ri.ZERO);else{let n=new ri;n=this._touchMoveDisplacements.reduce(((e,t)=>(e.add(t),e)),n),e.set(n.x*(1-this.brake)/t,n.y*(1-this.brake)/t,n.z)}return e}_flattenVectorByDirection(e){const t=e;return t.x=this.horizontal?t.x:0,t.y=this.vertical?t.y:0,t}_moveContent(e,t){const n=this._flattenVectorByDirection(e);r9.set(this._getContentPosition()),r9.add(n),r9.set(Math.round(1e4*r9.x)*s9,Math.round(1e4*r9.y)*s9,r9.z),this._setContentPosition(r9);const i=this._getHowMuchOutOfBoundary();a9.set(i.x,i.y),this._updateScrollBar(a9),this.elastic&&t&&this._startBounceBackIfNeeded()}_getContentLeftBoundary(){if(!this._content)return-1;const e=this._getContentPosition(),t=this._content._uiProps.uiTransformComp;return e.x-t.anchorX*t.width}_getContentRightBoundary(){if(!this._content)return-1;const e=this._content._uiProps.uiTransformComp;return this._getContentLeftBoundary()+e.width}_getContentTopBoundary(){if(!this._content)return-1;const e=this._content._uiProps.uiTransformComp;return this._getContentBottomBoundary()+e.height}_getContentBottomBoundary(){if(!this._content)return-1;const e=this._getContentPosition(),t=this._content._uiProps.uiTransformComp;return e.y-t.anchorY*t.height}_getHowMuchOutOfBoundary(e){if((e=e||new ri).equals(ri.ZERO,s9)&&!this._outOfBoundaryAmountDirty)return this._outOfBoundaryAmount;const t=new ri,n=this._getContentLeftBoundary(),i=this._getContentRightBoundary();n+e.x>this._leftBoundary?t.x=this._leftBoundary-(n+e.x):i+e.x<this._rightBoundary&&(t.x=this._rightBoundary-(i+e.x));const s=this._getContentTopBoundary(),r=this._getContentBottomBoundary();return s+e.y<this._topBoundary?t.y=this._topBoundary-(s+e.y):r+e.y>this._bottomBoundary&&(t.y=this._bottomBoundary-(r+e.y)),e.equals(ri.ZERO,s9)&&(this._outOfBoundaryAmount=t,this._outOfBoundaryAmountDirty=!1),this._clampDelta(t),t}_updateScrollBar(e){this._horizontalScrollBar&&this._horizontalScrollBar.onScroll(e),this.verticalScrollBar&&this.verticalScrollBar.onScroll(e)}_onScrollBarTouchBegan(){this._horizontalScrollBar&&this._horizontalScrollBar.onTouchBegan(),this.verticalScrollBar&&this.verticalScrollBar.onTouchBegan()}_onScrollBarTouchEnded(){this._horizontalScrollBar&&this._horizontalScrollBar.onTouchEnded(),this.verticalScrollBar&&this.verticalScrollBar.onTouchEnded()}_dispatchEvent(e){if(e===_9.SCROLL_ENDED)this._scrollEventEmitMask=0;else if(e===_9.SCROLL_TO_TOP||e===_9.SCROLL_TO_BOTTOM||e===_9.SCROLL_TO_LEFT||e===_9.SCROLL_TO_RIGHT){const t=1<<h9[e];if(this._scrollEventEmitMask&t)return;this._scrollEventEmitMask|=t}HR.emitEvents(this.scrollEvents,this,h9[e]),this.node.emit(e,this)}_adjustContentOutOfBoundary(){if(this._content&&(this._outOfBoundaryAmountDirty=!0,this._isOutOfBoundary())){const e=this._getHowMuchOutOfBoundary();r9.set(this._getContentPosition()),r9.add(e),this._content.setPosition(r9),this._updateScrollBar(bi.ZERO)}}_hideScrollBar(){this._horizontalScrollBar&&this._horizontalScrollBar.hide(),this._verticalScrollBar&&this._verticalScrollBar.hide()}_updateScrollBarState(){if(!this._content||!this.view)return;const e=this.view,t=this._content._uiProps.uiTransformComp;this.verticalScrollBar&&(t.height<e.height?this.verticalScrollBar.hide():this.verticalScrollBar.show()),this.horizontalScrollBar&&(t.width<e.width?this.horizontalScrollBar.hide():this.horizontalScrollBar.show())}_stopPropagationIfTargetIsMe(e){e.eventPhase===aP.AT_TARGET&&e.target===this.node&&(e.propagationStopped=!0)}_processDeltaMove(e){this._scrollChildren(e),this._gatherTouchMove(e)}_handleMoveLogic(e){this._getLocalAxisAlignDelta(this._deltaPos,e),this._processDeltaMove(this._deltaPos)}_handleReleaseLogic(e){this._getLocalAxisAlignDelta(this._deltaPos,e),this._gatherTouchMove(this._deltaPos),this._processInertiaScroll(),this._scrolling&&(this._scrolling=!1,this._autoScrolling||this._dispatchEvent(_9.SCROLL_ENDED))}_getLocalAxisAlignDelta(e,t){const n=this.node._uiProps.uiTransformComp,i=new ri;n&&(t.getUILocation(a9),t.getUIPreviousLocation(c9),r9.set(a9.x,a9.y,0),o9.set(c9.x,c9.y,0),n.convertToNodeSpaceAR(r9,r9),n.convertToNodeSpaceAR(o9,o9),ri.subtract(i,r9,o9)),e.set(i)}_scrollChildren(e){this._clampDelta(e);const t=e;let n;this.elastic&&(n=this._getHowMuchOutOfBoundary(),t.x*=0===n.x?1:.5,t.y*=0===n.y?1:.5),this.elastic||(n=this._getHowMuchOutOfBoundary(t),t.add(n));let i="",s="";if(this._content){const{anchorX:e,anchorY:n,width:r,height:o}=this._content._uiProps.uiTransformComp,a=this._content.position||ri.ZERO;this.vertical&&(t.y>0?a.y-n*o+t.y>=this._bottomBoundary&&(i=_9.SCROLL_TO_BOTTOM):t.y<0&&a.y-n*o+o+t.y<=this._topBoundary&&(i=_9.SCROLL_TO_TOP)),this.horizontal&&(t.x<0?a.x-e*r+r+t.x<=this._rightBoundary&&(s=_9.SCROLL_TO_RIGHT):t.x>0&&a.x-e*r+t.x>=this._leftBoundary&&(s=_9.SCROLL_TO_LEFT))}this._moveContent(t,!1),(this.horizontal&&0!==t.x||this.vertical&&0!==t.y)&&(this._scrolling||(this._scrolling=!0,this._dispatchEvent(_9.SCROLL_BEGAN)),this._dispatchEvent(_9.SCROLLING)),""!==i&&this._dispatchEvent(i),""!==s&&this._dispatchEvent(s)}_handlePressLogic(){this._autoScrolling&&this._dispatchEvent(_9.SCROLL_ENDED),this._autoScrolling=!1,this._isBouncing=!1,this._touchMovePreviousTimestamp=l9(),this._touchMoveDisplacements.length=0,this._touchMoveTimeDeltas.length=0,this._onScrollBarTouchBegan()}_clampDelta(e){if(this._content&&this.view){const t=this.view.contentSize,n=this._content._uiProps.uiTransformComp;n.width<t.width&&(e.x=0),n.height<t.height&&(e.y=0)}}_gatherTouchMove(e){const t=e.clone();for(this._clampDelta(t);this._touchMoveDisplacements.length>=5;)this._touchMoveDisplacements.shift(),this._touchMoveTimeDeltas.shift();this._touchMoveDisplacements.push(t);const n=l9();this._touchMoveTimeDeltas.push((n-this._touchMovePreviousTimestamp)/1e3),this._touchMovePreviousTimestamp=n}_startBounceBackIfNeeded(){if(!this.elastic)return!1;const e=this._getHowMuchOutOfBoundary();if(this._clampDelta(e),e.equals(ri.ZERO,s9))return!1;const t=Math.max(this.bounceDuration,0);return this._startAutoScroll(e,t,!0),this._isBouncing||(e.y>0&&this._dispatchEvent(_9.BOUNCE_TOP),e.y<0&&this._dispatchEvent(_9.BOUNCE_BOTTOM),e.x>0&&this._dispatchEvent(_9.BOUNCE_RIGHT),e.x<0&&this._dispatchEvent(_9.BOUNCE_LEFT),this._isBouncing=!0),!0}_processInertiaScroll(){if(!this._startBounceBackIfNeeded()&&this.inertia){const e=this._calculateTouchMoveVelocity();!e.equals(r9,s9)&&this.brake<1&&this._startInertiaScroll(e)}this._onScrollBarTouchEnded()}_isOutOfBoundary(){return!this._getHowMuchOutOfBoundary().equals(ri.ZERO,s9)}_isNecessaryAutoScrollBrake(){if(this._autoScrollBraking)return!0;if(this._isOutOfBoundary()){if(!this._autoScrollCurrentlyOutOfBoundary)return this._autoScrollCurrentlyOutOfBoundary=!0,this._autoScrollBraking=!0,this._autoScrollBrakingStartPosition=this._getContentPosition(),!0}else this._autoScrollCurrentlyOutOfBoundary=!1;return!1}_processAutoScrolling(e){const t=this._isNecessaryAutoScrollBrake(),n=t?.05:1;this._autoScrollAccumulatedTime+=e*(1/n);let i=Math.min(1,this._autoScrollAccumulatedTime/this._autoScrollTotalTime);var s;this._autoScrollAttenuate&&(s=i,i=(s-=1)*s*s*s*s+1);const r=this._autoScrollTargetDelta.clone();r.multiplyScalar(i);const o=this._autoScrollStartPosition.clone();o.add(r);let a=Math.abs(i-1)<=s9;if(Math.abs(i-1)<=this.getScrollEndedEventTiming()&&!this._isScrollEndedWithThresholdEventFired&&(this._dispatchEvent(_9.SCROLL_ENG_WITH_THRESHOLD),this._isScrollEndedWithThresholdEventFired=!0),this.elastic){const e=o.clone();e.subtract(this._autoScrollBrakingStartPosition),t&&e.multiplyScalar(n),o.set(this._autoScrollBrakingStartPosition),o.add(e)}else{const e=o.clone();e.subtract(this.getContentPosition());const t=this._getHowMuchOutOfBoundary(e);t.equals(ri.ZERO,s9)||(o.add(t),a=!0)}a&&(this._autoScrolling=!1);const c=o.clone();c.subtract(this._getContentPosition()),this._clampDelta(c),this._moveContent(c,a),this._dispatchEvent(_9.SCROLLING),this._autoScrolling||(this._isBouncing=!1,this._scrolling=!1,this._dispatchEvent(_9.SCROLL_ENDED))}_checkMouseWheel(e){if(!this._getHowMuchOutOfBoundary().equals(ri.ZERO,s9))return this._processInertiaScroll(),this.unschedule(this._checkMouseWheel),this._dispatchEvent(_9.SCROLL_ENDED),void(this._stopMouseWheel=!1);this._mouseWheelEventElapsedTime+=e,this._mouseWheelEventElapsedTime>.1&&(this._onScrollBarTouchEnded(),this.unschedule(this._checkMouseWheel),this._dispatchEvent(_9.SCROLL_ENDED),this._stopMouseWheel=!1)}_calculateMovePercentDelta(e){const t=e.anchor,n=e.applyToHorizontal,i=e.applyToVertical;this._calculateBoundary(),t.clampf(bi.ZERO,bi.ONE);let s=this._getContentBottomBoundary()-this._bottomBoundary;s=-s;let r=this._getContentLeftBoundary()-this._leftBoundary;r=-r;const o=new ri;if(this._content&&this.view){let e=0;const a=this._content._uiProps.uiTransformComp.contentSize,c=this.view.contentSize;n&&(e=a.width-c.width,o.x=r-e*t.x),i&&(e=a.height-c.height,o.y=s-e*t.y)}return o}_moveContentToTopLeft(e){let t=this._getContentBottomBoundary()-this._bottomBoundary;t=-t;const n=new ri;let i=0,s=this._getContentLeftBoundary()-this._leftBoundary;if(s=-s,this._content){const r=this._content._uiProps.uiTransformComp.contentSize;r.height<e.height&&(i=r.height-e.height,n.y=t-i),r.width<e.width&&(i=r.width-e.width,n.x=s)}this._updateScrollBarState(),this._moveContent(n),this._adjustContentOutOfBoundary()}_scaleChanged(e){e===gg.SCALE&&this._calculateBoundary()}},n9.EventType=_9,W7=Bc((j7=i9).prototype,"bounceDuration",[il,f7,m7,g7],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),q7=Bc(j7.prototype,"brake",[il,v7,y7,x7],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.5}}),X7=Bc(j7.prototype,"elastic",[il,S7,C7],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),Y7=Bc(j7.prototype,"inertia",[il,T7,b7],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),Bc(j7.prototype,"content",[E7,A7,P7],Object.getOwnPropertyDescriptor(j7.prototype,"content"),j7.prototype),K7=Bc(j7.prototype,"horizontal",[il,w7,I7],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),Bc(j7.prototype,"horizontalScrollBar",[R7,D7,O7],Object.getOwnPropertyDescriptor(j7.prototype,"horizontalScrollBar"),j7.prototype),$7=Bc(j7.prototype,"vertical",[il,M7,N7],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),Bc(j7.prototype,"verticalScrollBar",[L7,z7,F7],Object.getOwnPropertyDescriptor(j7.prototype,"verticalScrollBar"),j7.prototype),Z7=Bc(j7.prototype,"cancelInnerEvents",[il,B7,U7],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),Q7=Bc(j7.prototype,"scrollEvents",[G7,il,H7,k7],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),J7=Bc(j7.prototype,"_content",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),e9=Bc(j7.prototype,"_horizontalScrollBar",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),t9=Bc(j7.prototype,"_verticalScrollBar",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),V7=j7))||V7)||V7)||V7)||V7)||V7));var p9,d9,f9,m9,g9,v9,y9,x9,S9,C9,T9,b9,E9,A9,P9,w9,I9,R9,D9,O9,M9;const N9=new ri;var L9;!function(e){e[e.Horizontal=0]="Horizontal",e[e.Vertical=1]="Vertical"}(L9||(L9={})),Fe(L9);let z9=function(t){return e({Slider:t,SliderComponent:t}),t}((p9=Zc("cc.Slider"),d9=pl(),f9=Jc(110),m9=ll(),g9=Qc(wY),v9=Ol(VQ),y9=vl(),x9=Ol(L9),S9=vl(),C9=yl(),T9=vl(),b9=Ol([HR]),E9=vl(),p9(A9=d9(A9=f9(A9=m9(A9=g9((M9=O9=class extends jh{constructor(...e){super(...e),Fc(this,"slideEvents",w9,this),Fc(this,"_handle",I9,this),Fc(this,"_direction",R9,this),Fc(this,"_progress",D9,this),this._offset=new ri,this._dragging=!1,this._touchHandle=!1,this._handleLocalPos=new ri,this._touchPos=new ri}get handle(){return this._handle}set handle(e){this._handle!==e&&(this._handle=e)}get direction(){return this._direction}set direction(e){this._direction!==e&&(this._direction=e,this._changeLayout())}get progress(){return this._progress}set progress(e){this._progress!==e&&(this._progress=e,this._updateHandlePosition())}__preload(){this._updateHandlePosition()}onEnable(){this._updateHandlePosition(),this.node.on(cx.TOUCH_START,this._onTouchBegan,this),this.node.on(cx.TOUCH_MOVE,this._onTouchMoved,this),this.node.on(cx.TOUCH_END,this._onTouchEnded,this),this.node.on(cx.TOUCH_CANCEL,this._onTouchCancelled,this),this._handle&&this._handle.isValid&&(this._handle.node.on(cx.TOUCH_START,this._onHandleDragStart,this),this._handle.node.on(cx.TOUCH_MOVE,this._onTouchMoved,this),this._handle.node.on(cx.TOUCH_END,this._onTouchEnded,this))}onDisable(){this.node.off(cx.TOUCH_START,this._onTouchBegan,this),this.node.off(cx.TOUCH_MOVE,this._onTouchMoved,this),this.node.off(cx.TOUCH_END,this._onTouchEnded,this),this.node.off(cx.TOUCH_CANCEL,this._onTouchCancelled,this),this._handle&&this._handle.isValid&&(this._handle.node.off(cx.TOUCH_START,this._onHandleDragStart,this),this._handle.node.off(cx.TOUCH_MOVE,this._onTouchMoved,this),this._handle.node.off(cx.TOUCH_END,this._onTouchEnded,this))}_onHandleDragStart(e){if(!e||!this._handle||!this._handle.node._uiProps.uiTransformComp)return;this._dragging=!0,this._touchHandle=!0;const t=e.touch.getUILocation();ri.set(this._touchPos,t.x,t.y,0),this._handle.node._uiProps.uiTransformComp.convertToNodeSpaceAR(this._touchPos,this._offset),e.propagationStopped=!0}_onTouchBegan(e){this._handle&&e&&(this._dragging=!0,this._touchHandle||this._handleSliderLogic(e.touch),e.propagationStopped=!0)}_onTouchMoved(e){this._dragging&&e&&(this._handleSliderLogic(e.touch),e.propagationStopped=!0)}_onTouchEnded(e){this._dragging=!1,this._touchHandle=!1,this._offset=new ri,e&&(e.propagationStopped=!0)}_onTouchCancelled(e){this._dragging=!1,e&&(e.propagationStopped=!0)}_handleSliderLogic(e){this._updateProgress(e),this._emitSlideEvent()}_emitSlideEvent(){HR.emitEvents(this.slideEvents,this),this.node.emit("slide",this)}_updateProgress(e){if(!this._handle||!e)return;const t=e.getUILocation();ri.set(this._touchPos,t.x,t.y,0);const n=this.node._uiProps.uiTransformComp,i=n.convertToNodeSpaceAR(this._touchPos,N9);this.direction===L9.Horizontal?this.progress=Fn(.5+(i.x-this._offset.x)/n.width):this.progress=Fn(.5+(i.y-this._offset.y)/n.height)}_updateHandlePosition(){if(!this._handle)return;this._handleLocalPos.set(this._handle.node.getPosition());const e=this.node._uiProps.uiTransformComp;this._direction===L9.Horizontal?this._handleLocalPos.x=-e.width*e.anchorX+this.progress*e.width:this._handleLocalPos.y=-e.height*e.anchorY+this.progress*e.height,this._handle.node.setPosition(this._handleLocalPos)}_changeLayout(){const e=this.node._uiProps.uiTransformComp,t=e.contentSize;if(e.setContentSize(t.height,t.width),this._handle){const e=this._handle.node.position;this._direction===L9.Horizontal?this._handle.node.setPosition(e.x,0,e.z):this._handle.node.setPosition(0,e.y,e.z),this._updateHandlePosition()}}},O9.Direction=L9,Bc((P9=M9).prototype,"handle",[v9,y9],Object.getOwnPropertyDescriptor(P9.prototype,"handle"),P9.prototype),Bc(P9.prototype,"direction",[x9,S9],Object.getOwnPropertyDescriptor(P9.prototype,"direction"),P9.prototype),Bc(P9.prototype,"progress",[Tl,C9,T9],Object.getOwnPropertyDescriptor(P9.prototype,"progress"),P9.prototype),w9=Bc(P9.prototype,"slideEvents",[b9,il,E9],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),I9=Bc(P9.prototype,"_handle",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),R9=Bc(P9.prototype,"_direction",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return L9.Horizontal}}),D9=Bc(P9.prototype,"_progress",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.1}}),A9=P9))||A9)||A9)||A9)||A9)||A9));function F9(...e){return Object.assign({},...e)}var B9,U9,G9,H9,k9,V9,j9,W9,q9,X9,Y9,K9,$9,Z9,Q9,J9,eee,tee,nee,iee;!function(e){e.TOGGLE="toggle"}(iee||(iee={}));let see=function(t){return e({Toggle:t,ToggleComponent:t}),t}((B9=Zc("cc.Toggle"),U9=pl(),G9=Jc(110),H9=ll(),k9=Qc(wY),V9=bl(),j9=vl(),W9=Ol(VQ),q9=bl(),X9=vl(),Y9=Ol([HR]),K9=vl(),B9($9=U9($9=G9($9=H9($9=k9((nee=tee=class e extends V3{constructor(...e){super(...e),Fc(this,"checkEvents",Q9,this),Fc(this,"_isChecked",J9,this),Fc(this,"_checkMark",eee,this)}get isChecked(){return this._isChecked}set isChecked(e){this._set(e)}get checkMark(){return this._checkMark}set checkMark(e){this._checkMark!==e&&(this._checkMark=e)}set _resizeToTarget(e){e&&this._resizeNodeToTargetNode()}get _toggleContainer(){const e=this.node.parent;return i.Node.isNode(e)?e.getComponent("cc.ToggleContainer"):null}_internalToggle(){this.isChecked=!this.isChecked}_set(e,t=!0){if(this._isChecked==e)return;this._isChecked=e;const n=this._toggleContainer;n&&n.enabled&&this.enabled&&(e||!n.anyTogglesChecked()&&!n.allowSwitchOff)&&(this._isChecked=!0,n.notifyToggleCheck(this,t)),this.playEffect(),t&&this._emitToggleEvents()}playEffect(){this._checkMark&&(this._checkMark.node.active=this._isChecked)}setIsCheckedWithoutNotify(e){this._set(e,!1)}onEnable(){super.onEnable(),this.playEffect(),this.node.on(e.EventType.CLICK,this._internalToggle,this)}onDisable(){super.onDisable(),this.node.off(e.EventType.CLICK,this._internalToggle,this)}OnDestroy(){const e=this._toggleContainer;e&&e.ensureValidState()}_emitToggleEvents(){this.node.emit(e.EventType.TOGGLE,this),this.checkEvents&&HR.emitEvents(this.checkEvents,this)}},tee.EventType=F9(iee,U3),Bc((Z9=nee).prototype,"isChecked",[V9,j9],Object.getOwnPropertyDescriptor(Z9.prototype,"isChecked"),Z9.prototype),Bc(Z9.prototype,"checkMark",[W9,q9,X9],Object.getOwnPropertyDescriptor(Z9.prototype,"checkMark"),Z9.prototype),Q9=Bc(Z9.prototype,"checkEvents",[Y9,il,K9],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),J9=Bc(Z9.prototype,"_isChecked",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),eee=Bc(Z9.prototype,"_checkMark",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),$9=Z9))||$9)||$9)||$9)||$9)||$9));var ree,oee,aee,cee,lee,hee,_ee,uee,pee,dee,fee;let mee=function(t){return e({ToggleContainer:t,ToggleContainerComponent:t}),t}((ree=Zc("cc.ToggleContainer"),oee=pl(),aee=Jc(110),cee=ll(),lee=vl(),hee=Ol([HR]),_ee=vl(),ree(uee=oee(uee=aee(uee=cee(uee=cl((dee=Bc((pee=class extends jh{constructor(...e){super(...e),Fc(this,"_allowSwitchOff",dee,this),Fc(this,"checkEvents",fee,this)}get allowSwitchOff(){return this._allowSwitchOff}set allowSwitchOff(e){this._allowSwitchOff=e}get toggleItems(){return this.node.children.map((e=>{const t=e.getComponent("cc.Toggle");return t&&t.enabled?t:null})).filter(Boolean)}onEnable(){this.ensureValidState(),this.node.on(cx.CHILD_ADDED,this.ensureValidState,this),this.node.on(cx.CHILD_REMOVED,this.ensureValidState,this)}onDisable(){this.node.off(cx.CHILD_ADDED,this.ensureValidState,this),this.node.off(cx.CHILD_REMOVED,this.ensureValidState,this)}activeToggles(){return this.toggleItems.filter((e=>e.isChecked))}anyTogglesChecked(){return!!this.toggleItems.find((e=>e.isChecked))}notifyToggleCheck(e,t=!0){if(this.enabledInHierarchy){for(let n=0;n<this.toggleItems.length;n++){const i=this.toggleItems[n];i!==e&&(t?i.isChecked=!1:i.setIsCheckedWithoutNotify(!1))}this.checkEvents&&i.Component.EventHandler.emitEvents(this.checkEvents,e)}}ensureValidState(){const e=this.toggleItems;if(!this._allowSwitchOff&&!this.anyTogglesChecked()&&0!==e.length){const t=e[0];t.isChecked=!0,this.notifyToggleCheck(t)}const t=this.activeToggles();if(t.length>1){const e=t[0];for(let n=0;n<t.length;++n){const i=t[n];i!==e&&(i.isChecked=!1)}}}}).prototype,"_allowSwitchOff",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Bc(pee.prototype,"allowSwitchOff",[lee],Object.getOwnPropertyDescriptor(pee.prototype,"allowSwitchOff"),pee.prototype),fee=Bc(pee.prototype,"checkEvents",[hee,il,_ee],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),uee=pee))||uee)||uee)||uee)||uee)||uee));var gee,vee,yee,xee,See,Cee,Tee,bee,Eee,Aee,Pee,wee,Iee,Ree,Dee,Oee,Mee,Nee,Lee,zee,Fee,Bee,Uee,Gee,Hee,kee,Vee,jee,Wee,qee,Xee,Yee,Kee,$ee,Zee,Qee,Jee,ete,tte,nte,ite,ste,rte,ote,ate;const cte=new bi;function lte(e){return e instanceof GP?lI:e._uiProps.uiTransformComp?e._uiProps.uiTransformComp.contentSize:Di.ZERO}function hte(e,t,n,i){e.parent?cte.set(e.parent.getScale().x,e.parent.getScale().y):cte.set(0,0);let s=cte.x,r=cte.y,o=0,a=0;for(let c=e.parent;;){if(!c)return n.x=n.y=0,void(i.x=i.y=1);const e=c.getPosition();if(o+=e.x,a+=e.y,c=c.parent,c===t)break;{c?cte.set(c.getScale().x,c.getScale().y):cte.set(0,0);const e=cte.x,t=cte.y;o*=e,a*=t,s*=e,r*=t}}i.x=0!==s?1/s:1,i.y=0!==r?1/r:1,n.x=-o,n.y=-a}let _te,ute;!function(e){e[e.ONCE=0]="ONCE",e[e.ALWAYS=1]="ALWAYS",e[e.ON_WINDOW_RESIZE=2]="ON_WINDOW_RESIZE"}(_te||(_te={})),Fe(_te),function(e){e[e.TOP=1]="TOP",e[e.MID=2]="MID",e[e.BOT=4]="BOT",e[e.LEFT=8]="LEFT",e[e.CENTER=16]="CENTER",e[e.RIGHT=32]="RIGHT",e[e.HORIZONTAL=56]="HORIZONTAL",e[e.VERTICAL=7]="VERTICAL"}(ute||(ute={}));const pte=ute.TOP|ute.BOT,dte=ute.LEFT|ute.RIGHT;let fte=function(t){return e({Widget:t,WidgetComponent:t}),t}((gee=Zc("cc.Widget"),vee=pl(),yee=Jc(110),xee=ll(),See=Qc(wY),Cee=Ol(Yx),Tee=vl(),bee=vl(),Eee=vl(),Aee=vl(),Pee=vl(),wee=vl(),Iee=vl(),Ree=fl(),Dee=fl(),Oee=vl(),Mee=vl(),Nee=vl(),Lee=vl(),zee=vl(),Fee=vl(),Bee=Ol(_te),Uee=vl(),gee(Gee=vee(Gee=yee(Gee=xee(Gee=See(Gee=cl((ate=ote=class extends jh{constructor(...e){super(...e),this._lastPos=new ri,this._lastSize=new Di,this._dirty=!0,this._hadAlignOnce=!1,Fc(this,"_alignFlags",kee,this),Fc(this,"_target",Vee,this),Fc(this,"_left",jee,this),Fc(this,"_right",Wee,this),Fc(this,"_top",qee,this),Fc(this,"_bottom",Xee,this),Fc(this,"_horizontalCenter",Yee,this),Fc(this,"_verticalCenter",Kee,this),Fc(this,"_isAbsLeft",$ee,this),Fc(this,"_isAbsRight",Zee,this),Fc(this,"_isAbsTop",Qee,this),Fc(this,"_isAbsBottom",Jee,this),Fc(this,"_isAbsHorizontalCenter",ete,this),Fc(this,"_isAbsVerticalCenter",tte,this),Fc(this,"_originalWidth",nte,this),Fc(this,"_originalHeight",ite,this),Fc(this,"_alignMode",ste,this),Fc(this,"_lockFlags",rte,this)}get target(){return this._target}set target(e){this._target!==e&&(this._unregisterTargetEvents(),this._target=e,this._registerTargetEvents(),this._validateTargetInDEV(),this._recursiveDirty())}get isAlignTop(){return(this._alignFlags&ute.TOP)>0}set isAlignTop(e){this._setAlign(ute.TOP,e),this._recursiveDirty()}get isAlignBottom(){return(this._alignFlags&ute.BOT)>0}set isAlignBottom(e){this._setAlign(ute.BOT,e),this._recursiveDirty()}get isAlignLeft(){return(this._alignFlags&ute.LEFT)>0}set isAlignLeft(e){this._setAlign(ute.LEFT,e),this._recursiveDirty()}get isAlignRight(){return(this._alignFlags&ute.RIGHT)>0}set isAlignRight(e){this._setAlign(ute.RIGHT,e),this._recursiveDirty()}get isAlignVerticalCenter(){return(this._alignFlags&ute.MID)>0}set isAlignVerticalCenter(e){e?(this.isAlignTop=!1,this.isAlignBottom=!1,this._alignFlags|=ute.MID):this._alignFlags&=~ute.MID,this._recursiveDirty()}get isAlignHorizontalCenter(){return(this._alignFlags&ute.CENTER)>0}set isAlignHorizontalCenter(e){e?(this.isAlignLeft=!1,this.isAlignRight=!1,this._alignFlags|=ute.CENTER):this._alignFlags&=~ute.CENTER,this._recursiveDirty()}get isStretchWidth(){return(this._alignFlags&dte)===dte}get isStretchHeight(){return(this._alignFlags&pte)===pte}get top(){return this._top}set top(e){this._top=e,this._recursiveDirty()}get editorTop(){return this._isAbsTop?this._top:100*this._top}set editorTop(e){this._top=this._isAbsTop?e:e/100,this._recursiveDirty()}get bottom(){return this._bottom}set bottom(e){this._bottom=e,this._recursiveDirty()}get editorBottom(){return this._isAbsBottom?this._bottom:100*this._bottom}set editorBottom(e){this._bottom=this._isAbsBottom?e:e/100,this._recursiveDirty()}get left(){return this._left}set left(e){this._left=e,this._recursiveDirty()}get editorLeft(){return this._isAbsLeft?this._left:100*this._left}set editorLeft(e){this._left=this._isAbsLeft?e:e/100,this._recursiveDirty()}get right(){return this._right}set right(e){this._right=e,this._recursiveDirty()}get editorRight(){return this._isAbsRight?this._right:100*this._right}set editorRight(e){this._right=this._isAbsRight?e:e/100,this._recursiveDirty()}get horizontalCenter(){return this._horizontalCenter}set horizontalCenter(e){this._horizontalCenter=e,this._recursiveDirty()}get editorHorizontalCenter(){return this._isAbsHorizontalCenter?this._horizontalCenter:100*this._horizontalCenter}set editorHorizontalCenter(e){this._horizontalCenter=this._isAbsHorizontalCenter?e:e/100,this._recursiveDirty()}get verticalCenter(){return this._verticalCenter}set verticalCenter(e){this._verticalCenter=e,this._recursiveDirty()}get editorVerticalCenter(){return this._isAbsVerticalCenter?this._verticalCenter:100*this._verticalCenter}set editorVerticalCenter(e){this._verticalCenter=this._isAbsVerticalCenter?e:e/100,this._recursiveDirty()}get isAbsoluteTop(){return this._isAbsTop}set isAbsoluteTop(e){this._isAbsTop!==e&&(this._isAbsTop=e,this._autoChangedValue(ute.TOP,this._isAbsTop))}get isAbsoluteBottom(){return this._isAbsBottom}set isAbsoluteBottom(e){this._isAbsBottom!==e&&(this._isAbsBottom=e,this._autoChangedValue(ute.BOT,this._isAbsBottom))}get isAbsoluteLeft(){return this._isAbsLeft}set isAbsoluteLeft(e){this._isAbsLeft!==e&&(this._isAbsLeft=e,this._autoChangedValue(ute.LEFT,this._isAbsLeft))}get isAbsoluteRight(){return this._isAbsRight}set isAbsoluteRight(e){this._isAbsRight!==e&&(this._isAbsRight=e,this._autoChangedValue(ute.RIGHT,this._isAbsRight))}get isAbsoluteHorizontalCenter(){return this._isAbsHorizontalCenter}set isAbsoluteHorizontalCenter(e){this._isAbsHorizontalCenter!==e&&(this._isAbsHorizontalCenter=e,this._autoChangedValue(ute.CENTER,this._isAbsHorizontalCenter))}get isAbsoluteVerticalCenter(){return this._isAbsVerticalCenter}set isAbsoluteVerticalCenter(e){this._isAbsVerticalCenter!==e&&(this._isAbsVerticalCenter=e,this._autoChangedValue(ute.MID,this._isAbsVerticalCenter))}get alignMode(){return this._alignMode}set alignMode(e){this._alignMode=e,this._recursiveDirty()}get alignFlags(){return this._alignFlags}set alignFlags(e){this._alignFlags!==e&&(this._alignFlags=e,this._recursiveDirty())}updateAlignment(){i._widgetManager.updateAlignment(this.node)}_validateTargetInDEV(){}setDirty(){this._recursiveDirty()}onEnable(){this.node.getPosition(this._lastPos),this._lastSize.set(this.node._uiProps.uiTransformComp.contentSize),i._widgetManager.add(this),this._hadAlignOnce=!1,this._registerEvent(),this._registerTargetEvents()}onDisable(){i._widgetManager.remove(this),this._unregisterEvent(),this._unregisterTargetEvents()}onDestroy(){this._removeParentEvent()}_adjustWidgetToAllowMovingInEditor(e){}_adjustWidgetToAllowResizingInEditor(){}_adjustWidgetToAnchorChanged(){this.setDirty()}_adjustTargetToParentChanged(e){e&&this._unregisterOldParentEvents(e),this.node.getParent()&&this._registerTargetEvents(),this._setDirtyByMode()}_registerEvent(){this.node.on(cx.TRANSFORM_CHANGED,this._setDirtyByMode,this),this.node.on(cx.SIZE_CHANGED,this._setDirtyByMode,this),this.node.on(cx.ANCHOR_CHANGED,this._adjustWidgetToAnchorChanged,this),this.node.on(cx.PARENT_CHANGED,this._adjustTargetToParentChanged,this)}_unregisterEvent(){this.node.off(cx.TRANSFORM_CHANGED,this._setDirtyByMode,this),this.node.off(cx.SIZE_CHANGED,this._setDirtyByMode,this),this.node.off(cx.ANCHOR_CHANGED,this._adjustWidgetToAnchorChanged,this)}_removeParentEvent(){this.node.off(cx.PARENT_CHANGED,this._adjustTargetToParentChanged,this)}_autoChangedValue(e,t){if(!((this._alignFlags&e)>0))return;const n=this.node.parent&&this.node.parent._uiProps,i=n&&n.uiTransformComp,s=i?i.contentSize:lI;this.isAlignLeft&&e===ute.LEFT?this._left=t?this._left*s.width:this._left/s.width:this.isAlignRight&&e===ute.RIGHT?this._right=t?this._right*s.width:this._right/s.width:this.isAlignHorizontalCenter&&e===ute.CENTER?this._horizontalCenter=t?this._horizontalCenter*s.width:this._horizontalCenter/s.width:this.isAlignTop&&e===ute.TOP?this._top=t?this._top*s.height:this._top/s.height:this.isAlignBottom&&e===ute.BOT?this._bottom=t?this._bottom*s.height:this._bottom/s.height:this.isAbsoluteVerticalCenter&&e===ute.MID&&(this._verticalCenter=this._verticalCenter/s.height),this._recursiveDirty()}_registerTargetEvents(){const e=this._target||this.node.parent;e&&e.getComponent(wY)&&(e.on(cx.TRANSFORM_CHANGED,this._setDirtyByMode,this),e.on(cx.SIZE_CHANGED,this._setDirtyByMode,this),e.on(cx.ANCHOR_CHANGED,this._setDirtyByMode,this))}_unregisterTargetEvents(){const e=this._target||this.node.parent;e&&(e.off(cx.TRANSFORM_CHANGED,this._setDirtyByMode,this),e.off(cx.SIZE_CHANGED,this._setDirtyByMode,this),e.off(cx.ANCHOR_CHANGED,this._setDirtyByMode,this))}_unregisterOldParentEvents(e){const t=this._target||e;t&&(t.off(cx.TRANSFORM_CHANGED,this._setDirtyByMode,this),t.off(cx.SIZE_CHANGED,this._setDirtyByMode,this))}_setDirtyByMode(){this.alignMode===_te.ALWAYS&&this._recursiveDirty()}_setAlign(e,t){if(t===(this._alignFlags&e)>0)return;const n=(e&dte)>0,i=this.node._uiProps.uiTransformComp;t?(this._alignFlags|=e,n?(this.isAlignHorizontalCenter=!1,this.isStretchWidth&&(this._originalWidth=i.width)):(this.isAlignVerticalCenter=!1,this.isStretchHeight&&(this._originalHeight=i.height))):(n?this.isStretchWidth&&(i.width=this._originalWidth):this.isStretchHeight&&(i.height=this._originalHeight),this._alignFlags&=~e)}_recursiveDirty(){this._dirty||(this._dirty=!0)}},ote.AlignMode=_te,Bc((Hee=ate).prototype,"target",[Cee,Tee],Object.getOwnPropertyDescriptor(Hee.prototype,"target"),Hee.prototype),Bc(Hee.prototype,"isAlignTop",[bee],Object.getOwnPropertyDescriptor(Hee.prototype,"isAlignTop"),Hee.prototype),Bc(Hee.prototype,"isAlignBottom",[Eee],Object.getOwnPropertyDescriptor(Hee.prototype,"isAlignBottom"),Hee.prototype),Bc(Hee.prototype,"isAlignLeft",[Aee],Object.getOwnPropertyDescriptor(Hee.prototype,"isAlignLeft"),Hee.prototype),Bc(Hee.prototype,"isAlignRight",[Pee],Object.getOwnPropertyDescriptor(Hee.prototype,"isAlignRight"),Hee.prototype),Bc(Hee.prototype,"isAlignVerticalCenter",[wee],Object.getOwnPropertyDescriptor(Hee.prototype,"isAlignVerticalCenter"),Hee.prototype),Bc(Hee.prototype,"isAlignHorizontalCenter",[Iee],Object.getOwnPropertyDescriptor(Hee.prototype,"isAlignHorizontalCenter"),Hee.prototype),Bc(Hee.prototype,"isStretchWidth",[Ree],Object.getOwnPropertyDescriptor(Hee.prototype,"isStretchWidth"),Hee.prototype),Bc(Hee.prototype,"isStretchHeight",[Dee],Object.getOwnPropertyDescriptor(Hee.prototype,"isStretchHeight"),Hee.prototype),Bc(Hee.prototype,"top",[Oee],Object.getOwnPropertyDescriptor(Hee.prototype,"top"),Hee.prototype),Bc(Hee.prototype,"editorTop",[dl],Object.getOwnPropertyDescriptor(Hee.prototype,"editorTop"),Hee.prototype),Bc(Hee.prototype,"bottom",[Mee],Object.getOwnPropertyDescriptor(Hee.prototype,"bottom"),Hee.prototype),Bc(Hee.prototype,"editorBottom",[dl],Object.getOwnPropertyDescriptor(Hee.prototype,"editorBottom"),Hee.prototype),Bc(Hee.prototype,"left",[Nee],Object.getOwnPropertyDescriptor(Hee.prototype,"left"),Hee.prototype),Bc(Hee.prototype,"editorLeft",[dl],Object.getOwnPropertyDescriptor(Hee.prototype,"editorLeft"),Hee.prototype),Bc(Hee.prototype,"right",[Lee],Object.getOwnPropertyDescriptor(Hee.prototype,"right"),Hee.prototype),Bc(Hee.prototype,"editorRight",[dl],Object.getOwnPropertyDescriptor(Hee.prototype,"editorRight"),Hee.prototype),Bc(Hee.prototype,"horizontalCenter",[zee],Object.getOwnPropertyDescriptor(Hee.prototype,"horizontalCenter"),Hee.prototype),Bc(Hee.prototype,"editorHorizontalCenter",[dl],Object.getOwnPropertyDescriptor(Hee.prototype,"editorHorizontalCenter"),Hee.prototype),Bc(Hee.prototype,"verticalCenter",[Fee],Object.getOwnPropertyDescriptor(Hee.prototype,"verticalCenter"),Hee.prototype),Bc(Hee.prototype,"editorVerticalCenter",[dl],Object.getOwnPropertyDescriptor(Hee.prototype,"editorVerticalCenter"),Hee.prototype),Bc(Hee.prototype,"isAbsoluteTop",[dl],Object.getOwnPropertyDescriptor(Hee.prototype,"isAbsoluteTop"),Hee.prototype),Bc(Hee.prototype,"isAbsoluteBottom",[dl],Object.getOwnPropertyDescriptor(Hee.prototype,"isAbsoluteBottom"),Hee.prototype),Bc(Hee.prototype,"isAbsoluteLeft",[dl],Object.getOwnPropertyDescriptor(Hee.prototype,"isAbsoluteLeft"),Hee.prototype),Bc(Hee.prototype,"isAbsoluteRight",[dl],Object.getOwnPropertyDescriptor(Hee.prototype,"isAbsoluteRight"),Hee.prototype),Bc(Hee.prototype,"isAbsoluteHorizontalCenter",[dl],Object.getOwnPropertyDescriptor(Hee.prototype,"isAbsoluteHorizontalCenter"),Hee.prototype),Bc(Hee.prototype,"isAbsoluteVerticalCenter",[dl],Object.getOwnPropertyDescriptor(Hee.prototype,"isAbsoluteVerticalCenter"),Hee.prototype),Bc(Hee.prototype,"alignMode",[Bee,Uee],Object.getOwnPropertyDescriptor(Hee.prototype,"alignMode"),Hee.prototype),Bc(Hee.prototype,"alignFlags",[dl],Object.getOwnPropertyDescriptor(Hee.prototype,"alignFlags"),Hee.prototype),kee=Bc(Hee.prototype,"_alignFlags",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Vee=Bc(Hee.prototype,"_target",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),jee=Bc(Hee.prototype,"_left",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Wee=Bc(Hee.prototype,"_right",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),qee=Bc(Hee.prototype,"_top",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Xee=Bc(Hee.prototype,"_bottom",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Yee=Bc(Hee.prototype,"_horizontalCenter",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Kee=Bc(Hee.prototype,"_verticalCenter",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),$ee=Bc(Hee.prototype,"_isAbsLeft",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),Zee=Bc(Hee.prototype,"_isAbsRight",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),Qee=Bc(Hee.prototype,"_isAbsTop",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),Jee=Bc(Hee.prototype,"_isAbsBottom",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),ete=Bc(Hee.prototype,"_isAbsHorizontalCenter",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),tte=Bc(Hee.prototype,"_isAbsVerticalCenter",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),nte=Bc(Hee.prototype,"_originalWidth",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),ite=Bc(Hee.prototype,"_originalHeight",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),ste=Bc(Hee.prototype,"_alignMode",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return _te.ON_WINDOW_RESIZE}}),rte=Bc(Hee.prototype,"_lockFlags",[il,rl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Gee=Hee))||Gee)||Gee)||Gee)||Gee)||Gee)||Gee));var mte,gte,vte,yte,xte,Ste,Cte,Tte,bte,Ete,Ate,Pte,wte,Ite,Rte,Dte,Ote,Mte,Nte;i.internal.computeInverseTransForTarget=hte,i.internal.getReadonlyNodeSize=lte;const Lte=new ti;var zte;!function(e){e[e.HORIZONTAL=0]="HORIZONTAL",e[e.VERTICAL=1]="VERTICAL"}(zte||(zte={})),Fe(zte);let Fte=function(t){return e({PageViewIndicator:t,PageViewIndicatorComponent:t}),t}((mte=Zc("cc.PageViewIndicator"),gte=pl(),vte=Jc(110),yte=ll(),xte=Ol(sX),Ste=vl(),Cte=Ol(zte),Tte=vl(),bte=Ol(Di),Ete=vl(),Ate=vl(),mte(Pte=gte(Pte=vte(Pte=yte((Nte=Mte=class extends jh{constructor(...e){super(...e),Fc(this,"spacing",Ite,this),Fc(this,"_spriteFrame",Rte,this),Fc(this,"_direction",Dte,this),Fc(this,"_cellSize",Ote,this),this._layout=null,this._pageView=null,this._indicators=[]}get spriteFrame(){return this._spriteFrame}set spriteFrame(e){this._spriteFrame!==e&&(this._spriteFrame=e)}get direction(){return this._direction}set direction(e){this._direction!==e&&(this._direction=e)}get cellSize(){return this._cellSize}set cellSize(e){this._cellSize!==e&&(this._cellSize=e)}onLoad(){this._updateLayout()}setPageView(e){this._pageView=e,this._refresh()}_updateLayout(){this._layout=this.getComponent(r6),this._layout||(this._layout=this.addComponent(r6));const e=this._layout;this.direction===zte.HORIZONTAL?(e.type=r6.Type.HORIZONTAL,e.spacingX=this.spacing):this.direction===zte.VERTICAL&&(e.type=r6.Type.VERTICAL,e.spacingY=this.spacing),e.resizeMode=r6.ResizeMode.CONTAINER}_createIndicator(){const e=new Yx;e.layer=this.node.layer;const t=e.addComponent(VQ);return t.spriteFrame=this.spriteFrame,t.sizeMode=VQ.SizeMode.CUSTOM,e.parent=this.node,e._uiProps.uiTransformComp.setContentSize(this._cellSize),e}_changedState(){const e=this._indicators;if(0===e.length||!this._pageView)return;const t=this._pageView.curPageIdx;if(!(t>=e.length)){for(let t=0;t<e.length;++t){const n=e[t];if(!n._uiProps.uiComp)continue;const i=n._uiProps.uiComp;Lte.set(i.color),Lte.a=127.5,i.color=Lte}if(e[t]._uiProps.uiComp){const n=e[t]._uiProps.uiComp;Lte.set(n.color),Lte.a=255,n.color=Lte}}}_refresh(){if(!this._pageView)return;const e=this._indicators,t=this._pageView.getPages();if(t.length===e.length)return;let n=0;if(t.length>e.length)for(n=0;n<t.length;++n)e[n]||(e[n]=this._createIndicator());else for(n=e.length-t.length;n>0;--n){const t=e[n-1];this.node.removeChild(t),e.splice(n-1,1)}this._layout&&this._layout.enabledInHierarchy&&this._layout.updateLayout(),this._changedState()}},Mte.Direction=zte,Bc((wte=Nte).prototype,"spriteFrame",[xte,Ste],Object.getOwnPropertyDescriptor(wte.prototype,"spriteFrame"),wte.prototype),Bc(wte.prototype,"direction",[Cte,Tte],Object.getOwnPropertyDescriptor(wte.prototype,"direction"),wte.prototype),Bc(wte.prototype,"cellSize",[bte,Ete],Object.getOwnPropertyDescriptor(wte.prototype,"cellSize"),wte.prototype),Ite=Bc(wte.prototype,"spacing",[il,Ate],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Rte=Bc(wte.prototype,"_spriteFrame",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Dte=Bc(wte.prototype,"_direction",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return zte.HORIZONTAL}}),Ote=Bc(wte.prototype,"_cellSize",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Di(20,20)}}),Pte=wte))||Pte)||Pte)||Pte)||Pte));var Bte,Ute,Gte,Hte,kte,Vte,jte,Wte,qte,Xte,Yte,Kte,$te,Zte,Qte,Jte,ene,tne,nne,ine,sne,rne,one,ane,cne,lne,hne,_ne,une,pne,dne,fne,mne,gne,vne,yne,xne,Sne,Cne,Tne,bne,Ene,Ane;const Pne=new bi;var wne,Ine,Rne;!function(e){e[e.Unified=0]="Unified",e[e.Free=1]="Free"}(wne||(wne={})),Fe(wne),function(e){e[e.Horizontal=0]="Horizontal",e[e.Vertical=1]="Vertical"}(Ine||(Ine={})),Fe(Ine),function(e){e.PAGE_TURNING="page-turning"}(Rne||(Rne={}));let Dne=function(t){return e({PageView:t,PageViewComponent:t}),t}((Bte=Zc("cc.PageView"),Ute=pl(),Gte=Jc(110),Hte=ll(),kte=Ol(wne),Vte=vl(),jte=Ol(Ine),Wte=vl(),qte=yl(),Xte=vl(),Yte=yl(),Kte=vl(),$te=Ol(Fte),Zte=vl(),Qte=vl(),Jte=Ol(a7),ene=fl(),tne=Ol(a7),nne=fl(),ine=fl(),sne=fl(),rne=fl(),one=Ol([HR]),ane=fl(),cne=vl(),lne=Ol([HR]),hne=vl(),Bte(_ne=Ute(_ne=Gte(_ne=Hte((Ane=Ene=class e extends u9{constructor(...e){super(...e),Fc(this,"autoPageTurningThreshold",pne,this),Fc(this,"horizontal",dne,this),Fc(this,"vertical",fne,this),Fc(this,"cancelInnerEvents",mne,this),Fc(this,"scrollEvents",gne,this),Fc(this,"pageTurningSpeed",vne,this),Fc(this,"pageEvents",yne,this),Fc(this,"_sizeMode",xne,this),Fc(this,"_direction",Sne,this),Fc(this,"_scrollThreshold",Cne,this),Fc(this,"_pageTurningEventTiming",Tne,this),Fc(this,"_indicator",bne,this),this._curPageIdx=0,this._lastPageIdx=0,this._pages=[],this._initContentPos=new ri,this._scrollCenterOffsetX=[],this._scrollCenterOffsetY=[],this._touchBeganPosition=new bi,this._touchEndPosition=new bi}get sizeMode(){return this._sizeMode}set sizeMode(e){this._sizeMode!==e&&(this._sizeMode=e,this._syncSizeMode())}get direction(){return this._direction}set direction(e){this._direction!==e&&(this._direction=e,this._syncScrollDirection())}get scrollThreshold(){return this._scrollThreshold}set scrollThreshold(e){this._scrollThreshold!==e&&(this._scrollThreshold=e)}get pageTurningEventTiming(){return this._pageTurningEventTiming}set pageTurningEventTiming(e){this._pageTurningEventTiming!==e&&(this._pageTurningEventTiming=e)}get indicator(){return this._indicator}set indicator(e){this._indicator!==e&&(this._indicator=e,this.indicator&&this.indicator.setPageView(this))}get curPageIdx(){return this._curPageIdx}get verticalScrollBar(){return super.verticalScrollBar}set verticalScrollBar(e){super.verticalScrollBar=e}get horizontalScrollBar(){return super.horizontalScrollBar}set horizontalScrollBar(e){super.horizontalScrollBar=e}onEnable(){super.onEnable(),this.node.on(cx.SIZE_CHANGED,this._updateAllPagesSize,this),this.node.on(e.EventType.SCROLL_ENG_WITH_THRESHOLD,this._dispatchPageTurningEvent,this)}onDisable(){super.onDisable(),this.node.off(cx.SIZE_CHANGED,this._updateAllPagesSize,this),this.node.off(e.EventType.SCROLL_ENG_WITH_THRESHOLD,this._dispatchPageTurningEvent,this)}onLoad(){this._initPages(),this.indicator&&this.indicator.setPageView(this)}getCurrentPageIndex(){return this._curPageIdx}setCurrentPageIndex(e){this.scrollToPage(e,1)}getPages(){return this._pages}addPage(e){e&&-1===this._pages.indexOf(e)&&this.content&&(e._uiProps.uiTransformComp?(this.content.addChild(e),this._pages.push(e),this._updatePageView()):S(4301))}insertPage(e,t){if(!(t<0)&&e&&-1===this._pages.indexOf(e)&&this.content)if(t>=this._pages.length)this.addPage(e);else{if(!e._uiProps.uiTransformComp)return void S(4301);this._pages.splice(t,0,e),this.content.insertChild(e,t),this._updatePageView()}}removePage(e){if(!e||!this.content)return;const t=this._pages.indexOf(e);-1!==t?this.removePageAtIndex(t):T(4300,e.name)}removePageAtIndex(e){const t=this._pages;if(e<0||e>=t.length)return;const n=t[e];n&&this.content&&(this.content.removeChild(n),t.splice(e,1),this._updatePageView())}removeAllPages(){if(!this.content)return;const e=this._pages;for(let t=0,n=e.length;t<n;t++)this.content.removeChild(e[t]);this._pages.length=0,this._updatePageView()}scrollToPage(e,t=.3){e<0||e>=this._pages.length||(this._curPageIdx=e,this.scrollToOffset(this._moveOffsetValue(e),t,!0),this.indicator&&this.indicator._changedState())}getScrollEndedEventTiming(){return this.pageTurningEventTiming}_updatePageView(){if(!this.content)return;const e=this.content.getComponent(r6);e&&e.enabled&&e.updateLayout();const t=this._pages.length;this._curPageIdx>=t&&(this._curPageIdx=0===t?0:t-1,this._lastPageIdx=this._curPageIdx);const n=this._initContentPos;for(let e=0;e<t;++e){const t=this._pages[e].position;this.direction===Ine.Horizontal?this._scrollCenterOffsetX[e]=Math.abs(n.x+t.x):this._scrollCenterOffsetY[e]=Math.abs(n.y+t.y)}this.indicator&&this.indicator._refresh()}_updateAllPagesSize(){const e=this.view;if(!this.content||!e)return;if(this._sizeMode!==wne.Unified)return;const t=this._pages,n=e.contentSize;for(let e=0,i=t.length;e<i;e++)t[e]._uiProps.uiTransformComp.setContentSize(n)}_handleReleaseLogic(){this._autoScrollToPage(),this._scrolling&&(this._scrolling=!1,this._autoScrolling||this._dispatchEvent(e.EventType.SCROLL_ENDED))}_onTouchBegan(e,t){e.touch.getUILocation(Pne),bi.set(this._touchBeganPosition,Pne.x,Pne.y),super._onTouchBegan(e,t)}_onTouchMoved(e,t){super._onTouchMoved(e,t)}_onTouchEnded(e,t){e.touch.getUILocation(Pne),bi.set(this._touchEndPosition,Pne.x,Pne.y),super._onTouchEnded(e,t)}_onTouchCancelled(e,t){e.touch.getUILocation(Pne),bi.set(this._touchEndPosition,Pne.x,Pne.y),super._onTouchCancelled(e,t)}_onMouseWheel(){}_syncScrollDirection(){this.horizontal=this.direction===Ine.Horizontal,this.vertical=this.direction===Ine.Vertical}_syncSizeMode(){const e=this.view;if(!this.content||!e)return;const t=this.content.getComponent(r6);if(t){if(this._sizeMode===wne.Free&&this._pages.length>0){const n=this._pages[0]._uiProps.uiTransformComp,i=this._pages[this._pages.length-1]._uiProps.uiTransformComp;this.direction===Ine.Horizontal?(t.paddingLeft=(e.width-n.width)/2,t.paddingRight=(e.width-i.width)/2):this.direction===Ine.Vertical&&(t.paddingTop=(e.height-n.height)/2,t.paddingBottom=(e.height-i.height)/2)}t.updateLayout()}}_initPages(){if(!this.content)return;this._initContentPos=this.content.position;const e=this.content.children;for(let t=0;t<e.length;++t){const n=e[t];this._pages.indexOf(n)>=0||this._pages.push(n)}this._syncScrollDirection(),this._syncSizeMode(),this._updatePageView()}_dispatchPageTurningEvent(){this._lastPageIdx!==this._curPageIdx&&(this._lastPageIdx=this._curPageIdx,HR.emitEvents(this.pageEvents,this,Rne.PAGE_TURNING),this.node.emit(Rne.PAGE_TURNING,this))}_isQuicklyScrollable(e){if(this.direction===Ine.Horizontal){if(Math.abs(e.x)>this.autoPageTurningThreshold)return!0}else if(this.direction===Ine.Vertical&&Math.abs(e.y)>this.autoPageTurningThreshold)return!0;return!1}_moveOffsetValue(e){const t=new bi;if(this._sizeMode===wne.Free)this.direction===Ine.Horizontal?t.x=this._scrollCenterOffsetX[e]:this.direction===Ine.Vertical&&(t.y=this._scrollCenterOffsetY[e]);else{const n=this.view;if(!n)return t;this.direction===Ine.Horizontal?t.x=e*n.width:this.direction===Ine.Vertical&&(t.y=e*n.height)}return t}_getDragDirection(e){return this._direction===Ine.Horizontal?0===e.x?0:e.x>0?1:-1:0===e.y?0:e.y<0?1:-1}_isScrollable(e,t,n){if(this._sizeMode===wne.Free){let i=0,s=0;if(this.direction===Ine.Horizontal)return i=this._scrollCenterOffsetX[t],s=this._scrollCenterOffsetX[n],Math.abs(e.x)>=Math.abs(i-s)*this.scrollThreshold;if(this.direction===Ine.Vertical)return i=this._scrollCenterOffsetY[t],s=this._scrollCenterOffsetY[n],Math.abs(e.y)>=Math.abs(i-s)*this.scrollThreshold}else{const t=this.view;if(!t)return!1;if(this.direction===Ine.Horizontal)return Math.abs(e.x)>=t.width*this.scrollThreshold;if(this.direction===Ine.Vertical)return Math.abs(e.y)>=t.height*this.scrollThreshold}return!1}_autoScrollToPage(){if(this._startBounceBackIfNeeded()){const e=this._getHowMuchOutOfBoundary();this._clampDelta(e),(e.x>0||e.y<0)&&(this._curPageIdx=0===this._pages.length?0:this._pages.length-1),(e.x<0||e.y>0)&&(this._curPageIdx=0),this.indicator&&this.indicator._changedState()}else{const e=new bi;bi.subtract(e,this._touchBeganPosition,this._touchEndPosition);const t=this._curPageIdx,n=t+this._getDragDirection(e),i=this.pageTurningSpeed*Math.abs(t-n);if(n<this._pages.length){if(this._isScrollable(e,t,n))return void this.scrollToPage(n,i);{const e=this._calculateTouchMoveVelocity();if(this._isQuicklyScrollable(e))return void this.scrollToPage(n,i)}}this.scrollToPage(t,i)}}},Ene.SizeMode=wne,Ene.Direction=Ine,Ene.EventType=F9(Rne,_9),Bc((une=Ane).prototype,"sizeMode",[kte,Vte],Object.getOwnPropertyDescriptor(une.prototype,"sizeMode"),une.prototype),Bc(une.prototype,"direction",[jte,Wte],Object.getOwnPropertyDescriptor(une.prototype,"direction"),une.prototype),Bc(une.prototype,"scrollThreshold",[Tl,qte,Xte],Object.getOwnPropertyDescriptor(une.prototype,"scrollThreshold"),une.prototype),Bc(une.prototype,"pageTurningEventTiming",[Tl,Yte,Kte],Object.getOwnPropertyDescriptor(une.prototype,"pageTurningEventTiming"),une.prototype),Bc(une.prototype,"indicator",[$te,Zte],Object.getOwnPropertyDescriptor(une.prototype,"indicator"),une.prototype),pne=Bc(une.prototype,"autoPageTurningThreshold",[il,Qte],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 100}}),Bc(une.prototype,"verticalScrollBar",[Jte,Ml,ene],Object.getOwnPropertyDescriptor(une.prototype,"verticalScrollBar"),une.prototype),Bc(une.prototype,"horizontalScrollBar",[tne,Ml,nne],Object.getOwnPropertyDescriptor(une.prototype,"horizontalScrollBar"),une.prototype),dne=Bc(une.prototype,"horizontal",[Ml,il,ine],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),fne=Bc(une.prototype,"vertical",[Ml,il,sne],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),mne=Bc(une.prototype,"cancelInnerEvents",[Ml,il,rne],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),gne=Bc(une.prototype,"scrollEvents",[one,il,Ml,ane],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),vne=Bc(une.prototype,"pageTurningSpeed",[il,dl,cne],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.3}}),yne=Bc(une.prototype,"pageEvents",[lne,il,hne],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),xne=Bc(une.prototype,"_sizeMode",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return wne.Unified}}),Sne=Bc(une.prototype,"_direction",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Ine.Horizontal}}),Cne=Bc(une.prototype,"_scrollThreshold",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.5}}),Tne=Bc(une.prototype,"_pageTurningEventTiming",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.1}}),bne=Bc(une.prototype,"_indicator",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),_ne=une))||_ne)||_ne)||_ne)||_ne));const One=new ri,Mne=new bi,Nne=new bi,Lne=new bi(1,1),zne=new bi,Fne=new bi;function Bne(e,t){if(t._hadAlignOnce)return;t.alignMode===_te.ONCE&&(t._hadAlignOnce=!0);const n=t.target;let i;const s=Nne,r=Lne;n?(i=n,hte(e,i,s,r)):i=e.parent;const o=lte(i),a=i instanceof GP||!i.getComponent(wY),c=a?Mne:i.getComponent(wY).anchorPoint,l=a;e.getPosition(One);const h=e._uiProps.uiTransformComp;let _=One.x,u=One.y;const p=h.anchorPoint,d=e.getScale();if(t.alignFlags&ute.HORIZONTAL){let e=0,i=0;const a=o.width;l?(e=lI.left.x,i=lI.right.x):(e=-c.x*a,i=e+a),e+=t.isAbsoluteLeft?t.left:t.left*a,i-=t.isAbsoluteRight?t.right:t.right*a,n&&(e+=s.x,e*=r.x,i+=s.x,i*=r.x);let u=0,f=p.x,m=d.x;if(m<0&&(f=1-f,m=-m),t.isStretchWidth)u=i-e,0!==m&&(h.width=u/m),_=e+f*u;else if(u=h.width*m,t.isAlignHorizontalCenter){let e=t.isAbsoluteHorizontalCenter?t.horizontalCenter:t.horizontalCenter*a,i=(.5-c.x)*o.width;n&&(e*=r.x,i+=s.x,i*=r.x),_=i+(f-.5)*u+e}else _=t.isAlignLeft?e+f*u:i+(f-1)*u;t._lastSize.width=u}if(t.alignFlags&ute.VERTICAL){let e=0,i=0;const a=o.height;l?(i=lI.bottom.y,e=lI.top.y):(i=-c.y*a,e=i+a),i+=t.isAbsoluteBottom?t.bottom:t.bottom*a,e-=t.isAbsoluteTop?t.top:t.top*a,n&&(i+=s.y,i*=r.y,e+=s.y,e*=r.y);let _=0,f=p.y,m=d.y;if(m<0&&(f=1-f,m=-m),t.isStretchHeight)_=e-i,0!==m&&(h.height=_/m),u=i+f*_;else if(_=h.height*m,t.isAlignVerticalCenter){let e=t.isAbsoluteVerticalCenter?t.verticalCenter:t.verticalCenter*a,i=(.5-c.y)*o.height;n&&(e*=r.y,i+=s.y,i*=r.y),u=i+(f-.5)*_+e}else u=t.isAlignBottom?i+f*_:e+(f-1)*_;t._lastSize.height=_}e.setPosition(_,u,One.z),ri.set(t._lastPos,_,u,One.z)}function Une(e){const t=e.getComponent(fte);if(t&&t.enabled){if(!i.isValid(e,!0))return;Hne.push(t)}const n=e.children;for(const e of n)e.active&&Une(e)}function Gne(){const e=aI.getScene();if(e){kne.isAligning=!0,kne._nodesOrderDirty&&(Hne.length=0,Une(e),kne._nodesOrderDirty=!1);let t=null;const n=kne._activeWidgetsIterator;for(n.i=0;n.i<Hne.length;++n.i)t=Hne[n.i],t._dirty&&(Bne(t.node,t),t._dirty=!1);kne.isAligning=!1}}const Hne=[],kne=e("widgetManager",i._widgetManager={isAligning:!1,_nodesOrderDirty:!1,_activeWidgetsIterator:new Ee.MutableForwardIterator(Hne),animationState:null,init(){aI.on(oI.EVENT_AFTER_SCENE_LAUNCH,Gne),aI.on(oI.EVENT_AFTER_UPDATE,Gne),uI.instance.on("design-resolution-changed",this.onResized,this);{const e=this.onResized.bind(this);uI.instance.on("canvas-resize",e),Qh.on("orientation-change",e)}},add(e){this._nodesOrderDirty=!0},remove(e){this._activeWidgetsIterator.remove(e)},onResized(){const e=aI.getScene();e&&this.refreshWidgetOnResized(e)},refreshWidgetOnResized(e){const t=Yx.isNode(e)&&e.getComponent(fte);t&&t.enabled&&(t.alignMode===_te.ON_WINDOW_RESIZE||t.alignMode===_te.ALWAYS)&&t.setDirty();const n=e.children;for(const e of n)this.refreshWidgetOnResized(e)},updateOffsetsToStayPut(e,t){function n(e,t){return Math.abs(e-t)>1e-10?t:e}const i=e.node;let s=i.parent;if(s){const r=zne;r.set(0,0);const o=Fne;if(o.set(1,1),e.target&&(s=e.target,hte(i,s,r,o)),!t)return;const a=s._uiProps&&s._uiProps.uiTransformComp,c=a?a.anchorPoint:Mne,l=i._uiProps.uiTransformComp,h=lte(s),_=l.anchorPoint,u=i.getPosition(),p=ute,d=i.getScale();let f=0;if(t&p.LEFT){let t=-c.x*h.width;t+=r.x,t*=o.x,f=u.x-_.x*l.width*d.x-t,e.isAbsoluteLeft||(f/=h.width),f/=o.x,e.left=n(e.left,f)}if(t&p.RIGHT){let t=(1-c.x)*h.width;t+=r.x,f=(t*=o.x)-(u.x+(1-_.x)*l.width*d.x),e.isAbsoluteRight||(f/=h.width),f/=o.x,e.right=n(e.right,f)}if(t&p.TOP){let t=(1-c.y)*h.height;t+=r.y,f=(t*=o.y)-(u.y+(1-_.y)*l.height*d.y),e.isAbsoluteTop||(f/=h.height),f/=o.y,e.top=n(e.top,f)}if(t&p.BOT){let t=-c.y*h.height;t+=r.y,t*=o.y,f=u.y-_.y*l.height*d.y-t,e.isAbsoluteBottom||(f/=h.height),f/=o.y,e.bottom=n(e.bottom,f)}}},updateAlignment:function e(t){const n=t.parent;n&&Yx.isNode(n)&&e(n);const i=t.getComponent(fte);i&&n&&Bne(t,i)},AlignMode:_te,AlignFlags:ute});var Vne;aI.on(oI.EVENT_INIT,(()=>{kne.init()}));let jne=function(t){return e({SafeArea:t,SafeAreaComponent:t}),t}(Zc("cc.SafeArea")(Vne=pl()(Vne=Jc(110)(Vne=cl(Vne=ll()(Vne=Qc(fte)(Vne=class extends jh{onEnable(){this.updateArea(),Qh.on("window-resize",this.updateArea,this),Qh.on("orientation-change",this.updateArea,this)}onDisable(){Qh.off("window-resize",this.updateArea,this),Qh.off("orientation-change",this.updateArea,this)}updateArea(){const e=this.node.getComponent(fte),t=this.node.getComponent(wY);if(!e||!t)return;e.updateAlignment();const n=this.node.position.clone(),i=t.anchorPoint.clone();e.isAlignTop=e.isAlignBottom=e.isAlignLeft=e.isAlignRight=!0;const s=mI.getVisibleSize(),r=s.width,o=s.height,a=e_.getSafeAreaRect();e.top=o-a.y-a.height,e.bottom=a.y,e.left=a.x,e.right=r-a.x-a.width,e.updateAlignment();const c=this.node.position.clone(),l=i.x-(c.x-n.x)/t.width,h=i.y-(c.y-n.y)/t.height;t.setAnchorPoint(l,h),kne.add(e)}})||Vne)||Vne)||Vne)||Vne)||Vne)||Vne);var Wne,qne,Xne,Yne,Kne,$ne,Zne,Qne,Jne,eie,tie,nie,iie,sie,rie,oie,aie,cie,lie;let hie=function(t){return e({UICoordinateTracker:t,UICoordinateTrackerComponent:t}),t}((Wne=Zc("cc.UICoordinateTracker"),qne=pl(),Xne=ll(),Yne=Jc(110),Kne=Ol(Yx),$ne=vl(),Zne=Ol(cO),Qne=vl(),Jne=vl(),eie=vl(),tie=Ol([HR]),nie=vl(),Wne(iie=qne(iie=Xne(iie=Yne((Bc((sie=class extends jh{constructor(...e){super(...e),Fc(this,"syncEvents",rie,this),Fc(this,"_target",oie,this),Fc(this,"_camera",aie,this),Fc(this,"_useScale",cie,this),Fc(this,"_distance",lie,this),this._transformPos=new ri,this._viewPos=new ri,this._canMove=!0,this._lastWPos=new ri,this._lastCameraPos=new ri}get target(){return this._target}set target(e){this._target!==e&&(this._target=e,this._checkCanMove())}get camera(){return this._camera}set camera(e){this._camera!==e&&(this._camera=e,this._checkCanMove())}get useScale(){return this._useScale}set useScale(e){this._useScale!==e&&(this._useScale=e)}get distance(){return this._distance}set distance(e){this._distance!==e&&(this._distance=e)}onEnable(){this._checkCanMove()}update(){const e=this.node.worldPosition,t=this._camera;if(this._canMove&&t&&t.camera&&(!this._lastWPos.equals(e)||!this._lastCameraPos.equals(t.node.worldPosition))&&(this._lastWPos.set(e),this._lastCameraPos.set(t.node.worldPosition),t.camera.update(),t.convertToUINode(e,this._target,this._transformPos),this._useScale&&ri.transformMat4(this._viewPos,this.node.worldPosition,t.camera.matView),this.syncEvents.length>0)){const e=this._distance/Math.abs(this._viewPos.z);HR.emitEvents(this.syncEvents,this._transformPos,e)}}_checkCanMove(){this._canMove=!(!this._camera||!this._target)}}).prototype,"target",[Kne,$ne],Object.getOwnPropertyDescriptor(sie.prototype,"target"),sie.prototype),Bc(sie.prototype,"camera",[Zne,Qne],Object.getOwnPropertyDescriptor(sie.prototype,"camera"),sie.prototype),Bc(sie.prototype,"useScale",[Jne],Object.getOwnPropertyDescriptor(sie.prototype,"useScale"),sie.prototype),Bc(sie.prototype,"distance",[eie],Object.getOwnPropertyDescriptor(sie.prototype,"distance"),sie.prototype),rie=Bc(sie.prototype,"syncEvents",[tie,il,nie],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),oie=Bc(sie.prototype,"_target",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),aie=Bc(sie.prototype,"_camera",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),cie=Bc(sie.prototype,"_useScale",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),lie=Bc(sie.prototype,"_distance",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),iie=sie))||iie)||iie)||iie)||iie));var _ie;const uie=[cx.TOUCH_START,cx.TOUCH_END,cx.TOUCH_MOVE,cx.MOUSE_DOWN,cx.MOUSE_MOVE,cx.MOUSE_UP,cx.MOUSE_ENTER,cx.MOUSE_LEAVE,cx.MOUSE_WHEEL];function pie(e){e.propagationStopped=!0}let die=function(t){return e({BlockInputEvents:t,BlockInputEventsComponent:t}),t}(Zc("cc.BlockInputEvents")(_ie=pl()(_ie=ll()(_ie=class extends jh{onEnable(){for(let e=0;e<uie.length;e++)this.node.on(uie[e],pie,this)}onDisable(){for(let e=0;e<uie.length;e++)this.node.off(uie[e],pie,this)}})||_ie)||_ie)||_ie);const fie={};var mie,gie,vie,yie,xie,Sie,Cie,Tie,bie,Eie,Aie;let Pie=e("SubContextView",(mie=Zc("cc.SubContextView"),gie=pl(),vie=Jc(110),yie=Qc(wY),xie=ll(),Sie=vl(),Cie=vl(),mie(Tie=gie(Tie=vie(Tie=yie(Tie=xie((Bc((bie=class extends jh{get designResolutionSize(){return this._designResolutionSize}set designResolutionSize(e){}get fps(){return this._fps}set fps(e){this._fps!==e&&(this._fps=e,this._updateInterval=1e3/e)}constructor(){super(),Fc(this,"_fps",Eie,this),this._sprite=void 0,this._imageAsset=void 0,this._texture=void 0,this._updatedTime=0,this._updateInterval=0,this._openDataContext=void 0,this._content=void 0,Fc(this,"_designResolutionSize",Aie,this),this._content=new Yx("content"),this._content.hideFlags|=Dt.Flags.DontSave|Dt.Flags.HideInHierarchy,this._sprite=null,this._imageAsset=new jf,this._openDataContext=null,this._updatedTime=performance.now(),this._texture=new ym}onLoad(){fie.getOpenDataContext?(this._updateInterval=1e3/this._fps,this._openDataContext=fie.getOpenDataContext(),this._initSharedCanvas(),this._initContentNode(),this._updateSubContextView(),this._updateContentLayer()):this.enabled=!1}onEnable(){this._registerNodeEvent()}onDisable(){this._unregisterNodeEvent()}_initSharedCanvas(){if(this._openDataContext){const e=this._openDataContext.canvas;e.width=this._designResolutionSize.width,e.height=this._designResolutionSize.height}}_initContentNode(){if(this._openDataContext){const e=this._openDataContext.canvas,t=this._imageAsset;if(t.reset(e),this._texture.image=t,this._texture.create(e.width,e.height),this._sprite=this._content.getComponent(VQ),this._sprite||(this._sprite=this._content.addComponent(VQ)),this._sprite.spriteFrame)this._sprite.spriteFrame.texture=this._texture;else{const e=new sX;e.texture=this._texture,this._sprite.spriteFrame=e}this._content.parent=this.node}}_updateSubContextView(){if(!this._openDataContext)return;const e=this.node.getComponent(wY),t=this._content.getComponent(wY),n=e.width/t.width,i=e.height/t.height,s=n>i?i:n;t.width*=s,t.height*=s;const r=mI.getViewportRect(),o=t.getBoundingBoxToWorld(),a=mI.getVisibleSize(),c=Qh.devicePixelRatio,l=(r.width*(o.x/a.width)+r.x)/c,h=(r.height*(o.y/a.height)+r.y)/c,_=r.width*(o.width/a.width)/c,u=r.height*(o.height/a.height)/c;this._openDataContext.postMessage({fromEngine:!0,type:"engine",event:"viewport",x:l,y:h,width:_,height:u})}_updateSubContextTexture(){const e=this._imageAsset;if(!e||!this._openDataContext)return;if(e.width<=0||e.height<=0)return;const t=this._openDataContext.canvas;e.reset(t),(t.width>e.width||t.height>e.height)&&this._texture.create(t.width,t.height),this._texture.uploadData(t)}_registerNodeEvent(){this.node.on(cx.TRANSFORM_CHANGED,this._updateSubContextView,this),this.node.on(cx.SIZE_CHANGED,this._updateSubContextView,this),this.node.on(cx.LAYER_CHANGED,this._updateContentLayer,this)}_unregisterNodeEvent(){this.node.off(cx.TRANSFORM_CHANGED,this._updateSubContextView,this),this.node.off(cx.SIZE_CHANGED,this._updateSubContextView,this),this.node.off(cx.LAYER_CHANGED,this._updateContentLayer,this)}_updateContentLayer(){this._content.layer=this.node.layer}update(e){void 0!==e?performance.now()-this._updatedTime>=this._updateInterval&&(this._updatedTime+=this._updateInterval,this._updateSubContextTexture()):this._updateSubContextTexture()}onDestroy(){this._content.destroy(),this._texture.destroy(),this._sprite&&this._sprite.destroy(),this._imageAsset.destroy(),this._openDataContext=null}}).prototype,"designResolutionSize",[Sie],Object.getOwnPropertyDescriptor(bie.prototype,"designResolutionSize"),bie.prototype),Bc(bie.prototype,"fps",[Cie],Object.getOwnPropertyDescriptor(bie.prototype,"fps"),bie.prototype),Eie=Bc(bie.prototype,"_fps",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 60}}),Aie=Bc(bie.prototype,"_designResolutionSize",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Di(640,960)}}),Tie=bie))||Tie)||Tie)||Tie)||Tie)||Tie));var wie;i.SubContextView=Pie;let Iie=e("UIReorderComponent",Zc("cc.UIReorderComponent")(wie=class{constructor(){T(1408,"UIReorderComponent")}})||wie);var Rie,Die,Oie,Mie,Nie,Lie,zie,Fie,Bie,Uie,Gie,Hie,kie,Vie,jie;i.UIReorderComponent=Iie,i.ButtonComponent=V3,Ae.setClassAlias(V3,"cc.ButtonComponent"),i.EditBoxComponent=Z5,Ae.setClassAlias(Z5,"cc.EditBoxComponent"),i.LayoutComponent=r6,Ae.setClassAlias(r6,"cc.LayoutComponent"),i.ProgressBarComponent=I6,Ae.setClassAlias(I6,"cc.ProgressBarComponent"),i.ScrollViewComponent=u9,Ae.setClassAlias(u9,"cc.ScrollViewComponent"),i.ScrollBarComponent=a7,Ae.setClassAlias(a7,"cc.ScrollBarComponent"),i.SliderComponent=z9,Ae.setClassAlias(z9,"cc.SliderComponent"),i.ToggleComponent=see,Ae.setClassAlias(see,"cc.ToggleComponent"),i.ToggleContainerComponent=mee,Ae.setClassAlias(mee,"cc.ToggleContainerComponent"),i.WidgetComponent=fte,Ae.setClassAlias(fte,"cc.WidgetComponent"),i.PageViewComponent=Dne,Ae.setClassAlias(Dne,"cc.PageViewComponent"),i.PageViewIndicatorComponent=Fte,Ae.setClassAlias(Fte,"cc.PageViewIndicatorComponent"),i.SafeAreaComponent=jne,Ae.setClassAlias(jne,"cc.SafeAreaComponent"),Ae.setClassAlias(hie,"cc.UICoordinateTrackerComponent"),i.BlockInputEventsComponent=die,Ae.setClassAlias(die,"cc.BlockInputEventsComponent");let Wie=function(t){return e({Billboard:t,BillboardComponent:t}),t}((Rie=Zc("cc.Billboard"),Die=pl(),Oie=ll(),Mie=Ol(ym),Nie=Ol(ym),Lie=vl(),zie=vl(),Fie=vl(),Bie=vl(),Rie(Uie=Die(Uie=Oie(Uie=cl((Hie=Bc((Gie=class extends jh{get texture(){return this._texture}set texture(e){this._texture=e,this._material&&this._material.setProperty("mainTexture",e)}get height(){return this._height}set height(e){this._height=e,this._material&&(this._uniform.y=e,this._material.setProperty("cc_size_rotation",this._uniform))}get width(){return this._width}set width(e){this._width=e,this._material&&(this._uniform.x=e,this._material.setProperty("cc_size_rotation",this._uniform))}get rotation(){return Math.round(100*Gn(this._rotation))/100}set rotation(e){this._rotation=Un(e),this._material&&(this._uniform.z=this._rotation,this._material.setProperty("cc_size_rotation",this._uniform))}constructor(){super(),Fc(this,"_texture",Hie,this),Fc(this,"_height",kie,this),Fc(this,"_width",Vie,this),Fc(this,"_rotation",jie,this),this._model=null,this._mesh=null,this._material=null,this._uniform=new wi(1,1,0,0)}onLoad(){this.createModel()}onEnable(){this.attachToScene(),this._model.enabled=!0,this.width=this._width,this.height=this._height,this.rotation=this.rotation,this.texture=this.texture}onDisable(){this.detachFromScene()}attachToScene(){this._model&&this.node&&this.node.scene&&(this._model.scene&&this.detachFromScene(),this._getRenderScene().addModel(this._model))}detachFromScene(){this._model&&this._model.scene&&this._model.scene.removeModel(this._model)}createModel(){this._mesh=Lk({primitiveMode:cr.TRIANGLE_LIST,positions:[0,0,0,0,0,0,0,0,0,0,0,0],uvs:[0,0,1,0,0,1,1,1],colors:[ti.WHITE.r,ti.WHITE.g,ti.WHITE.b,ti.WHITE.a,ti.WHITE.r,ti.WHITE.g,ti.WHITE.b,ti.WHITE.a,ti.WHITE.r,ti.WHITE.g,ti.WHITE.b,ti.WHITE.a,ti.WHITE.r,ti.WHITE.g,ti.WHITE.b,ti.WHITE.a],attributes:[new Qr(yr.ATTR_POSITION,zs.RGB32F),new Qr(yr.ATTR_TEX_COORD,zs.RG32F),new Qr(yr.ATTR_COLOR,zs.RGBA8UI,!0)],indices:[0,1,2,1,2,3]},void 0,{calculateBounds:!1});const e=this._model=i.director.root.createModel(fg,this.node);e.node=e.transform=this.node,null==this._material&&(this._material=new Ug,this._material.copy(Jm.get("default-billboard-material"))),e.initSubModel(0,this._mesh.renderingSubMeshes[0],this._material)}}).prototype,"_texture",[Mie],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Bc(Gie.prototype,"texture",[Nie,Lie],Object.getOwnPropertyDescriptor(Gie.prototype,"texture"),Gie.prototype),kie=Bc(Gie.prototype,"_height",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Bc(Gie.prototype,"height",[zie],Object.getOwnPropertyDescriptor(Gie.prototype,"height"),Gie.prototype),Vie=Bc(Gie.prototype,"_width",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Bc(Gie.prototype,"width",[Fie],Object.getOwnPropertyDescriptor(Gie.prototype,"width"),Gie.prototype),jie=Bc(Gie.prototype,"_rotation",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Bc(Gie.prototype,"rotation",[Bie],Object.getOwnPropertyDescriptor(Gie.prototype,"rotation"),Gie.prototype),Uie=Gie))||Uie)||Uie)||Uie)||Uie));const qie=[new Qr(yr.ATTR_POSITION,zs.RGB32F),new Qr(yr.ATTR_TEX_COORD,zs.RGBA32F),new Qr(yr.ATTR_TEX_COORD1,zs.RGB32F),new Qr(yr.ATTR_COLOR,zs.RGBA8,!0)],Xie=new ri,Yie=new ri;class Kie extends fg{constructor(){super(),this._capacity=void 0,this._vertSize=0,this._vBuffer=null,this._vertAttrsFloatCount=0,this._vdataF32=null,this._vdataUint32=null,this._iaInfo=void 0,this._iaInfoBuffer=void 0,this._subMeshData=null,this._vertCount=0,this._indexCount=0,this._material=null,this.type=ug.LINE,this._capacity=100,this._iaInfo=new Ur([new Fr]),this._iaInfoBuffer=this._device.createBuffer(new Lr(Us.INDIRECT,ks.DEVICE,Po,Po))}setCapacity(e){this._capacity=e,this.createBuffer()}createBuffer(){this._vertSize=0;for(const e of qie)e.offset=this._vertSize,this._vertSize+=To[e.format].size;this._vertAttrsFloatCount=this._vertSize/4,this._vBuffer=this.createSubMeshData(),this._vdataF32=new Float32Array(this._vBuffer),this._vdataUint32=new Uint32Array(this._vBuffer)}updateMaterial(e){this._material=e,super.setSubModelMaterial(0,e)}createSubMeshData(){this._subMeshData&&this.destroySubMeshData(),this._vertCount=2,this._indexCount=6;const e=this._device.createBuffer(new Lr(Us.VERTEX|Us.TRANSFER_DST,ks.DEVICE,this._vertSize*this._capacity*this._vertCount,this._vertSize)),t=new ArrayBuffer(this._vertSize*this._capacity*this._vertCount);e.update(t);const n=new Uint16Array((this._capacity-1)*this._indexCount);let i=0;for(let e=0;e<this._capacity-1;++e){const t=2*e;n[i++]=t,n[i++]=t+1,n[i++]=t+2,n[i++]=t+3,n[i++]=t+2,n[i++]=t+1}const s=this._device.createBuffer(new Lr(Us.INDEX|Us.TRANSFER_DST,ks.DEVICE,(this._capacity-1)*this._indexCount*Uint16Array.BYTES_PER_ELEMENT,Uint16Array.BYTES_PER_ELEMENT));return s.update(n),this._iaInfo.drawInfos[0].vertexCount=this._capacity*this._vertCount,this._iaInfo.drawInfos[0].indexCount=(this._capacity-1)*this._indexCount,this._iaInfoBuffer.update(this._iaInfo),this._subMeshData=new sT([e],qie,cr.TRIANGLE_LIST,s,this._iaInfoBuffer),this.initSubModel(0,this._subMeshData,this._material),t}addLineVertexData(e,t,n){if(e.length>1){let i=0;ri.subtract(Xie,e[1],e[0]),this._vdataF32[i++]=e[0].x,this._vdataF32[i++]=e[0].y,this._vdataF32[i++]=e[0].z,this._vdataF32[i++]=0,this._vdataF32[i++]=t.evaluate(0,1),this._vdataF32[i++]=0,this._vdataF32[i++]=0,this._vdataF32[i++]=Xie.x,this._vdataF32[i++]=Xie.y,this._vdataF32[i++]=Xie.z,this._vdataUint32[i++]=n.evaluate(0,1)._val,this._vdataF32[i++]=e[0].x,this._vdataF32[i++]=e[0].y,this._vdataF32[i++]=e[0].z,this._vdataF32[i++]=1,this._vdataF32[i++]=t.evaluate(0,1),this._vdataF32[i++]=0,this._vdataF32[i++]=1,this._vdataF32[i++]=Xie.x,this._vdataF32[i++]=Xie.y,this._vdataF32[i++]=Xie.z,this._vdataUint32[i++]=n.evaluate(0,1)._val;for(let s=1;s<e.length-1;s++){ri.subtract(Xie,e[s-1],e[s]),ri.subtract(Yie,e[s+1],e[s]),ri.subtract(Yie,Yie,Xie);const r=s/e.length;this._vdataF32[i++]=e[s].x,this._vdataF32[i++]=e[s].y,this._vdataF32[i++]=e[s].z,this._vdataF32[i++]=0,this._vdataF32[i++]=t.evaluate(r,1),this._vdataF32[i++]=r,this._vdataF32[i++]=0,this._vdataF32[i++]=Yie.x,this._vdataF32[i++]=Yie.y,this._vdataF32[i++]=Yie.z,this._vdataUint32[i++]=n.evaluate(r,1)._val,this._vdataF32[i++]=e[s].x,this._vdataF32[i++]=e[s].y,this._vdataF32[i++]=e[s].z,this._vdataF32[i++]=1,this._vdataF32[i++]=t.evaluate(r,1),this._vdataF32[i++]=r,this._vdataF32[i++]=1,this._vdataF32[i++]=Yie.x,this._vdataF32[i++]=Yie.y,this._vdataF32[i++]=Yie.z,this._vdataUint32[i++]=n.evaluate(r,1)._val}ri.subtract(Xie,e[e.length-1],e[e.length-2]),this._vdataF32[i++]=e[e.length-1].x,this._vdataF32[i++]=e[e.length-1].y,this._vdataF32[i++]=e[e.length-1].z,this._vdataF32[i++]=0,this._vdataF32[i++]=t.evaluate(1,1),this._vdataF32[i++]=1,this._vdataF32[i++]=0,this._vdataF32[i++]=Xie.x,this._vdataF32[i++]=Xie.y,this._vdataF32[i++]=Xie.z,this._vdataUint32[i++]=n.evaluate(1,1)._val,this._vdataF32[i++]=e[e.length-1].x,this._vdataF32[i++]=e[e.length-1].y,this._vdataF32[i++]=e[e.length-1].z,this._vdataF32[i++]=1,this._vdataF32[i++]=t.evaluate(1,1),this._vdataF32[i++]=1,this._vdataF32[i++]=1,this._vdataF32[i++]=Xie.x,this._vdataF32[i++]=Xie.y,this._vdataF32[i++]=Xie.z,this._vdataUint32[i++]=n.evaluate(1,1)._val}this.updateIA(Math.max(0,e.length-1))}updateIA(e){this._subModels[0].inputAssembler.vertexBuffers[0].update(this._vdataF32),this._iaInfo.drawInfos[0].firstIndex=0,this._iaInfo.drawInfos[0].indexCount=this._indexCount*e,this._iaInfoBuffer.update(this._iaInfo)}destroySubMeshData(){this._subMeshData&&(this._subMeshData.destroy(),this._subMeshData=null)}}var $ie,Zie,Qie,Jie,ese,tse,nse,ise,sse,rse,ose,ase,cse,lse,hse,_se,use;const pse=[["mode","constant","multiplier"],["mode","spline","multiplier"],["mode","splineMin","splineMax","multiplier"],["mode","constantMin","constantMax","multiplier"]],dse=Ne({Constant:0,Curve:1,TwoCurves:2,TwoConstants:3});let fse=e("CurveRange",($ie=Zc("cc.CurveRange"),Zie=Ol(dse),Qie=Ol(tp),Jie=Ol(tp),ese=Ol(tp),$ie((use=_se=class{get curve(){return this._curve}set curve(e){this._curve=e,this.spline=e._internalCurve}get curveMin(){return this._curveMin}set curveMin(e){this._curveMin=e,this.splineMin=e._internalCurve}get curveMax(){return this._curveMax}set curveMax(e){this._curveMax=e,this.splineMax=e._internalCurve}constructor(){Fc(this,"mode",ise,this),Fc(this,"spline",sse,this),Fc(this,"splineMin",rse,this),Fc(this,"splineMax",ose,this),Fc(this,"constant",ase,this),Fc(this,"constantMin",cse,this),Fc(this,"constantMax",lse,this),Fc(this,"multiplier",hse,this),this._curve=new sd(this.spline),this._curveMin=new sd(this.splineMin),this._curveMax=new sd(this.splineMax)}evaluate(e,t){switch(this.mode){default:case dse.Constant:return this.constant;case dse.Curve:return this.spline.evaluate(e)*this.multiplier;case dse.TwoCurves:return Bn(this.splineMin.evaluate(e),this.splineMax.evaluate(e),t)*this.multiplier;case dse.TwoConstants:return Bn(this.constantMin,this.constantMax,t)}}getMax(){switch(this.mode){default:case dse.Constant:return this.constant;case dse.Curve:return this.multiplier;case dse.TwoConstants:return this.constantMax;case dse.TwoCurves:return this.multiplier}}_onBeforeSerialize(e){return pse[this.mode]}},_se.Mode=dse,ise=Bc((nse=use).prototype,"mode",[Zie],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return dse.Constant}}),sse=Bc(nse.prototype,"spline",[Qie],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return ad()}}),rse=Bc(nse.prototype,"splineMin",[Jie],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return ad()}}),ose=Bc(nse.prototype,"splineMax",[ese],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return ad()}}),ase=Bc(nse.prototype,"constant",[il,dl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),cse=Bc(nse.prototype,"constantMin",[il,dl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),lse=Bc(nse.prototype,"constantMax",[il,dl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),hse=Bc(nse.prototype,"multiplier",[il,dl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),tse=nse))||tse));function mse(e,t,n){switch(e.mode){case dse.Constant:return e.constant;case dse.Curve:return e.spline.evaluate(t)*e.multiplier;case dse.TwoCurves:return 0===n?e.splineMin.evaluate(t)*e.multiplier:e.splineMax.evaluate(t)*e.multiplier;case dse.TwoConstants:return 0===n?e.constantMin:e.constantMax;default:return 0}}function gse(e){switch(e.mode){case dse.TwoConstants:case dse.TwoCurves:return 2;default:return 1}}function vse(e,t,n){const i=new jf({width:t,height:n,_data:e,_compressed:!1,format:Lf.RGBA32F}),s=new ym;return s.setFilters(Ff.NEAREST,Ff.NEAREST),s.setMipFilter(Ff.NONE),s.setWrapMode(zf.CLAMP_TO_EDGE,zf.CLAMP_TO_EDGE,zf.CLAMP_TO_EDGE),s.image=i,s}function yse(e,t,n,i,s){const r=Math.max(gse(t),gse(n),gse(i)),o=new Float32Array(e*r*4),a=[t,n,i],c=1/(e-1);for(let t=0;t<r;t++)for(let n=0;n<3;n++){const i=a[n];let r=0,l=0;for(let a=0;a<e;a++){const e=mse(i,c*a,t);s?l=e:(r+=e,l=r/(a+1)),o[4*a+n]=l}}return vse(o,e,r)}var xse,Sse,Cse,Tse,bse,Ese,Ase,Pse,wse,Ise,Rse,Dse,Ose,Mse,Nse;const Lse=Ne({Blend:0,Fixed:1});e("ColorKey",Zc("cc.ColorKey")((Cse=Bc((Sse=class{constructor(){Fc(this,"color",Cse,this),Fc(this,"time",Tse,this)}}).prototype,"color",[il,dl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return ti.WHITE.clone()}}),Tse=Bc(Sse.prototype,"time",[il,dl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),xse=Sse))||xse),e("AlphaKey",Zc("cc.AlphaKey")((Ase=Bc((Ese=class{constructor(){Fc(this,"alpha",Ase,this),Fc(this,"time",Pse,this)}}).prototype,"alpha",[il,dl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),Pse=Bc(Ese.prototype,"time",[il,dl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),bse=Ese))||bse);let zse=e("Gradient",Zc("cc.Gradient")((Nse=Mse=class{constructor(){Fc(this,"colorKeys",Rse,this),Fc(this,"alphaKeys",Dse,this),Fc(this,"mode",Ose,this),this._color=void 0,this._color=ti.WHITE.clone()}setKeys(e,t){this.colorKeys=e,this.alphaKeys=t}sortKeys(){this.colorKeys.length>1&&this.colorKeys.sort(((e,t)=>e.time-t.time)),this.alphaKeys.length>1&&this.alphaKeys.sort(((e,t)=>e.time-t.time))}evaluate(e){return this.getRGB(e),this._color._set_a_unsafe(this.getAlpha(e)),this._color}randomColor(){const e=this.colorKeys[Math.trunc(Math.random()*this.colorKeys.length)],t=this.alphaKeys[Math.trunc(Math.random()*this.alphaKeys.length)];return this._color.set(e.color),this._color._set_a_unsafe(t.alpha),this._color}getRGB(e){if(!(this.colorKeys.length>1))return 1===this.colorKeys.length?(this._color.set(this.colorKeys[0].color),this._color):(this._color.set(ti.WHITE),this._color);{e=Yn(e,1);for(let t=1;t<this.colorKeys.length;++t){const n=this.colorKeys[t-1].time,i=this.colorKeys[t].time;if(e>=n&&e<i){if(this.mode===Lse.Fixed)return this.colorKeys[t].color;const s=(e-n)/(i-n);return ti.lerp(this._color,this.colorKeys[t-1].color,this.colorKeys[t].color,s),this._color}}const t=this.colorKeys.length-1;e<this.colorKeys[0].time?ti.lerp(this._color,ti.BLACK,this.colorKeys[0].color,e/this.colorKeys[0].time):e>this.colorKeys[t].time&&ti.lerp(this._color,this.colorKeys[t].color,ti.BLACK,(e-this.colorKeys[t].time)/(1-this.colorKeys[t].time))}}getAlpha(e){if(!(this.alphaKeys.length>1))return 1===this.alphaKeys.length?this.alphaKeys[0].alpha:255;{e=Yn(e,1);for(let t=1;t<this.alphaKeys.length;++t){const n=this.alphaKeys[t-1].time,i=this.alphaKeys[t].time;if(e>=n&&e<i){if(this.mode===Lse.Fixed)return this.alphaKeys[t].alpha;const s=(e-n)/(i-n);return Bn(this.alphaKeys[t-1].alpha,this.alphaKeys[t].alpha,s)}}const t=this.alphaKeys.length-1;if(e<this.alphaKeys[0].time)return Bn(0,this.alphaKeys[0].alpha,e/this.alphaKeys[0].time);if(e>this.alphaKeys[t].time)return Bn(this.alphaKeys[t].alpha,0,(e-this.alphaKeys[t].time)/(1-this.alphaKeys[t].time))}}},Mse.Mode=Lse,Rse=Bc((Ise=Nse).prototype,"colorKeys",[il,dl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Array}}),Dse=Bc(Ise.prototype,"alphaKeys",[il,dl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Array}}),Ose=Bc(Ise.prototype,"mode",[il,dl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Lse.Blend}}),wse=Ise))||wse);var Fse,Bse,Use,Gse,Hse,kse,Vse,jse,Wse,qse,Xse,Yse,Kse,$se,Zse,Qse,Jse;const ere=Ne({Color:0,Gradient:1,TwoColors:2,TwoGradients:3,RandomColor:4});let tre=e("GradientRange",(Fse=Zc("cc.GradientRange"),Bse=Ol(ere),Use=Ol(zse),Gse=Ol(zse),Hse=Ol(zse),kse=Ol(ere),Fse((Jse=Qse=class{constructor(){Fc(this,"color",Wse,this),Fc(this,"colorMin",qse,this),Fc(this,"colorMax",Xse,this),Fc(this,"gradient",Yse,this),Fc(this,"gradientMin",Kse,this),Fc(this,"gradientMax",$se,this),Fc(this,"_mode",Zse,this),this._color=ti.WHITE.clone()}get mode(){return this._mode}set mode(e){this._mode=e}evaluate(e,t){switch(this._mode){case ere.Color:return this.color;case ere.TwoColors:return ti.lerp(this._color,this.colorMin,this.colorMax,t),this._color;case ere.RandomColor:return this.gradient.randomColor();case ere.Gradient:return this.gradient.evaluate(e);case ere.TwoGradients:return ti.lerp(this._color,this.gradientMin.evaluate(e),this.gradientMax.evaluate(e),t),this._color;default:return this.color}}_onBeforeSerialize(e){return(!1)[this._mode]}},Qse.Mode=ere,Bc((jse=Jse).prototype,"mode",[Bse],Object.getOwnPropertyDescriptor(jse.prototype,"mode"),jse.prototype),Wse=Bc(jse.prototype,"color",[il,dl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return ti.WHITE.clone()}}),qse=Bc(jse.prototype,"colorMin",[il,dl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return ti.WHITE.clone()}}),Xse=Bc(jse.prototype,"colorMax",[il,dl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return ti.WHITE.clone()}}),Yse=Bc(jse.prototype,"gradient",[Use],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new zse}}),Kse=Bc(jse.prototype,"gradientMin",[Gse],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new zse}}),$se=Bc(jse.prototype,"gradientMax",[Hse],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new zse}}),Zse=Bc(jse.prototype,"_mode",[kse],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return ere.Color}}),Vse=jse))||Vse));function nre(e,t,n){switch(e.mode){case ere.Color:return e.color;case ere.TwoColors:return 0===n?e.colorMin:e.colorMax;case ere.RandomColor:return e.gradient.randomColor();case ere.Gradient:return e.gradient.evaluate(t);case ere.TwoGradients:return 0===n?e.gradientMin.evaluate(t):e.gradientMax.evaluate(t);default:return e.color}}var ire,sre,rre,ore,are,cre,lre,hre,_re,ure,pre,dre,fre,mre,gre,vre,yre,xre,Sre,Cre,Tre,bre,Ere,Are,Pre,wre,Ire,Rre,Dre,Ore,Mre,Nre,Lre,zre,Fre,Bre,Ure;const Gre={parent:null,owner:null,subModelIdx:0},Hre={CC_USE_WORLD_SPACE:!1};let kre=function(t){return e({Line:t,LineComponent:t}),t}((ire=Zc("cc.Line"),sre=pl(),rre=ll(),ore=Ol(ym),are=Ol(ym),cre=bl(),lre=vl(),hre=bl(),_re=vl(),ure=Ol([ri]),pre=Ol([ri]),dre=bl(),fre=vl(),mre=Ol(fse),gre=Ol(fse),vre=yl(),yre=bl(),xre=vl(),Sre=Ol(bi),Cre=bl(),Tre=vl(),bre=Ol(bi),Ere=bl(),Are=vl(),Pre=Ol(tre),wre=Ol(tre),Ire=bl(),Rre=vl(),ire(Dre=sre(Dre=rre(Dre=cl((Mre=Bc((Ore=class extends jh{get texture(){return this._texture}set texture(e){this._texture=e,this._materialInstance&&this._materialInstance.setProperty("mainTexture",e)}get worldSpace(){return this._worldSpace}set worldSpace(e){this._worldSpace=e,this._materialInstance&&(Hre.CC_USE_WORLD_SPACE=this.worldSpace,this._materialInstance.recompileShaders(Hre),this._model&&this._model.setSubModelMaterial(0,this._materialInstance))}get positions(){return this._positions}set positions(e){this._positions=e,this._model&&this._model.addLineVertexData(this._positions,this._width,this._color)}get width(){return this._width}set width(e){this._width=e,this._model&&this._model.addLineVertexData(this._positions,this._width,this._color)}get tile(){return this._tile}set tile(e){this._tile.set(e),this._materialInstance&&(this._tile_offset.x=this._tile.x,this._tile_offset.y=this._tile.y,this._materialInstance.setProperty("mainTiling_Offset",this._tile_offset))}get offset(){return this._offset}set offset(e){this._offset.set(e),this._materialInstance&&(this._tile_offset.z=this._offset.x,this._tile_offset.w=this._offset.y,this._materialInstance.setProperty("mainTiling_Offset",this._tile_offset))}get color(){return this._color}set color(e){this._color=e,this._model&&this._model.addLineVertexData(this._positions,this._width,this._color)}constructor(){super(),Fc(this,"_texture",Mre,this),this._material=null,this._materialInstance=null,Fc(this,"_worldSpace",Nre,this),Fc(this,"_positions",Lre,this),Fc(this,"_width",zre,this),Fc(this,"_tile",Fre,this),Fc(this,"_offset",Bre,this),Fc(this,"_color",Ure,this),this._model=null,this._tile_offset=new wi}onLoad(){const e=this._model=i.director.root.createModel(Kie);e.node=e.transform=this.node,null===this._material&&(this._material=new Ug,this._material.copy(Jm.get("default-trail-material")),Hre.CC_USE_WORLD_SPACE=this.worldSpace,Gre.parent=this._material,Gre.subModelIdx=0,this._materialInstance=new tv(Gre),Gre.parent=null,Gre.subModelIdx=0,this._materialInstance.recompileShaders(Hre)),e.updateMaterial(this._materialInstance),e.setCapacity(100)}onEnable(){this._model&&(this._attachToScene(),this.texture=this._texture,this.tile=this._tile,this.offset=this._offset,this._model.addLineVertexData(this._positions,this._width,this._color))}onDisable(){this._model&&this._detachFromScene()}_attachToScene(){this._model&&this.node&&this.node.scene&&(this._model.scene&&this._detachFromScene(),this._getRenderScene().addModel(this._model))}_detachFromScene(){this._model&&this._model.scene&&this._model.scene.removeModel(this._model)}}).prototype,"_texture",[ore],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Bc(Ore.prototype,"texture",[are,cre,lre],Object.getOwnPropertyDescriptor(Ore.prototype,"texture"),Ore.prototype),Nre=Bc(Ore.prototype,"_worldSpace",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Bc(Ore.prototype,"worldSpace",[hre,_re],Object.getOwnPropertyDescriptor(Ore.prototype,"worldSpace"),Ore.prototype),Lre=Bc(Ore.prototype,"_positions",[ure],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Bc(Ore.prototype,"positions",[pre,dre,fre],Object.getOwnPropertyDescriptor(Ore.prototype,"positions"),Ore.prototype),zre=Bc(Ore.prototype,"_width",[mre],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new fse}}),Bc(Ore.prototype,"width",[gre,vre,yre,xre],Object.getOwnPropertyDescriptor(Ore.prototype,"width"),Ore.prototype),Fre=Bc(Ore.prototype,"_tile",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new bi(1,1)}}),Bc(Ore.prototype,"tile",[Sre,Cre,Tre],Object.getOwnPropertyDescriptor(Ore.prototype,"tile"),Ore.prototype),Bre=Bc(Ore.prototype,"_offset",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new bi(0,0)}}),Bc(Ore.prototype,"offset",[bre,Ere,Are],Object.getOwnPropertyDescriptor(Ore.prototype,"offset"),Ore.prototype),Ure=Bc(Ore.prototype,"_color",[Pre],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new tre}}),Bc(Ore.prototype,"color",[wre,Ire,Rre],Object.getOwnPropertyDescriptor(Ore.prototype,"color"),Ore.prototype),Dre=Ore))||Dre)||Dre)||Dre)||Dre));class Vre{constructor(e){this.particleSystem=void 0,this.position=void 0,this.velocity=void 0,this.animatedVelocity=void 0,this.ultimateVelocity=void 0,this.angularVelocity=void 0,this.axisOfRotation=void 0,this.rotation=void 0,this.startEuler=void 0,this.startRotation=void 0,this.startRotated=void 0,this.deltaQuat=void 0,this.deltaMat=void 0,this.localMat=void 0,this.startSize=void 0,this.size=void 0,this.startColor=void 0,this.color=void 0,this.randomSeed=void 0,this.remainingLifetime=void 0,this.loopCount=void 0,this.lastLoop=void 0,this.trailDelay=void 0,this.startLifetime=void 0,this.emitAccumulator0=void 0,this.emitAccumulator1=void 0,this.frameIndex=void 0,this.startRow=void 0,this.particleSystem=e,this.position=new ri(0,0,0),this.velocity=new ri(0,0,0),this.animatedVelocity=new ri(0,0,0),this.ultimateVelocity=new ri(0,0,0),this.angularVelocity=new ri(0,0,0),this.axisOfRotation=new ri(0,0,0),this.rotation=new ri(0,0,0),this.startEuler=new ri(0,0,0),this.startRotation=new ui,this.startRotated=!1,this.deltaQuat=new ui,this.deltaMat=new xi,this.localMat=new xi,this.startSize=new ri(0,0,0),this.size=new ri(0,0,0),this.startColor=ti.WHITE.clone(),this.color=ti.WHITE.clone(),this.randomSeed=0,this.remainingLifetime=0,this.loopCount=0,this.lastLoop=0,this.trailDelay=0,this.startLifetime=0,this.emitAccumulator0=0,this.emitAccumulator1=0,this.frameIndex=0,this.startRow=0}reset(){this.rotation.set(0,0,0),this.startEuler.set(0,0,0),this.startRotation.set(0,0,0,1),this.startRotated=!1,this.deltaQuat.set(0,0,0,1),this.deltaMat.identity(),this.localMat.identity()}}Vre.INDENTIFY_NEG_QUAT=10,Vre.R2D=180/Math.PI;const jre=["sizeModule","colorModule","forceModule","velocityModule","limitModule","rotationModule","textureModule"],Wre=["_colorOverLifetimeModule","_shapeModule","_sizeOvertimeModule","_velocityOvertimeModule","_forceOvertimeModule","_limitVelocityOvertimeModule","_rotationOvertimeModule","_textureAnimationModule","_trailModule"];class qre{constructor(){this.target=null,this.needUpdate=!1,this.needAnimate=!0,this.name=void 0}bindTarget(e){this.target=e}update(e,t){}}const Xre=Ne({World:0,Local:1,Custom:2}),Yre=Ne({Pause:0,PauseAndCatchup:1,AlwaysSimulate:2}),Kre=Ne({World:0,Local:1,View:2}),$re=Ne({Billboard:0,StrecthedBillboard:1,HorizontalBillboard:2,VerticalBillboard:3,Mesh:4}),Zre=Ne({Box:0,Circle:1,Cone:2,Sphere:3,Hemisphere:4}),Qre=Ne({Base:0,Edge:1,Shell:2,Volume:3}),Jre=Ne({Random:0,Loop:1,PingPong:2}),eoe=Ne({Particles:0}),toe=Ne({Stretch:0});var noe,ioe,soe,roe,ooe,aoe,coe,loe;let hoe=(noe=Zc("cc.ColorOvertimeModule"),ioe=bl(),soe=Ol(tre),roe=bl(),noe((coe=Bc((aoe=class extends qre{constructor(...e){super(...e),Fc(this,"_enable",coe,this),Fc(this,"color",loe,this),this.name="colorModule"}get enable(){return this._enable}set enable(e){this._enable!==e&&(this._enable=e,this.target&&this.target.enableModule(this.name,e,this))}animate(e){e.color.set(e.startColor),e.color.multiply(this.color.evaluate(1-e.remainingLifetime/e.startLifetime,jn(e.randomSeed+91041)))}}).prototype,"_enable",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Bc(aoe.prototype,"enable",[ioe],Object.getOwnPropertyDescriptor(aoe.prototype,"enable"),aoe.prototype),loe=Bc(aoe.prototype,"color",[soe,il,roe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new tre}}),ooe=aoe))||ooe);const _oe=new ri(0,0,-1);function uoe(e,t,n,i){return t!==e?(e===Xre.World||xi.invert(n,n),xi.getRotation(i,n),!0):(ui.set(i,0,0,0,1),!1)}function poe(e,t){bi.set(e,Math.cos(t),Math.sin(t))}function doe(e){const t=kn(-1,1),n=kn(0,2*Math.PI),i=Math.sqrt(1-t*t),s=i*Math.cos(n),r=i*Math.sin(n);ri.set(e,s,r,t)}function foe(e,t,n){doe(e),ri.multiplyScalar(e,e,t+(n-t)*Hn())}function moe(e,t,n,i){poe(e,i),e.z=0,ri.multiplyScalar(e,e,t+(n-t)*Hn())}function goe(e){for(let t=0;t<e.length;t++){const n=t+Vn(0,e.length-t),i=e[n];e[n]=e[t],e[t]=i}}function voe(){let e=kn(-1,1);return 0===e&&e++,mn(e)}var yoe,xoe,Soe,Coe,Toe,boe,Eoe,Aoe,Poe,woe,Ioe,Roe,Doe,Ooe,Moe,Noe,Loe,zoe,Foe,Boe,Uoe,Goe,Hoe,koe;const Voe=212165,joe=new ri;let Woe=(yoe=Zc("cc.ForceOvertimeModule"),xoe=bl(),Soe=Ol(fse),Coe=yl(),Toe=bl(),boe=vl(),Eoe=Ol(fse),Aoe=yl(),Poe=bl(),woe=vl(),Ioe=Ol(fse),Roe=yl(),Doe=bl(),Ooe=vl(),Moe=Ol(Xre),Noe=bl(),Loe=vl(),yoe((Boe=Bc((Foe=class extends qre{get enable(){return this._enable}set enable(e){this._enable!==e&&(this._enable=e,this.target&&this.target.enableModule(this.name,e,this))}constructor(){super(),Fc(this,"_enable",Boe,this),Fc(this,"x",Uoe,this),Fc(this,"y",Goe,this),Fc(this,"z",Hoe,this),Fc(this,"space",koe,this),this.randomized=!1,this.rotation=void 0,this.needTransform=void 0,this.name="forceModule",this.rotation=new ui,this.needTransform=!1,this.needUpdate=!0}update(e,t){this.needTransform=uoe(e,this.space,t,this.rotation)}animate(e,t){const n=1-e.remainingLifetime/e.startLifetime,i=ri.set(joe,this.x.evaluate(n,jn(e.randomSeed+Voe)),this.y.evaluate(n,jn(e.randomSeed+Voe)),this.z.evaluate(n,jn(e.randomSeed+Voe)));this.needTransform&&ri.transformQuat(i,i,this.rotation),ri.scaleAndAdd(e.velocity,e.velocity,i,t),ri.copy(e.ultimateVelocity,e.velocity)}}).prototype,"_enable",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Bc(Foe.prototype,"enable",[xoe],Object.getOwnPropertyDescriptor(Foe.prototype,"enable"),Foe.prototype),Uoe=Bc(Foe.prototype,"x",[Soe,il,Coe,Toe,boe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new fse}}),Goe=Bc(Foe.prototype,"y",[Eoe,il,Aoe,Poe,woe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new fse}}),Hoe=Bc(Foe.prototype,"z",[Ioe,il,Roe,Doe,Ooe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new fse}}),koe=Bc(Foe.prototype,"space",[Moe,il,Noe,Loe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Xre.Local}}),zoe=Foe))||zoe);var qoe,Xoe,Yoe,Koe,$oe,Zoe,Qoe,Joe,eae,tae,nae,iae,sae,rae,oae,aae,cae,lae,hae,_ae,uae,pae,dae,fae,mae,gae,vae,yae,xae,Sae,Cae,Tae,bae,Eae,Aae;const Pae=23541,wae=new ri,Iae=new ri;let Rae=(qoe=Zc("cc.LimitVelocityOvertimeModule"),Xoe=bl(),Yoe=Ol(fse),Koe=yl(),$oe=bl(),Zoe=vl(),Qoe=Ol(fse),Joe=yl(),eae=bl(),tae=vl(),nae=Ol(fse),iae=yl(),sae=bl(),rae=vl(),oae=Ol(fse),aae=yl(),cae=bl(),lae=vl(),hae=bl(),_ae=vl(),uae=bl(),pae=vl(),dae=Ol(Xre),fae=bl(),mae=vl(),qoe((yae=Bc((vae=class extends qre{get enable(){return this._enable}set enable(e){this._enable!==e&&(this._enable=e,this.target&&this.target.enableModule(this.name,e,this))}constructor(){super(),Fc(this,"_enable",yae,this),Fc(this,"limitX",xae,this),Fc(this,"limitY",Sae,this),Fc(this,"limitZ",Cae,this),Fc(this,"limit",Tae,this),Fc(this,"dampen",bae,this),Fc(this,"separateAxes",Eae,this),Fc(this,"space",Aae,this),this.drag=null,this.multiplyDragByParticleSize=!1,this.multiplyDragByParticleVelocity=!1,this.name="limitModule",this.rotation=void 0,this.needTransform=void 0,this.rotation=new ui,this.needTransform=!1,this.needUpdate=!0}update(e,t){this.needTransform=uoe(e,this.space,t,this.rotation)}animate(e,t){const n=1-e.remainingLifetime/e.startLifetime,i=wae;this.separateAxes?(ri.set(Iae,this.limitX.evaluate(n,jn(e.randomSeed+Pae)),this.limitY.evaluate(n,jn(e.randomSeed+Pae)),this.limitZ.evaluate(n,jn(e.randomSeed+Pae))),this.needTransform&&ri.transformQuat(Iae,Iae,this.rotation),ri.set(i,Dae(e.ultimateVelocity.x,Iae.x,this.dampen),Dae(e.ultimateVelocity.y,Iae.y,this.dampen),Dae(e.ultimateVelocity.z,Iae.z,this.dampen))):(ri.normalize(i,e.ultimateVelocity),ri.multiplyScalar(i,i,Dae(e.ultimateVelocity.length(),this.limit.evaluate(n,jn(e.randomSeed+Pae)),this.dampen))),ri.copy(e.ultimateVelocity,i)}}).prototype,"_enable",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Bc(vae.prototype,"enable",[Xoe],Object.getOwnPropertyDescriptor(vae.prototype,"enable"),vae.prototype),xae=Bc(vae.prototype,"limitX",[Yoe,il,Koe,$oe,Zoe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new fse}}),Sae=Bc(vae.prototype,"limitY",[Qoe,il,Joe,eae,tae],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new fse}}),Cae=Bc(vae.prototype,"limitZ",[nae,il,iae,sae,rae],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new fse}}),Tae=Bc(vae.prototype,"limit",[oae,il,aae,cae,lae],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new fse}}),bae=Bc(vae.prototype,"dampen",[il,hae,_ae],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 3}}),Eae=Bc(vae.prototype,"separateAxes",[il,uae,pae],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Aae=Bc(vae.prototype,"space",[dae,il,fae,mae],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Xre.Local}}),gae=vae))||gae);function Dae(e,t,n){const i=Math.sign(e);let s=Math.abs(e);return s>t&&(s=Bn(s,t,n)),s*i}var Oae,Mae,Nae,Lae,zae,Fae,Bae,Uae,Gae,Hae,kae,Vae,jae,Wae,qae,Xae,Yae,Kae,$ae,Zae,Qae,Jae,ece;let tce=(Oae=Zc("cc.RotationOvertimeModule"),Mae=bl(),Nae=bl(),Lae=vl(),zae=Ol(fse),Fae=yl(),Bae=bl(),Uae=vl(),Gae=Ol(fse),Hae=yl(),kae=bl(),Vae=vl(),jae=Ol(fse),Wae=yl(),qae=bl(),Xae=vl(),Oae(($ae=Bc((Kae=class extends qre{constructor(...e){super(...e),Fc(this,"_enable",$ae,this),Fc(this,"_separateAxes",Zae,this),Fc(this,"x",Qae,this),Fc(this,"y",Jae,this),Fc(this,"z",ece,this),this.name="rotationModule",this._startMat=new xi,this._matRot=new xi,this._quatRot=new ui,this._otherEuler=new ri}get enable(){return this._enable}set enable(e){this._enable!==e&&(this._enable=e,this.target&&this.target.enableModule(this.name,e,this))}get separateAxes(){return this._separateAxes}set separateAxes(e){this._separateAxes=e}_processRotation(e,t){const n=e.particleSystem.processor.getInfo().renderMode;n!==$re.Mesh&&n===$re.StrecthedBillboard&&this._quatRot.set(0,0,0,1),ui.normalize(this._quatRot,this._quatRot),this._quatRot.w<0&&(this._quatRot.x+=Vre.INDENTIFY_NEG_QUAT)}animate(e,t){const n=1-e.remainingLifetime/e.startLifetime,i=jn(e.randomSeed+125292),s=e.particleSystem.processor.getInfo().renderMode;this._separateAxes&&s!==$re.VerticalBillboard&&s!==$re.HorizontalBillboard?ui.fromEuler(e.deltaQuat,this.x.evaluate(n,i)*t*Vre.R2D,this.y.evaluate(n,i)*t*Vre.R2D,this.z.evaluate(n,i)*t*Vre.R2D):ui.fromEuler(e.deltaQuat,0,0,this.z.evaluate(n,i)*t*Vre.R2D),e.deltaMat=xi.fromQuat(e.deltaMat,e.deltaQuat),e.localMat=e.localMat.multiply(e.deltaMat),e.startRotated||(s!==$re.Mesh&&(s===$re.StrecthedBillboard?e.startEuler.set(0,0,0):s!==$re.Billboard&&e.startEuler.set(0,0,e.startEuler.z)),ui.fromEuler(e.startRotation,e.startEuler.x*Vre.R2D,e.startEuler.y*Vre.R2D,e.startEuler.z*Vre.R2D),e.startRotated=!0),this._startMat=xi.fromQuat(this._startMat,e.startRotation),this._matRot=this._startMat.multiply(e.localMat),xi.getRotation(this._quatRot,this._matRot),this._processRotation(e,Vre.R2D),e.rotation.set(this._quatRot.x,this._quatRot.y,this._quatRot.z)}}).prototype,"_enable",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Bc(Kae.prototype,"enable",[Mae],Object.getOwnPropertyDescriptor(Kae.prototype,"enable"),Kae.prototype),Zae=Bc(Kae.prototype,"_separateAxes",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Bc(Kae.prototype,"separateAxes",[Nae,Lae],Object.getOwnPropertyDescriptor(Kae.prototype,"separateAxes"),Kae.prototype),Qae=Bc(Kae.prototype,"x",[zae,il,Fae,El,Bae,Uae],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new fse}}),Jae=Bc(Kae.prototype,"y",[Gae,il,Hae,El,kae,Vae],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new fse}}),ece=Bc(Kae.prototype,"z",[jae,il,Wae,El,qae,Xae],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new fse}}),Yae=Kae))||Yae);var nce,ice,sce,rce,oce,ace,cce,lce,hce,_ce,uce,pce,dce,fce,mce,gce,vce,yce,xce,Sce,Cce,Tce,bce,Ece,Ace,Pce,wce,Ice;let Rce=(nce=Zc("cc.SizeOvertimeModule"),ice=bl(),sce=bl(),rce=vl(),oce=Ol(fse),ace=yl(),cce=bl(),lce=vl(),hce=Ol(fse),_ce=yl(),uce=bl(),pce=vl(),dce=Ol(fse),fce=yl(),mce=bl(),gce=vl(),vce=Ol(fse),yce=yl(),xce=bl(),Sce=vl(),nce((bce=Bc((Tce=class extends qre{constructor(...e){super(...e),Fc(this,"_enable",bce,this),Fc(this,"separateAxes",Ece,this),Fc(this,"size",Ace,this),Fc(this,"x",Pce,this),Fc(this,"y",wce,this),Fc(this,"z",Ice,this),this.name="sizeModule"}get enable(){return this._enable}set enable(e){this._enable!==e&&(this._enable=e,this.target&&this.target.enableModule(this.name,e,this))}animate(e,t){if(this.separateAxes){const t=1-e.remainingLifetime/e.startLifetime,n=jn(e.randomSeed+39825);e.size.x=e.startSize.x*this.x.evaluate(t,n),e.size.y=e.startSize.y*this.y.evaluate(t,n),e.size.z=e.startSize.z*this.z.evaluate(t,n)}else ri.multiplyScalar(e.size,e.startSize,this.size.evaluate(1-e.remainingLifetime/e.startLifetime,jn(e.randomSeed+39825)))}}).prototype,"_enable",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Bc(Tce.prototype,"enable",[ice],Object.getOwnPropertyDescriptor(Tce.prototype,"enable"),Tce.prototype),Ece=Bc(Tce.prototype,"separateAxes",[il,sce,rce],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Ace=Bc(Tce.prototype,"size",[oce,il,ace,cce,lce],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new fse}}),Pce=Bc(Tce.prototype,"x",[hce,il,_ce,uce,pce],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new fse}}),wce=Bc(Tce.prototype,"y",[dce,il,fce,mce,gce],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new fse}}),Ice=Bc(Tce.prototype,"z",[vce,il,yce,xce,Sce],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new fse}}),Cce=Tce))||Cce);var Dce,Oce,Mce,Nce,Lce,zce,Fce,Bce,Uce,Gce,Hce,kce,Vce,jce,Wce,qce,Xce,Yce,Kce,$ce,Zce,Qce,Jce,ele,tle,nle,ile,sle,rle,ole,ale,cle,lle,hle,_le,ule,ple,dle,fle,mle,gle,vle,yle,xle;const Sle=90794,Cle=Ne({Grid:0}),Tle=Ne({WholeSheet:0,SingleRow:1});let ble=(Dce=Zc("cc.TextureAnimationModule"),Oce=sl("numTilesX"),Mce=sl("numTilesY"),Nce=bl(),Lce=Ol(Cle),zce=Ol(Cle),Fce=bl(),Bce=vl(),Uce=bl(),Gce=vl(),Hce=bl(),kce=vl(),Vce=Ol(Tle),jce=bl(),Wce=vl(),qce=Ol(fse),Xce=yl(),Yce=bl(),Kce=vl(),$ce=Ol(fse),Zce=yl(),Qce=bl(),Jce=vl(),ele=bl(),tle=vl(),nle=bl(),ile=vl(),sle=bl(),rle=vl(),Dce((cle=Bc((ale=class extends qre{constructor(...e){super(...e),Fc(this,"_enable",cle,this),Fc(this,"_numTilesX",lle,this),Fc(this,"_numTilesY",hle,this),Fc(this,"_mode",_le,this),Fc(this,"animation",ule,this),Fc(this,"frameOverTime",ple,this),Fc(this,"startFrame",dle,this),Fc(this,"cycleCount",fle,this),Fc(this,"_flipU",mle,this),Fc(this,"_flipV",gle,this),Fc(this,"_uvChannelMask",vle,this),Fc(this,"randomRow",yle,this),Fc(this,"rowIndex",xle,this),this.name="textureModule"}get enable(){return this._enable}set enable(e){this._enable!==e&&(this._enable=e,this.target&&(this.target.updateMaterialParams(),this.target.enableModule(this.name,e,this)))}get mode(){return this._mode}set mode(e){e!==Cle.Grid&&console.error("particle texture animation's sprites is not supported!")}get numTilesX(){return this._numTilesX}set numTilesX(e){this._numTilesX!==e&&(this._numTilesX=e,this.target.updateMaterialParams())}get numTilesY(){return this._numTilesY}set numTilesY(e){this._numTilesY!==e&&(this._numTilesY=e,this.target.updateMaterialParams())}get flipU(){return this._flipU}set flipU(e){console.error("particle texture animation's flipU is not supported!")}get flipV(){return this._flipV}set flipV(e){console.error("particle texture animation's flipV is not supported!")}get uvChannelMask(){return this._uvChannelMask}set uvChannelMask(e){console.error("particle texture animation's uvChannelMask is not supported!")}init(e){e.startRow=Math.floor(Math.random()*this.numTilesY)}animate(e,t){const n=1-e.remainingLifetime/e.startLifetime,i=this.startFrame.evaluate(n,jn(e.randomSeed+Sle))/(this.numTilesX*this.numTilesY);if(this.animation===Tle.WholeSheet)e.frameIndex=Yn(this.cycleCount*(this.frameOverTime.evaluate(n,jn(e.randomSeed+Sle))+i),1);else if(this.animation===Tle.SingleRow){const t=1/this.numTilesY;if(this.randomRow){const s=Yn(this.cycleCount*(this.frameOverTime.evaluate(n,jn(e.randomSeed+Sle))+i),1),r=e.startRow*t,o=r+t;e.frameIndex=Bn(r,o,s)}else{const s=this.rowIndex*t,r=s+t;e.frameIndex=Bn(s,r,Yn(this.cycleCount*(this.frameOverTime.evaluate(n,jn(e.randomSeed+Sle))+i),1))}}}}).prototype,"_enable",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),lle=Bc(ale.prototype,"_numTilesX",[Oce],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),hle=Bc(ale.prototype,"_numTilesY",[Mce],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Bc(ale.prototype,"enable",[Nce],Object.getOwnPropertyDescriptor(ale.prototype,"enable"),ale.prototype),_le=Bc(ale.prototype,"_mode",[Lce],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Cle.Grid}}),Bc(ale.prototype,"mode",[zce,Fce,Bce],Object.getOwnPropertyDescriptor(ale.prototype,"mode"),ale.prototype),Bc(ale.prototype,"numTilesX",[Uce,Gce],Object.getOwnPropertyDescriptor(ale.prototype,"numTilesX"),ale.prototype),Bc(ale.prototype,"numTilesY",[Hce,kce],Object.getOwnPropertyDescriptor(ale.prototype,"numTilesY"),ale.prototype),ule=Bc(ale.prototype,"animation",[Vce,il,jce,Wce],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Tle.WholeSheet}}),ple=Bc(ale.prototype,"frameOverTime",[qce,il,Xce,Yce,Kce],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new fse}}),dle=Bc(ale.prototype,"startFrame",[$ce,il,Zce,Qce,Jce],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new fse}}),fle=Bc(ale.prototype,"cycleCount",[il,ele,tle],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),mle=Bc(ale.prototype,"_flipU",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),gle=Bc(ale.prototype,"_flipV",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),vle=Bc(ale.prototype,"_uvChannelMask",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return-1}}),yle=Bc(ale.prototype,"randomRow",[il,nle,ile],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),xle=Bc(ale.prototype,"rowIndex",[il,sle,rle],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),ole=ale))||ole);var Ele,Ale,Ple,wle,Ile,Rle,Dle,Ole,Mle,Nle,Lle,zle,Fle,Ble,Ule,Gle,Hle,kle,Vle,jle,Wle,qle,Xle,Yle,Kle,$le,Zle,Qle,Jle;const ehe=197866,the=new ri;let nhe=(Ele=Zc("cc.VelocityOvertimeModule"),Ale=bl(),Ple=Ol(fse),wle=yl(),Ile=bl(),Rle=vl(),Dle=Ol(fse),Ole=yl(),Mle=bl(),Nle=vl(),Lle=Ol(fse),zle=yl(),Fle=bl(),Ble=vl(),Ule=Ol(fse),Gle=yl(),Hle=bl(),kle=vl(),Vle=Ol(Xre),jle=bl(),Wle=vl(),Ele((Yle=Bc((Xle=class extends qre{get enable(){return this._enable}set enable(e){this._enable!==e&&(this._enable=e,this.target&&this.target.enableModule(this.name,e,this))}constructor(){super(),Fc(this,"_enable",Yle,this),Fc(this,"x",Kle,this),Fc(this,"y",$le,this),Fc(this,"z",Zle,this),Fc(this,"speedModifier",Qle,this),Fc(this,"space",Jle,this),this.rotation=void 0,this.needTransform=void 0,this.name="velocityModule",this.rotation=new ui,this.speedModifier.constant=1,this.needTransform=!1,this.needUpdate=!0}update(e,t){this.needTransform=uoe(e,this.space,t,this.rotation)}animate(e,t){const n=1-e.remainingLifetime/e.startLifetime,i=ri.set(the,this.x.evaluate(n,jn(e.randomSeed^ehe)),this.y.evaluate(n,jn(156497^e.randomSeed)),this.z.evaluate(n,jn(984136^e.randomSeed)));this.needTransform&&ri.transformQuat(i,i,this.rotation),ri.add(e.animatedVelocity,e.animatedVelocity,i),ri.add(e.ultimateVelocity,e.velocity,e.animatedVelocity),ri.multiplyScalar(e.ultimateVelocity,e.ultimateVelocity,this.speedModifier.evaluate(1-e.remainingLifetime/e.startLifetime,jn(e.randomSeed+ehe)))}}).prototype,"_enable",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Bc(Xle.prototype,"enable",[Ale],Object.getOwnPropertyDescriptor(Xle.prototype,"enable"),Xle.prototype),Kle=Bc(Xle.prototype,"x",[Ple,il,wle,Ile,Rle],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new fse}}),$le=Bc(Xle.prototype,"y",[Dle,il,Ole,Mle,Nle],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new fse}}),Zle=Bc(Xle.prototype,"z",[Lle,il,zle,Fle,Ble],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new fse}}),Qle=Bc(Xle.prototype,"speedModifier",[Ule,il,Gle,Hle,kle],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new fse}}),Jle=Bc(Xle.prototype,"space",[Vle,il,jle,Wle],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Xre.Local}}),qle=Xle))||qle);var ihe,she,rhe,ohe,ahe,che,lhe,hhe,_he;let uhe=e("Burst",(ihe=Zc("cc.Burst"),she=Ol(fse),rhe=yl(),ihe((che=Bc((ahe=class{get time(){return this._time}set time(e){this._time=e,this._curTime=e}get repeatCount(){return this._repeatCount}set repeatCount(e){this._repeatCount=e,this._remainingCount=e}constructor(){Fc(this,"_time",che,this),Fc(this,"_repeatCount",lhe,this),Fc(this,"repeatInterval",hhe,this),Fc(this,"count",_he,this),this._remainingCount=void 0,this._curTime=void 0,this._remainingCount=0,this._curTime=0}update(e,t){if(0===this._remainingCount&&(this._remainingCount=this._repeatCount,this._curTime=this._time),this._remainingCount>0){let n=Yn(e._time-e.startDelay.evaluate(0,1),e.duration)-t;n=n>0?n:0;const i=Yn(e.time-e.startDelay.evaluate(0,1),e.duration);this._curTime>=n&&this._curTime<i&&(e.emit(this.count.evaluate(this._curTime/e.duration,1),t-(i-this._curTime)),this._curTime+=this.repeatInterval,--this._remainingCount)}}reset(){this._remainingCount=0,this._curTime=0}getMaxCount(e){return this.count.getMax()*Math.min(Math.ceil(e.duration/this.repeatInterval),this.repeatCount)}}).prototype,"_time",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Bc(ahe.prototype,"time",[dl],Object.getOwnPropertyDescriptor(ahe.prototype,"time"),ahe.prototype),lhe=Bc(ahe.prototype,"_repeatCount",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),Bc(ahe.prototype,"repeatCount",[dl],Object.getOwnPropertyDescriptor(ahe.prototype,"repeatCount"),ahe.prototype),hhe=Bc(ahe.prototype,"repeatInterval",[il,dl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),_he=Bc(ahe.prototype,"count",[she,il,rhe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new fse}}),ohe=ahe))||ohe));var phe,dhe,fhe,mhe,ghe,vhe,yhe,xhe,She,Che,The,bhe,Ehe,Ahe,Phe,whe,Ihe,Rhe,Dhe,Ohe,Mhe,Nhe,Lhe,zhe,Fhe,Bhe,Uhe,Ghe,Hhe,khe,Vhe,jhe,Whe,qhe,Xhe,Yhe,Khe,$he,Zhe,Qhe,Jhe,e_e,t_e,n_e,i_e,s_e,r_e,o_e,a_e,c_e,l_e,h_e,__e,u_e,p_e,d_e,f_e,m_e,g_e,v_e,y_e,x_e,S_e,C_e,T_e,b_e,E_e,A_e;const P_e=new ri(0,0,0),w_e=[],I_e=new ri(.5,.5,.5);let R_e=(phe=Zc("cc.ShapeModule"),dhe=bl(),fhe=vl(),mhe=bl(),ghe=vl(),vhe=bl(),yhe=vl(),xhe=bl(),She=vl(),Che=bl(),The=vl(),bhe=bl(),Ehe=Ol(Zre),Ahe=sl("shapeType"),Phe=bl(),whe=Ol(Zre),Ihe=vl(),Rhe=Ol(Qre),Dhe=bl(),Ohe=vl(),Mhe=bl(),Nhe=vl(),Lhe=bl(),zhe=vl(),Fhe=bl(),Bhe=vl(),Uhe=bl(),Ghe=vl(),Hhe=bl(),khe=vl(),Vhe=bl(),jhe=vl(),Whe=Ol(Jre),qhe=bl(),Xhe=vl(),Yhe=fl(),Khe=bl(),$he=vl(),Zhe=Ol(fse),Qhe=fl(),Jhe=yl(),e_e=bl(),t_e=vl(),n_e=bl(),i_e=vl(),s_e=bl(),r_e=vl(),phe((Bc((a_e=class{get position(){return this._position}set position(e){this._position=e,this.constructMat()}get rotation(){return this._rotation}set rotation(e){this._rotation=e,this.constructMat()}get scale(){return this._scale}set scale(e){this._scale=e,this.constructMat()}get arc(){return Gn(this._arc)}set arc(e){this._arc=Un(e)}get angle(){return Math.round(100*Gn(this._angle))/100}set angle(e){this._angle=Un(e)}get enable(){return this._enable}set enable(e){this._enable=e}get shapeType(){return this._shapeType}set shapeType(e){switch(this._shapeType=e,this._shapeType){case Zre.Box:this.emitFrom===Qre.Base&&(this.emitFrom=Qre.Volume);break;case Zre.Cone:this.emitFrom===Qre.Edge&&(this.emitFrom=Qre.Base);break;case Zre.Sphere:case Zre.Hemisphere:this.emitFrom!==Qre.Base&&this.emitFrom!==Qre.Edge||(this.emitFrom=Qre.Volume)}}constructor(){Fc(this,"_enable",c_e,this),Fc(this,"_shapeType",l_e,this),Fc(this,"emitFrom",h_e,this),Fc(this,"alignToDirection",__e,this),Fc(this,"randomDirectionAmount",u_e,this),Fc(this,"sphericalDirectionAmount",p_e,this),Fc(this,"randomPositionAmount",d_e,this),Fc(this,"radius",f_e,this),Fc(this,"radiusThickness",m_e,this),Fc(this,"arcMode",g_e,this),Fc(this,"arcSpread",v_e,this),Fc(this,"arcSpeed",y_e,this),Fc(this,"length",x_e,this),Fc(this,"boxThickness",S_e,this),Fc(this,"_position",C_e,this),Fc(this,"_rotation",T_e,this),Fc(this,"_scale",b_e,this),Fc(this,"_arc",E_e,this),Fc(this,"_angle",A_e,this),this.mat=void 0,this.quat=void 0,this.particleSystem=void 0,this.lastTime=void 0,this.totalAngle=void 0,this.mat=new xi,this.quat=new ui,this.particleSystem=null,this.lastTime=0,this.totalAngle=0}onInit(e){this.particleSystem=e,this.constructMat(),this.lastTime=this.particleSystem._time}emit(e){switch(this.shapeType){case Zre.Box:!function(e,t,n,i){switch(e){case Qre.Volume:s=n,r=I_e,ri.set(s,kn(-r.x,r.x),kn(-r.y,r.y),kn(-r.z,r.z));break;case Qre.Shell:w_e.splice(0,w_e.length),w_e.push(kn(-.5,.5)),w_e.push(kn(-.5,.5)),w_e.push(.5*voe()),goe(w_e),D_e(w_e,t),ri.set(n,w_e[0],w_e[1],w_e[2]);break;case Qre.Edge:w_e.splice(0,w_e.length),w_e.push(kn(-.5,.5)),w_e.push(.5*voe()),w_e.push(.5*voe()),goe(w_e),D_e(w_e,t),ri.set(n,w_e[0],w_e[1],w_e[2]);break;default:console.warn(`${e} is not supported for box emitter.`)}var s,r;ri.copy(i,_oe)}(this.emitFrom,this.boxThickness,e.position,e.velocity);break;case Zre.Circle:!function(e,t,n,i,s){moe(i,e*(1-t),e,n),ri.normalize(s,i)}(this.radius,this.radiusThickness,this.generateArcAngle(),e.position,e.velocity);break;case Zre.Cone:!function(e,t,n,i,s,r,o,a){switch(e){case Qre.Base:moe(o,t*(1-n),t,i),bi.multiplyScalar(a,o,Math.sin(s)),a.z=-Math.cos(s)*t,ri.normalize(a,a),o.z=0;break;case Qre.Shell:poe(o,i),bi.multiplyScalar(a,o,Math.sin(s)),a.z=-Math.cos(s),ri.normalize(a,a),bi.multiplyScalar(o,o,t),o.z=0;break;case Qre.Volume:moe(o,t*(1-n),t,i),bi.multiplyScalar(a,o,Math.sin(s)),a.z=-Math.cos(s)*t,ri.normalize(a,a),o.z=0,ri.add(o,o,ri.multiplyScalar(P_e,a,r*Hn()/-a.z));break;default:console.warn(`${e} is not supported for cone emitter.`)}}(this.emitFrom,this.radius,this.radiusThickness,this.generateArcAngle(),this._angle,this.length,e.position,e.velocity);break;case Zre.Sphere:!function(e,t,n,i,s){switch(e){case Qre.Volume:foe(i,t*(1-n),t),ri.normalize(s,i);break;case Qre.Shell:doe(i),ri.multiplyScalar(i,i,t),ri.normalize(s,i);break;default:console.warn(`${e} is not supported for sphere emitter.`)}}(this.emitFrom,this.radius,this.radiusThickness,e.position,e.velocity);break;case Zre.Hemisphere:!function(e,t,n,i,s){switch(e){case Qre.Volume:foe(i,t*(1-n),t),i.z>0&&(i.z*=-1),ri.normalize(s,i);break;case Qre.Shell:doe(i),ri.multiplyScalar(i,i,t),i.z>0&&(i.z*=-1),ri.normalize(s,i);break;default:console.warn(`${e} is not supported for hemisphere emitter.`)}}(this.emitFrom,this.radius,this.radiusThickness,e.position,e.velocity);break;default:console.warn(`${this.shapeType} shapeType is not supported by ShapeModule.`)}if(this.randomPositionAmount>0&&(e.position.x+=kn(-this.randomPositionAmount,this.randomPositionAmount),e.position.y+=kn(-this.randomPositionAmount,this.randomPositionAmount),e.position.z+=kn(-this.randomPositionAmount,this.randomPositionAmount)),ri.transformQuat(e.velocity,e.velocity,this.quat),ri.transformMat4(e.position,e.position,this.mat),this.sphericalDirectionAmount>0){const t=ri.normalize(P_e,e.position);ri.lerp(e.velocity,e.velocity,t,this.sphericalDirectionAmount)}this.lastTime=this.particleSystem._time}constructMat(){ui.fromEuler(this.quat,this._rotation.x,this._rotation.y,this._rotation.z),xi.fromRTS(this.mat,this.quat,this._position,this._scale)}generateArcAngle(){if(this.arcMode===Jre.Random)return kn(0,this._arc);let e=this.totalAngle+2*Math.PI*this.arcSpeed.evaluate(this.particleSystem._time,1)*(this.particleSystem._time-this.lastTime);switch(this.totalAngle=e,0!==this.arcSpread&&(e=Math.floor(e/(this._arc*this.arcSpread))*this._arc*this.arcSpread),this.arcMode){case Jre.Loop:return Yn(e,this._arc);case Jre.PingPong:return Kn(e,this._arc);default:return Yn(e,this._arc)}}}).prototype,"position",[dhe,fhe],Object.getOwnPropertyDescriptor(a_e.prototype,"position"),a_e.prototype),Bc(a_e.prototype,"rotation",[mhe,ghe],Object.getOwnPropertyDescriptor(a_e.prototype,"rotation"),a_e.prototype),Bc(a_e.prototype,"scale",[vhe,yhe],Object.getOwnPropertyDescriptor(a_e.prototype,"scale"),a_e.prototype),Bc(a_e.prototype,"arc",[xhe,She],Object.getOwnPropertyDescriptor(a_e.prototype,"arc"),a_e.prototype),Bc(a_e.prototype,"angle",[Che,The],Object.getOwnPropertyDescriptor(a_e.prototype,"angle"),a_e.prototype),c_e=Bc(a_e.prototype,"_enable",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Bc(a_e.prototype,"enable",[bhe],Object.getOwnPropertyDescriptor(a_e.prototype,"enable"),a_e.prototype),l_e=Bc(a_e.prototype,"_shapeType",[Ehe,Ahe,Phe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Zre.Cone}}),Bc(a_e.prototype,"shapeType",[whe,Ihe],Object.getOwnPropertyDescriptor(a_e.prototype,"shapeType"),a_e.prototype),h_e=Bc(a_e.prototype,"emitFrom",[Rhe,il,Dhe,Ohe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Qre.Volume}}),__e=Bc(a_e.prototype,"alignToDirection",[il,Mhe,Nhe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),u_e=Bc(a_e.prototype,"randomDirectionAmount",[il,Lhe,zhe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),p_e=Bc(a_e.prototype,"sphericalDirectionAmount",[il,Fhe,Bhe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),d_e=Bc(a_e.prototype,"randomPositionAmount",[il,Uhe,Ghe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),f_e=Bc(a_e.prototype,"radius",[il,Hhe,khe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),m_e=Bc(a_e.prototype,"radiusThickness",[il,Vhe,jhe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),g_e=Bc(a_e.prototype,"arcMode",[Whe,il,qhe,Xhe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Jre.Random}}),v_e=Bc(a_e.prototype,"arcSpread",[Yhe,il,Khe,$he],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),y_e=Bc(a_e.prototype,"arcSpeed",[Zhe,Qhe,Jhe,il,e_e,t_e],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new fse}}),x_e=Bc(a_e.prototype,"length",[il,n_e,i_e],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 5}}),S_e=Bc(a_e.prototype,"boxThickness",[il,s_e,r_e],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new ri(0,0,0)}}),C_e=Bc(a_e.prototype,"_position",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new ri(0,0,0)}}),T_e=Bc(a_e.prototype,"_rotation",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new ri(0,0,0)}}),b_e=Bc(a_e.prototype,"_scale",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new ri(1,1,1)}}),E_e=Bc(a_e.prototype,"_arc",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Un(360)}}),A_e=Bc(a_e.prototype,"_angle",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Un(25)}}),o_e=a_e))||o_e);function D_e(e,t){t.x>0&&(e[0]+=.5*kn(-t.x,t.x),e[0]=zn(e[0],-.5,.5)),t.y>0&&(e[1]+=.5*kn(-t.y,t.y),e[1]=zn(e[1],-.5,.5)),t.z>0&&(e[2]+=.5*kn(-t.z,t.z),e[2]=zn(e[2],-.5,.5))}const O_e=[0,0,1,0,0,1,1,1];class M_e extends fg{constructor(){super(),this._capacity=void 0,this._vertAttrs=void 0,this._vertSize=void 0,this._vBuffer=void 0,this._vertAttrsFloatCount=void 0,this._vdataF32=void 0,this._vdataUint32=void 0,this._iaInfo=void 0,this._iaInfoBuffer=void 0,this._subMeshData=void 0,this._mesh=void 0,this._vertCount=0,this._indexCount=0,this._startTimeOffset=0,this._lifeTimeOffset=0,this._material=null,this.type=ug.PARTICLE_BATCH,this._capacity=0,this._vertAttrs=null,this._vertSize=0,this._vBuffer=null,this._vertAttrsFloatCount=0,this._vdataF32=null,this._vdataUint32=null,this._iaInfo=new Ur([new Fr]),this._iaInfoBuffer=this._device.createBuffer(new Lr(Us.INDIRECT,ks.HOST|ks.DEVICE,Po,Po)),this._subMeshData=null,this._mesh=null}setCapacity(e){const t=this._capacity!==e;this._capacity=e,this._subMeshData&&t&&this.rebuild()}setVertexAttributes(e,t){if(this._mesh!==e||this._vertAttrs!==t){this._mesh=e,this._vertAttrs=t,this._vertSize=0;for(const e of this._vertAttrs)e.offset=this._vertSize,this._vertSize+=To[e.format].size;this._vertAttrsFloatCount=this._vertSize/4,this.rebuild()}}createSubMeshData(){this.destroySubMeshData(),this._vertCount=4,this._indexCount=6,this._mesh&&(this._vertCount=this._mesh.struct.vertexBundles[this._mesh.struct.primitives[0].vertexBundelIndices[0]].view.count,this._indexCount=this._mesh.struct.primitives[0].indexView.count);const e=this._device.createBuffer(new Lr(Us.VERTEX|Us.TRANSFER_DST,ks.HOST|ks.DEVICE,this._vertSize*this._capacity*this._vertCount,this._vertSize)),t=new ArrayBuffer(this._vertSize*this._capacity*this._vertCount);if(this._mesh&&this._capacity>0){let e=this._vertAttrs[this._vertAttrs.findIndex((e=>e.name===yr.ATTR_TEX_COORD))].offset;this._mesh.copyAttribute(0,yr.ATTR_TEX_COORD,t,this._vertSize,e);let n=this._vertAttrs.findIndex((e=>e.name===yr.ATTR_TEX_COORD3));if(e=this._vertAttrs[n++].offset,this._mesh.copyAttribute(0,yr.ATTR_POSITION,t,this._vertSize,e),e=this._vertAttrs[n++].offset,this._mesh.copyAttribute(0,yr.ATTR_NORMAL,t,this._vertSize,e),e=this._vertAttrs[n++].offset,!this._mesh.copyAttribute(0,yr.ATTR_COLOR,t,this._vertSize,e)){const n=new Uint32Array(t);for(let t=0;t<this._vertCount;++t)n[t*this._vertAttrsFloatCount+e/4]=ti.WHITE._val}const i=new Float32Array(t);for(let e=1;e<this._capacity;e++)i.copyWithin(e*this._vertSize*this._vertCount/4,0,this._vertSize*this._vertCount/4)}e.update(t);const n=new Uint16Array(this._capacity*this._indexCount);if(this._mesh&&this._capacity>0){this._mesh.copyIndices(0,n);for(let e=1;e<this._capacity;e++)for(let t=0;t<this._indexCount;t++)n[e*this._indexCount+t]=n[t]+e*this._vertCount}else{let e=0;for(let t=0;t<this._capacity;++t){const i=4*t;n[e++]=i,n[e++]=i+1,n[e++]=i+2,n[e++]=i+3,n[e++]=i+2,n[e++]=i+1}}const i=this._device.createBuffer(new Lr(Us.INDEX|Us.TRANSFER_DST,ks.DEVICE,this._capacity*this._indexCount*Uint16Array.BYTES_PER_ELEMENT,Uint16Array.BYTES_PER_ELEMENT));return i.update(n),this._iaInfo.drawInfos[0].vertexCount=this._capacity*this._vertCount,this._iaInfo.drawInfos[0].indexCount=this._capacity*this._indexCount,this._iaInfoBuffer||(this._iaInfoBuffer=this._device.createBuffer(new Lr(Us.INDIRECT,ks.HOST|ks.DEVICE,Po,Po))),this._iaInfoBuffer.update(this._iaInfo),this._subMeshData=new sT([e],this._vertAttrs,cr.TRIANGLE_LIST,i,this._iaInfoBuffer),this.initSubModel(0,this._subMeshData,this._material),t}updateMaterial(e){this._material=e,this.setSubModelMaterial(0,e)}addParticleVertexData(e,t){if(this._mesh)for(let n=0;n<this._vertCount;n++){let i=(e*this._vertCount+n)*this._vertAttrsFloatCount;this._vdataF32[i++]=t[0].x,this._vdataF32[i++]=t[0].y,this._vdataF32[i++]=t[0].z,i+=2,this._vdataF32[i++]=t[1].z,this._vdataF32[i++]=t[2].x,this._vdataF32[i++]=t[2].y,this._vdataF32[i++]=t[2].z,this._vdataF32[i++]=t[3].x,this._vdataF32[i++]=t[3].y,this._vdataF32[i++]=t[3].z,this._vdataUint32[i++]=t[4]}else{let n=e*this._vertAttrsFloatCount;this._vdataF32[n++]=t[0].x,this._vdataF32[n++]=t[0].y,this._vdataF32[n++]=t[0].z,this._vdataF32[n++]=t[1].x,this._vdataF32[n++]=t[1].y,this._vdataF32[n++]=t[1].z,this._vdataF32[n++]=t[2].x,this._vdataF32[n++]=t[2].y,this._vdataF32[n++]=t[2].z,this._vdataF32[n++]=t[3].x,this._vdataF32[n++]=t[3].y,this._vdataF32[n++]=t[3].z,this._vdataUint32[n++]=t[4],t[5]&&(this._vdataF32[n++]=t[5].x,this._vdataF32[n++]=t[5].y,this._vdataF32[n++]=t[5].z)}}addGPUParticleVertexData(e,t,n){let i=t*this._vertAttrsFloatCount*this._vertCount;for(let t=0;t<this._vertCount;t++){let s=i;this._vdataF32[s++]=e.position.x,this._vdataF32[s++]=e.position.y,this._vdataF32[s++]=e.position.z,this._vdataF32[s++]=n,this._vdataF32[s++]=e.startSize.x,this._vdataF32[s++]=e.startSize.y,this._vdataF32[s++]=e.startSize.z,this._vdataF32[s++]=O_e[2*t],this._vdataF32[s++]=e.rotation.x,this._vdataF32[s++]=e.rotation.y,this._vdataF32[s++]=e.rotation.z,this._vdataF32[s++]=O_e[2*t+1],this._vdataF32[s++]=e.startColor.r/255,this._vdataF32[s++]=e.startColor.g/255,this._vdataF32[s++]=e.startColor.b/255,this._vdataF32[s++]=e.startColor.a/255,this._vdataF32[s++]=e.velocity.x,this._vdataF32[s++]=e.velocity.y,this._vdataF32[s++]=e.velocity.z,this._vdataF32[s++]=e.startLifetime,this._vdataF32[s++]=e.randomSeed,i+=this._vertAttrsFloatCount}}updateGPUParticles(e,t,n){const i=this._vertAttrsFloatCount*this._vertCount;let s=0,r=0,o=0,a=0,c=0;for(let l=0;l<e;++l)s=l*i,r=this._vdataF32[s+this._startTimeOffset],o=this._vdataF32[s+this._lifeTimeOffset],c=t-r,o-c<n&&(a=--e*i,this._vdataF32.copyWithin(s,a,a+i),l--);return e}constructAttributeIndex(){if(!this._vertAttrs)return;let e=this._vertAttrs.findIndex((e=>"a_position_starttime"===e.name)),t=this._vertAttrs[e].offset;this._startTimeOffset=t/4+3,e=this._vertAttrs.findIndex((e=>"a_dir_life"===e.name)),t=this._vertAttrs[e].offset,this._lifeTimeOffset=t/4+3}updateIA(e){e<=0||(this._subModels[0].inputAssembler.vertexBuffers[0].update(this._vdataF32),this._iaInfo.drawInfos[0].firstIndex=0,this._iaInfo.drawInfos[0].indexCount=this._indexCount*e,this._iaInfoBuffer.update(this._iaInfo))}clear(){this._subModels[0].inputAssembler.indexCount=0}destroy(){super.destroy(),this._vBuffer=null,this._vdataF32=null,this.destroySubMeshData(),this._iaInfoBuffer&&(this._iaInfoBuffer.destroy(),this._iaInfoBuffer=null)}rebuild(){this._vBuffer=this.createSubMeshData(),this._vdataF32=new Float32Array(this._vBuffer),this._vdataUint32=new Uint32Array(this._vBuffer)}destroySubMeshData(){this._subMeshData&&(this._subMeshData.destroy(),this._subMeshData=null,this._iaInfoBuffer=null)}}class N_e{constructor(e){this._particleSystem=null,this._model=null,this._renderInfo=null,this._vertAttrs=[],this._renderInfo=e}getInfo(){return this._renderInfo}onInit(e){this._particleSystem=e}onEnable(){if(!this._particleSystem)return;this.attachToScene();const e=this._model;e&&(e.node=e.transform=this._particleSystem.node)}onDisable(){this.detachFromScene()}onDestroy(){this._model&&(i.director.root.destroyModel(this._model),this._model=null)}attachToScene(){this._model&&(this._model.scene&&this.detachFromScene(),this._particleSystem._getRenderScene().addModel(this._model))}detachFromScene(){this._model&&this._model.scene&&this._model.scene.removeModel(this._model)}setVertexAttributes(){this._model&&this._model.setVertexAttributes(this._renderInfo.renderMode===$re.Mesh?this._renderInfo.mesh:null,this._vertAttrs)}clear(){this._model&&(this._model.enabled=!1)}getModel(){return this._model}_initModel(){this._model||(this._model=i.director.root.createModel(M_e),this._model.setCapacity(this._particleSystem.capacity),this._model.visFlags=this._particleSystem.visibility)}updateTrailMaterial(){}getDefaultTrailMaterial(){return null}}const L_e=new ri,z_e=new xi,F_e=new ui,B_e=(new ri,["_colorOverLifetimeModule","_sizeOvertimeModule","_velocityOvertimeModule","_forceOvertimeModule","_limitVelocityOvertimeModule","_rotationOvertimeModule","_textureAnimationModule"]),U_e=[0,0,1,0,0,1,1,1],G_e=[new Qr(yr.ATTR_POSITION,zs.RGB32F),new Qr(yr.ATTR_TEX_COORD,zs.RGB32F),new Qr(yr.ATTR_TEX_COORD1,zs.RGB32F),new Qr(yr.ATTR_TEX_COORD2,zs.RGB32F),new Qr(yr.ATTR_COLOR,zs.RGBA8,!0)],H_e=[new Qr(yr.ATTR_POSITION,zs.RGB32F),new Qr(yr.ATTR_TEX_COORD,zs.RGB32F),new Qr(yr.ATTR_TEX_COORD1,zs.RGB32F),new Qr(yr.ATTR_TEX_COORD2,zs.RGB32F),new Qr(yr.ATTR_COLOR,zs.RGBA8,!0),new Qr(yr.ATTR_COLOR1,zs.RGB32F)],k_e=[new Qr(yr.ATTR_POSITION,zs.RGB32F),new Qr(yr.ATTR_TEX_COORD,zs.RGB32F),new Qr(yr.ATTR_TEX_COORD1,zs.RGB32F),new Qr(yr.ATTR_TEX_COORD2,zs.RGB32F),new Qr(yr.ATTR_COLOR,zs.RGBA8,!0),new Qr(yr.ATTR_TEX_COORD3,zs.RGB32F),new Qr(yr.ATTR_NORMAL,zs.RGB32F),new Qr(yr.ATTR_COLOR1,zs.RGBA8,!0)],V_e={parent:null,owner:null,subModelIdx:0};class j_e extends N_e{constructor(e){super(e),this._defines=void 0,this._trailDefines=void 0,this._frameTile_velLenScale=void 0,this._tmp_velLenScale=void 0,this._defaultMat=null,this._node_scale=void 0,this._attrs=void 0,this._particles=null,this._defaultTrailMat=null,this._updateList=new Map,this._animateList=new Map,this._runAnimateList=new Array,this._fillDataFunc=null,this._uScaleHandle=0,this._uLenHandle=0,this._uNodeRotHandle=0,this._alignSpace=Kre.View,this._inited=!1,this._localMat=new xi,this._gravity=new wi,this._model=null,this._frameTile_velLenScale=new wi(1,1,0,0),this._tmp_velLenScale=this._frameTile_velLenScale.clone(),this._node_scale=new wi,this._attrs=new Array(5),this._defines={CC_USE_WORLD_SPACE:!0,CC_USE_BILLBOARD:!0,CC_USE_STRETCHED_BILLBOARD:!1,CC_USE_HORIZONTAL_BILLBOARD:!1,CC_USE_VERTICAL_BILLBOARD:!1},this._trailDefines={CC_USE_WORLD_SPACE:!0}}onInit(e){super.onInit(e),this._particles=new Re((()=>new Vre(this)),16),this._setVertexAttrib(),this._setFillFunc(),this._initModuleList(),this._initModel(),this.updateMaterialParams(),this.updateTrailMaterial(),this.setVertexAttributes(),this._inited=!0}clear(){super.clear(),this._particles.reset(),this._particleSystem._trailModule&&this._particleSystem._trailModule.clear(),this.updateRenderData(),this._model.enabled=!1}updateRenderMode(){this._setVertexAttrib(),this._setFillFunc(),this.updateMaterialParams(),this.setVertexAttributes()}getFreeParticle(){return this._particles.length>=this._particleSystem.capacity?null:this._particles.add()}getDefaultTrailMaterial(){return this._defaultTrailMat}setNewParticle(e){}_initModuleList(){B_e.forEach((e=>{const t=this._particleSystem[e];t&&t.enable&&(t.needUpdate&&(this._updateList[t.name]=t),t.needAnimate&&(this._animateList[t.name]=t))})),this._runAnimateList.length=0;for(let e=0,t=jre.length;e<t;e++){const t=this._animateList[jre[e]];t&&this._runAnimateList.push(t)}}enableModule(e,t,n){t?(n.needUpdate&&(this._updateList[n.name]=n),n.needAnimate&&(this._animateList[n.name]=n)):(delete this._animateList[e],delete this._updateList[e]),this._runAnimateList.length=0;for(let e=0,t=jre.length;e<t;e++){const t=this._animateList[jre[e]];t&&this._runAnimateList.push(t)}this.updateMaterialParams()}updateAlignSpace(e){this._alignSpace=e}getDefaultMaterial(){return this._defaultMat}updateRotation(e){e&&this.doUpdateRotation(e)}doUpdateRotation(e){if(this._renderInfo.renderMode===$re.Mesh||this._alignSpace!==Kre.View){if(this._alignSpace===Kre.Local)this._particleSystem.node.getRotation(F_e);else if(this._alignSpace===Kre.World)this._particleSystem.node.getWorldRotation(F_e);else if(this._alignSpace===Kre.View){var t;F_e.set(0,0,0,1);const e=null===(t=this._particleSystem.node.scene.renderScene)||void 0===t?void 0:t.cameras;if(void 0!==e)for(let t=0;t<(null==e?void 0:e.length);++t){const n=e[t];if((n.visibility&this._particleSystem.node.layer)===this._particleSystem.node.layer){ui.fromViewUp(F_e,n.forward);break}}}else F_e.set(0,0,0,1);e.setUniform(this._uNodeRotHandle,F_e)}}updateScale(e){e&&this.doUpdateScale(e)}doUpdateScale(e){switch(this._particleSystem.scaleSpace){case Xre.Local:this._particleSystem.node.getScale(this._node_scale);break;case Xre.World:this._particleSystem.node.getWorldScale(this._node_scale)}e.setUniform(this._uScaleHandle,this._node_scale)}updateParticles(e){const t=this._particleSystem;if(!t)return this._particles.length;t.node.getWorldMatrix(z_e);const n=(t.getMaterialInstance(0)||this._defaultMat).passes[0];this.doUpdateScale(n),this.doUpdateRotation(n),this._updateList.forEach((e=>{e.update(t._simulationSpace,z_e)}));const i=t._trailModule,s=i&&i.enable;if(s&&i.update(),t.simulationSpace===Xre.Local){const e=t.node.getRotation();xi.fromQuat(this._localMat,e),this._localMat.transpose()}for(let n=0;n<this._particles.length;++n){const r=this._particles.data[n];if(r.remainingLifetime-=e,ri.set(r.animatedVelocity,0,0,0),r.remainingLifetime<0)s&&i.removeParticle(r),this._particles.removeAt(n),--n;else{if(t.simulationSpace===Xre.Local){const n=9.8*-t.gravityModifier.evaluate(1-r.remainingLifetime/r.startLifetime,jn(r.randomSeed))*e;this._gravity.x=0,this._gravity.y=n,this._gravity.z=0,this._gravity.w=1,this._gravity=this._gravity.transformMat4(this._localMat),r.velocity.x+=this._gravity.x,r.velocity.y+=this._gravity.y,r.velocity.z+=this._gravity.z}else r.velocity.y-=9.8*t.gravityModifier.evaluate(1-r.remainingLifetime/r.startLifetime,jn(r.randomSeed))*e;ri.copy(r.ultimateVelocity,r.velocity),this._runAnimateList.forEach((t=>{t.animate(r,e)})),ri.scaleAndAdd(r.position,r.position,r.ultimateVelocity,e),s&&i.animate(r,e)}}return this._model.enabled=this._particles.length>0,this._particles.length}updateRenderData(){let e=0;for(let t=0;t<this._particles.length;++t){const n=this._particles.data[t];let i=0;const s=this._particleSystem._textureAnimationModule;s&&s.enable&&(i=n.frameIndex),e=4*t,this._fillDataFunc(n,e,i)}}beforeRender(){this._model.updateIA(this._particles.length)}getParticleCount(){return this._particles.length}onMaterialModified(e,t){this._inited&&(0===e?this.updateMaterialParams():this.updateTrailMaterial())}onRebuildPSO(e,t){this._model&&0===e&&this._model.setSubModelMaterial(0,t);const n=this._particleSystem._trailModule;n&&n._trailModel&&1===e&&n._trailModel.setSubModelMaterial(0,t)}_setFillFunc(){this._renderInfo.renderMode===$re.Mesh?this._fillDataFunc=this._fillMeshData:this._renderInfo.renderMode===$re.StrecthedBillboard?this._fillDataFunc=this._fillStrecthedData:this._fillDataFunc=this._fillNormalData}_fillMeshData(e,t,n){const i=t/4;this._attrs[0]=e.position,L_e.z=n,this._attrs[1]=L_e,this._attrs[2]=e.size,this._attrs[3]=e.rotation,this._attrs[4]=e.color._val,this._model.addParticleVertexData(i,this._attrs)}_fillStrecthedData(e,t,n){for(let i=0;i<4;++i)this._attrs[0]=e.position,L_e.x=U_e[2*i],L_e.y=U_e[2*i+1],L_e.z=n,this._attrs[1]=L_e,this._attrs[2]=e.size,this._attrs[3]=e.rotation,this._attrs[4]=e.color._val,this._attrs[5]=e.ultimateVelocity,this._attrs[6]=null,this._model.addParticleVertexData(t++,this._attrs)}_fillNormalData(e,t,n){for(let i=0;i<4;++i)this._attrs[0]=e.position,L_e.x=U_e[2*i],L_e.y=U_e[2*i+1],L_e.z=n,this._attrs[1]=L_e,this._attrs[2]=e.size,this._attrs[3]=e.rotation,this._attrs[4]=e.color._val,this._attrs[5]=null,this._model.addParticleVertexData(t++,this._attrs)}_setVertexAttrib(){switch(this._renderInfo.renderMode){case $re.StrecthedBillboard:this._vertAttrs=H_e.slice();break;case $re.Mesh:this._vertAttrs=k_e.slice();break;default:this._vertAttrs=G_e.slice()}}updateMaterialParams(){if(!this._particleSystem)return;const e=this._particleSystem,t=e.sharedMaterial;if(null!=t){const n=t._effectAsset._name;this._renderInfo.mainTexture=t.getProperty("mainTexture",0),-1!==n.indexOf("particle")&&-1===n.indexOf("particle-gpu")||e.setMaterial(null,0)}null==e.sharedMaterial&&null==this._defaultMat&&(V_e.parent=Jm.get("default-particle-material"),V_e.owner=this._particleSystem,V_e.subModelIdx=0,this._defaultMat=new tv(V_e),V_e.parent=null,V_e.owner=null,V_e.subModelIdx=0,null!==this._renderInfo.mainTexture&&this._defaultMat.setProperty("mainTexture",this._renderInfo.mainTexture));const n=e.getMaterialInstance(0)||this._defaultMat;e._simulationSpace===Xre.World?this._defines.CC_USE_WORLD_SPACE=!0:this._defines.CC_USE_WORLD_SPACE=!1;const i=n.passes[0];this._uScaleHandle=i.getHandle("scale"),this._uLenHandle=i.getHandle("frameTile_velLenScale"),this._uNodeRotHandle=i.getHandle("nodeRotation");const s=this._renderInfo.renderMode,r=this._frameTile_velLenScale;s===$re.Billboard?this._defines.CC_RENDER_MODE=0:s===$re.StrecthedBillboard?(this._defines.CC_RENDER_MODE=1,r.z=this._renderInfo.velocityScale,r.w=this._renderInfo.lengthScale):s===$re.HorizontalBillboard?this._defines.CC_RENDER_MODE=2:s===$re.VerticalBillboard?this._defines.CC_RENDER_MODE=3:s===$re.Mesh?this._defines.CC_RENDER_MODE=4:console.warn(`particle system renderMode ${s} not support.`);const o=e._textureAnimationModule;o&&o.enable?(wi.copy(this._tmp_velLenScale,r),bi.set(this._tmp_velLenScale,o.numTilesX,o.numTilesY),i.setUniform(this._uLenHandle,this._tmp_velLenScale)):i.setUniform(this._uLenHandle,r);let a=!1;const c=this._particleSystem._rotationOvertimeModule;a=c&&c.enable,this._defines.ROTATION_OVER_TIME_MODULE_ENABLE=a,n.recompileShaders(this._defines),this._model&&this._model.updateMaterial(n)}updateTrailMaterial(){if(!this._particleSystem)return;const e=this._particleSystem,t=e._trailModule;if(t&&t.enable){e.simulationSpace===Xre.World||t.space===Xre.World?this._trailDefines.CC_USE_WORLD_SPACE=!0:this._trailDefines.CC_USE_WORLD_SPACE=!1;let n=e.getMaterialInstance(1);null===n&&null===this._defaultTrailMat&&(V_e.parent=Jm.get("default-trail-material"),V_e.owner=this._particleSystem,V_e.subModelIdx=1,this._defaultTrailMat=new tv(V_e),V_e.parent=null,V_e.owner=null,V_e.subModelIdx=0),n=n||this._defaultTrailMat,n.recompileShaders(this._trailDefines),t.updateMaterial()}}}const W_e=new xi,q_e=new wi,X_e=new ui,Y_e=new ui,K_e=(new ri,32),$_e="a_position_starttime",Z_e="a_size_uv",Q_e="a_rotation_uv",J_e="a_color",eue="a_dir_life",tue="a_rndSeed",nue=[new Qr($_e,zs.RGBA32F),new Qr(Z_e,zs.RGBA32F),new Qr(Q_e,zs.RGBA32F),new Qr(J_e,zs.RGBA32F),new Qr(eue,zs.RGBA32F),new Qr(tue,zs.R32F)],iue=[new Qr($_e,zs.RGBA32F),new Qr(Z_e,zs.RGBA32F),new Qr(Q_e,zs.RGBA32F),new Qr(J_e,zs.RGBA32F),new Qr(eue,zs.RGBA32F),new Qr(tue,zs.R32F),new Qr(yr.ATTR_TEX_COORD,zs.RGB32F),new Qr(yr.ATTR_TEX_COORD3,zs.RGB32F),new Qr(yr.ATTR_NORMAL,zs.RGB32F),new Qr(yr.ATTR_COLOR1,zs.RGBA8,!0)],sue={parent:null,owner:null,subModelIdx:0};class rue extends N_e{constructor(e){super(e),this._defines=void 0,this._frameTile_velLenScale=void 0,this._unifrom_velLenScale=void 0,this._tmp_velLenScale=void 0,this._node_scale=void 0,this._vertAttrs=[],this._defaultMat=null,this._particleNum=0,this._tempParticle=null,this._colorTexture=null,this._forceTexture=null,this._velocityTexture=null,this._rotationTexture=null,this._sizeTexture=null,this._animTexture=null,this._uTimeHandle=0,this._uRotHandle=0,this._uNodeRotHandle=0,this._alignSpace=Kre.View,this._inited=!1,this._frameTile_velLenScale=new wi(1,1,0,0),this._unifrom_velLenScale=this._frameTile_velLenScale.clone(),this._tmp_velLenScale=this._frameTile_velLenScale.clone(),this._node_scale=new wi,this._defines={CC_USE_WORLD_SPACE:!0,CC_USE_BILLBOARD:!0,CC_USE_STRETCHED_BILLBOARD:!1,CC_USE_HORIZONTAL_BILLBOARD:!1,CC_USE_VERTICAL_BILLBOARD:!1,COLOR_OVER_TIME_MODULE_ENABLE:!1},this._tempParticle=new Vre(null),this._particleNum=0}onInit(e){super.onInit(e),this._setVertexAttrib(),this._initModel(),this.updateMaterialParams(),this.setVertexAttributes(),this._inited=!0}updateRenderMode(){this._setVertexAttrib(),this.updateMaterialParams(),this.setVertexAttributes()}setVertexAttributes(){super.setVertexAttributes(),this._model.constructAttributeIndex()}clear(){super.clear(),this._particleNum=0,this.updateRenderData()}onDestroy(){super.onDestroy(),this._forceTexture&&this._forceTexture.destroy(),this._velocityTexture&&this._velocityTexture.destroy(),this._colorTexture&&this._colorTexture.destroy(),this._sizeTexture&&this._sizeTexture.destroy(),this._rotationTexture&&this._rotationTexture.destroy(),this._animTexture&&this._animTexture.destroy()}enableModule(e,t,n){const i=this._particleSystem.getMaterialInstance(0)||this._defaultMat;i&&(this.initShaderUniform(i),i.recompileShaders(this._defines),this._model&&this._model.setSubModelMaterial(0,i))}getFreeParticle(){return this._particleNum>=this._particleSystem._capacity?null:this._tempParticle}setNewParticle(e){this._model.addGPUParticleVertexData(e,this._particleNum,this._particleSystem._time),this._particleNum++}getDefaultMaterial(){return this._defaultMat}updateRotation(e){e&&this.doUpdateRotation(e)}doUpdateRotation(e){if(this._renderInfo.renderMode===$re.Mesh||this._alignSpace!==Kre.View){if(this._alignSpace===Kre.Local)this._particleSystem.node.getRotation(Y_e);else if(this._alignSpace===Kre.World)this._particleSystem.node.getWorldRotation(Y_e);else if(this._alignSpace===Kre.View){var t;Y_e.set(0,0,0,1);const e=null===(t=this._particleSystem.node.scene.renderScene)||void 0===t?void 0:t.cameras;if(void 0!==e)for(let t=0;t<(null==e?void 0:e.length);++t){const n=e[t];if((n.visibility&this._particleSystem.node.layer)===this._particleSystem.node.layer){ui.fromViewUp(Y_e,n.forward);break}}}else Y_e.set(0,0,0,1);e.setUniform(this._uNodeRotHandle,Y_e)}}updateScale(e){e&&this.doUpdateScale(e)}doUpdateScale(e){switch(this._particleSystem.scaleSpace){case Xre.Local:this._particleSystem.node.getScale(this._node_scale);break;case Xre.World:this._particleSystem.node.getWorldScale(this._node_scale)}e.setUniform(e.getHandle("scale"),this._node_scale)}updateParticles(e){return this._particleNum=this._model.updateGPUParticles(this._particleNum,this._particleSystem._time,e),this.updateShaderUniform(e),this._model.enabled=this._particleNum>0,this._particleNum}updateRenderData(){}beforeRender(){this._model.updateIA(this._particleNum)}updateAlignSpace(e){this._alignSpace=e}updateShaderUniform(e){const t=this._particleSystem.getMaterialInstance(0)||this._defaultMat;if(!t)return;const n=t.passes[0];q_e.x=this._particleSystem._time,q_e.y=e,n.setUniform(this._uTimeHandle,q_e),this._particleSystem.node.getWorldRotation(X_e),n.setUniform(this._uRotHandle,X_e),this.doUpdateRotation(n)}initShaderUniform(e){const t=e.passes[0];this._uTimeHandle=t.getHandle("u_timeDelta"),this._uRotHandle=t.getHandle("u_worldRot"),this._uNodeRotHandle=t.getHandle("nodeRotation"),this.doUpdateScale(t),t.setUniform(t.getHandle("frameTile_velLenScale"),this._unifrom_velLenScale),q_e.x=K_e,q_e.y=.03125,t.setUniform(t.getHandle("u_sampleInfo"),q_e);let n=!1;const s=this._particleSystem._forceOvertimeModule;if(n=s&&s.enable,this._defines.FORCE_OVER_TIME_MODULE_ENABLE=n,n){this._forceTexture&&this._forceTexture.destroy(),this._forceTexture=yse(K_e,s.x,s.y,s.z);const e=t.getHandle("force_over_time_tex0"),n=ag.getBindingFromHandle(e);t.bindSampler(n,this._forceTexture.getGFXSampler()),t.bindTexture(n,this._forceTexture.getGFXTexture());const i=t.getHandle("u_force_space");t.setUniform(i,s.space);const r=t.getHandle("u_force_mode");t.setUniform(r,this._forceTexture.height)}const r=this._particleSystem._velocityOvertimeModule;if(n=r&&r.enable,this._defines.VELOCITY_OVER_TIME_MODULE_ENABLE=n,n){this._velocityTexture&&this._velocityTexture.destroy(),this._velocityTexture=function(e,t,n,i,s){const r=Math.max(gse(t),gse(n),gse(i),gse(s)),o=new Float32Array(e*r*4),a=[t,n,i,s],c=1/(e-1);for(let t=0;t<r;t++)for(let n=0;n<4;n++){const i=a[n];let s=0,r=0;for(let a=0;a<e;a++){const e=mse(i,c*a,t);s+=e,r=s/(a+1),o[4*a+n]=r}}return vse(o,e,r)}(K_e,r.x,r.y,r.z,r.speedModifier);const e=t.getHandle("velocity_over_time_tex0"),n=ag.getBindingFromHandle(e);t.bindSampler(n,this._velocityTexture.getGFXSampler()),t.bindTexture(n,this._velocityTexture.getGFXTexture());const i=t.getHandle("u_velocity_space");t.setUniform(i,r.space);const s=t.getHandle("u_velocity_mode");t.setUniform(s,this._velocityTexture.height)}const o=this._particleSystem._colorOverLifetimeModule;if(n=o&&o.enable,this._defines.COLOR_OVER_TIME_MODULE_ENABLE=n,n){this._colorTexture&&this._colorTexture.destroy(),this._colorTexture=function(e,t){const n=function(e){switch(e.mode){case ere.TwoColors:case ere.TwoGradients:return 2;default:return 1}}(t),i=new Uint8Array(e*n*4),s=1/(e-1);let r=0;for(let o=0;o<n;o++)for(let n=0;n<e;n++){const e=nre(t,s*n,o);i[r]=e.r,i[r+1]=e.g,i[r+2]=e.b,i[r+3]=e.a,r+=4}const o=new ym;return o.create(e,n,Lf.RGBA8888),o.setFilters(Ff.LINEAR,Ff.LINEAR),o.setWrapMode(zf.CLAMP_TO_EDGE,zf.CLAMP_TO_EDGE),o.uploadData(i),o}(K_e,o.color);const e=t.getHandle("color_over_time_tex0"),n=ag.getBindingFromHandle(e);t.bindSampler(n,this._colorTexture.getGFXSampler()),t.bindTexture(n,this._colorTexture.getGFXTexture());const i=t.getHandle("u_color_mode");t.setUniform(i,this._colorTexture.height)}const a=this._particleSystem._rotationOvertimeModule;if(n=a&&a.enable,this._defines.ROTATION_OVER_TIME_MODULE_ENABLE=n,n){this._rotationTexture&&this._rotationTexture.destroy(),a.separateAxes?this._rotationTexture=yse(K_e,a.x,a.y,a.z):this._rotationTexture=function(e,t){const n=gse(t),i=new Float32Array(e*n*4),s=1/(e-1);let r=0;for(let o=0;o<n;o++)for(let n=0;n<e;n++){const e=mse(t,s*n,o);i[r+2]=e,r+=4}return vse(i,e,n)}(K_e,a.z);const e=t.getHandle("rotation_over_time_tex0"),n=ag.getBindingFromHandle(e);t.bindSampler(n,this._rotationTexture.getGFXSampler()),t.bindTexture(n,this._rotationTexture.getGFXTexture());const i=t.getHandle("u_rotation_mode");t.setUniform(i,this._rotationTexture.height)}const c=this._particleSystem._sizeOvertimeModule;if(n=c&&c.enable,this._defines.SIZE_OVER_TIME_MODULE_ENABLE=n,n){this._sizeTexture&&this._sizeTexture.destroy(),c.separateAxes?this._sizeTexture=yse(K_e,c.x,c.y,c.z,!0):this._sizeTexture=function(e,t){const n=gse(t),i=new Float32Array(e*n*4),s=1/(e-1);let r=0,o=0,a=0;for(let c=0;c<n;c++){r=0;for(let n=0;n<e;n++){const e=mse(t,s*n,c);o=e,i[a]=o,i[a+1]=o,i[a+2]=o,a+=4}}return vse(i,e,n)}(K_e,c.size);const e=t.getHandle("size_over_time_tex0"),n=ag.getBindingFromHandle(e);t.bindSampler(n,this._sizeTexture.getGFXSampler()),t.bindTexture(n,this._sizeTexture.getGFXTexture());const i=t.getHandle("u_size_mode");t.setUniform(i,this._sizeTexture.height)}const l=this._particleSystem._textureAnimationModule;if(n=l&&l.enable,this._defines.TEXTURE_ANIMATION_MODULE_ENABLE=n,n){this._animTexture&&this._animTexture.destroy(),this._animTexture=function(e,t,n){const i=Math.max(gse(t),gse(n)),s=new Float32Array(e*i*4),r=[t,n],o=1/(e-1);for(let t=0;t<i;t++)for(let n=0;n<2;n++){const i=r[n];let a=0,c=0;for(let r=0;r<e;r++){const e=mse(i,o*r,t);a+=e,c=a/(r+1),s[4*r+n]=c}}return vse(s,e,i)}(K_e,l.startFrame,l.frameOverTime);const e=t.getHandle("texture_animation_tex0"),n=ag.getBindingFromHandle(e);t.bindSampler(n,this._animTexture.getGFXSampler()),t.bindTexture(n,this._animTexture.getGFXTexture());const i=t.getHandle("u_anim_info");q_e.x=this._animTexture.height,q_e.y=l.numTilesX*l.numTilesY,q_e.z=l.cycleCount,t.setUniform(i,q_e)}this._defines.USE_VK_SHADER=i.game._gfxDevice.gfxAPI===Ms.VULKAN}getParticleCount(){return this._particleNum}onMaterialModified(e,t){this._inited&&this.updateMaterialParams()}onRebuildPSO(e,t){this._model&&0===e&&this._model.setSubModelMaterial(0,t)}_setVertexAttrib(){switch(this._renderInfo.renderMode){case $re.StrecthedBillboard:this._vertAttrs=nue.slice();break;case $re.Mesh:this._vertAttrs=iue.slice();break;default:this._vertAttrs=nue.slice()}}updateMaterialParams(){if(!this._particleSystem)return;const e=this._particleSystem,t=e.sharedMaterial;if(null!==t){const e=t._effectAsset._name;this._renderInfo.mainTexture=t.getProperty("mainTexture",0),-1===e.indexOf("particle-gpu")&&(this._renderInfo.mainTexture=t.getProperty("mainTexture",0),this._particleSystem.setMaterial(null,0))}null==e.sharedMaterial&&null==this._defaultMat&&(sue.parent=Jm.get("default-particle-gpu-material"),sue.owner=e,sue.subModelIdx=0,this._defaultMat=new tv(sue),sue.parent=null,sue.owner=null,sue.subModelIdx=0,null!==this._renderInfo.mainTexture&&this._defaultMat.setProperty("mainTexture",this._renderInfo.mainTexture));const n=e.getMaterialInstance(0)||this._defaultMat;e.node.getWorldMatrix(W_e),e._simulationSpace===Xre.World?this._defines.CC_USE_WORLD_SPACE=!0:this._defines.CC_USE_WORLD_SPACE=!1;const i=this._renderInfo.renderMode;i===$re.Billboard?this._defines.CC_RENDER_MODE=0:i===$re.StrecthedBillboard?(this._defines.CC_RENDER_MODE=1,this._frameTile_velLenScale.z=this._renderInfo.velocityScale,this._frameTile_velLenScale.w=this._renderInfo.lengthScale):i===$re.HorizontalBillboard?this._defines.CC_RENDER_MODE=2:i===$re.VerticalBillboard?this._defines.CC_RENDER_MODE=3:i===$re.Mesh?this._defines.CC_RENDER_MODE=4:console.warn(`particle system renderMode ${i} not support.`);const s=e._textureAnimationModule;s&&s.enable?(bi.set(this._frameTile_velLenScale,s.numTilesX,s.numTilesY),wi.copy(this._unifrom_velLenScale,this._frameTile_velLenScale)):(this._tmp_velLenScale.z=this._frameTile_velLenScale.z,this._tmp_velLenScale.w=this._frameTile_velLenScale.w,wi.copy(this._unifrom_velLenScale,this._tmp_velLenScale)),this.initShaderUniform(n),n.recompileShaders(this._defines),this._model&&this._model.updateMaterial(n)}}var oue,aue,cue,lue,hue,_ue,uue,pue,due,fue,mue,gue,vue,yue,xue,Sue,Cue,Tue,bue,Eue,Aue,Pue,wue,Iue,Rue,Due,Oue,Mue,Nue,Lue,zue,Fue,Bue,Uue;function Gue(){const e=aI.root.device;return!!(e.capabilities.maxVertexTextureUnits>=8&&e.hasFeature(Ls.TEXTURE_FLOAT))||(i.warn("Maybe the device has restrictions on vertex textures or does not support float textures."),!1)}let Hue=(oue=Zc("cc.ParticleSystemRenderer"),aue=Ol($re),cue=bl(),lue=vl(),hue=bl(),_ue=vl(),uue=bl(),pue=vl(),due=Ol($re),fue=Ol(Pk),mue=bl(),gue=vl(),vue=Ol(Ug),yue=bl(),xue=vl(),Sue=Ol(Ug),Cue=bl(),Tue=vl(),bue=bl(),Eue=vl(),Aue=Ol(Kre),Pue=bl(),wue=vl(),oue((Uue=Bue=class{constructor(){Fc(this,"_renderMode",Due,this),Fc(this,"_velocityScale",Oue,this),Fc(this,"_lengthScale",Mue,this),Fc(this,"_mesh",Nue,this),Fc(this,"_mainTexture",Lue,this),Fc(this,"_useGPU",zue,this),Fc(this,"_alignSpace",Fue,this),this._particleSystem=null}get renderMode(){return this._renderMode}set renderMode(e){this._renderMode!==e&&(this._renderMode=e,this._particleSystem&&this._particleSystem.processor.updateRenderMode())}get velocityScale(){return this._velocityScale}set velocityScale(e){this._velocityScale=e,this._particleSystem&&this._particleSystem.processor.updateMaterialParams()}get lengthScale(){return this._lengthScale}set lengthScale(e){this._lengthScale=e,this._particleSystem&&this._particleSystem.processor.updateMaterialParams()}get mesh(){return this._mesh}set mesh(e){this._mesh=e,this._particleSystem&&this._particleSystem.processor.setVertexAttributes()}get particleMaterial(){return this._particleSystem?this._particleSystem.getMaterial(0):null}set particleMaterial(e){this._particleSystem&&this._particleSystem.setMaterial(e,0)}get trailMaterial(){return this._particleSystem?this._particleSystem.getMaterial(1):null}set trailMaterial(e){this._particleSystem&&this._particleSystem.setMaterial(e,1)}get mainTexture(){return this._mainTexture}set mainTexture(e){this._mainTexture=e}get useGPU(){return this._useGPU}set useGPU(e){this._useGPU!==e&&(Gue()?this._useGPU=e:this._useGPU=!1,this._switchProcessor())}get alignSpace(){return this._alignSpace}set alignSpace(e){this._alignSpace=e,this._particleSystem.processor.updateAlignSpace(this._alignSpace)}create(e){null===this._particleSystem?this._particleSystem=e:this._particleSystem!==e&&E(6033)}onInit(e){if(this.create(e),this._particleSystem.processor)E(6034);else{const t=this._useGPU&&Gue();this._particleSystem.processor=t?new rue(this):new j_e(this),this._particleSystem.processor.updateAlignSpace(this.alignSpace),this._particleSystem.processor.onInit(e)}}_switchProcessor(){this._particleSystem&&(this._particleSystem.processor&&(this._particleSystem.processor.detachFromScene(),this._particleSystem.processor.clear(),this._particleSystem.processor=null),this._particleSystem.processor=this._useGPU?new rue(this):new j_e(this),this._particleSystem.processor.updateAlignSpace(this.alignSpace),this._particleSystem.processor.onInit(this._particleSystem),this._particleSystem.processor.onEnable(),this._particleSystem.bindModule())}},Bue.AlignmentSpace=Kre,Bc((Rue=Uue).prototype,"renderMode",[aue,cue,lue],Object.getOwnPropertyDescriptor(Rue.prototype,"renderMode"),Rue.prototype),Bc(Rue.prototype,"velocityScale",[hue,_ue],Object.getOwnPropertyDescriptor(Rue.prototype,"velocityScale"),Rue.prototype),Bc(Rue.prototype,"lengthScale",[uue,pue],Object.getOwnPropertyDescriptor(Rue.prototype,"lengthScale"),Rue.prototype),Due=Bc(Rue.prototype,"_renderMode",[due,il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return $re.Billboard}}),Oue=Bc(Rue.prototype,"_velocityScale",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),Mue=Bc(Rue.prototype,"_lengthScale",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),Nue=Bc(Rue.prototype,"_mesh",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Bc(Rue.prototype,"mesh",[fue,mue,gue],Object.getOwnPropertyDescriptor(Rue.prototype,"mesh"),Rue.prototype),Bc(Rue.prototype,"particleMaterial",[vue,yue,xue],Object.getOwnPropertyDescriptor(Rue.prototype,"particleMaterial"),Rue.prototype),Bc(Rue.prototype,"trailMaterial",[Sue,Cue,Tue],Object.getOwnPropertyDescriptor(Rue.prototype,"trailMaterial"),Rue.prototype),Lue=Bc(Rue.prototype,"_mainTexture",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),zue=Bc(Rue.prototype,"_useGPU",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Bc(Rue.prototype,"useGPU",[bue,Eue],Object.getOwnPropertyDescriptor(Rue.prototype,"useGPU"),Rue.prototype),Bc(Rue.prototype,"alignSpace",[Aue,Pue,wue],Object.getOwnPropertyDescriptor(Rue.prototype,"alignSpace"),Rue.prototype),Fue=Bc(Rue.prototype,"_alignSpace",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Kre.View}}),Iue=Rue))||Iue);var kue,Vue,jue,Wue,que,Xue,Yue,Kue,$ue,Zue,Que,Jue,epe,tpe,npe,ipe,spe,rpe,ope,ape,cpe,lpe,hpe,_pe,upe,ppe,dpe,fpe,mpe,gpe,vpe,ype,xpe,Spe,Cpe,Tpe,bpe,Epe,Ape,Ppe,wpe,Ipe,Rpe,Dpe,Ope,Mpe,Npe;const Lpe=Math.cos(Un(100)),zpe={position:new ri,velocity:new ri},Fpe=new ui,Bpe=new xi,Upe=new ri,Gpe=new ri,Hpe=new ti;class kpe{constructor(e){for(this.start=void 0,this.end=void 0,this.trailElements=void 0,this.start=-1,this.end=-1,this.trailElements=[];e--;)this.trailElements.push({position:new ri,lifetime:0,width:0,velocity:new ri,direction:0,color:new ti})}getElement(e){return-1===this.start?null:(e<0&&(e=(e+this.trailElements.length)%this.trailElements.length),e>=this.trailElements.length&&(e%=this.trailElements.length),this.trailElements[e])}addElement(){if(0===this.trailElements.length)return null;if(-1===this.start)return this.start=0,this.end=1,this.trailElements[0];this.start===this.end&&(this.trailElements.splice(this.end,0,{position:new ri,lifetime:0,width:0,velocity:new ri,direction:0,color:new ti}),this.start++,this.start%=this.trailElements.length);const e=this.end++;return this.end%=this.trailElements.length,this.trailElements[e]}iterateElement(e,t,n,i){const s=this.start>=this.end?this.end+this.trailElements.length:this.end;for(let r=this.start;r<s;r++)t(e,this.trailElements[r%this.trailElements.length],n,i)&&(this.start++,this.start%=this.trailElements.length);this.start===s&&(this.start=-1,this.end=-1)}count(){return this.start<this.end?this.end-this.start:this.trailElements.length+this.end-this.start}clear(){this.start=-1,this.end=-1}}let Vpe=(kue=Zc("cc.TrailModule"),Vue=bl(),jue=Ol(eoe),Wue=bl(),que=vl(),Xue=Ol(fse),Yue=yl(),Kue=bl(),$ue=vl(),Zue=bl(),Que=vl(),Jue=Ol(Xre),epe=bl(),tpe=vl(),npe=Ol(toe),ipe=bl(),spe=vl(),rpe=bl(),ope=vl(),ape=Ol(fse),cpe=yl(),lpe=bl(),hpe=vl(),_pe=bl(),upe=vl(),ppe=Ol(tre),dpe=bl(),fpe=vl(),mpe=Ol(tre),gpe=bl(),vpe=vl(),ype=Ol(Xre),kue((Bc((Spe=class{get enable(){return this._enable}set enable(e){e===this._enable&&this._trailModel||(e&&!this._enable&&(this._enable=e,this._particleSystem.processor&&this._particleSystem.processor.updateTrailMaterial()),e&&!this._trailModel&&(this._createModel(),this.rebuild()),this._enable=e,this._trailModel&&(this._trailModel.enabled=e),e?this.onEnable():this.onDisable())}get minParticleDistance(){return this._minParticleDistance}set minParticleDistance(e){this._minParticleDistance=e,this._minSquaredDistance=e*e}get space(){return this._space}set space(e){this._space=e;const t=this._particleSystem;t&&t.processor&&t.processor.updateTrailMaterial()}constructor(){Fc(this,"_enable",Cpe,this),Fc(this,"mode",Tpe,this),Fc(this,"lifeTime",bpe,this),Fc(this,"_minParticleDistance",Epe,this),Fc(this,"existWithParticles",Ape,this),Fc(this,"textureMode",Ppe,this),Fc(this,"widthFromParticle",wpe,this),Fc(this,"widthRatio",Ipe,this),Fc(this,"colorFromParticle",Rpe,this),Fc(this,"colorOverTrail",Dpe,this),Fc(this,"colorOvertime",Ope,this),Fc(this,"_space",Mpe,this),Fc(this,"_particleSystem",Npe,this),this._minSquaredDistance=0,this._vertSize=void 0,this._trailNum=0,this._trailLifetime=0,this.vbOffset=0,this.ibOffset=0,this._trailSegments=null,this._particleTrail=void 0,this._trailModel=null,this._iaInfo=void 0,this._iaInfoBuffer=null,this._subMeshData=null,this._vertAttrs=void 0,this._vbF32=null,this._vbUint32=null,this._iBuffer=null,this._needTransform=!1,this._material=null,this._iaInfo=new Ur([new Fr]),this._vertAttrs=[new Qr(yr.ATTR_POSITION,zs.RGB32F),new Qr(yr.ATTR_TEX_COORD,zs.RGBA32F),new Qr(yr.ATTR_TEX_COORD1,zs.RGB32F),new Qr(yr.ATTR_COLOR,zs.RGBA8,!0)],this._vertSize=0;for(const e of this._vertAttrs)this._vertSize+=To[e.format].size;this._particleTrail=new Map}onInit(e){this._particleSystem=e,this.minParticleDistance=this._minParticleDistance;let t=0;const n=e.startLifetime.getMax(),i=e.rateOverTime.getMax(),s=e.duration;for(let i=0,r=e.bursts.length;i<r;i++)t+=e.bursts[i].getMaxCount(e)*Math.ceil(n/s);this._trailNum=Math.ceil(n*this.lifeTime.getMax()*60*(i*s+t)),this._trailSegments=new Ie((()=>new kpe(10)),Math.ceil(i*s),(e=>e.trailElements.length=0)),this._enable&&(this.enable=this._enable)}onEnable(){this._attachToScene()}onDisable(){this._particleTrail.clear(),this._detachFromScene()}_attachToScene(){this._trailModel&&(this._trailModel.scene&&this._detachFromScene(),this._particleSystem._getRenderScene().addModel(this._trailModel))}_detachFromScene(){this._trailModel&&this._trailModel.scene&&this._trailModel.scene.removeModel(this._trailModel)}destroy(){this.destroySubMeshData(),this._trailModel&&(aI.root.destroyModel(this._trailModel),this._trailModel=null),this._trailSegments&&(this._trailSegments.destroy(),this._trailSegments=null)}play(){this._trailModel&&this._enable&&(this._trailModel.enabled=!0)}clear(){if(this.enable){const e=this._particleTrail.values();let t=e.next();for(;!t.done;)t.value.clear(),t=e.next();this._particleTrail.clear(),this.updateRenderData(),this._trailModel&&(this._trailModel.enabled=!1)}}updateMaterial(){this._particleSystem&&(this._material=this._particleSystem.getMaterialInstance(1)||this._particleSystem.processor._defaultTrailMat,this._trailModel&&this._trailModel.setSubModelMaterial(0,this._material))}update(){this._trailLifetime=this.lifeTime.evaluate(this._particleSystem._time,1),this.space===Xre.World&&this._particleSystem._simulationSpace===Xre.Local?(this._needTransform=!0,this._particleSystem.node.getWorldMatrix(Bpe),this._particleSystem.node.getWorldRotation(Fpe)):this._needTransform=!1}animate(e,t){if(!this._trailSegments)return;if(e.loopCount>e.lastLoop)return void(e.trailDelay>1?(e.lastLoop=e.loopCount,e.trailDelay=0):e.trailDelay++);let n=this._particleTrail.get(e);if(!n)return n=this._trailSegments.alloc(),void this._particleTrail.set(e,n);let i=n.getElement(n.end-1);if(this._needTransform?ri.transformMat4(Upe,e.position,Bpe):ri.copy(Upe,e.position),i&&(n.iterateElement(this,this._updateTrailElement,e,t),ri.squaredDistance(i.position,Upe)<this._minSquaredDistance))return;if(i=n.addElement(),!i)return;ri.copy(i.position,Upe),i.lifetime=0,this.widthFromParticle?i.width=e.size.x*this.widthRatio.evaluate(0,1):i.width=this.widthRatio.evaluate(0,1);const s=n.count();if(2===s){const e=n.getElement(n.end-2);ri.subtract(e.velocity,i.position,e.position)}else if(s>2){const e=n.getElement(n.end-2),t=n.getElement(n.end-3);ri.subtract(Upe,t.position,e.position),ri.subtract(Gpe,i.position,e.position),ri.subtract(e.velocity,Gpe,Upe),ri.equals(ri.ZERO,e.velocity)&&ri.copy(e.velocity,Upe),ri.normalize(e.velocity,e.velocity),this._checkDirectionReverse(e,t)}this.colorFromParticle?i.color.set(e.color):i.color.set(this.colorOvertime.evaluate(0,1))}removeParticle(e){const t=this._particleTrail.get(e);t&&this._trailSegments&&(t.clear(),this._trailSegments.free(t),this._particleTrail.delete(e))}updateRenderData(){this.vbOffset=0,this.ibOffset=0;for(const e of this._particleTrail.keys()){const t=this._particleTrail.get(e);if(-1===t.start)continue;const n=4*this.vbOffset/this._vertSize,i=t.start>=t.end?t.end+t.trailElements.length:t.end,s=i-t.start,r=1/s,o=t.trailElements[t.start];this._fillVertexBuffer(o,this.colorOverTrail.evaluate(1,1),n,1,0,4);for(let e=t.start+1;e<i;e++){const i=t.trailElements[e%t.trailElements.length],o=e-t.start;this._fillVertexBuffer(i,this.colorOverTrail.evaluate(1-o/s,1),n,1-o*r,o,5)}this._needTransform?ri.transformMat4(zpe.position,e.position,Bpe):ri.copy(zpe.position,e.position);const a=this._trailModel;if(a&&a.node.invalidateChildren(gg.POSITION),1===s||2===s){const e=t.getElement(t.end-1);ri.subtract(e.velocity,zpe.position,e.position),this._vbF32[this.vbOffset-this._vertSize/4-4]=e.velocity.x,this._vbF32[this.vbOffset-this._vertSize/4-3]=e.velocity.y,this._vbF32[this.vbOffset-this._vertSize/4-2]=e.velocity.z,this._vbF32[this.vbOffset-4]=e.velocity.x,this._vbF32[this.vbOffset-3]=e.velocity.y,this._vbF32[this.vbOffset-2]=e.velocity.z,ri.subtract(zpe.velocity,zpe.position,e.position),this._checkDirectionReverse(zpe,e)}else if(s>2){const e=t.getElement(t.end-1),i=t.getElement(t.end-2);ri.subtract(Upe,i.position,e.position),ri.subtract(Gpe,zpe.position,e.position),ri.normalize(Upe,Upe),ri.normalize(Gpe,Gpe),ri.subtract(e.velocity,Gpe,Upe),ri.normalize(e.velocity,e.velocity),this._checkDirectionReverse(e,i),this.vbOffset-=this._vertSize/4*2,this.ibOffset-=6,this._fillVertexBuffer(e,this.colorOverTrail.evaluate(r,1),n,r,s-1,5),ri.subtract(zpe.velocity,zpe.position,e.position),ri.normalize(zpe.velocity,zpe.velocity),this._checkDirectionReverse(zpe,e)}this.widthFromParticle?zpe.width=e.size.x*this.widthRatio.evaluate(0,1):zpe.width=this.widthRatio.evaluate(0,1),zpe.color=e.color,ri.equals(zpe.velocity,ri.ZERO)?this.ibOffset-=3:this._fillVertexBuffer(zpe,this.colorOverTrail.evaluate(0,1),n,0,s,1)}this._trailModel.enabled=this.ibOffset>0}updateIA(e){const t=this._trailModel&&this._trailModel.subModels;if(t&&t.length>0){const n=t[0];n.inputAssembler.vertexBuffers[0].update(this._vbF32),n.inputAssembler.indexBuffer.update(this._iBuffer),this._iaInfo.drawInfos[0].firstIndex=0,this._iaInfo.drawInfos[0].indexCount=e,this._iaInfoBuffer.update(this._iaInfo)}}beforeRender(){this.updateIA(this.ibOffset)}_createModel(){this._trailModel||(this._trailModel=i.director.root.createModel(fg))}rebuild(){const e=aI.root.device,t=e.createBuffer(new Lr(Us.VERTEX|Us.TRANSFER_DST,ks.HOST|ks.DEVICE,this._vertSize*(this._trailNum+1)*2,this._vertSize)),n=new ArrayBuffer(this._vertSize*(this._trailNum+1)*2);this._vbF32=new Float32Array(n),this._vbUint32=new Uint32Array(n),t.update(n);const i=e.createBuffer(new Lr(Us.INDEX|Us.TRANSFER_DST,ks.HOST|ks.DEVICE,6*Math.max(1,this._trailNum)*Uint16Array.BYTES_PER_ELEMENT,Uint16Array.BYTES_PER_ELEMENT));this._iBuffer=new Uint16Array(6*Math.max(1,this._trailNum)),i.update(this._iBuffer),this._iaInfoBuffer=e.createBuffer(new Lr(Us.INDIRECT,ks.HOST|ks.DEVICE,Po,Po)),this._iaInfo.drawInfos[0].vertexCount=2*(this._trailNum+1),this._iaInfo.drawInfos[0].indexCount=6*this._trailNum,this._iaInfoBuffer.update(this._iaInfo),this._subMeshData=new sT([t],this._vertAttrs,cr.TRIANGLE_LIST,i,this._iaInfoBuffer);const s=this._trailModel;s&&(s.node=s.transform=this._particleSystem.node,s.visFlags=this._particleSystem.visibility,s.initSubModel(0,this._subMeshData,this._material),s.enabled=!0)}_updateTrailElement(e,t,n,i){return t.lifetime+=i,e.colorFromParticle?(t.color.set(n.color),t.color.multiply(e.colorOvertime.evaluate(1-n.remainingLifetime/n.startLifetime,1))):t.color.set(e.colorOvertime.evaluate(1-n.remainingLifetime/n.startLifetime,1)),e.widthFromParticle?t.width=n.size.x*e.widthRatio.evaluate(t.lifetime/e._trailLifetime,1):t.width=e.widthRatio.evaluate(t.lifetime/e._trailLifetime,1),t.lifetime>e._trailLifetime}_fillVertexBuffer(e,t,n,i,s,r){this._vbF32[this.vbOffset++]=e.position.x,this._vbF32[this.vbOffset++]=e.position.y,this._vbF32[this.vbOffset++]=e.position.z,this._vbF32[this.vbOffset++]=e.direction,this._vbF32[this.vbOffset++]=e.width,this._vbF32[this.vbOffset++]=i,this._vbF32[this.vbOffset++]=0,this._vbF32[this.vbOffset++]=e.velocity.x,this._vbF32[this.vbOffset++]=e.velocity.y,this._vbF32[this.vbOffset++]=e.velocity.z,Hpe.set(e.color),Hpe.multiply(t),this._vbUint32[this.vbOffset++]=Hpe._val,this._vbF32[this.vbOffset++]=e.position.x,this._vbF32[this.vbOffset++]=e.position.y,this._vbF32[this.vbOffset++]=e.position.z,this._vbF32[this.vbOffset++]=1-e.direction,this._vbF32[this.vbOffset++]=e.width,this._vbF32[this.vbOffset++]=i,this._vbF32[this.vbOffset++]=1,this._vbF32[this.vbOffset++]=e.velocity.x,this._vbF32[this.vbOffset++]=e.velocity.y,this._vbF32[this.vbOffset++]=e.velocity.z,this._vbUint32[this.vbOffset++]=Hpe._val,1&r&&(this._iBuffer[this.ibOffset++]=n+2*s,this._iBuffer[this.ibOffset++]=n+2*s-1,this._iBuffer[this.ibOffset++]=n+2*s+1),4&r&&(this._iBuffer[this.ibOffset++]=n+2*s,this._iBuffer[this.ibOffset++]=n+2*s+1,this._iBuffer[this.ibOffset++]=n+2*s+2)}_checkDirectionReverse(e,t){ri.dot(e.velocity,t.velocity)<Lpe?e.direction=1-t.direction:e.direction=t.direction}destroySubMeshData(){this._subMeshData&&(this._subMeshData.destroy(),this._subMeshData=null)}}).prototype,"enable",[Vue],Object.getOwnPropertyDescriptor(Spe.prototype,"enable"),Spe.prototype),Cpe=Bc(Spe.prototype,"_enable",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Tpe=Bc(Spe.prototype,"mode",[jue,il,Wue,que],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return eoe.Particles}}),bpe=Bc(Spe.prototype,"lifeTime",[Xue,il,Yue,Kue,$ue],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new fse}}),Epe=Bc(Spe.prototype,"_minParticleDistance",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.1}}),Bc(Spe.prototype,"minParticleDistance",[Zue,Que],Object.getOwnPropertyDescriptor(Spe.prototype,"minParticleDistance"),Spe.prototype),Bc(Spe.prototype,"space",[Jue,epe,tpe],Object.getOwnPropertyDescriptor(Spe.prototype,"space"),Spe.prototype),Ape=Bc(Spe.prototype,"existWithParticles",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),Ppe=Bc(Spe.prototype,"textureMode",[npe,il,ipe,spe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return toe.Stretch}}),wpe=Bc(Spe.prototype,"widthFromParticle",[il,rpe,ope],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),Ipe=Bc(Spe.prototype,"widthRatio",[ape,il,cpe,lpe,hpe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new fse}}),Rpe=Bc(Spe.prototype,"colorFromParticle",[il,_pe,upe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Dpe=Bc(Spe.prototype,"colorOverTrail",[ppe,il,dpe,fpe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new tre}}),Ope=Bc(Spe.prototype,"colorOvertime",[mpe,il,gpe,vpe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new tre}}),Mpe=Bc(Spe.prototype,"_space",[ype],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Xre.World}}),Npe=Bc(Spe.prototype,"_particleSystem",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),xpe=Spe))||xpe);const jpe=new xi,Wpe=new ui,qpe=new ri,Xpe=["_colorOverLifetimeModule","_sizeOvertimeModule","_velocityOvertimeModule","_forceOvertimeModule","_limitVelocityOvertimeModule","_rotationOvertimeModule","_textureAnimationModule"];class Ype{constructor(e){this._particleSystem=void 0,this._processor=void 0,this._node=void 0,this._particlesAll=void 0,this._updateList=new Map,this._animateList=new Map,this._runAnimateList=new Array,this._localMat=new xi,this._gravity=new wi,this.minPos=new ri,this.maxPos=new ri,this._nodePos=new ri,this._nodeSize=new ri,this._particleSystem=e,this._processor=this._particleSystem.processor,this._node=e.node,this._particlesAll=[],this._initModuleList()}_updateBoundingNode(){this._nodeSize.set(this.maxPos.x-this.minPos.x,this.maxPos.y-this.minPos.y,this.maxPos.z-this.minPos.z),this._nodePos.set(this.minPos.x+.5*this._nodeSize.x,this.minPos.y+.5*this._nodeSize.y,this.minPos.z+.5*this._nodeSize.z)}setBoundingBoxSize(e){this.maxPos.x=this._nodePos.x+e.x,this.maxPos.y=this._nodePos.y+e.y,this.maxPos.z=this._nodePos.z+e.z,this.minPos.x=this._nodePos.x-e.x,this.minPos.y=this._nodePos.y-e.y,this.minPos.z=this._nodePos.z-e.z,this._updateBoundingNode()}setBoundingBoxCenter(e,t,n){this.maxPos.x=e+.5*this._nodeSize.x,this.maxPos.y=t+.5*this._nodeSize.y,this.maxPos.z=n+.5*this._nodeSize.z,this.minPos.x=e-.5*this._nodeSize.x,this.minPos.y=t-.5*this._nodeSize.y,this.minPos.z=n-.5*this._nodeSize.z,this._updateBoundingNode()}_initModuleList(){Xpe.forEach((e=>{const t=this._particleSystem[e];t&&t.enable&&(t.needUpdate&&(this._updateList[t.name]=t),t.needAnimate&&(this._animateList[t.name]=t))})),this._runAnimateList.length=0;for(let e=0,t=jre.length;e<t;e++){const t=this._animateList[jre[e]];t&&this._runAnimateList.push(t)}}_emit(e,t,n){const i=this._particleSystem,s=this._node,r=i.time%i.duration/i.duration;s.invalidateChildren(gg.POSITION),i.simulationSpace===Xre.World&&(s.getWorldMatrix(jpe),s.getWorldRotation(Wpe));for(let s=0;s<e;++s){const e=new Vre(i);e.particleSystem=i,e.reset();const s=jn(Vn(0,fn));i._shapeModule&&i._shapeModule.enable?i._shapeModule.emit(e):(ri.set(e.position,0,0,0),ri.copy(e.velocity,_oe)),i._textureAnimationModule&&i._textureAnimationModule.enable&&i._textureAnimationModule.init(e);const o=i.startSpeed.evaluate(r,s);ri.multiplyScalar(e.velocity,e.velocity,o),i.simulationSpace===Xre.World&&(ri.transformMat4(e.position,e.position,jpe),ri.transformQuat(e.velocity,e.velocity,Wpe)),ri.copy(e.ultimateVelocity,e.velocity),ri.set(e.rotation,0,0,0),i.startSize3D?ri.set(e.startSize,i.startSizeX.evaluate(r,s),i.startSizeY.evaluate(r,s),i.startSizeZ.evaluate(r,s)):(ri.set(e.startSize,i.startSizeX.evaluate(r,s),1,1),e.startSize.y=e.startSize.x),ri.copy(e.size,e.startSize),e.startLifetime=i.startLifetime.evaluate(r,s)+t,e.remainingLifetime=e.startLifetime,n.push(e)}}_updateParticles(e,t){const n=this._particleSystem;switch(n.node.getWorldMatrix(jpe),n.scaleSpace){case Xre.Local:n.node.getScale(qpe);break;case Xre.World:n.node.getWorldScale(qpe)}if(this._updateList.forEach((e=>{e.update(n.simulationSpace,jpe)})),n.simulationSpace===Xre.Local){const e=n.node.getRotation();xi.fromQuat(this._localMat,e),this._localMat.transpose()}for(let i=0;i<t.length;++i){const s=t[i];if(s.remainingLifetime-=e,ri.set(s.animatedVelocity,0,0,0),n.simulationSpace===Xre.Local){const t=9.8*-n.gravityModifier.evaluate(1-s.remainingLifetime/s.startLifetime,jn(s.randomSeed))*e;this._gravity.x=0,this._gravity.y=t,this._gravity.z=0,this._gravity.w=1,this._gravity=this._gravity.transformMat4(this._localMat),s.velocity.x+=this._gravity.x,s.velocity.y+=this._gravity.y,s.velocity.z+=this._gravity.z}else s.velocity.y-=9.8*n.gravityModifier.evaluate(1-s.remainingLifetime/s.startLifetime,jn(s.randomSeed))*e;ri.copy(s.ultimateVelocity,s.velocity),this._runAnimateList.forEach((t=>{t.animate(s,e)})),ri.scaleAndAdd(s.position,s.position,s.ultimateVelocity,e)}}_calculateBounding(e){const t=new ri,n=new ri,i=new ri,s=new ri,r=new ri(1,1,1);if(this._processor.getInfo().renderMode===$re.Mesh){const e=this._processor.getInfo().mesh;if(e&&e.struct.minPosition&&e.struct.maxPosition){const t=new Ac;Ac.fromPoints(t,e.struct.minPosition,e.struct.maxPosition);const n=Math.max(t.halfExtents.x,t.halfExtents.y,t.halfExtents.z);r.set(n,n,n)}}for(let o=0;o<this._particlesAll.length;++o){const a=this._particlesAll[o];ri.multiply(t,qpe,a.size),ri.multiply(t,t,r),n.set(a.position),this._particleSystem.simulationSpace!==Xre.World&&ri.transformMat4(n,n,this._particleSystem.node._mat),e&&0===o?(ri.subtract(this.minPos,n,t),ri.add(this.maxPos,n,t)):(ri.subtract(i,n,t),ri.add(s,n,t),ri.min(this.minPos,this.minPos,i),ri.max(this.maxPos,this.maxPos,s))}}calculatePositions(){this._emit(this._particleSystem.capacity,0,this._particlesAll);const e=jn(Vn(0,fn));this._updateParticles(0,this._particlesAll),this._calculateBounding(!0),this._updateParticles(this._particleSystem.startLifetime.evaluate(0,e),this._particlesAll),this._calculateBounding(!1),this._updateBoundingNode()}clear(){this._particlesAll.length=0}destroy(){}}var Kpe,$pe,Zpe,Qpe,Jpe,ede,tde,nde,ide,sde,rde,ode,ade,cde,lde,hde,_de,ude,pde,dde,fde,mde,gde,vde,yde,xde,Sde,Cde,Tde,bde,Ede,Ade,Pde,wde,Ide,Rde,Dde,Ode,Mde,Nde,Lde,zde,Fde,Bde,Ude,Gde,Hde,kde,Vde,jde,Wde,qde,Xde,Yde,Kde,$de,Zde,Qde,Jde,efe,tfe,nfe,ife,sfe,rfe,ofe,afe,cfe,lfe,hfe,_fe,ufe,pfe,dfe,ffe,mfe,gfe,vfe,yfe,xfe,Sfe,Cfe,Tfe,bfe,Efe,Afe,Pfe,wfe,Ife,Rfe,Dfe,Ofe,Mfe,Nfe,Lfe,zfe,Ffe,Bfe,Ufe,Gfe,Hfe,kfe,Vfe,jfe,Wfe,qfe,Xfe,Yfe,Kfe,$fe,Zfe,Qfe,Jfe,eme,tme,nme,ime,sme,rme,ome,ame,cme,lme,hme,_me,ume,pme,dme,fme,mme,gme,vme,yme,xme,Sme,Cme,Tme,bme,Eme,Ame,Pme,wme,Ime,Rme,Dme,Ome,Mme,Nme,Lme,zme,Fme,Bme,Ume,Gme,Hme,kme,Vme,jme,Wme,qme,Xme,Yme,Kme,$me,Zme,Qme,Jme,ege,tge,nge,ige,sge,rge,oge,age,cge,lge,hge,_ge,uge,pge,dge,fge,mge,gge,vge,yge;const xge=new xi,Sge=new ui,Cge=Object.getOwnPropertyDescriptor(xO.prototype,"sharedMaterials");let Tge=function(t){return e({ParticleSystem:t,ParticleSystemComponent:t}),t}((Kpe=Zc("cc.ParticleSystem"),$pe=pl(),Zpe=ll(),Qpe=Jc(99),Jpe=yl(),ede=bl(),tde=vl(),nde=Ol(tre),ide=bl(),sde=vl(),rde=Ol(Xre),ode=bl(),ade=vl(),cde=bl(),lde=vl(),hde=sl("startSize"),_de=yl(),ude=Ol(fse),pde=bl(),dde=vl(),fde=Ol(fse),mde=yl(),gde=bl(),vde=vl(),yde=Ol(fse),xde=yl(),Sde=bl(),Cde=vl(),Tde=Ol(fse),bde=yl(),Ede=bl(),Ade=vl(),Pde=bl(),wde=vl(),Ide=Ol(fse),Rde=yl(),Dde=bl(),Ode=vl(),Mde=Ol(fse),Nde=yl(),Lde=bl(),zde=vl(),Fde=Ol(fse),Bde=sl("startRotation"),Ude=yl(),Gde=bl(),Hde=vl(),kde=Ol(fse),Vde=yl(),jde=bl(),Wde=vl(),qde=Ol(fse),Xde=yl(),Yde=bl(),Kde=vl(),$de=bl(),Zde=vl(),Qde=bl(),Jde=vl(),efe=bl(),tfe=vl(),nfe=Ol(Xre),ife=bl(),sfe=vl(),rfe=bl(),ofe=vl(),afe=bl(),cfe=vl(),lfe=Ol(fse),hfe=yl(),_fe=bl(),ufe=vl(),pfe=Ol(fse),dfe=yl(),ffe=bl(),mfe=vl(),gfe=Ol(fse),vfe=yl(),yfe=bl(),xfe=vl(),Sfe=Ol([uhe]),Cfe=bl(),Tfe=vl(),bfe=Ol(Boolean),Efe=bl(),Afe=vl(),Pfe=Ol(Yre),wfe=bl(),Ife=vl(),Rfe=Ol(Number),Dfe=bl(),Ofe=vl(),Mfe=Ol(Number),Nfe=bl(),Lfe=vl(),zfe=Ol(Number),Ffe=bl(),Bfe=vl(),Ufe=bl(),Gfe=vl(),Hfe=sl("enableCulling"),kfe=fl(),Vfe=Ol(Ug),jfe=gl(),Wfe=Ol(hoe),qfe=Ol(hoe),Xfe=bl(),Yfe=vl(),Kfe=Ol(R_e),$fe=Ol(R_e),Zfe=bl(),Qfe=vl(),Jfe=Ol(Rce),eme=Ol(Rce),tme=bl(),nme=vl(),ime=Ol(nhe),sme=Ol(nhe),rme=bl(),ome=vl(),ame=Ol(Woe),cme=Ol(Woe),lme=bl(),hme=vl(),_me=Ol(Rae),ume=Ol(Rae),pme=bl(),dme=vl(),fme=Ol(tce),mme=Ol(tce),gme=bl(),vme=vl(),yme=Ol(ble),xme=Ol(ble),Sme=bl(),Cme=vl(),Tme=Ol(Vpe),bme=Ol(Vpe),Eme=bl(),Ame=vl(),Pme=Ol(Hue),wme=bl(),Ime=vl(),Kpe(Rme=$pe(Rme=Zpe(Rme=Qpe(Rme=cl((yge=vge=class extends xO{get capacity(){return this._capacity}set capacity(e){this._capacity=Math.floor(e>0?e:0),this.processor&&this.processor._model&&this.processor._model.setCapacity(this._capacity)}get prewarm(){return this._prewarm}set prewarm(e){!0===e&&this.loop,this._prewarm=e}get simulationSpace(){return this._simulationSpace}set simulationSpace(e){e!==this._simulationSpace&&(this._simulationSpace=e,this.processor&&(this.processor.updateMaterialParams(),this.processor.updateTrailMaterial()))}set renderCulling(e){this._renderCulling=e,e&&(this._boundingBox||(this._boundingBox=new Ac,this._calculateBounding(!1)))}get renderCulling(){return this._renderCulling}get cullingMode(){return this._cullingMode}set cullingMode(e){this._cullingMode=e}get aabbHalfX(){return this.getBoundingX()||0}set aabbHalfX(e){this.setBoundingX(e)}get aabbHalfY(){return this.getBoundingY()||0}set aabbHalfY(e){this.setBoundingY(e)}get aabbHalfZ(){return this.getBoundingZ()||0}set aabbHalfZ(e){this.setBoundingZ(e)}get dataCulling(){return this._dataCulling}set dataCulling(e){this._dataCulling=e}get sharedMaterials(){return Cge.get.call(this)}set sharedMaterials(e){Cge.set.call(this,e)}get colorOverLifetimeModule(){return this._colorOverLifetimeModule}set colorOverLifetimeModule(e){e&&(this._colorOverLifetimeModule=e)}get shapeModule(){return this._shapeModule}set shapeModule(e){e&&(this._shapeModule=e)}get sizeOvertimeModule(){return this._sizeOvertimeModule}set sizeOvertimeModule(e){e&&(this._sizeOvertimeModule=e)}get velocityOvertimeModule(){return this._velocityOvertimeModule}set velocityOvertimeModule(e){e&&(this._velocityOvertimeModule=e)}get forceOvertimeModule(){return this._forceOvertimeModule}set forceOvertimeModule(e){e&&(this._forceOvertimeModule=e)}get limitVelocityOvertimeModule(){return this._limitVelocityOvertimeModule}set limitVelocityOvertimeModule(e){e&&(this._limitVelocityOvertimeModule=e)}get rotationOvertimeModule(){return this._rotationOvertimeModule}set rotationOvertimeModule(e){e&&(this._rotationOvertimeModule=e)}get textureAnimationModule(){return this._textureAnimationModule}set textureAnimationModule(e){e&&(this._textureAnimationModule=e)}get trailModule(){return this._trailModule}set trailModule(e){e&&(this._trailModule=e)}constructor(){super(),Fc(this,"startColor",Ome,this),Fc(this,"scaleSpace",Mme,this),Fc(this,"startSize3D",Nme,this),Fc(this,"startSizeX",Lme,this),Fc(this,"startSizeY",zme,this),Fc(this,"startSizeZ",Fme,this),Fc(this,"startSpeed",Bme,this),Fc(this,"startRotation3D",Ume,this),Fc(this,"startRotationX",Gme,this),Fc(this,"startRotationY",Hme,this),Fc(this,"startRotationZ",kme,this),Fc(this,"startDelay",Vme,this),Fc(this,"startLifetime",jme,this),Fc(this,"duration",Wme,this),Fc(this,"loop",qme,this),Fc(this,"simulationSpeed",Xme,this),Fc(this,"playOnAwake",Yme,this),Fc(this,"gravityModifier",Kme,this),Fc(this,"rateOverTime",$me,this),Fc(this,"rateOverDistance",Zme,this),Fc(this,"bursts",Qme,this),Fc(this,"_renderCulling",Jme,this),Fc(this,"_cullingMode",ege,this),Fc(this,"_aabbHalfX",tge,this),Fc(this,"_aabbHalfY",nge,this),Fc(this,"_aabbHalfZ",ige,this),Fc(this,"_dataCulling",sge,this),Fc(this,"_colorOverLifetimeModule",rge,this),Fc(this,"_shapeModule",oge,this),Fc(this,"_sizeOvertimeModule",age,this),Fc(this,"_velocityOvertimeModule",cge,this),Fc(this,"_forceOvertimeModule",lge,this),Fc(this,"_limitVelocityOvertimeModule",hge,this),Fc(this,"_rotationOvertimeModule",_ge,this),Fc(this,"_textureAnimationModule",uge,this),Fc(this,"_trailModule",pge,this),Fc(this,"renderer",dge,this),this._isPlaying=void 0,this._isPaused=void 0,this._isStopped=void 0,this._isEmitting=void 0,this._needRefresh=void 0,this._time=void 0,this._emitRateTimeCounter=void 0,this._emitRateDistanceCounter=void 0,this._oldWPos=void 0,this._curWPos=void 0,this._boundingBox=void 0,this._culler=void 0,this._oldPos=void 0,this._curPos=void 0,this._isCulled=void 0,this._isSimulating=void 0,this._customData1=void 0,this._customData2=void 0,this._subEmitters=void 0,Fc(this,"_prewarm",fge,this),Fc(this,"_capacity",mge,this),Fc(this,"_simulationSpace",gge,this),this.processor=null,this.rateOverTime.constant=10,this.startLifetime.constant=5,this.startSizeX.constant=1,this.startSpeed.constant=5,this._isPlaying=!1,this._isPaused=!1,this._isStopped=!0,this._isEmitting=!1,this._needRefresh=!0,this._time=0,this._emitRateTimeCounter=0,this._emitRateDistanceCounter=0,this._oldWPos=new ri,this._curWPos=new ri,this._boundingBox=null,this._culler=null,this._oldPos=null,this._curPos=null,this._isCulled=!1,this._isSimulating=!0,this._customData1=new bi,this._customData2=new bi,this._subEmitters=[]}onFocusInEditor(){this.renderer.create(this)}onLoad(){this.renderer.onInit(this),this._shapeModule&&this._shapeModule.onInit(this),this._trailModule&&this._trailModule.onInit(this),this.bindModule(),this._resetPosition()}_onMaterialModified(e,t){null!==this.processor&&this.processor.onMaterialModified(e,t)}_onRebuildPSO(e,t){this.processor.onRebuildPSO(e,t)}_collectModels(){return this._models.length=0,this._models.push(this.processor._model),this._trailModule&&this._trailModule.enable&&this._trailModule._trailModel&&this._models.push(this._trailModule._trailModel),this._models}_attachToScene(){this.processor.attachToScene(),this._trailModule&&this._trailModule.enable&&this._trailModule._attachToScene()}_detachFromScene(){this.processor.detachFromScene(),this._trailModule&&this._trailModule.enable&&this._trailModule._detachFromScene(),this._boundingBox&&(this._boundingBox=null),this._culler&&(this._culler.clear(),this._culler.destroy(),this._culler=null)}bindModule(){this._colorOverLifetimeModule&&this._colorOverLifetimeModule.bindTarget(this.processor),this._sizeOvertimeModule&&this._sizeOvertimeModule.bindTarget(this.processor),this._rotationOvertimeModule&&this._rotationOvertimeModule.bindTarget(this.processor),this._forceOvertimeModule&&this._forceOvertimeModule.bindTarget(this.processor),this._limitVelocityOvertimeModule&&this._limitVelocityOvertimeModule.bindTarget(this.processor),this._velocityOvertimeModule&&this._velocityOvertimeModule.bindTarget(this.processor),this._textureAnimationModule&&this._textureAnimationModule.bindTarget(this.processor)}play(){if(this._isPaused&&(this._isPaused=!1),this._isStopped&&(this._isStopped=!1),this._isPlaying=!0,this._isEmitting=!0,this._resetPosition(),this._prewarm&&this._prewarmSystem(),this._trailModule&&this._trailModule.play(),this.processor){const e=this.processor.getModel();e&&(e.enabled=this.enabledInHierarchy)}}pause(){this._isStopped?console.warn("pause(): particle system is already stopped."):(this._isPlaying&&(this._isPlaying=!1),this._isPaused=!0)}stop(){(this._isPlaying||this._isPaused)&&this.clear(),this._isPlaying&&(this._isPlaying=!1),this._isPaused&&(this._isPaused=!1),this._time=0,this._emitRateTimeCounter=0,this._emitRateDistanceCounter=0,this._isStopped=!0,this._needRefresh=!0;for(const e of this.bursts)e.reset()}clear(){this.enabledInHierarchy&&(this.processor.clear(),this._trailModule&&this._trailModule.clear()),this._calculateBounding(!1)}getParticleCount(){return this.processor.getParticleCount()}setCustomData1(e,t){bi.set(this._customData1,e,t)}setCustomData2(e,t){bi.set(this._customData2,e,t)}onDestroy(){i.director.off(i.Director.EVENT_BEFORE_COMMIT,this.beforeRender,this),this.processor.onDestroy(),this._trailModule&&this._trailModule.destroy(),this._culler&&(this._culler.clear(),this._culler.destroy(),this._culler=null)}onEnable(){i.director.on(i.Director.EVENT_BEFORE_COMMIT,this.beforeRender,this),this.playOnAwake&&this.play(),this.processor.onEnable(),this._trailModule&&this._trailModule.onEnable()}onDisable(){i.director.off(i.Director.EVENT_BEFORE_COMMIT,this.beforeRender,this),this.processor.onDisable(),this._trailModule&&this._trailModule.onDisable(),this._boundingBox&&(this._boundingBox=null),this._culler&&(this._culler.clear(),this._culler.destroy(),this._culler=null)}_calculateBounding(e){this._boundingBox&&(this._culler||(this._culler=new Ype(this)),this._culler.calculatePositions(),Ac.fromPoints(this._boundingBox,this._culler.minPos,this._culler.maxPos),e?(this.aabbHalfX=this._boundingBox.halfExtents.x,this.aabbHalfY=this._boundingBox.halfExtents.y,this.aabbHalfZ=this._boundingBox.halfExtents.z):(this.aabbHalfX?this.setBoundingX(this.aabbHalfX):this.aabbHalfX=this._boundingBox.halfExtents.x,this.aabbHalfY?this.setBoundingY(this.aabbHalfY):this.aabbHalfY=this._boundingBox.halfExtents.y,this.aabbHalfZ?this.setBoundingZ(this.aabbHalfZ):this.aabbHalfZ=this._boundingBox.halfExtents.z),this._culler.clear())}update(e){const t=e*this.simulationSpeed;if(this.renderCulling){var n;if(this._boundingBox||(this._boundingBox=new Ac,this._calculateBounding(!1)),this._curPos||(this._curPos=new ri),this.node.getWorldPosition(this._curPos),this._oldPos||(this._oldPos=new ri,this._oldPos.set(this._curPos)),!this._curPos.equals(this._oldPos)&&this._boundingBox&&this._culler){const e=this._curPos.x-this._oldPos.x,t=this._curPos.y-this._oldPos.y,n=this._curPos.z-this._oldPos.z,i=this._boundingBox.center;i.x+=e,i.y+=t,i.z+=n,this._culler.setBoundingBoxCenter(i.x,i.y,i.z),this._oldPos.set(this._curPos)}const e=null===(n=this.node.scene.renderScene)||void 0===n?void 0:n.cameras;let i=!0;if(void 0!==e&&this._boundingBox)for(let t=0;t<e.length;++t){const n=e[t];if((n.visibility&this.node.layer)===this.node.layer&&Qa.aabbFrustum(this._boundingBox,n.frustum)){i=!1;break}}if(i){if(this._cullingMode!==Yre.AlwaysSimulate&&(this._isSimulating=!1),this._isCulled||(this.processor.detachFromScene(),this._isCulled=!0),this._trailModule&&this._trailModule.enable&&this._trailModule._detachFromScene(),this._cullingMode===Yre.PauseAndCatchup&&(this._time+=t),this._cullingMode!==Yre.AlwaysSimulate)return}else this._isCulled&&(this._attachToScene(),this._isCulled=!1),this._isSimulating||(this._isSimulating=!0);if(!this._isSimulating)return}else this._boundingBox&&(this._boundingBox=null),this._culler&&(this._culler.clear(),this._culler.destroy(),this._culler=null),this._isSimulating=!0;if(this._isPlaying)this._time+=t,this._emit(t),0!==this.processor.updateParticles(t)||this._isEmitting||this.stop();else{const e=(this.getMaterialInstance(0)||this.processor.getDefaultMaterial()).passes[0];this.processor.updateRotation(e),this.processor.updateScale(e)}this.processor.updateRenderData(),this._trailModule&&this._trailModule.enable&&this._trailModule.updateRenderData()}beforeRender(){this._isPlaying&&(this.processor.beforeRender(),this._trailModule&&this._trailModule.enable&&this._trailModule.beforeRender())}_onVisibilityChange(e){this.processor._model&&(this.processor._model.visFlags=e)}emit(e,t){const n=this._time%this.duration/this.duration;this._needRefresh&&(this.node.invalidateChildren(gg.POSITION),this._needRefresh=!1),this._simulationSpace===Xre.World&&(this.node.getWorldMatrix(xge),this.node.getWorldRotation(Sge));for(let i=0;i<e;++i){const e=this.processor.getFreeParticle();if(null===e)return;e.particleSystem=this,e.reset();const i=jn(Vn(0,fn));this._shapeModule&&this._shapeModule.enable?this._shapeModule.emit(e):(ri.set(e.position,0,0,0),ri.copy(e.velocity,_oe)),this._textureAnimationModule&&this._textureAnimationModule.enable&&this._textureAnimationModule.init(e);const s=this.startSpeed.evaluate(n,i);ri.multiplyScalar(e.velocity,e.velocity,s),this._simulationSpace===Xre.World&&(ri.transformMat4(e.position,e.position,xge),ri.transformQuat(e.velocity,e.velocity,Sge)),ri.copy(e.ultimateVelocity,e.velocity),this.startRotation3D?e.startEuler.set(this.startRotationX.evaluate(n,i),this.startRotationY.evaluate(n,i),this.startRotationZ.evaluate(n,i)):e.startEuler.set(0,0,this.startRotationZ.evaluate(n,i)),e.rotation.set(e.startEuler),this.startSize3D?ri.set(e.startSize,this.startSizeX.evaluate(n,i),this.startSizeY.evaluate(n,i),this.startSizeZ.evaluate(n,i)):(ri.set(e.startSize,this.startSizeX.evaluate(n,i),1,1),e.startSize.y=e.startSize.x),ri.copy(e.size,e.startSize),e.startColor.set(this.startColor.evaluate(n,i)),e.color.set(e.startColor),e.startLifetime=this.startLifetime.evaluate(n,i)+t,e.remainingLifetime=e.startLifetime,e.randomSeed=Vn(0,233280),e.loopCount++,this.processor.setNewParticle(e)}}_prewarmSystem(){this.startDelay.mode=dse.Constant,this.startDelay.constant=0;const e=this.duration/1;for(let t=0;t<e;++t)this._time+=1,this._emit(1),this.processor.updateParticles(1)}_emit(e){const t=this.startDelay.evaluate(0,1);if(this._time>t){if(this._time>this.duration+t&&!this.loop)return void(this._isEmitting=!1);if(this._emitRateTimeCounter+=this.rateOverTime.evaluate(this._time/this.duration,1)*e,this._emitRateTimeCounter>1&&this._isEmitting){const t=Math.floor(this._emitRateTimeCounter);this._emitRateTimeCounter-=t,this.emit(t,e)}this.node.getWorldPosition(this._curWPos);const n=ri.distance(this._curWPos,this._oldWPos);if(ri.copy(this._oldWPos,this._curWPos),this._emitRateDistanceCounter+=n*this.rateOverDistance.evaluate(this._time/this.duration,1),this._emitRateDistanceCounter>1&&this._isEmitting){const t=Math.floor(this._emitRateDistanceCounter);this._emitRateDistanceCounter-=t,this.emit(t,e)}for(const t of this.bursts)t.update(this,e)}}_resetPosition(){this.node.getWorldPosition(this._oldWPos),ri.copy(this._curWPos,this._oldWPos)}addSubEmitter(e){this._subEmitters.push(e)}removeSubEmitter(e){this._subEmitters.splice(this._subEmitters.indexOf(e),1)}addBurst(e){this.bursts.push(e)}removeBurst(e){this.bursts.splice(this.bursts.indexOf(e),1)}getBoundingX(){return this._aabbHalfX}getBoundingY(){return this._aabbHalfY}getBoundingZ(){return this._aabbHalfZ}setBoundingX(e){this._boundingBox&&this._culler&&(this._boundingBox.halfExtents.x=e,this._culler.setBoundingBoxSize(this._boundingBox.halfExtents),this._aabbHalfX=e)}setBoundingY(e){this._boundingBox&&this._culler&&(this._boundingBox.halfExtents.y=e,this._culler.setBoundingBoxSize(this._boundingBox.halfExtents),this._aabbHalfY=e)}setBoundingZ(e){this._boundingBox&&this._culler&&(this._boundingBox.halfExtents.z=e,this._culler.setBoundingBoxSize(this._boundingBox.halfExtents),this._aabbHalfZ=e)}get isPlaying(){return this._isPlaying}get isPaused(){return this._isPaused}get isStopped(){return this._isStopped}get isEmitting(){return this._isEmitting}get time(){return this._time}_onBeforeSerialize(e){return this.dataCulling?e.filter((e=>!Wre.includes(e)||this[e]&&this[e].enable)):e}},vge.CullingMode=Yre,Bc((Dme=yge).prototype,"capacity",[Jpe,ede,tde],Object.getOwnPropertyDescriptor(Dme.prototype,"capacity"),Dme.prototype),Ome=Bc(Dme.prototype,"startColor",[nde,il,ide,sde],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new tre}}),Mme=Bc(Dme.prototype,"scaleSpace",[rde,il,ode,ade],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Xre.Local}}),Nme=Bc(Dme.prototype,"startSize3D",[il,cde,lde],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Lme=Bc(Dme.prototype,"startSizeX",[hde,_de,ude,pde,dde],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new fse}}),zme=Bc(Dme.prototype,"startSizeY",[fde,il,mde,gde,vde],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new fse}}),Fme=Bc(Dme.prototype,"startSizeZ",[yde,il,xde,Sde,Cde],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new fse}}),Bme=Bc(Dme.prototype,"startSpeed",[Tde,il,bde,Ede,Ade],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new fse}}),Ume=Bc(Dme.prototype,"startRotation3D",[il,Pde,wde],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Gme=Bc(Dme.prototype,"startRotationX",[Ide,il,Rde,El,Dde,Ode],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new fse}}),Hme=Bc(Dme.prototype,"startRotationY",[Mde,il,Nde,El,Lde,zde],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new fse}}),kme=Bc(Dme.prototype,"startRotationZ",[Fde,Bde,Ude,El,Gde,Hde],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new fse}}),Vme=Bc(Dme.prototype,"startDelay",[kde,il,Vde,jde,Wde],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new fse}}),jme=Bc(Dme.prototype,"startLifetime",[qde,il,Xde,Yde,Kde],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new fse}}),Wme=Bc(Dme.prototype,"duration",[il,$de,Zde],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 5}}),qme=Bc(Dme.prototype,"loop",[il,Qde,Jde],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),Bc(Dme.prototype,"prewarm",[efe,tfe],Object.getOwnPropertyDescriptor(Dme.prototype,"prewarm"),Dme.prototype),Bc(Dme.prototype,"simulationSpace",[nfe,il,ife,sfe],Object.getOwnPropertyDescriptor(Dme.prototype,"simulationSpace"),Dme.prototype),Xme=Bc(Dme.prototype,"simulationSpeed",[il,rfe,ofe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),Yme=Bc(Dme.prototype,"playOnAwake",[il,afe,cfe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),Kme=Bc(Dme.prototype,"gravityModifier",[lfe,il,hfe,_fe,ufe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new fse}}),$me=Bc(Dme.prototype,"rateOverTime",[pfe,il,dfe,ffe,mfe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new fse}}),Zme=Bc(Dme.prototype,"rateOverDistance",[gfe,il,vfe,yfe,xfe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new fse}}),Qme=Bc(Dme.prototype,"bursts",[Sfe,il,Cfe,Tfe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Bc(Dme.prototype,"renderCulling",[bfe,Efe,Afe],Object.getOwnPropertyDescriptor(Dme.prototype,"renderCulling"),Dme.prototype),Jme=Bc(Dme.prototype,"_renderCulling",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Bc(Dme.prototype,"cullingMode",[Pfe,wfe,Ife],Object.getOwnPropertyDescriptor(Dme.prototype,"cullingMode"),Dme.prototype),ege=Bc(Dme.prototype,"_cullingMode",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Yre.Pause}}),Bc(Dme.prototype,"aabbHalfX",[Rfe,Dfe,Ofe],Object.getOwnPropertyDescriptor(Dme.prototype,"aabbHalfX"),Dme.prototype),tge=Bc(Dme.prototype,"_aabbHalfX",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Bc(Dme.prototype,"aabbHalfY",[Mfe,Nfe,Lfe],Object.getOwnPropertyDescriptor(Dme.prototype,"aabbHalfY"),Dme.prototype),nge=Bc(Dme.prototype,"_aabbHalfY",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Bc(Dme.prototype,"aabbHalfZ",[zfe,Ffe,Bfe],Object.getOwnPropertyDescriptor(Dme.prototype,"aabbHalfZ"),Dme.prototype),ige=Bc(Dme.prototype,"_aabbHalfZ",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Bc(Dme.prototype,"dataCulling",[Ufe,Gfe],Object.getOwnPropertyDescriptor(Dme.prototype,"dataCulling"),Dme.prototype),sge=Bc(Dme.prototype,"_dataCulling",[il,Hfe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Bc(Dme.prototype,"sharedMaterials",[Ml,kfe,Vfe,il,jfe],Object.getOwnPropertyDescriptor(Dme.prototype,"sharedMaterials"),Dme.prototype),rge=Bc(Dme.prototype,"_colorOverLifetimeModule",[Wfe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Bc(Dme.prototype,"colorOverLifetimeModule",[qfe,Xfe,Yfe],Object.getOwnPropertyDescriptor(Dme.prototype,"colorOverLifetimeModule"),Dme.prototype),oge=Bc(Dme.prototype,"_shapeModule",[Kfe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Bc(Dme.prototype,"shapeModule",[$fe,Zfe,Qfe],Object.getOwnPropertyDescriptor(Dme.prototype,"shapeModule"),Dme.prototype),age=Bc(Dme.prototype,"_sizeOvertimeModule",[Jfe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Bc(Dme.prototype,"sizeOvertimeModule",[eme,tme,nme],Object.getOwnPropertyDescriptor(Dme.prototype,"sizeOvertimeModule"),Dme.prototype),cge=Bc(Dme.prototype,"_velocityOvertimeModule",[ime],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Bc(Dme.prototype,"velocityOvertimeModule",[sme,rme,ome],Object.getOwnPropertyDescriptor(Dme.prototype,"velocityOvertimeModule"),Dme.prototype),lge=Bc(Dme.prototype,"_forceOvertimeModule",[ame],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Bc(Dme.prototype,"forceOvertimeModule",[cme,lme,hme],Object.getOwnPropertyDescriptor(Dme.prototype,"forceOvertimeModule"),Dme.prototype),hge=Bc(Dme.prototype,"_limitVelocityOvertimeModule",[_me],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Bc(Dme.prototype,"limitVelocityOvertimeModule",[ume,pme,dme],Object.getOwnPropertyDescriptor(Dme.prototype,"limitVelocityOvertimeModule"),Dme.prototype),_ge=Bc(Dme.prototype,"_rotationOvertimeModule",[fme],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Bc(Dme.prototype,"rotationOvertimeModule",[mme,gme,vme],Object.getOwnPropertyDescriptor(Dme.prototype,"rotationOvertimeModule"),Dme.prototype),uge=Bc(Dme.prototype,"_textureAnimationModule",[yme],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Bc(Dme.prototype,"textureAnimationModule",[xme,Sme,Cme],Object.getOwnPropertyDescriptor(Dme.prototype,"textureAnimationModule"),Dme.prototype),pge=Bc(Dme.prototype,"_trailModule",[Tme],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Bc(Dme.prototype,"trailModule",[bme,Eme,Ame],Object.getOwnPropertyDescriptor(Dme.prototype,"trailModule"),Dme.prototype),dge=Bc(Dme.prototype,"renderer",[Pme,il,wme,Ime],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Hue}}),fge=Bc(Dme.prototype,"_prewarm",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),mge=Bc(Dme.prototype,"_capacity",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 100}}),gge=Bc(Dme.prototype,"_simulationSpace",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Xre.Local}}),Rme=Dme))||Rme)||Rme)||Rme)||Rme)||Rme));class bge{static instantiate(e){return this.registeredSceneEvent||(aI.on(oI.EVENT_BEFORE_SCENE_LAUNCH,this.onSceneUnload,this),this.registeredSceneEvent=!0),this.particleSystemPool.has(e._uuid)||this.particleSystemPool.set(e._uuid,new Ie((()=>M_(e)||new Yx),1,(e=>e.destroy()))),this.particleSystemPool.get(e._uuid).alloc()}static destroy(e){this.particleSystemPool.has(e._prefab.asset._uuid)&&(this.stop(e),this.particleSystemPool.get(e._prefab.asset._uuid).free(e))}static play(e){for(const t of e.getComponentsInChildren(Tge))t.play()}static stop(e){for(const t of e.getComponentsInChildren(Tge))t.stop()}static onSceneUnload(){this.particleSystemPool.forEach((e=>e.destroy())),this.particleSystemPool.clear()}}function Ege(e,t,n,i){const s=(i.x-n.x)*(e.y-n.y)-(i.y-n.y)*(e.x-n.x),r=(t.x-e.x)*(e.y-n.y)-(t.y-e.y)*(e.x-n.x),o=(i.y-n.y)*(t.x-e.x)-(i.x-n.x)*(t.y-e.y);if(0!==o){const e=s/o,t=r/o;if(e>=0&&e<=1&&t>=0&&t<=1)return!0}return!1}e("ParticleUtils",bge),bge.particleSystemPool=new Map,bge.registeredSceneEvent=!1,Tn(uhe.prototype,"Burst.prototype",[{name:"minCount"},{name:"maxCount"}]),Cn(Tge.prototype,"ParticleSystem.prototype",[{name:"enableCulling",newName:"dataCulling"}]),i.ParticleSystemComponent=Tge,Ae.setClassAlias(Tge,"cc.ParticleSystemComponent"),i.BillboardComponent=Wie,Ae.setClassAlias(Wie,"cc.BillboardComponent"),i.LineComponent=kre,Ae.setClassAlias(kre,"cc.LineComponent"),i.ParticleUtils=bge;const Age=new bi,Pge=new bi,wge=new bi,Ige=new bi;function Rge(e,t,n){const i=n.length;for(let s=0;s<i;++s)if(Ege(e,t,n[s],n[(s+1)%i]))return!0;return!1}function Dge(e,t){let n=!1;const i=e.x,s=e.y,r=t.length;for(let e=0,o=r-1;e<r;o=e++){const r=t[e].x,a=t[e].y,c=t[o].x,l=t[o].y;a>s!=l>s&&i<(c-r)*(s-a)/(l-a)+r&&(n=!n)}return n}function Oge(e,t,n,i){let s=n.x-t.x,r=n.y-t.y;const o=s*s+r*r,a=((e.x-t.x)*s+(e.y-t.y)*r)/o;let c;return c=i?o?a<0?t:a>1?n:Age.set(t.x+a*s,t.y+a*r):t:Age.set(t.x+a*s,t.y+a*r),s=e.x-c.x,r=e.y-c.y,Math.sqrt(s*s+r*r)}class Mge{}function Nge(e){return void 0===(e=e||{}).includeNormal&&(e.includeNormal=!0),void 0===e.includeUV&&(e.includeUV=!0),e}e("Intersection2D",Mge),Mge.lineLine=Ege,Mge.lineRect=function(e,t,n){const i=Age.set(n.x,n.y),s=Pge.set(n.x,n.yMax),r=wge.set(n.xMax,n.yMax),o=Ige.set(n.xMax,n.y);return!!(Ege(e,t,i,s)||Ege(e,t,s,r)||Ege(e,t,r,o)||Ege(e,t,o,i))},Mge.linePolygon=Rge,Mge.rectRect=function(e,t){const n=e.x,i=e.y,s=e.x+e.width,r=e.y+e.height,o=t.x,a=t.y,c=t.x+t.width,l=t.y+t.height;return n<=c&&s>=o&&i<=l&&r>=a},Mge.rectPolygon=function(e,t){const n=Age.set(e.x,e.y),i=Pge.set(e.x,e.yMax),s=wge.set(e.xMax,e.yMax),r=Ige.set(e.xMax,e.y);if(Rge(n,i,t))return!0;if(Rge(i,s,t))return!0;if(Rge(s,r,t))return!0;if(Rge(r,n,t))return!0;for(let n=0,i=t.length;n<i;++n)if(e.contains(t[n]))return!0;return!!(Dge(n,t)||Dge(i,t)||Dge(s,t)||Dge(r,t))},Mge.rectCircle=function(e,t,n){const i=t.x,s=t.y,r=e.x,o=e.y,a=e.width,c=e.height;let l=i,h=s;i<r?l=r:i>r+a&&(l=r+a),s<o?h=o:s>o+c&&(h=o+c);const _=i-l,u=s-h;return Math.sqrt(_*_+u*u)<=n},Mge.polygonPolygon=function(e,t){let n,i;for(n=0,i=e.length;n<i;++n)if(Rge(e[n],e[(n+1)%i],t))return!0;for(n=0,i=t.length;n<i;++n)if(Dge(t[n],e))return!0;for(n=0,i=e.length;n<i;++n)if(Dge(e[n],t))return!0;return!1},Mge.circleCircle=function(e,t,n,i){return bi.distance(e,n)<t+i},Mge.polygonCircle=function(e,t,n){const i=t;if(Dge(i,e))return!0;for(let t=0,s=e.length;t<s;t++)if(Oge(i,0===t?e[e.length-1]:e[t-1],e[t],!0)<n)return!0;return!1},Mge.pointInPolygon=Dge,Mge.pointLineDistance=Oge;const Lge=new ri,zge=new ri,Fge=new ri,Bge=new ri,Uge=new ri,Gge=new ri,Hge=new ri,kge=new ri,Vge=new ri,jge=new ri,Wge=new ri,qge=new ri,Xge=new ri(0,0,0),Yge=new ri(0,0,0);function Kge(e=.5,t=.5,n=2,i={}){const s=.5*n,r=i.radialSegments||32,o=i.heightSegments||1,a=void 0===i.capped||i.capped,c=i.arc||2*Math.PI;let l=0;a||(e>0&&l++,t>0&&l++);let h=(r+1)*(o+1);a&&(h+=(r+1)*l+r*l);let _=r*o*6;a&&(_+=r*l*3);const u=new Array(_),p=new Array(3*h),d=new Array(3*h),f=new Array(2*h),m=Math.max(e,t),g=new ri(-m,-s,-m),v=new ri(m,s,m),y=Math.sqrt(m*m+s*s);let x=0,S=0;return function(){const i=[],a=e-t,l=a*a/n*Math.sign(a);for(let e=0;e<=o;e++){const h=[],_=e/o,u=_*a+t;for(let e=0;e<=r;++e){const t=e/r,i=t*c,o=Math.sin(i),a=Math.cos(i);p[3*x]=u*o,p[3*x+1]=_*n-s,p[3*x+2]=u*a,ri.normalize(Xge,ri.set(Yge,o,-l,a)),d[3*x]=Xge.x,d[3*x+1]=Xge.y,d[3*x+2]=Xge.z,f[2*x]=2*(1-t)%1,f[2*x+1]=_,h.push(x),++x}i.push(h)}for(let e=0;e<o;++e)for(let t=0;t<r;++t){const n=i[e][t],s=i[e+1][t],r=i[e+1][t+1],o=i[e][t+1];u[S]=n,++S,u[S]=o,++S,u[S]=s,++S,u[S]=o,++S,u[S]=r,++S,u[S]=s,++S}}(),a&&(t>0&&C(!1),e>0&&C(!0)),{positions:p,normals:d,uvs:f,indices:u,minPos:g,maxPos:v,boundingRadius:y};function C(n){const i=n?e:t,o=n?1:-1,a=x;for(let e=1;e<=r;++e)p[3*x]=0,p[3*x+1]=s*o,p[3*x+2]=0,d[3*x]=0,d[3*x+1]=o,d[3*x+2]=0,f[2*x]=.5,f[2*x+1]=.5,++x;const l=x;for(let e=0;e<=r;++e){const t=e/r*c,n=Math.cos(t),a=Math.sin(t);p[3*x]=i*a,p[3*x+1]=s*o,p[3*x+2]=i*n,d[3*x]=0,d[3*x+1]=o,d[3*x+2]=0,f[2*x]=.5-.5*a*o,f[2*x+1]=.5+.5*n,++x}for(let e=0;e<r;++e){const t=a+e,i=l+e;n?(u[S]=i+1,++S,u[S]=t,++S,u[S]=i,++S):(u[S]=t,++S,u[S]=i+1,++S,u[S]=i,++S)}}}const $ge=new ri(0,0,0),Zge=new ri(0,0,0),Qge=new ri(0,0,0),Jge=new ri(0,0,0),eve=new ri(0,0,0),tve=new ri(0,0,0),nve=new ri(0,0,0),ive=new ri(0,0,0),sve=new ri(0,0,0);var rve,ove,ave,cve,lve,hve,_ve,uve,pve,dve=Object.freeze({__proto__:null,box:function(e){const t=(e=e||{}).widthSegments||1,n=e.heightSegments||1,i=e.lengthSegments||1,s=(e.width||1)/2,r=(e.height||1)/2,o=(e.length||1)/2,a=[ri.set(Uge,-s,-r,o),ri.set(Gge,s,-r,o),ri.set(Hge,s,r,o),ri.set(kge,-s,r,o),ri.set(Vge,s,-r,-o),ri.set(jge,-s,-r,-o),ri.set(Wge,-s,r,-o),ri.set(qge,s,r,-o)],c=[[2,3,1],[4,5,7],[7,6,2],[1,0,4],[1,4,2],[5,0,6]],l=[[0,0,1],[0,0,-1],[0,1,0],[0,-1,0],[1,0,0],[-1,0,0]],h=[[-1,0,0,1],[-1,0,0,1],[-1,0,0,1],[-1,0,0,1],[0,0,-1,1],[0,0,1,1]],_=[],u=[],p=[],d=[],f=[],m=new ri(-s,-r,-o),g=new ri(s,r,o),v=Math.sqrt(s*s+r*r+o*o);function y(e,t,n){let i,s,r,o;const m=_.length/3,g=c[e],v=l[e],y=h[e];for(o=0;o<=n;o++)for(r=0;r<=t;r++)if(i=r/t,s=o/n,ri.lerp(Lge,a[g[0]],a[g[1]],i),ri.lerp(zge,a[g[0]],a[g[2]],s),ri.subtract(Fge,zge,a[g[0]]),ri.add(Bge,Lge,Fge),_.push(Bge.x,Bge.y,Bge.z),u.push(v[0],v[1],v[2]),p.push(i,s),d.push(y[0],y[1],y[2],y[3]),r<t&&o<n){const e=t+1,n=r+o*e,i=r+(o+1)*e,s=r+1+(o+1)*e,a=r+1+o*e;f.push(m+n,m+a,m+i),f.push(m+i,m+a,m+s)}}return y(0,t,n),y(4,i,n),y(1,t,n),y(5,i,n),y(3,t,i),y(2,t,i),{positions:_,normals:u,uvs:p,tangents:d,indices:f,minPos:m,maxPos:g,boundingRadius:v}},cone:function(e=.5,t=1,n={}){return Kge(0,e,t,n)},cylinder:Kge,plane:function(e){const t=function(e){return(e=Nge(e)).width=e.width||10,e.length=e.length||10,e.widthSegments=e.widthSegments||10,e.lengthSegments=e.lengthSegments||10,e}(e),{width:n,length:i,widthSegments:s,lengthSegments:r}=t,o=.5*n,a=.5*i,c=[],l=[],h=[],_=new ri(-o,0,-a),u=new ri(o,0,a),p=Math.sqrt(n*n+i*i);ri.set(eve,-o,0,a),ri.set(tve,o,0,a),ri.set(nve,-o,0,-a);for(let e=0;e<=r;e++)for(let n=0;n<=s;n++){const i=n/s,o=e/r;if(ri.lerp($ge,eve,tve,i),ri.lerp(Zge,eve,nve,o),ri.subtract(Qge,Zge,eve),ri.add(Jge,$ge,Qge),c.push(Jge.x,Jge.y,Jge.z),t.includeUV&&l.push(i,o),n<s&&e<r){const t=s+1,i=n+e*t,r=n+(e+1)*t,o=n+1+(e+1)*t,a=n+1+e*t;h.push(i,a,r),h.push(a,o,r)}}const d={positions:c,indices:h,minPos:_,maxPos:u,boundingRadius:p};if(t.includeNormal){const e=(r+1)*(s+1),t=new Array(3*e);d.normals=t;for(let n=0;n<e;++n)t[3*n+0]=0,t[3*n+1]=1,t[3*n+2]=0}return t.includeUV&&(d.uvs=l),d},quad:function(e){const t=Nge(e),n={positions:[-.5,-.5,0,-.5,.5,0,.5,.5,0,.5,-.5,0],indices:[0,3,1,3,2,1],minPos:{x:-.5,y:-.5,z:0},maxPos:{x:.5,y:.5,z:0},boundingRadius:Math.sqrt(.5)};return!1!==t.includeNormal&&(n.normals=[0,0,1,0,0,1,0,0,1,0,0,1]),!1!==t.includeUV&&(n.uvs=[0,0,0,1,1,1,1,0]),n},sphere:function(e=.5,t={}){const n=void 0!==t.segments?t.segments:32,i=[],s=[],r=[],o=[],a=new ri(-e,-e,-e),c=new ri(e,e,e),l=e;for(let t=0;t<=n;++t){const a=t*Math.PI/n,c=Math.sin(a),l=-Math.cos(a);for(let a=0;a<=n;++a){const h=2*a*Math.PI/n-Math.PI/2,_=Math.sin(h)*c,u=l,p=Math.cos(h)*c,d=a/n,f=t/n;if(i.push(_*e,u*e,p*e),s.push(_,u,p),r.push(d,f),t<n&&a<n){const e=n+1,i=e*t+a,s=e*(t+1)+a,r=e*(t+1)+a+1,c=e*t+a+1;o.push(i,c,s),o.push(c,r,s)}}}return{positions:i,indices:o,normals:s,uvs:r,minPos:a,maxPos:c,boundingRadius:l}},torus:function(e=.4,t=.1,n={}){const i=n.radialSegments||32,s=n.tubularSegments||32,r=n.arc||2*Math.PI,o=[],a=[],c=[],l=[],h=new ri(-e-t,-t,-e-t),_=new ri(e+t,t,e+t),u=e+t;for(let n=0;n<=i;n++)for(let h=0;h<=s;h++){const _=h/s,u=n/i,p=_*r,d=u*Math.PI*2,f=(e+t*Math.cos(d))*Math.sin(p),m=t*Math.sin(d),g=(e+t*Math.cos(d))*Math.cos(p),v=Math.sin(p)*Math.cos(d),y=Math.sin(d),x=Math.cos(p)*Math.cos(d);if(o.push(f,m,g),a.push(v,y,x),c.push(_,u),h<s&&n<i){const e=s+1,t=e*n+h,i=e*(n+1)+h,r=e*(n+1)+h+1,o=e*n+h+1;l.push(t,o,i),l.push(o,r,i)}}return{positions:o,normals:a,uvs:c,indices:l,minPos:h,maxPos:_,boundingRadius:u}},capsule:function(e=.5,t=.5,n=2,i={}){const s=n-e-t,r=i.sides||32,o=i.heightSegments||32,a=t/n,c=s/n,l=e/n,h=Math.floor(o*a),_=Math.floor(o*l),u=Math.floor(o*c),p=s+t-n/2,d=t-n/2,f=t-n/2,m=i.arc||2*Math.PI,g=[],v=[],y=[],x=[],S=Math.max(e,t),C=new ri(-S,-n/2,-S),T=new ri(S,n/2,S),b=n/2;let E=0;const A=[];return function(){for(let e=0;e<=h;++e){const n=e*Math.PI/h/2,i=Math.sin(n),s=-Math.cos(n);for(let n=0;n<=r;++n){const a=2*n*Math.PI/r-Math.PI/2,c=Math.sin(a)*i,l=s,_=Math.cos(a)*i,u=n/r,p=e/o;if(g.push(c*t,l*t+f,_*t),v.push(c,l,_),y.push(u,p),e<h&&n<r){const t=r+1,i=t*e+n,s=t*(e+1)+n,o=t*(e+1)+n+1,a=t*e+n+1;x.push(i,a,s),x.push(a,o,s)}++E}}}(),function(){const n=(e-t)/s;for(let i=0;i<=u;i++){const o=[],l=i/u,h=l*(e-t)+t;for(let e=0;e<=r;++e){const t=e/r,i=l*c+a,_=t*m-m/4,u=Math.sin(_),p=Math.cos(_);g.push(h*u),g.push(l*s+d),g.push(h*p),ri.normalize(ive,ri.set(sve,u,-n,p)),v.push(ive.x),v.push(ive.y),v.push(ive.z),y.push(t,i),o.push(E),++E}A.push(o)}for(let e=0;e<u;++e)for(let t=0;t<r;++t){const n=A[e][t],i=A[e+1][t],s=A[e+1][t+1],r=A[e][t+1];x.push(n),x.push(r),x.push(i),x.push(r),x.push(s),x.push(i)}}(),function(){for(let t=0;t<=_;++t){const n=t*Math.PI/_/2+Math.PI/2,i=Math.sin(n),s=-Math.cos(n);for(let n=0;n<=r;++n){const a=2*n*Math.PI/r-Math.PI/2,c=Math.sin(a)*i,h=s,d=Math.cos(a)*i,f=n/r,m=t/o+(1-l);if(g.push(c*e,h*e+p,d*e),v.push(c,h,d),y.push(f,m),t<_&&n<r){const e=r+1,i=e*t+n+A[u][r]+1,s=e*(t+1)+n+A[u][r]+1,o=e*(t+1)+n+1+A[u][r]+1,a=e*t+n+1+A[u][r]+1;x.push(i,a,s),x.push(a,o,s)}}}}(),{positions:g,normals:v,uvs:y,indices:x,minPos:C,maxPos:T,boundingRadius:b}},circle:function(e){const t=function(e){return(e=Nge(e)).segments=64,e}(e).segments,n=new Array(3*(t+1));n[0]=0,n[1]=0,n[2]=0;const i=new Array(1+2*t);i[0]=0;const s=2*Math.PI/t;for(let e=0;e<t;++e){const t=s*e,r=Math.cos(t),o=Math.sin(t),a=3*(e+1);n[a+0]=r,n[a+1]=o,n[a+2]=0;const c=2*e;i[1+c]=e+1,i[1+(c+1)]=e+2}return t>0&&(i[i.length-1]=1),{positions:n,indices:i,minPos:{x:1,y:1,z:0},maxPos:{x:-1,y:-1,z:0},boundingRadius:1,primitiveMode:cr.TRIANGLE_FAN}},translate:function(e,t){const n=t.x||0,i=t.y||0,s=t.z||0,r=Math.floor(e.positions.length/3);for(let t=0;t<r;++t){const r=3*t,o=3*t+1,a=3*t+2;e.positions[r]+=n,e.positions[o]+=i,e.positions[a]+=s}return e.minPos&&(e.minPos.x+=n,e.minPos.y+=i,e.minPos.z+=s),e.maxPos&&(e.maxPos.x+=n,e.maxPos.y+=i,e.maxPos.z+=s),e},scale:function(e,t){const n=t.x||0,i=t.y||0,s=t.z||0,r=Math.floor(e.positions.length/3);for(let t=0;t<r;++t){const r=3*t,o=3*t+1,a=3*t+2;e.positions[r]*=n,e.positions[o]*=i,e.positions[a]*=s}return e.minPos&&(e.minPos.x*=n,e.minPos.y*=i,e.minPos.z*=s),e.maxPos&&(e.maxPos.x*=n,e.maxPos.y*=i,e.maxPos.z*=s),e.boundingRadius=Math.max(Math.max(n,i),s),e},wireframed:function(e){const{indices:t}=e;if(!t)return e;if(e.primitiveMode&&e.primitiveMode!==cr.TRIANGLE_LIST)return e;const n=[[0,1],[1,2],[2,0]],i=[],s={};for(let e=0;e<t.length;e+=3)for(let r=0;r<3;++r){const o=t[e+n[r][0]],a=t[e+n[r][1]],c=o>a?a<<16|o:o<<16|a;void 0===s[c]&&(s[c]=0,i.push(o,a))}return e.indices=i,e.primitiveMode=cr.LINE_LIST,e},wireframe:function(e){const t=[[0,1],[1,2],[2,0]],n=[],i={};for(let s=0;s<e.length;s+=3)for(let r=0;r<3;++r){const o=e[s+t[r][0]],a=e[s+t[r][1]],c=o>a?a<<16|o:o<<16|a;void 0===i[c]&&(i[c]=0,n.push(o,a))}return n},invWinding:function(e){const t=[];for(let n=0;n<e.length;n+=3)t.push(e[n],e[n+2],e[n+1]);return t},toWavefrontOBJ:function(e,t=1){if(!e.indices||!e.uvs||!e.normals||void 0!==e.primitiveMode&&e.primitiveMode!==cr.TRIANGLE_LIST)return"";const n=e.positions,i=e.uvs,s=e.normals,r=e.indices,o=e=>`${r[e]+1}/${r[e]+1}/${r[e]+1}`;let a="";for(let e=0;e<n.length;e+=3)a+=`v ${n[e]*t} ${n[e+1]*t} ${n[e+2]*t}\n`;for(let e=0;e<i.length;e+=2)a+=`vt ${i[e]} ${i[e+1]}\n`;for(let e=0;e<s.length;e+=3)a+=`vn ${s[e]} ${s[e+1]} ${s[e+2]}\n`;for(let e=0;e<r.length;e+=3)a+=`f ${o(e)} ${o(e+1)} ${o(e+2)}\n`;return a},normals:function(e,t,n=1){const i=new Array(2*e.length);for(let s=0;s<e.length/3;++s){const r=3*s,o=6*s;i[o+0]=e[r+0],i[o+1]=e[r+1],i[o+2]=e[r+2],i[o+3]=e[r+0]+t[r+0]*n,i[o+4]=e[r+1]+t[r+1]*n,i[o+5]=e[r+2]+t[r+2]*n}return i},applyDefaultGeometryOptions:Nge});e("primitives",dve),function(e){e[e.BOX=0]="BOX",e[e.SPHERE=1]="SPHERE",e[e.CYLINDER=2]="CYLINDER",e[e.CONE=3]="CONE",e[e.CAPSULE=4]="CAPSULE",e[e.TORUS=5]="TORUS",e[e.PLANE=6]="PLANE",e[e.QUAD=7]="QUAD"}(pve||(pve={})),Fe(pve);let fve=e("Primitive",(rve=Zc("cc.Primitive"),ove=Ol(pve),rve((uve=_ve=class extends Pk{constructor(e=pve.BOX){super(),Fc(this,"type",lve,this),Fc(this,"info",hve,this),this.type=e}onLoaded(){Lk(dve[pve[this.type].toLowerCase()](this.info),this)}},_ve.PrimitiveType=pve,lve=Bc((cve=uve).prototype,"type",[ove],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return pve.BOX}}),hve=Bc(cve.prototype,"info",[il,dl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return{}}}),ave=cve))||ave));var mve;i.Primitive=fve,i.primitives=dve;let gve=Zc("cc.PerfCounter")(mve=class extends class{get value(){return this._value}set value(e){this._value=e}constructor(e,t,n){this._id=void 0,this._opts=void 0,this._accumStart=void 0,this._total=0,this._value=0,this._averageValue=0,this._accumValue=0,this._accumSamples=0,this._id=e,this._opts=t,this._accumStart=n}sample(e){this._average(this._value,e)}human(){const{average:e,isInteger:t}=this._opts,n=e?this._averageValue:this._value;return t?Math.round(n):Math.round(100*n)/100}alarm(){return this._opts.below&&this._value<this._opts.below||this._opts.over&&this._value>this._opts.over}_average(e,t=0){if(this._opts.average){this._accumValue+=e,++this._accumSamples;const n=t;n-this._accumStart>=this._opts.average&&(this._averageValue=this._accumValue/this._accumSamples,this._accumValue=0,this._accumStart=n,this._accumSamples=0)}}}{constructor(e,t,n){super(e,t,n),this._time=void 0,this._time=n}start(e=0){this._time=e}end(e=0){this._value=e-this._time,this._average(this._value)}tick(){this.end(),this.start()}frame(e){const t=e,n=t-this._time;this._total++,n>(this._opts.average||1e3)&&(this._value=1e3*this._total/n,this._total=0,this._time=t,this._average(this._value))}})||mve;const vve="0123456789. ",yve=500,xve={0:0,1:1,2:2,3:3,4:4,5:5,6:6,7:7,8:8,9:9,".":10},Sve={fps:{desc:"Framerate (FPS)",below:30,average:yve,isInteger:!0},draws:{desc:"Draw call",isInteger:!0},frame:{desc:"Frame time (ms)",min:0,max:50,average:yve},instances:{desc:"Instance Count",isInteger:!0},tricount:{desc:"Triangle",isInteger:!0},logic:{desc:"Game Logic (ms)",min:0,max:50,average:yve,color:"#080"},physics:{desc:"Physics (ms)",min:0,max:50,average:yve},render:{desc:"Renderer (ms)",min:0,max:50,average:yve,color:"#f90"},textureMemory:{desc:"GFX Texture Mem(M)"},bufferMemory:{desc:"GFX Buffer Mem(M)"}},Cve={fontSize:23,quadHeight:.4,segmentsPerLine:8,textureWidth:256,textureHeight:256};class Tve{constructor(){this._stats=null,this.id="__Profiler__",this._showFPS=!1,this._rootNode=null,this._device=null,this._swapchain=null,this._pipeline=null,this._meshRenderer=null,this._canvas=null,this._ctx=null,this._texture=null,this._region=new Ir,this._canvasArr=[],this._regionArr=[this._region],this.digitsData=null,this.offsetData=null,this.pass=null,this._canvasDone=!1,this._statsDone=!1,this._inited=!1,this._lineHeight=Cve.textureHeight/(Object.keys(Sve).length+1),this._wordHeight=0,this._eachNumWidth=0,this._totalLines=0,this.lastTime=0,this._canvas=document.createElement("canvas"),this._ctx=this._canvas.getContext("2d"),this._canvasArr.push(this._canvas)}reset(){this._stats=null,this._showFPS=!1,this._rootNode=null,this._device=null,this._swapchain=null,this._pipeline=null,this._meshRenderer&&this._meshRenderer.destroy(),this._meshRenderer=null,this.digitsData=null,this.offsetData=null,this.pass=null,this._canvasDone=!1,this._statsDone=!1,this._inited=!1,this._lineHeight=Cve.textureHeight/(Object.keys(Sve).length+1),this._wordHeight=0,this._eachNumWidth=0,this._totalLines=0,this.lastTime=0}isShowingStats(){return this._showFPS}hideStats(){this._showFPS&&(this._rootNode&&(this._rootNode.active=!1),i.director.off(i.Director.EVENT_BEFORE_UPDATE,this.beforeUpdate,this),i.director.off(i.Director.EVENT_AFTER_UPDATE,this.afterUpdate,this),i.director.off(i.Director.EVENT_BEFORE_PHYSICS,this.beforePhysics,this),i.director.off(i.Director.EVENT_AFTER_PHYSICS,this.afterPhysics,this),i.director.off(i.Director.EVENT_BEFORE_DRAW,this.beforeDraw,this),i.director.off(i.Director.EVENT_AFTER_DRAW,this.afterDraw,this),this._showFPS=!1,this._pipeline.profiler=null,i.game.config.showFPS=!1)}showStats(){if(!this._showFPS){if(!this._device){const e=i.director.root;this._device=e.device,this._swapchain=e.mainWindow.swapchain,this._pipeline=e.pipeline}this.generateCanvas(),this.generateStats(),i.game.once(i.Game.EVENT_ENGINE_INITED,this.generateNode,this),this._rootNode&&(this._rootNode.active=!0),i.director.on(i.Director.EVENT_BEFORE_UPDATE,this.beforeUpdate,this),i.director.on(i.Director.EVENT_AFTER_UPDATE,this.afterUpdate,this),i.director.on(i.Director.EVENT_BEFORE_PHYSICS,this.beforePhysics,this),i.director.on(i.Director.EVENT_AFTER_PHYSICS,this.afterPhysics,this),i.director.on(i.Director.EVENT_BEFORE_DRAW,this.beforeDraw,this),i.director.on(i.Director.EVENT_AFTER_DRAW,this.afterDraw,this),this._showFPS=!0,this._canvasDone=!0,this._statsDone=!0,i.game.config.showFPS=!0}}generateCanvas(){if(this._canvasDone)return;const{textureWidth:e,textureHeight:t}=Cve;this._ctx&&this._canvas&&(this._canvas.width=e,this._canvas.height=t,this._canvas.style.width=`${this._canvas.width}`,this._canvas.style.height=`${this._canvas.height}`,this._ctx.font=`${Cve.fontSize}px Arial`,this._ctx.textBaseline="top",this._ctx.fillStyle="#fff",this._texture=this._device.createTexture(new Gr(Vs.TEX2D,js.SAMPLED|js.TRANSFER_DST,zs.RGBA8,e,t)),this._region.texExtent.width=e,this._region.texExtent.height=t)}generateStats(){if(this._statsDone||!this._ctx||!this._canvas)return;this._stats=null;const e=performance.now();this._ctx.textAlign="left";let t=0;for(const n in Sve){const i=Sve[n];this._ctx.fillText(i.desc,0,t*this._lineHeight),i.counter=new gve(n,i,e),t++}this._totalLines=t,this._wordHeight=this._totalLines*this._lineHeight/this._canvas.height;for(let e=0;e<vve.length;++e){const t=this._ctx.measureText(vve[e]).width;this._eachNumWidth=Math.max(this._eachNumWidth,t)}for(let e=0;e<vve.length;++e)this._ctx.fillText(vve[e],e*this._eachNumWidth,this._totalLines*this._lineHeight);this._eachNumWidth/=this._canvas.width,this._stats=Sve,this._canvasArr[0]=this._canvas,this._device.copyTexImagesToTexture(this._canvasArr,this._texture,this._regionArr)}generateNode(){if(this._rootNode&&this._rootNode.isValid)return;this._rootNode=new Yx("PROFILER_NODE"),i.game.addPersistRootNode(this._rootNode);const e=new Yx("Profiler_Root");e.parent=this._rootNode;const t=Cve.quadHeight,n=t/this._totalLines,s=t/this._wordHeight,r=n/Cve.fontSize,o=this._eachNumWidth*this._canvas.width*r,a=[0,t,0,s,t,0,s,0,0,0,0,0],c=[0,2,1,0,3,2],l=[0,0,-1,0,1,0,-1,0,1,this._wordHeight,-1,0,0,this._wordHeight,-1,0];let h=0;for(let e=0;e<this._totalLines;e++)for(let i=0;i<Cve.segmentsPerLine;i++){a.push(s+i*o,t-e*n,0),a.push(s+(i+1)*o,t-e*n,0),a.push(s+(i+1)*o,t-(e+1)*n,0),a.push(s+i*o,t-(e+1)*n,0),h=4*(e*Cve.segmentsPerLine+i+1),c.push(0+h,2+h,1+h,0+h,3+h,2+h);const r=e*Cve.segmentsPerLine+i,_=Math.floor(r/4),u=r-4*_;l.push(0,this._wordHeight,_,u),l.push(this._eachNumWidth,this._wordHeight,_,u),l.push(this._eachNumWidth,1,_,u),l.push(0,1,_,u)}this._meshRenderer=e.addComponent(gV),this._meshRenderer.mesh=Lk({positions:a,indices:c,colors:l});const _=new Ug;_.initialize({effectName:"profiler"});const u=this.pass=_.passes[0],p=u.getBinding("mainTexture"),d=u.getBinding("digits"),f=u.getBinding("offset");u.bindTexture(p,this._texture),this.digitsData=u.blocks[d],this.offsetData=u.blocks[f],this.offsetData[3]=-1,this._meshRenderer.material=_,this._meshRenderer.node.layer=_d.Enum.PROFILER,this._inited=!0}beforeUpdate(){if(!this._stats)return;const e=performance.now();this._stats.frame.counter.start(e),this._stats.logic.counter.start(e)}afterUpdate(){if(!this._stats)return;const e=performance.now();i.director.isPaused()?this._stats.frame.counter.start(e):this._stats.logic.counter.end(e)}beforePhysics(){if(!this._stats)return;const e=performance.now();this._stats.physics.counter.start(e)}afterPhysics(){if(!this._stats)return;const e=performance.now();this._stats.physics.counter.end(e)}beforeDraw(){if(!this._stats||!this._inited)return;{const e=this._swapchain.surfaceTransform,t=this._device.capabilities.clipSpaceSignY;if(e!==this.offsetData[3]){const n=yi[e],i=-.9,s=-.9*t;this.offsetData[0]=i*n[0]+s*n[2],this.offsetData[1]=i*n[1]+s*n[3],this.offsetData[2]=this._eachNumWidth,this.offsetData[3]=e}this.pass._setRootBufferDirty(!0)}this._meshRenderer.model&&(this._pipeline.profiler=this._meshRenderer.model);const e=performance.now();this._stats.render.counter.start(e)}afterDraw(){if(!this._stats||!this._inited)return;const e=performance.now();if(this._stats.frame.counter.end(e),this._stats.fps.counter.frame(e),this._stats.render.counter.end(e),e-this.lastTime<yve)return;this.lastTime=e;const t=this._device;this._stats.draws.counter.value=t.numDrawCalls,this._stats.instances.counter.value=t.numInstances,this._stats.bufferMemory.counter.value=t.memoryStatus.bufferSize/1048576,this._stats.textureMemory.counter.value=t.memoryStatus.textureSize/1048576,this._stats.tricount.counter.value=t.numTris;let n=0;{const t=this.digitsData;for(const i in this._stats){const s=this._stats[i];s.counter.sample(e);const r=s.counter.human().toString();for(let e=Cve.segmentsPerLine-1;e>=0;e--){const i=n*Cve.segmentsPerLine+e,s=r[r.length-(Cve.segmentsPerLine-e)];let o=xve[s];void 0===o&&(o=11),t[i]=o}n++}}}}e("Profiler",Tve);const bve=e("profiler",new Tve);i.profiler=bve;const Eve=Ne({GRAVITY:0,RADIUS:1}),Ave=Ne({FREE:0,RELATIVE:1,GROUPED:2}),Pve=new bi(0,0),wve=new bi,Ive=new bi,Rve=new bi,Dve=new bi,Ove=Wq(Vq);class Mve{constructor(){this.pos=new bi(0,0),this.startPos=new bi(0,0),this.color=new ti(0,0,0,255),this.deltaColor={r:0,g:0,b:0,a:255},this.size=0,this.deltaSize=0,this.rotation=0,this.deltaRotation=0,this.timeToLive=0,this.drawPos=new bi(0,0),this.aspectRatio=1,this.dir=new bi(0,0),this.radialAccel=0,this.tangentialAccel=0,this.angle=0,this.degreesPerSecond=0,this.radius=0,this.deltaRadius=0}}const Nve=new class extends be{get(){return this._get()||new Mve}}((e=>{e.pos.set(Pve),e.startPos.set(Pve),e.color._val=4278190080,e.deltaColor.r=e.deltaColor.g=e.deltaColor.b=0,e.deltaColor.a=255,e.size=0,e.deltaSize=0,e.rotation=0,e.deltaRotation=0,e.timeToLive=0,e.drawPos.set(Pve),e.aspectRatio=1,e.dir.set(Pve),e.radialAccel=0,e.tangentialAccel=0,e.angle=0,e.degreesPerSecond=0,e.radius=0,e.deltaRadius=0}),1024);class Lve{constructor(e){this.particles=[],this.active=!1,this.uvFilled=0,this.finished=!1,this.readyToPlay=!0,this.elapsed=0,this.emitCounter=0,this._worldRotation=0,this.sys=e,this.particles=[],this.active=!1,this.readyToPlay=!0,this.finished=!1,this.elapsed=0,this.emitCounter=0,this.uvFilled=0,this._worldRotation=0}stop(){this.active=!1,this.readyToPlay=!1,this.elapsed=this.sys.duration,this.emitCounter=0}reset(){this.active=!0,this.readyToPlay=!0,this.elapsed=0,this.emitCounter=0,this.finished=!1;const e=this.particles;for(let t=0;t<e.length;++t)Nve.put(e[t]);e.length=0}emitParticle(e){const t=this.sys,n=Nve.get();this.particles.push(n),n.timeToLive=t.life+t.lifeVar*(Math.random()-.5)*2;const i=n.timeToLive=Math.max(0,n.timeToLive);n.pos.x=t.sourcePos.x+t.posVar.x*(Math.random()-.5)*2,n.pos.y=t.sourcePos.y+t.posVar.y*(Math.random()-.5)*2;let s=0,r=0,o=0,a=0;const c=t.startColor,l=t.startColorVar,h=t.endColor,_=t.endColorVar;n.color.r=s=Ke(c.r+l.r*(Math.random()-.5)*2,0,255),n.color.g=r=Ke(c.g+l.g*(Math.random()-.5)*2,0,255),n.color.b=o=Ke(c.b+l.b*(Math.random()-.5)*2,0,255),n.color.a=a=Ke(c.a+l.a*(Math.random()-.5)*2,0,255),n.deltaColor.r=(Ke(h.r+_.r*(Math.random()-.5)*2,0,255)-s)/i,n.deltaColor.g=(Ke(h.g+_.g*(Math.random()-.5)*2,0,255)-r)/i,n.deltaColor.b=(Ke(h.b+_.b*(Math.random()-.5)*2,0,255)-o)/i,n.deltaColor.a=(Ke(h.a+_.a*(Math.random()-.5)*2,0,255)-a)/i;let u=t.startSize+t.startSizeVar*(Math.random()-.5)*2;if(u=Math.max(0,u),n.size=u,-1===t.endSize)n.deltaSize=0;else{let e=t.endSize+t.endSizeVar*(Math.random()-.5)*2;e=Math.max(0,e),n.deltaSize=(e-u)/i}const p=t.startSpin+t.startSpinVar*(Math.random()-.5)*2,d=t.endSpin+t.endSpinVar*(Math.random()-.5)*2;n.rotation=p,n.deltaRotation=(d-p)/i,n.startPos.x=e.x,n.startPos.y=e.y,n.aspectRatio=t.aspectRatio||1;const f=$e(t.angle+this._worldRotation+t.angleVar*(Math.random()-.5)*2);if(t.emitterMode===Eve.GRAVITY){const e=t.speed+t.speedVar*(Math.random()-.5)*2;n.dir.x=Math.cos(f),n.dir.y=Math.sin(f),n.dir.multiplyScalar(e),n.radialAccel=t.radialAccel+t.radialAccelVar*(Math.random()-.5)*2,n.tangentialAccel=t.tangentialAccel+t.tangentialAccelVar*(Math.random()-.5)*2,t.rotationIsDir&&(n.rotation=-Ze(Math.atan2(n.dir.y,n.dir.x)))}else{const e=t.startRadius+t.startRadiusVar*(Math.random()-.5)*2,s=t.endRadius+t.endRadiusVar*(Math.random()-.5)*2;n.radius=e,n.deltaRadius=-1===t.endRadius?0:(s-e)/i,n.angle=f,n.degreesPerSecond=$e(t.rotatePerS+t.rotatePerSVar*(Math.random()-.5)*2)}}updateUVs(e){const t=this.renderData;if(t&&this.sys._renderSpriteFrame){const n=t.vData,i=this.sys._renderSpriteFrame.uv,s=e?0:this.uvFilled,r=this.particles.length;for(let e=s;e<r;e++){const t=e*Ove*4;n[t+3]=i[0],n[t+4]=i[1],n[t+12]=i[2],n[t+13]=i[3],n[t+21]=i[4],n[t+22]=i[5],n[t+30]=i[6],n[t+31]=i[7]}this.uvFilled=r}}updateParticleBuffer(e,t,n,i){const s=n.vData,r=t.x,o=t.y;let a=e.size,c=a;const l=e.aspectRatio;l>1?c=a/l:a=c*l;const h=a/2,_=c/2;if(e.rotation){const t=-h,n=-_,a=h,c=_,l=-$e(e.rotation),u=Math.cos(l),p=Math.sin(l);s[i]=t*u-n*p+r,s[i+1]=t*p+n*u+o,s[i+2]=0,s[i+9]=a*u-n*p+r,s[i+10]=a*p+n*u+o,s[i+11]=0,s[i+18]=t*u-c*p+r,s[i+19]=t*p+c*u+o,s[i+20]=0,s[i+27]=a*u-c*p+r,s[i+28]=a*p+c*u+o,s[i+29]=0}else s[i]=r-h,s[i+1]=o-_,s[i+2]=0,s[i+9]=r+h,s[i+10]=o-_,s[i+11]=0,s[i+18]=r-h,s[i+19]=o+_,s[i+20]=0,s[i+27]=r+h,s[i+28]=o+_,s[i+29]=0;ti.toArray(s,e.color,i+5),ti.toArray(s,e.color,i+14),ti.toArray(s,e.color,i+23),ti.toArray(s,e.color,i+32)}step(e){const t=this.sys.assembler,n=this.sys,i=n.node,s=this.particles;if(e=e>t.maxParticleDeltaTime?t.maxParticleDeltaTime:e,i.updateWorldTransform(),n.positionType===Ave.FREE){this._worldRotation=function(e){let t=0,n=e;for(;n;)t+=n.eulerAngles.z,n=n.parent;return t}(i);const e=i.worldMatrix;wve.x=e.m12,wve.y=e.m13}else n.positionType===Ave.RELATIVE?(this._worldRotation=i.eulerAngles.z,wve.x=i.position.x,wve.y=i.position.y):this._worldRotation=0;if(this.active&&n.emissionRate){const t=1/n.emissionRate;for(s.length<n.totalParticles&&(this.emitCounter+=e);s.length<n.totalParticles&&this.emitCounter>t;)this.emitParticle(wve),this.emitCounter-=t;this.elapsed+=e,-1!==n.duration&&n.duration<this.elapsed&&n.stopSystem()}const r=this.renderData,o=s.length;r.reset(),this.requestData(4*o,6*o),o>this.uvFilled&&this.updateUVs();let a=0;for(;a<s.length;){Ive.x=Ive.y=Rve.x=Rve.y=Dve.x=Dve.y=0;const t=s[a];if(t.timeToLive-=e,t.timeToLive>0){if(n.emitterMode===Eve.GRAVITY){const i=Dve,s=Ive,r=Rve;(t.pos.x||t.pos.y)&&(s.set(t.pos),s.normalize()),r.set(s),s.multiplyScalar(t.radialAccel);const o=r.x;r.x=-r.y,r.y=o,r.multiplyScalar(t.tangentialAccel),i.set(s),i.add(r),i.add(n.gravity),i.multiplyScalar(e),t.dir.add(i),i.set(t.dir),i.multiplyScalar(e),t.pos.add(i)}else t.angle+=t.degreesPerSecond*e,t.radius+=t.deltaRadius*e,t.pos.x=-Math.cos(t.angle)*t.radius,t.pos.y=-Math.sin(t.angle)*t.radius;t.color.r+=t.deltaColor.r*e,t.color.g+=t.deltaColor.g*e,t.color.b+=t.deltaColor.b*e,t.color.a+=t.deltaColor.a*e,t.size+=t.deltaSize*e,t.size<0&&(t.size=0),t.rotation+=t.deltaRotation*e;const i=Ive;i.set(t.pos),n.positionType!==Ave.GROUPED&&i.add(t.startPos);const s=Ove*a*4;this.updateParticleBuffer(t,i,r,s),++a}else{const e=s[a];a!==s.length-1&&(s[a]=s[s.length-1]),Nve.put(e),s.length--,r.resize(r.vertexCount-4,r.indexCount-6)}}0!==s.length||this.active||this.readyToPlay||(this.finished=!0,n._finishedSimulation())}requestData(e,t){let n=this.renderData.indexCount;this.renderData.request(e,t);const i=this.renderData.indexCount/6,s=this.renderData.iData;for(let e=n;e<i;e++){const t=4*e;s[n++]=t,s[n++]=t+1,s[n++]=t+2,s[n++]=t+1,s[n++]=t+3,s[n++]=t+2}}}var zve,Fve,Bve;let Uve=e("ParticleAsset",Zc("cc.ParticleAsset")((Bve=Bc((Fve=class extends bh{constructor(...e){super(...e),Fc(this,"spriteFrame",Bve,this)}}).prototype,"spriteFrame",[il,dl],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),zve=Fve))||zve);i.ParticleAsset=Uve;
/** @license zlib.js 2012 - imaya [ https://github.com/imaya/zlib.js ] The MIT License */
var Gve={};(function(){function e(e){throw e}var t=void 0,n=!0,i=this;function s(e,n){var s,r=e.split("."),o=i;!(r[0]in o)&&o.execScript&&o.execScript("var "+r[0]);for(;r.length&&(s=r.shift());)r.length||n===t?o=o[s]?o[s]:o[s]={}:o[s]=n}var r="undefined"!=typeof Uint8Array&&"undefined"!=typeof Uint16Array&&"undefined"!=typeof Uint32Array;function o(e){if("string"==typeof e){var t,n,i=e.split("");for(t=0,n=i.length;t<n;t++)i[t]=(255&i[t].charCodeAt(0))>>>0;e=i}for(var s,r=1,o=0,a=e.length,c=0;0<a;){a-=s=1024<a?1024:a;do{o+=r+=e[c++]}while(--s);r%=65521,o%=65521}return(o<<16|r)>>>0}function a(t,n){this.index="number"==typeof n?n:0,this.i=0,this.buffer=t instanceof(r?Uint8Array:Array)?t:new(r?Uint8Array:Array)(32768),2*this.buffer.length<=this.index&&e(Error("invalid index")),this.buffer.length<=this.index&&this.f()}a.prototype.f=function(){var e,t=this.buffer,n=t.length,i=new(r?Uint8Array:Array)(n<<1);if(r)i.set(t);else for(e=0;e<n;++e)i[e]=t[e];return this.buffer=i},a.prototype.d=function(e,t,n){var i,s=this.buffer,r=this.index,o=this.i,a=s[r];if(n&&1<t&&(e=8<t?(p[255&e]<<24|p[e>>>8&255]<<16|p[e>>>16&255]<<8|p[e>>>24&255])>>32-t:p[e]>>8-t),8>t+o)a=a<<t|e,o+=t;else for(i=0;i<t;++i)a=a<<1|e>>t-i-1&1,8==++o&&(o=0,s[r++]=p[a],a=0,r===s.length&&(s=this.f()));s[r]=a,this.buffer=s,this.i=o,this.index=r},a.prototype.finish=function(){var e,t=this.buffer,n=this.index;return 0<this.i&&(t[n]<<=8-this.i,t[n]=p[t[n]],n++),r?e=t.subarray(0,n):(t.length=n,e=t),e};var c,l=new(r?Uint8Array:Array)(256);for(c=0;256>c;++c){for(var h=u=c,_=7,u=u>>>1;u;u>>>=1)h<<=1,h|=1&u,--_;l[c]=(h<<_&255)>>>0}var p=l;function d(e){this.buffer=new(r?Uint16Array:Array)(2*e),this.length=0}function f(e){var t,n,i,s,o,a,c,l,h,_=e.length,u=0,p=Number.POSITIVE_INFINITY;for(l=0;l<_;++l)e[l]>u&&(u=e[l]),e[l]<p&&(p=e[l]);for(t=1<<u,n=new(r?Uint32Array:Array)(t),i=1,s=0,o=2;i<=u;){for(l=0;l<_;++l)if(e[l]===i){for(a=0,c=s,h=0;h<i;++h)a=a<<1|1&c,c>>=1;for(h=a;h<t;h+=o)n[h]=i<<16|l;++s}++i,s<<=1,o<<=1}return[n,u,p]}function m(e,t){this.h=v,this.w=0,this.input=e,this.b=0,t&&(t.lazy&&(this.w=t.lazy),"number"==typeof t.compressionType&&(this.h=t.compressionType),t.outputBuffer&&(this.a=r&&t.outputBuffer instanceof Array?new Uint8Array(t.outputBuffer):t.outputBuffer),"number"==typeof t.outputIndex&&(this.b=t.outputIndex)),this.a||(this.a=new(r?Uint8Array:Array)(32768))}d.prototype.getParent=function(e){return 2*((e-2)/4|0)},d.prototype.push=function(e,t){var n,i,s,r=this.buffer;for(n=this.length,r[this.length++]=t,r[this.length++]=e;0<n&&(i=this.getParent(n),r[n]>r[i]);)s=r[n],r[n]=r[i],r[i]=s,s=r[n+1],r[n+1]=r[i+1],r[i+1]=s,n=i;return this.length},d.prototype.pop=function(){var e,t,n,i,s,r=this.buffer;for(t=r[0],e=r[1],this.length-=2,r[0]=r[this.length],r[1]=r[this.length+1],s=0;!((i=2*s+2)>=this.length)&&(i+2<this.length&&r[i+2]>r[i]&&(i+=2),r[i]>r[s]);)n=r[s],r[s]=r[i],r[i]=n,n=r[s+1],r[s+1]=r[i+1],r[i+1]=n,s=i;return{index:e,value:t,length:this.length}};var g,v=2,y={NONE:0,r:1,j:v,N:3},x=[];for(g=0;288>g;g++)switch(n){case 143>=g:x.push([g+48,8]);break;case 255>=g:x.push([g-144+400,9]);break;case 279>=g:x.push([g-256+0,7]);break;case 287>=g:x.push([g-280+192,8]);break;default:e("invalid literal: "+g)}function S(e,t){this.length=e,this.G=t}function C(){var t=T;switch(n){case 3===t:return[257,t-3,0];case 4===t:return[258,t-4,0];case 5===t:return[259,t-5,0];case 6===t:return[260,t-6,0];case 7===t:return[261,t-7,0];case 8===t:return[262,t-8,0];case 9===t:return[263,t-9,0];case 10===t:return[264,t-10,0];case 12>=t:return[265,t-11,1];case 14>=t:return[266,t-13,1];case 16>=t:return[267,t-15,1];case 18>=t:return[268,t-17,1];case 22>=t:return[269,t-19,2];case 26>=t:return[270,t-23,2];case 30>=t:return[271,t-27,2];case 34>=t:return[272,t-31,2];case 42>=t:return[273,t-35,3];case 50>=t:return[274,t-43,3];case 58>=t:return[275,t-51,3];case 66>=t:return[276,t-59,3];case 82>=t:return[277,t-67,4];case 98>=t:return[278,t-83,4];case 114>=t:return[279,t-99,4];case 130>=t:return[280,t-115,4];case 162>=t:return[281,t-131,5];case 194>=t:return[282,t-163,5];case 226>=t:return[283,t-195,5];case 257>=t:return[284,t-227,5];case 258===t:return[285,t-258,0];default:e("invalid length: "+t)}}m.prototype.n=function(){var i,s,o,c,l=this.input;switch(this.h){case 0:for(o=0,c=l.length;o<c;){var h,_,u,p=s=r?l.subarray(o,o+65535):l.slice(o,o+65535),d=(o+=s.length)===c,f=t,m=t,g=this.a,y=this.b;if(r){for(g=new Uint8Array(this.a.buffer);g.length<=y+p.length+5;)g=new Uint8Array(g.length<<1);g.set(this.a)}if(h=d?1:0,g[y++]=0|h,u=65536+~(_=p.length)&65535,g[y++]=255&_,g[y++]=_>>>8&255,g[y++]=255&u,g[y++]=u>>>8&255,r)g.set(p,y),y+=p.length,g=g.subarray(0,y);else{for(f=0,m=p.length;f<m;++f)g[y++]=p[f];g.length=y}this.b=y,this.a=g}break;case 1:var S=new a(new Uint8Array(this.a.buffer),this.b);S.d(1,1,n),S.d(1,2,n);var C,T,b,E=P(this,l);for(C=0,T=E.length;C<T;C++)if(b=E[C],a.prototype.d.apply(S,x[b]),256<b)S.d(E[++C],E[++C],n),S.d(E[++C],5),S.d(E[++C],E[++C],n);else if(256===b)break;this.a=S.finish(),this.b=this.a.length;break;case v:var A,R,D,O,M,N,L,z,F,B,U,G,H,k,V,j=new a(new Uint8Array(this.a),this.b),W=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],q=Array(19);for(A=v,j.d(1,1,n),j.d(A,2,n),R=P(this,l),L=I(N=w(this.L,15)),F=I(z=w(this.K,7)),D=286;257<D&&0===N[D-1];D--);for(O=30;1<O&&0===z[O-1];O--);var X,Y,K,$,Z,Q,J=D,ee=O,te=new(r?Uint32Array:Array)(J+ee),ne=new(r?Uint32Array:Array)(316),ie=new(r?Uint8Array:Array)(19);for(X=Y=0;X<J;X++)te[Y++]=N[X];for(X=0;X<ee;X++)te[Y++]=z[X];if(!r)for(X=0,$=ie.length;X<$;++X)ie[X]=0;for(X=Z=0,$=te.length;X<$;X+=Y){for(Y=1;X+Y<$&&te[X+Y]===te[X];++Y);if(K=Y,0===te[X])if(3>K)for(;0<K--;)ne[Z++]=0,ie[0]++;else for(;0<K;)(Q=138>K?K:138)>K-3&&Q<K&&(Q=K-3),10>=Q?(ne[Z++]=17,ne[Z++]=Q-3,ie[17]++):(ne[Z++]=18,ne[Z++]=Q-11,ie[18]++),K-=Q;else if(ne[Z++]=te[X],ie[te[X]]++,3>--K)for(;0<K--;)ne[Z++]=te[X],ie[te[X]]++;else for(;0<K;)(Q=6>K?K:6)>K-3&&Q<K&&(Q=K-3),ne[Z++]=16,ne[Z++]=Q-3,ie[16]++,K-=Q}for(i=r?ne.subarray(0,Z):ne.slice(0,Z),B=w(ie,7),k=0;19>k;k++)q[k]=B[W[k]];for(M=19;4<M&&0===q[M-1];M--);for(U=I(B),j.d(D-257,5,n),j.d(O-1,5,n),j.d(M-4,4,n),k=0;k<M;k++)j.d(q[k],3,n);for(k=0,V=i.length;k<V;k++)if(G=i[k],j.d(U[G],B[G],n),16<=G){switch(k++,G){case 16:H=2;break;case 17:H=3;break;case 18:H=7;break;default:e("invalid code: "+G)}j.d(i[k],H,n)}var se,re,oe,ae,ce,le,he,_e,ue=[L,N],pe=[F,z];for(ce=ue[0],le=ue[1],he=pe[0],_e=pe[1],se=0,re=R.length;se<re;++se)if(oe=R[se],j.d(ce[oe],le[oe],n),256<oe)j.d(R[++se],R[++se],n),ae=R[++se],j.d(he[ae],_e[ae],n),j.d(R[++se],R[++se],n);else if(256===oe)break;this.a=j.finish(),this.b=this.a.length;break;default:e("invalid compression type")}return this.a};var T,b,E=[];for(T=3;258>=T;T++)b=C(),E[T]=b[2]<<24|b[1]<<16|b[0];var A=r?new Uint32Array(E):E;function P(i,s){function o(t,i){var s,r,o,a,c=t.G,l=[],h=0;switch(s=A[t.length],l[h++]=65535&s,l[h++]=s>>16&255,l[h++]=s>>24,n){case 1===c:r=[0,c-1,0];break;case 2===c:r=[1,c-2,0];break;case 3===c:r=[2,c-3,0];break;case 4===c:r=[3,c-4,0];break;case 6>=c:r=[4,c-5,1];break;case 8>=c:r=[5,c-7,1];break;case 12>=c:r=[6,c-9,2];break;case 16>=c:r=[7,c-13,2];break;case 24>=c:r=[8,c-17,3];break;case 32>=c:r=[9,c-25,3];break;case 48>=c:r=[10,c-33,4];break;case 64>=c:r=[11,c-49,4];break;case 96>=c:r=[12,c-65,5];break;case 128>=c:r=[13,c-97,5];break;case 192>=c:r=[14,c-129,6];break;case 256>=c:r=[15,c-193,6];break;case 384>=c:r=[16,c-257,7];break;case 512>=c:r=[17,c-385,7];break;case 768>=c:r=[18,c-513,8];break;case 1024>=c:r=[19,c-769,8];break;case 1536>=c:r=[20,c-1025,9];break;case 2048>=c:r=[21,c-1537,9];break;case 3072>=c:r=[22,c-2049,10];break;case 4096>=c:r=[23,c-3073,10];break;case 6144>=c:r=[24,c-4097,11];break;case 8192>=c:r=[25,c-6145,11];break;case 12288>=c:r=[26,c-8193,12];break;case 16384>=c:r=[27,c-12289,12];break;case 24576>=c:r=[28,c-16385,13];break;case 32768>=c:r=[29,c-24577,13];break;default:e("invalid distance")}for(s=r,l[h++]=s[0],l[h++]=s[1],l[h++]=s[2],o=0,a=l.length;o<a;++o)g[v++]=l[o];x[l[0]]++,C[l[3]]++,y=t.length+i-1,d=null}var a,c,l,h,_,u,p,d,f,m={},g=r?new Uint16Array(2*s.length):[],v=0,y=0,x=new(r?Uint32Array:Array)(286),C=new(r?Uint32Array:Array)(30),T=i.w;if(!r){for(l=0;285>=l;)x[l++]=0;for(l=0;29>=l;)C[l++]=0}for(x[256]=1,a=0,c=s.length;a<c;++a){for(l=_=0,h=3;l<h&&a+l!==c;++l)_=_<<8|s[a+l];if(m[_]===t&&(m[_]=[]),u=m[_],!(0<y--)){for(;0<u.length&&32768<a-u[0];)u.shift();if(a+3>=c){for(d&&o(d,-1),l=0,h=c-a;l<h;++l)f=s[a+l],g[v++]=f,++x[f];break}if(0<u.length){var b=t,E=t,P=0,w=t,I=t,R=t,D=s.length,O=(I=0,u.length);e:for(;I<O;I++){if(b=u[O-I-1],w=3,3<P){for(R=P;3<R;R--)if(s[b+R-1]!==s[a+R-1])continue e;w=P}for(;258>w&&a+w<D&&s[b+w]===s[a+w];)++w;if(w>P&&(E=b,P=w),258===w)break}p=new S(P,a-E),d?d.length<p.length?(f=s[a-1],g[v++]=f,++x[f],o(p,0)):o(d,-1):p.length<T?d=p:o(p,0)}else d?o(d,-1):(f=s[a],g[v++]=f,++x[f])}u.push(a)}return g[v++]=256,x[256]++,i.L=x,i.K=C,r?g.subarray(0,v):g}function w(e,t){function n(e){var t=T[e][b[e]];t===v?(n(e+1),n(e+1)):--S[t],++b[e]}var i,s,o,a,c,l=e.length,h=new d(572),_=new(r?Uint8Array:Array)(l);if(!r)for(a=0;a<l;a++)_[a]=0;for(a=0;a<l;++a)0<e[a]&&h.push(a,e[a]);if(i=Array(h.length/2),s=new(r?Uint32Array:Array)(h.length/2),1===i.length)return _[h.pop().index]=1,_;for(a=0,c=h.length/2;a<c;++a)i[a]=h.pop(),s[a]=i[a].value;var u,p,f,m,g,v=s.length,y=new(r?Uint16Array:Array)(t),x=new(r?Uint8Array:Array)(t),S=new(r?Uint8Array:Array)(v),C=Array(t),T=Array(t),b=Array(t),E=(1<<t)-v,A=1<<t-1;for(y[t-1]=v,p=0;p<t;++p)E<A?x[p]=0:(x[p]=1,E-=A),E<<=1,y[t-2-p]=(y[t-1-p]/2|0)+v;for(y[0]=x[0],C[0]=Array(y[0]),T[0]=Array(y[0]),p=1;p<t;++p)y[p]>2*y[p-1]+x[p]&&(y[p]=2*y[p-1]+x[p]),C[p]=Array(y[p]),T[p]=Array(y[p]);for(u=0;u<v;++u)S[u]=t;for(f=0;f<y[t-1];++f)C[t-1][f]=s[f],T[t-1][f]=f;for(u=0;u<t;++u)b[u]=0;for(1===x[t-1]&&(--S[0],++b[t-1]),p=t-2;0<=p;--p){for(m=u=0,g=b[p+1],f=0;f<y[p];f++)(m=C[p+1][g]+C[p+1][g+1])>s[u]?(C[p][f]=m,T[p][f]=v,g+=2):(C[p][f]=s[u],T[p][f]=u,++u);b[p]=0,1===x[p]&&n(p)}for(o=S,a=0,c=i.length;a<c;++a)_[i[a].index]=o[a];return _}function I(t){var n,i,s,o,a=new(r?Uint16Array:Array)(t.length),c=[],l=[],h=0;for(n=0,i=t.length;n<i;n++)c[t[n]]=1+(0|c[t[n]]);for(n=1,i=16;n<=i;n++)l[n]=h,(h+=0|c[n])>1<<n&&e("overcommitted"),h<<=1;for(65536>h&&e("undercommitted"),n=0,i=t.length;n<i;n++)for(h=l[t[n]],l[t[n]]+=1,s=a[n]=0,o=t[n];s<o;s++)a[n]=a[n]<<1|1&h,h>>>=1;return a}function R(e,t){this.input=e,this.a=new(r?Uint8Array:Array)(32768),this.h=D.j;var n,i={};for(n in!t&&(t={})||"number"!=typeof t.compressionType||(this.h=t.compressionType),t)i[n]=t[n];i.outputBuffer=this.a,this.z=new m(this.input,i)}var D=y;function O(t,n){switch(this.k=[],this.l=32768,this.e=this.g=this.c=this.q=0,this.input=r?new Uint8Array(t):t,this.s=!1,this.m=N,this.B=!1,!n&&(n={})||(n.index&&(this.c=n.index),n.bufferSize&&(this.l=n.bufferSize),n.bufferType&&(this.m=n.bufferType),n.resize&&(this.B=n.resize)),this.m){case M:this.b=32768,this.a=new(r?Uint8Array:Array)(32768+this.l+258);break;case N:this.b=0,this.a=new(r?Uint8Array:Array)(this.l),this.f=this.J,this.t=this.H,this.o=this.I;break;default:e(Error("invalid inflate mode"))}}R.prototype.n=function(){var t,n,i,s,a,c,l,h=0;switch(l=this.a,t=he){case he:n=Math.LOG2E*Math.log(32768)-8;break;default:e(Error("invalid compression method"))}switch(i=n<<4|t,l[h++]=i,t){case he:switch(this.h){case D.NONE:a=0;break;case D.r:a=1;break;case D.j:a=2;break;default:e(Error("unsupported compression type"))}break;default:e(Error("invalid compression method"))}return s=a<<6|0,l[h++]=s|31-(256*i+s)%31,c=o(this.input),this.z.b=h,h=(l=this.z.n()).length,r&&((l=new Uint8Array(l.buffer)).length<=h+4&&(this.a=new Uint8Array(l.length+4),this.a.set(l),l=this.a),l=l.subarray(0,h+4)),l[h++]=c>>24&255,l[h++]=c>>16&255,l[h++]=c>>8&255,l[h++]=255&c,l},s("Zlib.Deflate",R),s("Zlib.Deflate.compress",(function(e,t){return new R(e,t).n()})),s("Zlib.Deflate.CompressionType",D),s("Zlib.Deflate.CompressionType.NONE",D.NONE),s("Zlib.Deflate.CompressionType.FIXED",D.r),s("Zlib.Deflate.CompressionType.DYNAMIC",D.j);var M=0,N=1,L={D:M,C:N};O.prototype.p=function(){for(;!this.s;){var i=ee(this,3);switch(1&i&&(this.s=n),i>>>=1){case 0:var s=this.input,o=this.c,a=this.a,c=this.b,l=t,h=t,_=t,u=a.length,p=t;switch(this.e=this.g=0,(l=s[o++])===t&&e(Error("invalid uncompressed block header: LEN (first byte)")),h=l,(l=s[o++])===t&&e(Error("invalid uncompressed block header: LEN (second byte)")),h|=l<<8,(l=s[o++])===t&&e(Error("invalid uncompressed block header: NLEN (first byte)")),_=l,(l=s[o++])===t&&e(Error("invalid uncompressed block header: NLEN (second byte)")),h===~(_|=l<<8)&&e(Error("invalid uncompressed block header: length verify")),o+h>s.length&&e(Error("input buffer is broken")),this.m){case M:for(;c+h>a.length;){if(h-=p=u-c,r)a.set(s.subarray(o,o+p),c),c+=p,o+=p;else for(;p--;)a[c++]=s[o++];this.b=c,a=this.f(),c=this.b}break;case N:for(;c+h>a.length;)a=this.f({v:2});break;default:e(Error("invalid inflate mode"))}if(r)a.set(s.subarray(o,o+h),c),c+=h,o+=h;else for(;h--;)a[c++]=s[o++];this.c=o,this.b=c,this.a=a;break;case 1:this.o(Z,J);break;case 2:ne(this);break;default:e(Error("unknown BTYPE: "+i))}}return this.t()};var z,F,B=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],U=r?new Uint16Array(B):B,G=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,258,258],H=r?new Uint16Array(G):G,k=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0],V=r?new Uint8Array(k):k,j=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577],W=r?new Uint16Array(j):j,q=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],X=r?new Uint8Array(q):q,Y=new(r?Uint8Array:Array)(288);for(z=0,F=Y.length;z<F;++z)Y[z]=143>=z?8:255>=z?9:279>=z?7:8;var K,$,Z=f(Y),Q=new(r?Uint8Array:Array)(30);for(K=0,$=Q.length;K<$;++K)Q[K]=5;var J=f(Q);function ee(n,i){for(var s,r=n.g,o=n.e,a=n.input,c=n.c;o<i;)(s=a[c++])===t&&e(Error("input buffer is broken")),r|=s<<o,o+=8;return s=r&(1<<i)-1,n.g=r>>>i,n.e=o-i,n.c=c,s}function te(n,i){for(var s,r,o,a=n.g,c=n.e,l=n.input,h=n.c,_=i[0],u=i[1];c<u;)(s=l[h++])===t&&e(Error("input buffer is broken")),a|=s<<c,c+=8;return o=(r=_[a&(1<<u)-1])>>>16,n.g=a>>o,n.e=c-o,n.c=h,65535&r}function ne(e){function t(e,t,n){var i,s,r,o;for(o=0;o<e;)switch(i=te(this,t),i){case 16:for(r=3+ee(this,2);r--;)n[o++]=s;break;case 17:for(r=3+ee(this,3);r--;)n[o++]=0;s=0;break;case 18:for(r=11+ee(this,7);r--;)n[o++]=0;s=0;break;default:s=n[o++]=i}return n}var n,i,s,o,a=ee(e,5)+257,c=ee(e,5)+1,l=ee(e,4)+4,h=new(r?Uint8Array:Array)(U.length);for(o=0;o<l;++o)h[U[o]]=ee(e,3);n=f(h),i=new(r?Uint8Array:Array)(a),s=new(r?Uint8Array:Array)(c),e.o(f(t.call(e,a,n,i)),f(t.call(e,c,n,s)))}function ie(t,n){var i,s;switch(this.input=t,this.c=0,!n&&(n={})||(n.index&&(this.c=n.index),n.verify&&(this.M=n.verify)),i=t[this.c++],s=t[this.c++],15&i){case he:this.method=he;break;default:e(Error("unsupported compression method"))}0!=((i<<8)+s)%31&&e(Error("invalid fcheck flag:"+((i<<8)+s)%31)),32&s&&e(Error("fdict flag is not supported")),this.A=new O(t,{index:this.c,bufferSize:n.bufferSize,bufferType:n.bufferType,resize:n.resize})}O.prototype.o=function(e,t){var n=this.a,i=this.b;this.u=e;for(var s,r,o,a,c=n.length-258;256!==(s=te(this,e));)if(256>s)i>=c&&(this.b=i,n=this.f(),i=this.b),n[i++]=s;else for(a=H[r=s-257],0<V[r]&&(a+=ee(this,V[r])),s=te(this,t),o=W[s],0<X[s]&&(o+=ee(this,X[s])),i>=c&&(this.b=i,n=this.f(),i=this.b);a--;)n[i]=n[i++-o];for(;8<=this.e;)this.e-=8,this.c--;this.b=i},O.prototype.I=function(e,t){var n=this.a,i=this.b;this.u=e;for(var s,r,o,a,c=n.length;256!==(s=te(this,e));)if(256>s)i>=c&&(c=(n=this.f()).length),n[i++]=s;else for(a=H[r=s-257],0<V[r]&&(a+=ee(this,V[r])),s=te(this,t),o=W[s],0<X[s]&&(o+=ee(this,X[s])),i+a>c&&(c=(n=this.f()).length);a--;)n[i]=n[i++-o];for(;8<=this.e;)this.e-=8,this.c--;this.b=i},O.prototype.f=function(){var e,t,n=new(r?Uint8Array:Array)(this.b-32768),i=this.b-32768,s=this.a;if(r)n.set(s.subarray(32768,n.length));else for(e=0,t=n.length;e<t;++e)n[e]=s[e+32768];if(this.k.push(n),this.q+=n.length,r)s.set(s.subarray(i,i+32768));else for(e=0;32768>e;++e)s[e]=s[i+e];return this.b=32768,s},O.prototype.J=function(e){var t,n,i,s=this.input.length/this.c+1|0,o=this.input,a=this.a;return e&&("number"==typeof e.v&&(s=e.v),"number"==typeof e.F&&(s+=e.F)),n=2>s?(i=(o.length-this.c)/this.u[2]/2*258|0)<a.length?a.length+i:a.length<<1:a.length*s,r?(t=new Uint8Array(n)).set(a):t=a,this.a=t},O.prototype.t=function(){var e,t,n,i,s,o=0,a=this.a,c=this.k,l=new(r?Uint8Array:Array)(this.q+(this.b-32768));if(0===c.length)return r?this.a.subarray(32768,this.b):this.a.slice(32768,this.b);for(t=0,n=c.length;t<n;++t)for(i=0,s=(e=c[t]).length;i<s;++i)l[o++]=e[i];for(t=32768,n=this.b;t<n;++t)l[o++]=a[t];return this.k=[],this.buffer=l},O.prototype.H=function(){var e,t=this.b;return r?this.B?(e=new Uint8Array(t)).set(this.a.subarray(0,t)):e=this.a.subarray(0,t):(this.a.length>t&&(this.a.length=t),e=this.a),this.buffer=e},ie.prototype.p=function(){var t,n=this.input;return t=this.A.p(),this.c=this.A.c,this.M&&(n[this.c++]<<24|n[this.c++]<<16|n[this.c++]<<8|n[this.c++])>>>0!==o(t)&&e(Error("invalid adler-32 checksum")),t},s("Zlib.Inflate",ie),s("Zlib.Inflate.BufferType",L),L.ADAPTIVE=L.C,L.BLOCK=L.D,s("Zlib.Inflate.prototype.decompress",ie.prototype.p);var se,re,oe=new(r?Uint8Array:Array)(288);for(se=0,re=oe.length;se<re;++se)oe[se]=143>=se?8:255>=se?9:279>=se?7:8;f(oe);var ae,ce,le=new(r?Uint8Array:Array)(30);for(ae=0,ce=le.length;ae<ce;++ae)le[ae]=5;f(le);var he=8}).call(Gve);var Hve=Gve.Zlib;Hve.Deflate=Hve.Deflate,Hve.Deflate.compress=Hve.Deflate.compress,Hve.Inflate=Hve.Inflate,Hve.Inflate.BufferType=Hve.Inflate.BufferType,Hve.Inflate.prototype.decompress=Hve.Inflate.prototype.decompress;class kve{constructor(e){let t;this.pos=8,this.palette=[],this.imgData=[],this.text={},this.width=0,this.height=0,this.bits=0,this.colorType=0,this.compressionMethod=0,this.filterMethod=0,this.interlaceMethod=0,this.colors=0,this.hasAlphaChannel=!1,this.pixelBitlength=0,this.data=e,this.transparency={indexed:[],rgb:0,grayscale:0};let n=0,i=0,s=0,r=0;for(;;){r=this.readUInt32();const o=(()=>{const e=[];for(n=i=0;i<4;n=++i)e.push(String.fromCharCode(this.data[this.pos++]));return e}).call(this).join("");switch(o){case"IHDR":this.width=this.readUInt32(),this.height=this.readUInt32(),this.bits=this.data[this.pos++],this.colorType=this.data[this.pos++],this.compressionMethod=this.data[this.pos++],this.filterMethod=this.data[this.pos++],this.interlaceMethod=this.data[this.pos++];break;case"acTL":this.animation={numFrames:this.readUInt32(),numPlays:this.readUInt32()||1/0,frames:[]};break;case"PLTE":this.palette=this.read(r);break;case"fcTL":t&&this.animation.frames.push(t),this.pos+=4,t={width:this.readUInt32(),height:this.readUInt32(),xOffset:this.readUInt32(),yOffset:this.readUInt32()};const a=this.readUInt16(),c=this.readUInt16()||100;t.delay=1e3*a/c,t.disposeOp=this.data[this.pos++],t.blendOp=this.data[this.pos++],t.data=[];break;case"IDAT":case"fdAT":for("fdAT"===o&&(this.pos+=4,r-=4),e=(null!=t?t.data:void 0)||this.imgData,n=i=0;r>=0?i<r:i>r;n=r>=0?++i:--i)e.push(this.data[this.pos++]);break;case"tRNS":switch(this.transparency={},this.colorType){case 3:this.transparency.indexed=this.read(r);const e=255-this.transparency.indexed.length;if(e>0)for(n=s=0;e>=0?s<e:s>e;n=e>=0?++s:--s)this.transparency.indexed.push(255);break;case 0:this.transparency.grayscale=this.read(r)[0];break;case 2:this.transparency.rgb=this.read(r)}break;case"tEXt":const l=this.read(r),h=l.indexOf(0),_=String.fromCharCode.apply(String,l.slice(0,h));this.text[_]=String.fromCharCode.apply(String,l.slice(h+1));break;case"IEND":t&&this.animation.frames.push(t),this.colors=(()=>{switch(this.colorType){case 0:case 3:case 4:return 1;case 2:case 6:return 3}}).call(this);const u=this.colorType;this.hasAlphaChannel=4===u||6===u;const p=this.colors+(this.hasAlphaChannel?1:0);return this.pixelBitlength=this.bits*p,this.colorSpace=(()=>{switch(this.colors){case 1:return"DeviceGray";case 3:return"DeviceRGB"}}).call(this),void(this.imgData instanceof Uint8Array||(this.imgData=new Uint8Array(this.imgData)));default:this.pos+=r}if(this.pos+=4,this.pos>this.data.length)throw new Error(I(6017))}}read(e){let t=0,n=0;const i=[];for(t=n=0;e>=0?n<e:n>e;t=e>=0?++n:--n)i.push(this.data[this.pos++]);return i}readUInt32(){return this.data[this.pos++]<<24|this.data[this.pos++]<<16|this.data[this.pos++]<<8|this.data[this.pos++]}readUInt16(){return this.data[this.pos++]<<8|this.data[this.pos++]}decodePixels(e){if(null==e&&(e=this.imgData),0===e.length)return new Uint8Array(0);e=new Hve.Inflate(e,{index:0,verify:!1}).decompress();const t=this.pixelBitlength/8,n=t*this.width,i=new Uint8Array(n*this.height),s=e.length;let r=0,o=0,a=0,c=0,l=0,h=0,_=0,u=0,p=0,d=0,f=0,m=0,g=0,v=0,y=0,x=0,S=0,C=0,T=0;for(;o<s;){switch(e[o++]){case 0:for(h=_=0;_<n;h=_+=1)i[a++]=e[o++];break;case 1:for(h=u=0;u<n;h=u+=1)c=e[o++],m=h<t?0:i[a-t],i[a++]=(c+m)%256;break;case 2:for(h=p=0;p<n;h=p+=1)c=e[o++],l=(h-h%t)/t,C=r&&i[(r-1)*n+l*t+h%t],i[a++]=(C+c)%256;break;case 3:for(h=d=0;d<n;h=d+=1)c=e[o++],l=(h-h%t)/t,m=h<t?0:i[a-t],C=r&&i[(r-1)*n+l*t+h%t],i[a++]=(c+Math.floor((m+C)/2))%256;break;case 4:for(h=f=0;f<n;h=f+=1)c=e[o++],l=(h-h%t)/t,m=h<t?0:i[a-t],0===r?C=T=0:(C=i[(r-1)*n+l*t+h%t],T=l&&i[(r-1)*n+(l-1)*t+h%t]),g=m+C-T,v=Math.abs(g-m),x=Math.abs(g-C),S=Math.abs(g-T),y=v<=x&&v<=S?m:x<=S?C:T,i[a++]=(c+y)%256;break;default:throw new Error(I(6018,e[o-1]))}r++}return i}copyToImageData(e,t){let n,i=this.hasAlphaChannel,s=this.colors;this.palette.length&&(n=null!=this._decodedPalette?this._decodedPalette:this._decodedPalette=this.decodePalette(),s=4,i=!0);const r=e.data||e,o=r.length,a=n||t;let c=0,l=0,h=0,_=0;if(1===s)for(;c<o;)h=n?4*t[c/4]:l,_=a[h++],r[c++]=_,r[c++]=_,r[c++]=_,r[c++]=i?a[h++]:255,l=h;else for(;c<o;)h=n?4*t[c/4]:l,r[c++]=a[h++],r[c++]=a[h++],r[c++]=a[h++],r[c++]=i?a[h++]:255,l=h}decodePalette(){const e=this.palette,t=this.transparency.indexed||[],n=new Uint8Array((t.length||0)+e.length);let i=0,s=0,r=0;for(let o=0,a=0,c=e.length;a<c;o=a+=3)n[i++]=e[o],n[i++]=e[o+1],n[i++]=e[o+2],r=t[s++],n[i++]=null!=r?r:255;return n}render(e){e.width=this.width,e.height=this.height;const t=e.getContext("2d"),n=t.createImageData(this.width,this.height);return this.copyToImageData(n,this.decodePixels(null)),t.putImageData(n,0,0)}}class Vve{constructor(){this._littleEndian=!1,this._tiffData=[],this._fileDirectories=[]}getUint8(e){return this._tiffData[e]}getUint16(e){return this._littleEndian?this._tiffData[e+1]<<8|this._tiffData[e]:this._tiffData[e]<<8|this._tiffData[e+1]}getUint32(e){const t=this._tiffData;return this._littleEndian?t[e+3]<<24|t[e+2]<<16|t[e+1]<<8|t[e]:t[e]<<24|t[e+1]<<16|t[e+2]<<8|t[e+3]}checkLittleEndian(){const e=this.getUint16(0);if(18761===e)this._littleEndian=!0;else{if(19789!==e)throw console.log(e),TypeError(I(6019));this._littleEndian=!1}return this._littleEndian}hasTowel(){if(42!==this.getUint16(2))throw RangeError(I(6020));return!0}getFieldTypeName(e){return e in Wve?Wve[e]:null}getFieldTagName(e){return e in jve?jve[e]:(S(6021,e),`Tag${e}`)}getFieldTypeLength(e){return-1!==["BYTE","ASCII","SBYTE","UNDEFINED"].indexOf(e)?1:-1!==["SHORT","SSHORT"].indexOf(e)?2:-1!==["LONG","SLONG","FLOAT"].indexOf(e)?4:-1!==["RATIONAL","SRATIONAL","DOUBLE"].indexOf(e)?8:0}getFieldValues(e,t,n,i){const s=[],r=this.getFieldTypeLength(t);if(r*n<=4)!1===this._littleEndian?s.push(i>>>8*(4-r)):s.push(i);else for(let e=0;e<n;e++){const n=r*e;r>=8?-1!==["RATIONAL","SRATIONAL"].indexOf(t)?(s.push(this.getUint32(i+n)),s.push(this.getUint32(i+n+4))):S(8e3):s.push(this.getBytes(r,i+n))}return"ASCII"===t&&s.forEach(((e,t,n)=>{n[t]=String.fromCharCode(e)})),s}getBytes(e,t){if(e<=0)S(8001);else{if(e<=1)return this.getUint8(t);if(e<=2)return this.getUint16(t);if(e<=3)return this.getUint32(t)>>>8;if(e<=4)return this.getUint32(t);S(8002)}return 0}getBits(e,t,n){n=n||0;const i=t+Math.floor(n/8),s=n+e,r=32-e;let o=0,a=0;return s<=0?S(6023):s<=8?(o=24+n,a=this.getUint8(i)):s<=16?(o=16+n,a=this.getUint16(i)):s<=32?(o=n,a=this.getUint32(i)):S(6022),{bits:a<<o>>>r,byteOffset:i+Math.floor(s/8),bitOffset:s%8}}parseFileDirectory(e){const t=this.getUint16(e),n=[];let i=0,s=0;for(i=e+2,s=0;s<t;i+=12,s++){const e=this.getUint16(i),t=this.getUint16(i+2),s=this.getUint32(i+4),r=this.getUint32(i+8),o=this.getFieldTagName(e),a=this.getFieldTypeName(t),c=this.getFieldValues(o,a,s,r);n[o]={type:a,values:c}}this._fileDirectories.push(n);const r=this.getUint32(i);0!==r&&this.parseFileDirectory(r)}clampColorSample(e,t){const n=Math.pow(2,8-t);return Math.floor(e*n+(n-1))}parseTIFF(e,t){if(t=t||document.createElement("canvas"),this._tiffData=e,this._canvas=t,this.checkLittleEndian(),!this.hasTowel())return;const n=this.getUint32(4);this._fileDirectories.length=0,this.parseFileDirectory(n);const i=this._fileDirectories[0],s=i.ImageWidth.values[0],r=i.ImageLength.values[0];this._canvas.width=s,this._canvas.height=r;const o=[],a=i.Compression?i.Compression.values[0]:1,c=i.SamplesPerPixel.values[0],l=[];let h=0,_=!1;i.BitsPerSample.values.forEach(((e,t)=>{l[t]={bitsPerSample:e,hasBytesPerSample:!1,bytesPerSample:void 0},e%8==0&&(l[t].hasBytesPerSample=!0,l[t].bytesPerSample=e/8),h+=e}),this);let u=0;h%8==0&&(_=!0,u=h/8);const p=i.StripOffsets.values,d=p.length;let f;if(i.StripByteCounts)f=i.StripByteCounts.values;else{if(S(8003),1!==d)throw Error(I(6024));f=[Math.ceil(s*r*h/8)]}let m=1,g=1;for(let e=0;e<d;e++){const t=p[e];o[e]=[];const n=f[e];for(let i=0,s=0,r=1,h=!0,p=[],d=0,f=0,v=0;i<n;i+=r)switch(a){case 1:p=[];for(let e=0;e<c;e++){const n=l[e];if(!n.hasBytesPerSample){const e=this.getBits(n.bitsPerSample,t+i,s);throw p.push(e.bits),i=e.byteOffset-t,s=e.bitOffset,RangeError(I(6025))}{const s=n.bytesPerSample*e;p.push(this.getBytes(n.bytesPerSample,t+i+s))}}if(o[e].push(p),!_)throw r=0,RangeError(I(6026));r=u;break;case 2:case 3:case 4:case 5:case 6:case 7:break;case 32773:if(h){h=!1;const e=this.getUint8(t+i);e>=0&&e<=127?m=e+1:e>=-127&&e<=-1?g=1-e:h=!0}else{const n=this.getUint8(t+i);for(let t=0;t<g;t++){const t=l[f];if(!t.hasBytesPerSample)throw RangeError(I(6025));v=v<<8*d|n,d++,d===t.bytesPerSample&&(p.push(v),v=d=0,f++),f===c&&(o[e].push(p),p=[],f=0)}m--,0===m&&(h=!0)}r=1}}if(t.getContext){const e=this._canvas.getContext("2d");e.fillStyle="rgba(255, 255, 255, 0)";const t=i.RowsPerStrip?i.RowsPerStrip.values[0]:r,n=o.length,a=r%t,c=0===a?t:a;let h=t,_=0;const u=i.PhotometricInterpretation.values[0];let p=[],d=0;i.ExtraSamples&&(p=i.ExtraSamples.values,d=p.length);let f=[],m=0;i.ColorMap&&(f=i.ColorMap.values,m=Math.pow(2,l[0].bitsPerSample));for(let t=0;t<n;t++){t+1===n&&(h=c);const i=o[t].length,r=_*t;for(let n=0,a=0;n<h&&a<i;n++)for(let i=0;i<s;i++,a++){const s=o[t][a];let c=0,h=0,_=0,g=1;if(d>0)for(let e=0;e<d;e++)if(1===p[e]||2===p[e]){g=s[3+e]/256;break}switch(u){case 0:let e=0;l[0].hasBytesPerSample&&(e=Math.pow(16,2*l[0].bytesPerSample)),s.forEach(((t,n,i)=>{i[n]=e-t}));case 1:c=h=_=this.clampColorSample(s[0],l[0].bitsPerSample);break;case 2:c=this.clampColorSample(s[0],l[0].bitsPerSample),h=this.clampColorSample(s[1],l[1].bitsPerSample),_=this.clampColorSample(s[2],l[2].bitsPerSample);break;case 3:if(void 0===f)throw Error(I(6027));const t=s[0];c=this.clampColorSample(f[t],16),h=this.clampColorSample(f[m+t],16),_=this.clampColorSample(f[2*m+t],16);break;default:throw RangeError(I(6028,u))}e.fillStyle=`rgba(${c}, ${h}, ${_}, ${g})`,e.fillRect(i,r+n,1,1)}_=h}}return this._canvas}}const jve={315:"Artist",258:"BitsPerSample",265:"CellLength",264:"CellWidth",320:"ColorMap",259:"Compression",33432:"Copyright",306:"DateTime",338:"ExtraSamples",266:"FillOrder",289:"FreeByteCounts",288:"FreeOffsets",291:"GrayResponseCurve",290:"GrayResponseUnit",316:"HostComputer",270:"ImageDescription",257:"ImageLength",256:"ImageWidth",271:"Make",281:"MaxSampleValue",280:"MinSampleValue",272:"Model",254:"NewSubfileType",274:"Orientation",262:"PhotometricInterpretation",284:"PlanarConfiguration",296:"ResolutionUnit",278:"RowsPerStrip",277:"SamplesPerPixel",305:"Software",279:"StripByteCounts",273:"StripOffsets",255:"SubfileType",263:"Threshholding",282:"XResolution",283:"YResolution",326:"BadFaxLines",327:"CleanFaxData",343:"ClipPath",328:"ConsecutiveBadFaxLines",433:"Decode",434:"DefaultImageColor",269:"DocumentName",336:"DotRange",321:"HalftoneHints",346:"Indexed",347:"JPEGTables",285:"PageName",297:"PageNumber",317:"Predictor",319:"PrimaryChromaticities",532:"ReferenceBlackWhite",339:"SampleFormat",559:"StripRowCounts",330:"SubIFDs",292:"T4Options",293:"T6Options",325:"TileByteCounts",323:"TileLength",324:"TileOffsets",322:"TileWidth",301:"TransferFunction",318:"WhitePoint",344:"XClipPathUnits",286:"XPosition",529:"YCbCrCoefficients",531:"YCbCrPositioning",530:"YCbCrSubSampling",345:"YClipPathUnits",287:"YPosition",37378:"ApertureValue",40961:"ColorSpace",36868:"DateTimeDigitized",36867:"DateTimeOriginal",34665:"Exif IFD",36864:"ExifVersion",33434:"ExposureTime",41728:"FileSource",37385:"Flash",40960:"FlashpixVersion",33437:"FNumber",42016:"ImageUniqueID",37384:"LightSource",37500:"MakerNote",37377:"ShutterSpeedValue",37510:"UserComment",33723:"IPTC",34675:"ICC Profile",700:"XMP",42112:"GDAL_METADATA",42113:"GDAL_NODATA",34377:"Photoshop"},Wve={1:"BYTE",2:"ASCII",3:"SHORT",4:"LONG",5:"RATIONAL",6:"SBYTE",7:"UNDEFINED",8:"SSHORT",9:"SLONG",10:"SRATIONAL",11:"FLOAT",12:"DOUBLE"},qve=new Array(123);for(let e=0;e<123;++e)qve[e]=64;for(let e=0;e<64;++e)qve["ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".charCodeAt(e)]=e;var Xve={name:"Jacob__Codec__Base64",decode:function(e){var t,n,i,s,r,o,a=[],c=0;for(e=e.replace(/[^A-Za-z0-9\+\/\=]/g,"");c<e.length;)t=qve[e.charCodeAt(c++)]<<2|(s=qve[e.charCodeAt(c++)])>>4,n=(15&s)<<4|(r=qve[e.charCodeAt(c++)])>>2,i=(3&r)<<6|(o=qve[e.charCodeAt(c++)]),a.push(String.fromCharCode(t)),64!==r&&a.push(String.fromCharCode(n)),64!==o&&a.push(String.fromCharCode(i));return a.join("")},decodeAsArray:function(e,t){var n,i,s,r=this.decode(e),o=[];for(n=0,s=r.length/t;n<s;n++)for(o[n]=0,i=t-1;i>=0;--i)o[n]+=r.charCodeAt(n*t+i)<<8*i;return o}},Yve=function(e){this.data=e,this.debug=!1,this.gpflags=void 0,this.files=0,this.unzipped=[],this.buf32k=new Array(32768),this.bIdx=0,this.modeZIP=!1,this.bytepos=0,this.bb=1,this.bits=0,this.nameBuf=[],this.fileout=void 0,this.literalTree=new Array(Yve.LITERALS),this.distanceTree=new Array(32),this.treepos=0,this.Places=null,this.len=0,this.fpos=new Array(17),this.fpos[0]=0,this.flens=void 0,this.fmax=void 0};Yve.gunzip=function(e){return e.constructor===Array||e.constructor,new Yve(e).gunzip()[0][0]},Yve.HufNode=function(){this.b0=0,this.b1=0,this.jump=null,this.jumppos=-1},Yve.LITERALS=288,Yve.NAMEMAX=256,Yve.bitReverse=[0,128,64,192,32,160,96,224,16,144,80,208,48,176,112,240,8,136,72,200,40,168,104,232,24,152,88,216,56,184,120,248,4,132,68,196,36,164,100,228,20,148,84,212,52,180,116,244,12,140,76,204,44,172,108,236,28,156,92,220,60,188,124,252,2,130,66,194,34,162,98,226,18,146,82,210,50,178,114,242,10,138,74,202,42,170,106,234,26,154,90,218,58,186,122,250,6,134,70,198,38,166,102,230,22,150,86,214,54,182,118,246,14,142,78,206,46,174,110,238,30,158,94,222,62,190,126,254,1,129,65,193,33,161,97,225,17,145,81,209,49,177,113,241,9,137,73,201,41,169,105,233,25,153,89,217,57,185,121,249,5,133,69,197,37,165,101,229,21,149,85,213,53,181,117,245,13,141,77,205,45,173,109,237,29,157,93,221,61,189,125,253,3,131,67,195,35,163,99,227,19,147,83,211,51,179,115,243,11,139,75,203,43,171,107,235,27,155,91,219,59,187,123,251,7,135,71,199,39,167,103,231,23,151,87,215,55,183,119,247,15,143,79,207,47,175,111,239,31,159,95,223,63,191,127,255],Yve.cplens=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],Yve.cplext=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,99,99],Yve.cpdist=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577],Yve.cpdext=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],Yve.border=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],Yve.prototype.gunzip=function(){return this.outputArr=[],this.nextFile(),this.unzipped},Yve.prototype.readByte=function(){return this.bits+=8,this.bytepos<this.data.length?this.data.charCodeAt(this.bytepos++):-1},Yve.prototype.byteAlign=function(){this.bb=1},Yve.prototype.readBit=function(){var e;return this.bits++,e=1&this.bb,this.bb>>=1,0===this.bb&&(this.bb=this.readByte(),e=1&this.bb,this.bb=this.bb>>1|128),e},Yve.prototype.readBits=function(e){for(var t=0,n=e;n--;)t=t<<1|this.readBit();return e&&(t=Yve.bitReverse[t]>>8-e),t},Yve.prototype.flushBuffer=function(){this.bIdx=0},Yve.prototype.addBuffer=function(e){this.buf32k[this.bIdx++]=e,this.outputArr.push(String.fromCharCode(e)),32768===this.bIdx&&(this.bIdx=0)},Yve.prototype.IsPat=function(){for(;;){if(this.fpos[this.len]>=this.fmax)return-1;if(this.flens[this.fpos[this.len]]===this.len)return this.fpos[this.len]++;this.fpos[this.len]++}},Yve.prototype.Rec=function(){var e,t=this.Places[this.treepos];if(17===this.len)return-1;if(this.treepos++,this.len++,(e=this.IsPat())>=0)t.b0=e;else if(t.b0=32768,this.Rec())return-1;if((e=this.IsPat())>=0)t.b1=e,t.jump=null;else if(t.b1=32768,t.jump=this.Places[this.treepos],t.jumppos=this.treepos,this.Rec())return-1;return this.len--,0},Yve.prototype.CreateTree=function(e,t,n){var i;for(this.Places=e,this.treepos=0,this.flens=n,this.fmax=t,i=0;i<17;i++)this.fpos[i]=0;return this.len=0,this.Rec()?-1:0},Yve.prototype.DecodeValue=function(e){for(var t,n,i=0,s=e[i];;)if(this.readBit()){if(!(32768&s.b1))return s.b1;for(s=s.jump,t=e.length,n=0;n<t;n++)if(e[n]===s){i=n;break}}else{if(!(32768&s.b0))return s.b0;s=e[++i]}return-1},Yve.prototype.DeflateLoop=function(){var e,t,n;do{var i,s;if(e=this.readBit(),0===(t=this.readBits(2)))for(this.byteAlign(),i=this.readByte(),i|=this.readByte()<<8,s=this.readByte(),65535&(i^~(s|=this.readByte()<<8))&&document.write("BlockLen checksum mismatch\n");i--;)r=this.readByte(),this.addBuffer(r);else if(1===t)for(;;)if((o=Yve.bitReverse[this.readBits(7)]>>1)>23?(o=o<<1|this.readBit())>199?o=(o-=128)<<1|this.readBit():(o-=48)>143&&(o+=136):o+=256,o<256)this.addBuffer(o);else{if(256===o)break;for(o-=257,d=this.readBits(Yve.cplext[o])+Yve.cplens[o],o=Yve.bitReverse[this.readBits(5)]>>3,Yve.cpdext[o]>8?(f=this.readBits(8),f|=this.readBits(Yve.cpdext[o]-8)<<8):f=this.readBits(Yve.cpdext[o]),f+=Yve.cpdist[o],o=0;o<d;o++){var r=this.buf32k[this.bIdx-f&32767];this.addBuffer(r)}}else if(2===t){var o,a,c,l,h,_=new Array(320);for(c=257+this.readBits(5),l=1+this.readBits(5),h=4+this.readBits(4),o=0;o<19;o++)_[o]=0;for(o=0;o<h;o++)_[Yve.border[o]]=this.readBits(3);for(d=this.distanceTree.length,n=0;n<d;n++)this.distanceTree[n]=new Yve.HufNode;if(this.CreateTree(this.distanceTree,19,_,0))return this.flushBuffer(),1;for(a=c+l,n=0;n<a;)if((o=this.DecodeValue(this.distanceTree))<16)_[n++]=o;else if(16===o){var u;if(n+(o=3+this.readBits(2))>a)return this.flushBuffer(),1;for(u=n?_[n-1]:0;o--;)_[n++]=u}else{if(n+(o=17===o?3+this.readBits(3):11+this.readBits(7))>a)return this.flushBuffer(),1;for(;o--;)_[n++]=0}for(d=this.literalTree.length,n=0;n<d;n++)this.literalTree[n]=new Yve.HufNode;if(this.CreateTree(this.literalTree,c,_,0))return this.flushBuffer(),1;for(d=this.literalTree.length,n=0;n<d;n++)this.distanceTree[n]=new Yve.HufNode;var p=new Array;for(n=c;n<_.length;n++)p[n-c]=_[n];if(this.CreateTree(this.distanceTree,l,p,0))return this.flushBuffer(),1;for(;;)if((o=this.DecodeValue(this.literalTree))>=256){var d,f;if(0==(o-=256))break;for(o--,d=this.readBits(Yve.cplext[o])+Yve.cplens[o],o=this.DecodeValue(this.distanceTree),Yve.cpdext[o]>8?(f=this.readBits(8),f|=this.readBits(Yve.cpdext[o]-8)<<8):f=this.readBits(Yve.cpdext[o]),f+=Yve.cpdist[o];d--;)r=this.buf32k[this.bIdx-f&32767],this.addBuffer(r)}else this.addBuffer(o)}}while(!e);return this.flushBuffer(),this.byteAlign(),0},Yve.prototype.unzipFile=function(e){var t;for(this.gunzip(),t=0;t<this.unzipped.length;t++)if(this.unzipped[t][1]===e)return this.unzipped[t][0]},Yve.prototype.nextFile=function(){this.outputArr=[],this.modeZIP=!1;var e=[];if(e[0]=this.readByte(),e[1]=this.readByte(),120===e[0]&&218===e[1]&&(this.DeflateLoop(),this.unzipped[this.files]=[this.outputArr.join(""),"geonext.gxt"],this.files++),31===e[0]&&139===e[1]&&(this.skipdir(),this.unzipped[this.files]=[this.outputArr.join(""),"file"],this.files++),80===e[0]&&75===e[1]&&(this.modeZIP=!0,e[2]=this.readByte(),e[3]=this.readByte(),3===e[2]&&4===e[3])){e[0]=this.readByte(),e[1]=this.readByte(),this.gpflags=this.readByte(),this.gpflags|=this.readByte()<<8;var t=this.readByte();t|=this.readByte()<<8,this.readByte(),this.readByte(),this.readByte(),this.readByte(),this.readByte(),this.readByte(),this.readByte(),this.readByte(),this.readByte(),this.readByte(),this.readByte(),this.readByte();var n=this.readByte();n|=this.readByte()<<8;var i=this.readByte();for(i|=this.readByte()<<8,r=0,this.nameBuf=[];n--;){var s=this.readByte();"/"===s|":"===s?r=0:r<Yve.NAMEMAX-1&&(this.nameBuf[r++]=String.fromCharCode(s))}this.fileout||(this.fileout=this.nameBuf);for(var r=0;r<i;)s=this.readByte(),r++;8===t&&(this.DeflateLoop(),this.unzipped[this.files]=[this.outputArr.join(""),this.nameBuf.join("")],this.files++),this.skipdir()}},Yve.prototype.skipdir=function(){var e,t,n=[];if(8&this.gpflags&&(n[0]=this.readByte(),n[1]=this.readByte(),n[2]=this.readByte(),n[3]=this.readByte(),this.readByte(),this.readByte(),this.readByte(),this.readByte(),this.readByte(),this.readByte(),this.readByte(),this.readByte()),this.modeZIP&&this.nextFile(),n[0]=this.readByte(),8!==n[0])return 0;if(this.gpflags=this.readByte(),this.readByte(),this.readByte(),this.readByte(),this.readByte(),this.readByte(),this.readByte(),4&this.gpflags)for(n[0]=this.readByte(),n[2]=this.readByte(),this.len=n[0]+256*n[1],e=0;e<this.len;e++)this.readByte();if(8&this.gpflags)for(e=0,this.nameBuf=[];t=this.readByte();)"7"!==t&&":"!==t||(e=0),e<Yve.NAMEMAX-1&&(this.nameBuf[e++]=t);if(16&this.gpflags)for(;t=this.readByte(););2&this.gpflags&&(this.readByte(),this.readByte()),this.DeflateLoop(),this.readByte(),this.readByte(),this.readByte(),this.readByte(),this.modeZIP&&this.nextFile()};var Kve,$ve,Zve,Qve,Jve,eye,tye,nye,iye,sye,rye,oye,aye,cye,lye,hye,_ye,uye,pye,dye,fye,mye,gye,vye,yye,xye,Sye,Cye,Tye,bye,Eye,Aye,Pye,wye,Iye,Rye,Dye,Oye,Mye,Nye,Lye,zye,Fye,Bye,Uye,Gye,Hye,kye,Vye,jye,Wye,qye,Xye,Yye,Kye,$ye,Zye,Qye,Jye,exe,txe,nxe,ixe,sxe,rxe,oxe,axe,cxe,lxe,hxe,_xe,uxe,pxe,dxe,fxe,mxe,gxe,vxe,yxe,xxe,Sxe,Cxe,Txe,bxe,Exe,Axe,Pxe,wxe,Ixe,Rxe,Dxe,Oxe,Mxe,Nxe,Lxe,zxe,Fxe,Bxe={name:"Jacob__Codec"};let Uxe;function Gxe(e){const t=e.parent,n=e.getComponent(Hxe);return t&&n?Gxe(t):e.getComponentsInChildren(Hxe)}Bxe.Base64=Xve,Bxe.GZip=Yve,Bxe.unzip=function(){return Bxe.GZip.gunzip.apply(Bxe.GZip,arguments)},Bxe.unzipBase64=function(){var e=Bxe.Base64.decode.apply(Bxe.Base64,arguments);try{return Bxe.GZip.gunzip.call(Bxe.GZip,e)}catch(t){return e.slice(7)}},Bxe.unzipBase64AsArray=function(e,t){t=t||1;var n,i,s,r=this.unzipBase64(e),o=[];for(n=0,s=r.length/t;n<s;n++)for(o[n]=0,i=t-1;i>=0;--i)o[n]+=r.charCodeAt(n*t+i)<<8*i;return o},Bxe.unzipAsArray=function(e,t){t=t||1;var n,i,s,r=this.unzip(e),o=[];for(n=0,s=r.length/t;n<s;n++)for(o[n]=0,i=t-1;i>=0;--i)o[n]+=r.charCodeAt(n*t+i)<<8*i;return o},function(e){e[e.JPG=0]="JPG",e[e.PNG=1]="PNG",e[e.TIFF=2]="TIFF",e[e.WEBP=3]="WEBP",e[e.PVR=4]="PVR",e[e.ETC=5]="ETC",e[e.S3TC=6]="S3TC",e[e.ATITC=7]="ATITC",e[e.TGA=8]="TGA",e[e.RAWDATA=9]="RAWDATA",e[e.UNKNOWN=10]="UNKNOWN"}(Uxe||(Uxe={}));let Hxe=e("ParticleSystem2D",(Kve=Zc("cc.ParticleSystem2D"),$ve=ll(),Zve=vl(),Qve=Ol(Uve),Jve=vl(),eye=Ol(sX),tye=vl(),nye=vl(),iye=vl(),sye=vl(),rye=vl(),oye=vl(),aye=vl(),cye=vl(),lye=fl(),hye=vl(),_ye=vl(),uye=vl(),pye=vl(),dye=vl(),fye=vl(),mye=vl(),gye=vl(),vye=vl(),yye=vl(),xye=vl(),Sye=vl(),Cye=vl(),Tye=Ol(Ave),bye=vl(),Eye=vl(),Aye=Ol(Eve),Pye=vl(),wye=vl(),Iye=vl(),Rye=vl(),Dye=vl(),Oye=vl(),Mye=vl(),Nye=vl(),Lye=vl(),zye=vl(),Fye=vl(),Bye=vl(),Uye=vl(),Gye=vl(),Hye=vl(),kye=vl(),Vye=vl(),jye=sl("preview"),Kve(Wye=$ve(Wye=hl(Wye=cl((Fxe=zxe=class e extends $Y{get custom(){return this._custom}set custom(e){this._custom!==e&&(this._custom=e,this._applyFile())}get file(){return this._file}set file(e){this._file!==e&&(this._file=e,e?this._applyFile():this.custom=!0)}get spriteFrame(){return this._spriteFrame}set spriteFrame(e){this._renderSpriteFrame!==e&&(this._renderSpriteFrame=e,e&&!e._uuid||(this._spriteFrame=e),this._applySpriteFrame())}get particleCount(){return this._simulator.particles.length}get totalParticles(){return this._totalParticles}set totalParticles(e){this._totalParticles!==e&&(this._totalParticles=e)}get startColor(){return this._startColor}set startColor(e){this._startColor.r=e.r,this._startColor.g=e.g,this._startColor.b=e.b,this._startColor.a=e.a}get startColorVar(){return this._startColorVar}set startColorVar(e){this._startColorVar.r=e.r,this._startColorVar.g=e.g,this._startColorVar.b=e.b,this._startColorVar.a=e.a}set color(e){}get color(){return this._color}get endColor(){return this._endColor}set endColor(e){this._endColor.r=e.r,this._endColor.g=e.g,this._endColor.b=e.b,this._endColor.a=e.a}get endColorVar(){return this._endColorVar}set endColorVar(e){this._endColorVar.r=e.r,this._endColorVar.g=e.g,this._endColorVar.b=e.b,this._endColorVar.a=e.a}get positionType(){return this._positionType}set positionType(e){this._positionType=e,this._updateMaterial()}get preview(){return this._preview}set preview(e){e?this._startPreview():this._stopPreview(),this._preview=e}get stopped(){return this._stopped}get active(){return this._simulator.active}get assembler(){return this._assembler}constructor(){super(),Fc(this,"duration",Xye,this),Fc(this,"emissionRate",Yye,this),Fc(this,"life",Kye,this),Fc(this,"lifeVar",$ye,this),Fc(this,"angle",Zye,this),Fc(this,"angleVar",Qye,this),Fc(this,"startSize",Jye,this),Fc(this,"startSizeVar",exe,this),Fc(this,"endSize",txe,this),Fc(this,"endSizeVar",nxe,this),Fc(this,"startSpin",ixe,this),Fc(this,"startSpinVar",sxe,this),Fc(this,"endSpin",rxe,this),Fc(this,"endSpinVar",oxe,this),Fc(this,"sourcePos",axe,this),Fc(this,"posVar",cxe,this),Fc(this,"emitterMode",lxe,this),Fc(this,"gravity",hxe,this),Fc(this,"speed",_xe,this),Fc(this,"speedVar",uxe,this),Fc(this,"tangentialAccel",pxe,this),Fc(this,"tangentialAccelVar",dxe,this),Fc(this,"radialAccel",fxe,this),Fc(this,"radialAccelVar",mxe,this),Fc(this,"rotationIsDir",gxe,this),Fc(this,"startRadius",vxe,this),Fc(this,"startRadiusVar",yxe,this),Fc(this,"endRadius",xxe,this),Fc(this,"endRadiusVar",Sxe,this),Fc(this,"rotatePerS",Cxe,this),Fc(this,"rotatePerSVar",Txe,this),this.aspectRatio=1,Fc(this,"playOnLoad",bxe,this),Fc(this,"autoRemoveOnFinish",Exe,this),Fc(this,"_preview",Axe,this),Fc(this,"_custom",Pxe,this),Fc(this,"_file",wxe,this),Fc(this,"_spriteFrame",Ixe,this),Fc(this,"_totalParticles",Rxe,this),Fc(this,"_startColor",Dxe,this),Fc(this,"_startColorVar",Oxe,this),Fc(this,"_endColor",Mxe,this),Fc(this,"_endColorVar",Nxe,this),Fc(this,"_positionType",Lxe,this),this._stopped=!0,this.initProperties()}onEnable(){super.onEnable(),this._updateMaterial()}onDestroy(){super.onDestroy(),this.autoRemoveOnFinish&&(this.autoRemoveOnFinish=!1),this._simulator.uvFilled=0,this._simulator.renderData&&this._assembler&&this._assembler.removeData(this._simulator.renderData)}initProperties(){this._previewTimer=null,this._focused=!1,this.aspectRatio=1,this._simulator=new Lve(this)}onFocusInEditor(){this._focused=!0;const e=Gxe(this.node);for(let t=0;t<e.length;++t)e[t]._startPreview()}onLostFocusInEditor(){this._focused=!1;const e=Gxe(this.node);for(let t=0;t<e.length;++t)e[t]._stopPreview()}_startPreview(){this._preview&&this.resetSystem()}_stopPreview(){this._preview&&(this.resetSystem(),this.stopSystem()),this._previewTimer&&clearInterval(this._previewTimer)}__preload(){super.__preload(),this._custom&&this.spriteFrame&&!this._renderSpriteFrame?this._applySpriteFrame():this._file&&(this._custom?!this._getTexture()&&this._applyFile():this._applyFile()),this.playOnLoad&&this.resetSystem()}_flushAssembler(){const t=e.Assembler.getAssembler(this);this._assembler!==t&&(this._assembler=t),this._assembler&&this._assembler.createData&&(this._simulator.renderData=this._assembler.createData(this))}lateUpdate(e){this._simulator.finished||this._simulator.step(e)}addParticle(){}stopSystem(){this._stopped=!0,this._simulator.stop()}resetSystem(){this._stopped=!1,this._simulator.reset(),this._renderFlag=this._canRender()}isFull(){return this.particleCount>=this.totalParticles}_applyFile(){const e=this._file;if(e){if(!e)return void E(6029);if(!this.isValid)return;this._plistFile=e.nativeUrl,this._custom||(this._spriteFrame!==e.spriteFrame&&(this.spriteFrame=e.spriteFrame),this._initWithDictionary(e._nativeAsset)),this._spriteFrame?!this._renderSpriteFrame&&this._spriteFrame&&this._applySpriteFrame():e.spriteFrame?this.spriteFrame=e.spriteFrame:this._custom&&this._initTextureWithDictionary(e._nativeAsset)}}_initTextureWithDictionary(e){if(e.spriteFrameUuid){const t=e.spriteFrameUuid;vR.loadAny(t,((t,n)=>{t?(e.spriteFrameUuid=void 0,this._initTextureWithDictionary(e),d(t)):this.spriteFrame=n}))}else{const n=cn(this._plistFile,e.textureFileName||"");if(e.textureFileName)vR.loadRemote(n,((t,n)=>{t?(e.textureFileName=void 0,this._initTextureWithDictionary(e),d(t)):this.spriteFrame=n?sX.createWithImage(n):sX.createWithImage(Jm.get("white-texture"))}));else if(e.textureImageData){const i=e.textureImageData;if(!(i&&i.length>0))return!1;{let e=vR.assets.get(n);if(!e){const s=Bxe.unzipBase64AsArray(i,1);if(!s)return T(6030,this._file.name),!1;const r=(t=s).length>8&&137===t[0]&&80===t[1]&&78===t[2]&&71===t[3]&&13===t[4]&&10===t[5]&&26===t[6]&&10===t[7]?Uxe.PNG:t.length>2&&(73===t[0]&&73===t[1]||77===t[0]&&77===t[1]||255===t[0]&&216===t[1])?Uxe.TIFF:Uxe.UNKNOWN;if(r!==Uxe.TIFF&&r!==Uxe.PNG)return T(6031,this._file.name),!1;const o=document.createElement("canvas");r===Uxe.PNG?new kve(s).render(o):(this._tiffReader||(this._tiffReader=new Vve),this._tiffReader.parseTIFF(s,o)),e=new jf(o),vR.assets.add(n,e)}e||T(6032,this._file.name),this.spriteFrame=e?sX.createWithImage(e):sX.createWithImage(Jm.get("white-texture"))}}}var t;return!0}_initWithDictionary(e){this.totalParticles=parseInt(e.maxParticles||0),this.life=parseFloat(e.particleLifespan||0),this.lifeVar=parseFloat(e.particleLifespanVariance||0);const t=e.emissionRate;this.emissionRate=t||Math.min(this.totalParticles/this.life,Number.MAX_VALUE),this.duration=parseFloat(e.duration||0),this._srcBlendFactor=parseInt(e.blendFuncSource||Qs.SRC_ALPHA),this._dstBlendFactor=parseInt(e.blendFuncDestination||Qs.ONE_MINUS_SRC_ALPHA);const n=this._startColor;n.r=255*parseFloat(e.startColorRed||0),n.g=255*parseFloat(e.startColorGreen||0),n.b=255*parseFloat(e.startColorBlue||0),n.a=255*parseFloat(e.startColorAlpha||0);const i=this._startColorVar;i.r=255*parseFloat(e.startColorVarianceRed||0),i.g=255*parseFloat(e.startColorVarianceGreen||0),i.b=255*parseFloat(e.startColorVarianceBlue||0),i.a=255*parseFloat(e.startColorVarianceAlpha||0);const s=this._endColor;s.r=255*parseFloat(e.finishColorRed||0),s.g=255*parseFloat(e.finishColorGreen||0),s.b=255*parseFloat(e.finishColorBlue||0),s.a=255*parseFloat(e.finishColorAlpha||0);const r=this._endColorVar;if(r.r=255*parseFloat(e.finishColorVarianceRed||0),r.g=255*parseFloat(e.finishColorVarianceGreen||0),r.b=255*parseFloat(e.finishColorVarianceBlue||0),r.a=255*parseFloat(e.finishColorVarianceAlpha||0),this.startSize=parseFloat(e.startParticleSize||0),this.startSizeVar=parseFloat(e.startParticleSizeVariance||0),this.endSize=parseFloat(e.finishParticleSize||0),this.endSizeVar=parseFloat(e.finishParticleSizeVariance||0),this.positionType=parseFloat(void 0!==e.positionType?e.positionType:Ave.FREE),this.sourcePos.set(0,0),this.posVar.set(parseFloat(e.sourcePositionVariancex||0),parseFloat(e.sourcePositionVariancey||0)),this.angle=parseFloat(e.angle||0),this.angleVar=parseFloat(e.angleVariance||0),this.startSpin=parseFloat(e.rotationStart||0),this.startSpinVar=parseFloat(e.rotationStartVariance||0),this.endSpin=parseFloat(e.rotationEnd||0),this.endSpinVar=parseFloat(e.rotationEndVariance||0),this.emitterMode=parseInt(e.emitterType||Eve.GRAVITY),this.emitterMode===Eve.GRAVITY){this.gravity.set(parseFloat(e.gravityx||0),parseFloat(e.gravityy||0)),this.speed=parseFloat(e.speed||0),this.speedVar=parseFloat(e.speedVariance||0),this.radialAccel=parseFloat(e.radialAcceleration||0),this.radialAccelVar=parseFloat(e.radialAccelVariance||0),this.tangentialAccel=parseFloat(e.tangentialAcceleration||0),this.tangentialAccelVar=parseFloat(e.tangentialAccelVariance||0);let t=e.rotationIsDir||"";null!==t?(t=t.toString().toLowerCase(),this.rotationIsDir="true"===t||"1"===t):this.rotationIsDir=!1}else{if(this.emitterMode!==Eve.RADIUS)return T(6009),!1;this.startRadius=parseFloat(e.maxRadius||0),this.startRadiusVar=parseFloat(e.maxRadiusVariance||0),this.endRadius=parseFloat(e.minRadius||0),this.endRadiusVar=parseFloat(e.minRadiusVariance||0),this.rotatePerS=parseFloat(e.rotatePerSecond||0),this.rotatePerSVar=parseFloat(e.rotatePerSecondVariance||0)}return this._initTextureWithDictionary(e),!0}_syncAspect(){if(this._renderSpriteFrame){const e=this._renderSpriteFrame.rect;this.aspectRatio=e.width/e.height}}_applySpriteFrame(){this._renderSpriteFrame=this._renderSpriteFrame||this._spriteFrame,this._renderSpriteFrame?this._renderSpriteFrame.texture&&(this._simulator.updateUVs(!0),this._syncAspect(),this._updateMaterial(),this._stopped=!1,this._renderFlag=this._canRender()):this.resetSystem()}_getTexture(){return this._renderSpriteFrame&&this._renderSpriteFrame.texture}_updateMaterial(){const e=this.getMaterialInstance(0);e&&e.recompileShaders({USE_LOCAL:this._positionType!==Ave.FREE})}_finishedSimulation(){this.resetSystem(),this.stopSystem(),this._renderFlag=this._canRender(),this.autoRemoveOnFinish&&this._stopped&&this.node.destroy()}_canRender(){return super._canRender()&&!this._stopped&&null!==this._renderSpriteFrame}_render(e){this._positionType===Ave.RELATIVE?e.commitComp(this,this._simulator.renderData,this._renderSpriteFrame,this._assembler,this.node.parent):this.positionType===Ave.GROUPED?e.commitComp(this,this._simulator.renderData,this._renderSpriteFrame,this._assembler,this.node):e.commitComp(this,this._simulator.renderData,this._renderSpriteFrame,this._assembler,null)}},zxe.EmitterMode=Eve,zxe.PositionType=Ave,zxe.DURATION_INFINITY=-1,zxe.START_SIZE_EQUAL_TO_END_SIZE=-1,zxe.START_RADIUS_EQUAL_TO_END_RADIUS=-1,Bc((qye=Fxe).prototype,"custom",[dl,Zve],Object.getOwnPropertyDescriptor(qye.prototype,"custom"),qye.prototype),Bc(qye.prototype,"file",[Qve,Jve],Object.getOwnPropertyDescriptor(qye.prototype,"file"),qye.prototype),Bc(qye.prototype,"spriteFrame",[eye,tye],Object.getOwnPropertyDescriptor(qye.prototype,"spriteFrame"),qye.prototype),Bc(qye.prototype,"totalParticles",[dl,nye],Object.getOwnPropertyDescriptor(qye.prototype,"totalParticles"),qye.prototype),Xye=Bc(qye.prototype,"duration",[il,dl,iye],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return-1}}),Yye=Bc(qye.prototype,"emissionRate",[il,dl,sye],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 10}}),Kye=Bc(qye.prototype,"life",[il,dl,rye],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),$ye=Bc(qye.prototype,"lifeVar",[il,dl,oye],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Bc(qye.prototype,"startColor",[dl,aye],Object.getOwnPropertyDescriptor(qye.prototype,"startColor"),qye.prototype),Bc(qye.prototype,"startColorVar",[dl,cye],Object.getOwnPropertyDescriptor(qye.prototype,"startColorVar"),qye.prototype),Bc(qye.prototype,"color",[lye],Object.getOwnPropertyDescriptor(qye.prototype,"color"),qye.prototype),Bc(qye.prototype,"endColor",[dl,hye],Object.getOwnPropertyDescriptor(qye.prototype,"endColor"),qye.prototype),Bc(qye.prototype,"endColorVar",[dl,_ye],Object.getOwnPropertyDescriptor(qye.prototype,"endColorVar"),qye.prototype),Zye=Bc(qye.prototype,"angle",[il,dl,uye],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 90}}),Qye=Bc(qye.prototype,"angleVar",[il,dl,pye],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 20}}),Jye=Bc(qye.prototype,"startSize",[il,dl,dye],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 50}}),exe=Bc(qye.prototype,"startSizeVar",[il,dl,fye],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),txe=Bc(qye.prototype,"endSize",[il,dl,mye],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),nxe=Bc(qye.prototype,"endSizeVar",[il,dl,gye],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),ixe=Bc(qye.prototype,"startSpin",[il,dl,vye],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),sxe=Bc(qye.prototype,"startSpinVar",[il,dl,yye],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),rxe=Bc(qye.prototype,"endSpin",[il,dl,xye],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),oxe=Bc(qye.prototype,"endSpinVar",[il,dl,Sye],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),axe=Bc(qye.prototype,"sourcePos",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return bi.ZERO.clone()}}),cxe=Bc(qye.prototype,"posVar",[il,dl,Cye],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return bi.ZERO.clone()}}),Bc(qye.prototype,"positionType",[Tye,bye],Object.getOwnPropertyDescriptor(qye.prototype,"positionType"),qye.prototype),Bc(qye.prototype,"preview",[dl,Eye],Object.getOwnPropertyDescriptor(qye.prototype,"preview"),qye.prototype),lxe=Bc(qye.prototype,"emitterMode",[il,dl,Aye,Pye],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Eve.GRAVITY}}),hxe=Bc(qye.prototype,"gravity",[il,dl,wye],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return bi.ZERO.clone()}}),_xe=Bc(qye.prototype,"speed",[il,dl,Iye],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 180}}),uxe=Bc(qye.prototype,"speedVar",[il,dl,Rye],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 50}}),pxe=Bc(qye.prototype,"tangentialAccel",[il,dl,Dye],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 80}}),dxe=Bc(qye.prototype,"tangentialAccelVar",[il,dl,Oye],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),fxe=Bc(qye.prototype,"radialAccel",[il,dl,Mye],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),mxe=Bc(qye.prototype,"radialAccelVar",[il,dl,Nye],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),gxe=Bc(qye.prototype,"rotationIsDir",[il,dl,Lye],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),vxe=Bc(qye.prototype,"startRadius",[il,dl,zye],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),yxe=Bc(qye.prototype,"startRadiusVar",[il,dl,Fye],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),xxe=Bc(qye.prototype,"endRadius",[il,dl,Bye],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Sxe=Bc(qye.prototype,"endRadiusVar",[il,dl,Uye],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Cxe=Bc(qye.prototype,"rotatePerS",[il,dl,Gye],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Txe=Bc(qye.prototype,"rotatePerSVar",[il,dl,Hye],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),bxe=Bc(qye.prototype,"playOnLoad",[il,dl,kye],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),Exe=Bc(qye.prototype,"autoRemoveOnFinish",[il,dl,Vye],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Axe=Bc(qye.prototype,"_preview",[jye],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),Pxe=Bc(qye.prototype,"_custom",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),wxe=Bc(qye.prototype,"_file",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Ixe=Bc(qye.prototype,"_spriteFrame",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Rxe=Bc(qye.prototype,"_totalParticles",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 150}}),Dxe=Bc(qye.prototype,"_startColor",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new ti(255,255,255,255)}}),Oxe=Bc(qye.prototype,"_startColorVar",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new ti(0,0,0,0)}}),Mxe=Bc(qye.prototype,"_endColor",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new ti(255,255,255,0)}}),Nxe=Bc(qye.prototype,"_endColorVar",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new ti(0,0,0,0)}}),Lxe=Bc(qye.prototype,"_positionType",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Ave.FREE}}),Wye=qye))||Wye)||Wye)||Wye)||Wye));var kxe,Vxe,jxe,Wxe,qxe,Xxe,Yxe,Kxe,$xe,Zxe,Qxe,Jxe,eSe,tSe;let nSe=e("MotionStreak",(kxe=Zc("cc.MotionStreak"),Vxe=ll(),jxe=pl(),Wxe=Ol(ym),kxe(qxe=cl(qxe=hl(qxe=Vxe(qxe=jxe((tSe=eSe=class e extends $Y{constructor(...e){super(...e),Fc(this,"_preview",Yxe,this),Fc(this,"_fadeTime",Kxe,this),Fc(this,"_minSeg",$xe,this),Fc(this,"_stroke",Zxe,this),Fc(this,"_texture",Qxe,this),Fc(this,"_fastMode",Jxe,this),this._points=[]}get preview(){return this._preview}set preview(e){this._preview=e,this.reset()}get fadeTime(){return this._fadeTime}set fadeTime(e){this._fadeTime=e,this.reset()}get minSeg(){return this._minSeg}set minSeg(e){this._minSeg=e}get stroke(){return this._stroke}set stroke(e){this._stroke=e}get texture(){return this._texture}set texture(e){this._texture!==e&&(this._texture=e)}get fastMode(){return this._fastMode}set fastMode(e){this._fastMode=e}get points(){return this._points}onEnable(){super.onEnable(),this.reset()}_flushAssembler(){const t=e.Assembler.getAssembler(this);this._assembler!==t&&(this._assembler=t),this._renderData||this._assembler&&this._assembler.createData&&(this._renderData=this._assembler.createData(this),this._renderData.material=this.material)}onFocusInEditor(){this._preview&&this.reset()}onLostFocusInEditor(){this._preview&&this.reset()}reset(){this._points.length=0,this._renderData&&this._renderData.clear()}lateUpdate(e){this._assembler&&this._assembler.update(this,e)}_render(e){e.commitComp(this,this.renderData,this._texture,this._assembler,null)}},eSe.Point=class{constructor(e,t){this.point=new bi,this.dir=new bi,this.distance=0,this.time=0,e&&this.point.set(e),t&&this.dir.set(t)}setPoint(e,t){this.point.x=e,this.point.y=t}setDir(e,t){this.dir.x=e,this.dir.y=t}},Bc((Xxe=tSe).prototype,"preview",[dl],Object.getOwnPropertyDescriptor(Xxe.prototype,"preview"),Xxe.prototype),Bc(Xxe.prototype,"fadeTime",[dl],Object.getOwnPropertyDescriptor(Xxe.prototype,"fadeTime"),Xxe.prototype),Bc(Xxe.prototype,"minSeg",[dl],Object.getOwnPropertyDescriptor(Xxe.prototype,"minSeg"),Xxe.prototype),Bc(Xxe.prototype,"stroke",[dl],Object.getOwnPropertyDescriptor(Xxe.prototype,"stroke"),Xxe.prototype),Bc(Xxe.prototype,"texture",[Wxe],Object.getOwnPropertyDescriptor(Xxe.prototype,"texture"),Xxe.prototype),Bc(Xxe.prototype,"fastMode",[dl],Object.getOwnPropertyDescriptor(Xxe.prototype,"fastMode"),Xxe.prototype),Yxe=Bc(Xxe.prototype,"_preview",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Kxe=Bc(Xxe.prototype,"_fadeTime",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),$xe=Bc(Xxe.prototype,"_minSeg",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),Zxe=Bc(Xxe.prototype,"_stroke",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 64}}),Qxe=Bc(Xxe.prototype,"_texture",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Jxe=Bc(Xxe.prototype,"_fastMode",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),qxe=Xxe))||qxe)||qxe)||qxe)||qxe)||qxe));new bi;const iSe=new bi,sSe=new bi;function rSe(e,t){return e.x=-t.y,e.y=t.x,e}const oSe={createData(e){const t=e.requestRenderData();return t.dataLength=4,t.resize(16,42),t},update(e,t){const n=e.stroke/2,i=e.node.worldMatrix,s=i.m12,r=i.m13,o=e.points;let a;if(o.length>1){const t=o[0],n=t.point.x-s,i=t.point.y-r;n*n+i*i<e.minSeg&&(a=t)}a||(a=new nSe.Point,o.unshift(a)),a.setPoint(s,r),a.time=e.fadeTime+t;let c=0,l=0;if(o.length<2)return;const h=e.renderData;this.updateRenderDataCache(e,h);const _=e.color,u=_.r,p=_.g,d=_.b,f=_.a,m=o[1];m.distance=bi.subtract(sSe,a.point,m.point).length(),sSe.normalize(),m.setDir(sSe.x,sSe.y),a.setDir(sSe.x,sSe.y),h.dataLength=2*o.length;const g=h.data,v=e.fadeTime;let y=!1;for(let e=o.length-1;e>=0;e--){const i=o[e],s=i.point,r=i.dir;if(i.time-=t,i.time<0){o.splice(e,1);continue}const a=i.time/v,l=o[e-1];if(!y){if(!l){o.splice(e,1);continue}s.x=l.point.x-r.x*a,s.y=l.point.y-r.y*a}y=!0,rSe(iSe,r);const h=(a*f<<24>>>0)+(d<<16)+(p<<8)+u;let _=c;g[_].x=s.x+iSe.x*n,g[_].y=s.y+iSe.y*n,g[_].u=1,g[_].v=a,g[_].color._val=h,_+=1,g[_].x=s.x-iSe.x*n,g[_].y=s.y-iSe.y*n,g[_].u=0,g[_].v=a,g[_].color._val=h,c+=2}l=c<=2?0:3*(c-2),h.resize(c,l)},updateRenderDataCache(e,t){t.passDirty&&t.updatePass(e),t.nodeDirty&&t.updateNode(e),t.textureDirty&&e.texture&&(t.updateTexture(e.texture),t.material=e.getRenderMaterial(0)),t.hashDirty&&t.updateHash()},updateRenderData(e){},fillBuffers(e,t){const n=e.renderData,i=n.chunk,s=n.data,r=n.vertexCount,o=n.indexCount,a=i.vb;let c=0;for(let e=0;e<r;e++){const t=s[e];a[c++]=t.x,a[c++]=t.y,a[c++]=t.z,a[c++]=t.u,a[c++]=t.v,ti.toArray(a,t.color,c),c+=4}const l=i.bufferId,h=i.vertexOffset,_=i.vertexAccessor.getMeshBuffer(i.bufferId),u=i.vertexAccessor.getIndexBuffer(l);let p=_.indexOffset;for(let e=0,t=o;e<t;e+=2){const t=h+e;u[p++]=t,u[p++]=t+2,u[p++]=t+1,u[p++]=t+1,u[p++]=t+2,u[p++]=t+3}_.indexOffset+=n.indexCount,_.setDirty()}},aSe=e("MotionStreakAssemblerManager",{getAssembler:()=>oSe});nSe.Assembler=aSe;const cSe={maxParticleDeltaTime:0,createData:()=>eY.add(),removeData(e){eY.remove(e)},updateRenderData(){},fillBuffers(e,t){}},lSe=e("ParticleSystem2DAssembler",{getAssembler:()=>(cSe.maxParticleDeltaTime||(cSe.maxParticleDeltaTime=i.game.frameTime/1e3*2),cSe)});let hSe,_Se,uSe;Hxe.Assembler=lSe,function(e){e.PLAYED="play",e.PAUSED="pause",e.STOPPED="stop",e.SEEKED="seeked",e.ENDED="ended",e.INTERRUPTION_BEGIN="interruptionBegin",e.INTERRUPTION_END="interruptionEnd",e.USER_GESTURE="on_gesture"}(hSe||(hSe={})),function(e){e[e.DOM_AUDIO=0]="DOM_AUDIO",e[e.WEB_AUDIO=1]="WEB_AUDIO",e[e.MINIGAME_AUDIO=2]="MINIGAME_AUDIO",e[e.NATIVE_AUDIO=3]="NATIVE_AUDIO",e[e.UNKNOWN_AUDIO=4]="UNKNOWN_AUDIO"}(_Se||(_Se={})),function(e){e[e.INIT=0]="INIT",e[e.PLAYING=1]="PLAYING",e[e.PAUSED=2]="PAUSED",e[e.STOPPED=3]="STOPPED",e[e.INTERRUPTED=4]="INTERRUPTED"}(uSe||(uSe={}));let pSe=0;function dSe(e,t){t.invoking||(t.invoking=!0,t.func.call(e,...t.args).then((()=>{t.invoking=!1,e._operationQueue.shift(),e._eventTarget.emit(t.id.toString());const n=e._operationQueue[0];n&&dSe(e,n)})).catch((()=>{})))}function fSe(e,t,n){const i=n.value;n.value=function(...e){return new Promise((t=>{const n=pSe++,s=this;s._operationQueue.push({id:n,func:i,args:e,invoking:!1}),s._eventTarget.once(n.toString(),t),dSe(s,s._operationQueue[0])}))}}var mSe,gSe,vSe;const ySe={},xSe=jsb.AudioEngine,SSe=-1;class CSe{get onPlay(){return this._onPlayCb}set onPlay(e){this._onPlayCb=e}get onEnd(){return this._onEndCb}set onEnd(e){this._onEndCb=e}constructor(e,t){this._id=SSe,this._url=void 0,this._volume=void 0,this._onPlayCb=void 0,this._onEndCb=void 0,this._url=e,this._volume=t}play(){var e;this._id=jsb.AudioEngine.play2d(this._url,!1,this._volume),jsb.AudioEngine.setFinishCallback(this._id,(()=>{var e;null===(e=this.onEnd)||void 0===e||e.call(this)})),null===(e=this.onPlay)||void 0===e||e.call(this)}stop(){this._id!==SSe&&jsb.AudioEngine.stop(this._id)}}let TSe=(vSe=gSe=class e{constructor(e){this._url=void 0,this._id=SSe,this._state=uSe.INIT,this._eventTarget=new kt,this._operationQueue=[],this._cachedState={duration:1,loop:!1,currentTime:0,volume:1},this._url=e,Zt.on("hide",this._onHide,this),Zt.on("show",this._onShow,this)}destroy(){Zt.on("hide",this._onHide,this),Zt.on("show",this._onShow,this),--ySe[this._url]<=0&&xSe.uncache(this._url)}_onHide(){this._state===uSe.PLAYING&&this.pause().then((()=>{this._state=uSe.INTERRUPTED,this._eventTarget.emit(hSe.INTERRUPTION_BEGIN)})).catch((()=>{}))}_onShow(){this._state===uSe.INTERRUPTED&&this.play().then((()=>{this._eventTarget.emit(hSe.INTERRUPTION_END)})).catch((()=>{}))}static load(t){return new Promise(((n,i)=>{e.loadNative(t).then((t=>{n(new e(t))})).catch((e=>i(e)))}))}static loadNative(e){return new Promise(((t,n)=>{Zt.platform===Xt.WIN32?t(e):xSe.preload(e,(i=>{i?t(e):n(new Error("load audio failed"))}))}))}static loadOneShotAudio(t,n){return new Promise(((i,s)=>{e.loadNative(t).then((e=>{i(new CSe(e,n))})).catch(s)}))}get _isValid(){return this._id!==SSe}get src(){return this._url}get type(){return _Se.NATIVE_AUDIO}get state(){return this._state}get loop(){return this._isValid?xSe.isLoop(this._id):this._cachedState.loop}set loop(e){this._isValid&&xSe.setLoop(this._id,e),this._cachedState.loop=e}get volume(){return this._isValid?xSe.getVolume(this._id):this._cachedState.volume}set volume(e){e=Fn(e),this._isValid&&xSe.setVolume(this._id,e),this._cachedState.volume=e}get duration(){return this._isValid?xSe.getDuration(this._id):this._cachedState.duration}get currentTime(){return this._isValid?xSe.getCurrentTime(this._id):this._cachedState.currentTime}seek(e){return new Promise((t=>(this._isValid&&xSe.setCurrentTime(this._id,e),this._cachedState.currentTime=e,t())))}play(){return new Promise((e=>{this._isValid?this._state===uSe.PAUSED||this._state===uSe.INTERRUPTED?xSe.resume(this._id):this._state===uSe.PLAYING&&(xSe.pause(this._id),xSe.setCurrentTime(this._id,0),xSe.resume(this._id)):(this._id=xSe.play2d(this._url,this._cachedState.loop,this._cachedState.volume),this._isValid&&(0!==this._cachedState.currentTime&&(xSe.setCurrentTime(this._id,this._cachedState.currentTime),this._cachedState.currentTime=0),xSe.setFinishCallback(this._id,(()=>{this._cachedState.currentTime=0,this._id=SSe,this._state=uSe.INIT,this._eventTarget.emit(hSe.ENDED)})))),this._state=uSe.PLAYING,e()}))}pause(){return new Promise((e=>{this._isValid&&xSe.pause(this._id),this._state=uSe.PAUSED,e()}))}stop(){return new Promise((e=>{this._isValid&&xSe.stop(this._id),this._state=uSe.STOPPED,this._id=SSe,this._cachedState.currentTime=0,e()}))}onInterruptionBegin(e){this._eventTarget.on(hSe.INTERRUPTION_BEGIN,e)}offInterruptionBegin(e){this._eventTarget.off(hSe.INTERRUPTION_BEGIN,e)}onInterruptionEnd(e){this._eventTarget.on(hSe.INTERRUPTION_END,e)}offInterruptionEnd(e){this._eventTarget.off(hSe.INTERRUPTION_END,e)}onEnded(e){this._eventTarget.on(hSe.ENDED,e)}offEnded(e){this._eventTarget.off(hSe.ENDED,e)}},gSe.maxAudioChannel=xSe.getMaxAudioInstance(),Bc((mSe=vSe).prototype,"seek",[fSe],Object.getOwnPropertyDescriptor(mSe.prototype,"seek"),mSe.prototype),Bc(mSe.prototype,"play",[fSe],Object.getOwnPropertyDescriptor(mSe.prototype,"play"),mSe.prototype),Bc(mSe.prototype,"pause",[fSe],Object.getOwnPropertyDescriptor(mSe.prototype,"pause"),mSe.prototype),Bc(mSe.prototype,"stop",[fSe],Object.getOwnPropertyDescriptor(mSe.prototype,"stop"),mSe.prototype),mSe);var bSe,ESe,ASe,PSe,wSe;i.AudioPlayer=TSe;let ISe=e("AudioClip",Zc("cc.AudioClip")((wSe=PSe=class extends bh{constructor(...e){super(...e),Fc(this,"_duration",ASe,this),this._loadMode=_Se.UNKNOWN_AUDIO,this._meta=null,this._player=null}destroy(){var e;const t=super.destroy();return null===(e=this._player)||void 0===e||e.destroy(),this._player=null,this._meta&&(this._meta.player=null),t}set _nativeAsset(e){this._meta=e,e?(this._loadMode=e.type,this._player=e.player):(this._meta=null,this._loadMode=_Se.UNKNOWN_AUDIO,this._duration=0)}get _nativeAsset(){return this._meta}get _nativeDep(){return{uuid:this._uuid,audioLoadMode:this.loadMode,ext:this._native,__isNative__:!0}}get loadMode(){return this._loadMode}validate(){return!!this._meta}getDuration(){return this._duration?this._duration:this._meta?this._meta.duration:0}get state(){return this._player?this._player.state:uSe.INIT}getCurrentTime(){return this._player?this._player.currentTime:0}getVolume(){return this._player?this._player.volume:0}getLoop(){return!!this._player&&this._player.loop}setCurrentTime(e){var t;null===(t=this._player)||void 0===t||t.seek(e).catch((()=>{}))}setVolume(e){this._player&&(this._player.volume=e)}setLoop(e){this._player&&(this._player.loop=e)}play(){var e;null===(e=this._player)||void 0===e||e.play().catch((()=>{}))}pause(){var e;null===(e=this._player)||void 0===e||e.pause().catch((()=>{}))}stop(){var e;null===(e=this._player)||void 0===e||e.stop().catch((()=>{}))}playOneShot(e=1){this._nativeAsset&&TSe.loadOneShotAudio(this._nativeAsset.url,e).then((e=>{e.play()})).catch((()=>{}))}},PSe.AudioType=_Se,ASe=Bc((ESe=wSe).prototype,"_duration",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Bc(ESe.prototype,"_nativeDep",[Ml],Object.getOwnPropertyDescriptor(ESe.prototype,"_nativeDep"),ESe.prototype),bSe=ESe))||bSe);function RSe(e,t,n){TSe.load(e,{audioLoadMode:t.audioLoadMode}).then((t=>{const i={player:t,url:e,duration:t.duration,type:t.type};n(null,i)})).catch((e=>{n(e)}))}function DSe(e,t,n,i){const s=new ISe;s._nativeUrl=e,s._nativeAsset=t,s._duration=t.duration,i(null,s)}i.AudioClip=ISe,$I.register({".mp3":RSe,".ogg":RSe,".wav":RSe,".m4a":RSe}),iR.register({".mp3":DSe,".ogg":DSe,".wav":DSe,".m4a":DSe});const OSe=new class{constructor(){this._oneShotAudioInfoList=[],this._audioPlayerInfoList=[]}_findIndex(e,t){return e.findIndex((e=>e.audio===t))}_tryAddPlaying(e,t){const n=this._findIndex(e,t);return n>-1?(e[n].playTime=performance.now(),!1):(e.push({audio:t,playTime:performance.now()}),!0)}addPlaying(e){if(e instanceof TSe){if(this._tryAddPlaying(this._audioPlayerInfoList,e))return}else this._tryAddPlaying(this._oneShotAudioInfoList,e)}_tryRemovePlaying(e,t){const n=this._findIndex(e,t);return-1!==n&&(L(e,n),!0)}removePlaying(e){if(e instanceof TSe){if(this._tryRemovePlaying(this._audioPlayerInfoList,e))return}else this._tryRemovePlaying(this._oneShotAudioInfoList,e)}discardOnePlayingIfNeeded(){if(this._audioPlayerInfoList.length+this._oneShotAudioInfoList.length<TSe.maxAudioChannel)return;let e;this._oneShotAudioInfoList.length>0?this._oneShotAudioInfoList.forEach((t=>{(!e||t.playTime<e.playTime)&&(e=t)})):this._audioPlayerInfoList.forEach((t=>{(!e||t.playTime<e.playTime)&&(e=t)})),e&&(e.audio.stop(),this.removePlaying(e.audio))}};var MSe,NSe,LSe,zSe,FSe,BSe,USe,GSe,HSe,kSe,VSe,jSe,WSe,qSe,XSe,YSe,KSe,$Se,ZSe;!function(e){e.STARTED="started",e.ENDED="ended"}(ZSe||(ZSe={}));let QSe=function(t){return e({AudioSource:t,AudioSourceComponent:t}),t}((MSe=Zc("cc.AudioSource"),NSe=pl(),LSe=ll(),zSe=Ol(ISe),FSe=Ol(ISe),BSe=vl(),USe=vl(),GSe=vl(),HSe=yl(),kSe=vl(),MSe(VSe=NSe(VSe=LSe(($Se=KSe=class e extends jh{constructor(...e){super(...e),Fc(this,"_clip",WSe,this),this._player=null,Fc(this,"_loop",qSe,this),Fc(this,"_playOnAwake",XSe,this),Fc(this,"_volume",YSe,this),this._cachedCurrentTime=0,this._operationsBeforeLoading=[],this._isLoaded=!1,this._lastSetClip=null}static get maxAudioChannel(){return TSe.maxAudioChannel}set clip(e){e!==this._clip&&(this._clip=e,this._syncPlayer())}get clip(){return this._clip}_syncPlayer(){const e=this._clip;this._isLoaded=!1,this._lastSetClip!==e&&(e?e._nativeAsset?(this._lastSetClip=e,TSe.load(e._nativeAsset.url,{audioLoadMode:e.loadMode}).then((t=>{this._lastSetClip===e?(this._isLoaded=!0,this._player&&(this._player.offEnded(),this._player.offInterruptionBegin(),this._player.offInterruptionEnd(),this._player.destroy()),this._player=t,t.onEnded((()=>{OSe.removePlaying(t),this.node.emit(ZSe.ENDED,this)})),t.onInterruptionBegin((()=>{OSe.removePlaying(t)})),t.onInterruptionEnd((()=>{OSe.addPlaying(t)})),this._syncStates()):t.destroy()})).catch((()=>{}))):console.error("Invalid audio clip"):this._lastSetClip=null)}set loop(e){this._loop=e,this._player&&(this._player.loop=e)}get loop(){return this._loop}set playOnAwake(e){this._playOnAwake=e}get playOnAwake(){return this._playOnAwake}set volume(e){Number.isNaN(e)?console.warn("illegal audio volume!"):(e=zn(e,0,1),this._player?(this._player.volume=e,this._volume=this._player.volume):this._volume=e)}get volume(){return this._volume}onLoad(){this._syncPlayer()}onEnable(){this._playOnAwake&&!this.playing&&this.play()}onDisable(){const e=this._getRootNode();(null==e?void 0:e._persistNode)||this.pause()}onDestroy(){var e;this.stop(),null===(e=this._player)||void 0===e||e.destroy(),this._player=null}_getRootNode(){var e,t;let n=this.node,i=null===(e=n)||void 0===e||null===(t=e.parent)||void 0===t?void 0:t.parent;for(;i;){var s,r,o;n=null===(s=n)||void 0===s?void 0:s.parent,i=null===(r=n)||void 0===r||null===(o=r.parent)||void 0===o?void 0:o.parent}return n}play(){var e,t;this._isLoaded?(OSe.discardOnePlayingIfNeeded(),this.state===uSe.PLAYING&&(null===(t=this._player)||void 0===t||t.stop().catch((()=>{}))),null===(e=this._player)||void 0===e||e.play().then((()=>{OSe.addPlaying(this._player),this.node.emit(ZSe.STARTED,this)})).catch((()=>{}))):this._operationsBeforeLoading.push("play")}pause(){var e;this._isLoaded?null===(e=this._player)||void 0===e||e.pause().then((()=>{OSe.removePlaying(this._player)})).catch((()=>{})):this._operationsBeforeLoading.push("pause")}stop(){var e;this._isLoaded?null===(e=this._player)||void 0===e||e.stop().then((()=>{OSe.removePlaying(this._player)})).catch((()=>{})):this._operationsBeforeLoading.push("stop")}playOneShot(e,t=1){e._nativeAsset?TSe.loadOneShotAudio(e._nativeAsset.url,this._volume*t,{audioLoadMode:e.loadMode}).then((e=>{OSe.discardOnePlayingIfNeeded(),e.onPlay=()=>{OSe.addPlaying(e)},e.onEnd=()=>{OSe.removePlaying(e)},e.play()})).catch((()=>{})):console.error("Invalid audio clip")}_syncStates(){this._player&&this._player.seek(this._cachedCurrentTime).then((()=>{this._player&&(this._player.loop=this._loop,this._player.volume=this._volume,this._operationsBeforeLoading.forEach((e=>{var t;null===(t=this[e])||void 0===t||t.call(this)})),this._operationsBeforeLoading.length=0)})).catch((()=>{}))}set currentTime(e){var t;Number.isNaN(e)?console.warn("illegal audio time!"):(e=zn(e,0,this.duration),this._cachedCurrentTime=e,null===(t=this._player)||void 0===t||t.seek(this._cachedCurrentTime).catch((()=>{})))}get currentTime(){return this._player?this._player.currentTime:this._cachedCurrentTime}get duration(){var e,t;return null!==(e=null===(t=this._clip)||void 0===t?void 0:t.getDuration())&&void 0!==e?e:this._player?this._player.currentTime:0}get state(){return this._player?this._player.state:uSe.INIT}get playing(){return this.state===e.AudioState.PLAYING}},KSe.AudioState=uSe,KSe.EventType=ZSe,WSe=Bc((jSe=$Se).prototype,"_clip",[zSe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),qSe=Bc(jSe.prototype,"_loop",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),XSe=Bc(jSe.prototype,"_playOnAwake",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),YSe=Bc(jSe.prototype,"_volume",[il],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),Bc(jSe.prototype,"clip",[FSe,BSe],Object.getOwnPropertyDescriptor(jSe.prototype,"clip"),jSe.prototype),Bc(jSe.prototype,"loop",[USe],Object.getOwnPropertyDescriptor(jSe.prototype,"loop"),jSe.prototype),Bc(jSe.prototype,"playOnAwake",[GSe],Object.getOwnPropertyDescriptor(jSe.prototype,"playOnAwake"),jSe.prototype),Bc(jSe.prototype,"volume",[HSe,kSe],Object.getOwnPropertyDescriptor(jSe.prototype,"volume"),jSe.prototype),VSe=jSe))||VSe)||VSe)||VSe));Cn(ISe,"AudioClip",[{name:"PlayingState",newName:"AudioState",target:QSe,targetName:"AudioSource"}]),bn(ISe.prototype,"AudioClip.prototype",["state","play","pause","stop","playOneShot","setCurrentTime","setVolume","setLoop","getCurrentTime","getVolume","getLoop"].map((e=>({name:e,suggest:`please use AudioSource.prototype.${e} instead`})))),i.AudioSourceComponent=QSe,Ae.setClassAlias(QSe,"cc.AudioSourceComponent");class JSe{constructor(){this.originalTarget=null,this.target=null,this.tag=JSe.TAG_INVALID}clone(){const e=new JSe;return e.originalTarget=null,e.target=null,e.tag=this.tag,e}isDone(){return!0}startWithTarget(e){this.originalTarget=e,this.target=e}stop(){this.target=null}step(e){S(1006)}update(e){S(1007)}getTarget(){return this.target}setTarget(e){this.target=e}getOriginalTarget(){return this.originalTarget}setOriginalTarget(e){this.originalTarget=e}getTag(){return this.tag}setTag(e){this.tag=e}reverse(){return S(1008),null}retain(){}release(){}}JSe.TAG_INVALID=-1;class eCe extends JSe{constructor(...e){super(...e),this._duration=0,this._timesForRepeat=1}getDuration(){return this._duration*(this._timesForRepeat||1)}setDuration(e){this._duration=e}clone(){return new eCe}}let tCe=0;class nCe{constructor(){this.actions=[],this.target=null,this.actionIndex=0,this.currentAction=null,this.paused=!1,this.lock=!1}}class iCe{constructor(){this._hashTargets=new Map,this._arrayTargets=[],this._elementPool=[]}_searchElementByTarget(e,t){for(let n=0;n<e.length;n++)if(t===e[n].target)return e[n];return null}_getElement(e,t){let n=this._elementPool.pop();return n||(n=new nCe),n.target=e,n.paused=!!t,n}_putElement(e){e.actions.length=0,e.actionIndex=0,e.currentAction=null,e.paused=!1,e.target=null,e.lock=!1,this._elementPool.push(e)}addAction(e,t,n){if(!e||!t)return void E(1e3);null==t.uuid&&(t.uuid="_TWEEN_UUID_"+tCe++);let i=this._hashTargets.get(t);i?i.actions||(i.actions=[]):(i=this._getElement(t,n),this._hashTargets.set(t,i),this._arrayTargets.push(i)),i.target=t,i.actions.push(e),e.startWithTarget(t)}removeAllActions(){const e=this._arrayTargets;for(let t=0;t<e.length;t++){const n=e[t];n&&this._putElement(n)}this._arrayTargets.length=0,this._hashTargets=new Map}removeAllActionsFromTarget(e){if(null==e)return;const t=this._hashTargets.get(e);t&&(t.actions.length=0,this._deleteHashElement(t))}removeAction(e){if(null==e)return;const t=e.getOriginalTarget(),n=this._hashTargets.get(t);if(n)for(let t=0;t<n.actions.length;t++)if(n.actions[t]===e){n.actions.splice(t,1),n.actionIndex>=t&&n.actionIndex--;break}}_removeActionByTag(e,t,n){for(let i=0,s=t.actions.length;i<s;++i){const s=t.actions[i];if(s&&s.getTag()===e){if(n&&s.getOriginalTarget()!==n)continue;this._removeActionAtIndex(i,t);break}}}_removeAllActionsByTag(e,t,n){for(let i=t.actions.length-1;i>=0;--i){const s=t.actions[i];if(s&&s.getTag()===e){if(n&&s.getOriginalTarget()!==n)continue;this._removeActionAtIndex(i,t)}}}removeActionByTag(e,t){e===JSe.TAG_INVALID&&S(1002);const n=this._hashTargets;if(t){const i=n.get(t);i&&this._removeActionByTag(e,i,t)}else n.forEach((t=>{this._removeActionByTag(e,t)}))}removeAllActionsByTag(e,t){e===JSe.TAG_INVALID&&S(1002);const n=this._hashTargets;if(t){const i=n.get(t);i&&this._removeAllActionsByTag(e,i,t)}else n.forEach((t=>{this._removeAllActionsByTag(e,t)}))}getActionByTag(e,t){e===JSe.TAG_INVALID&&S(1004);const n=this._hashTargets.get(t);if(n){if(null!=n.actions)for(let t=0;t<n.actions.length;++t){const i=n.actions[t];if(i&&i.getTag()===e)return i}S(1005,e)}return null}getNumberOfRunningActionsInTarget(e){const t=this._hashTargets.get(e);return t&&t.actions?t.actions.length:0}pauseTarget(e){const t=this._hashTargets.get(e);t&&(t.paused=!0)}resumeTarget(e){const t=this._hashTargets.get(e);t&&(t.paused=!1)}pauseAllRunningActions(){const e=[],t=this._arrayTargets;for(let n=0;n<t.length;n++){const i=t[n];i&&!i.paused&&(i.paused=!0,e.push(i.target))}return e}resumeTargets(e){if(e)for(let t=0;t<e.length;t++)e[t]&&this.resumeTarget(e[t])}pauseTargets(e){if(e)for(let t=0;t<e.length;t++)e[t]&&this.pauseTarget(e[t])}purgeSharedManager(){i.director.getScheduler().unscheduleUpdate(this)}_removeActionAtIndex(e,t){t.actions[e],t.actions.splice(e,1),t.actionIndex>=e&&t.actionIndex--,0===t.actions.length&&this._deleteHashElement(t)}_deleteHashElement(e){let t=!1;if(e&&!e.lock&&this._hashTargets.get(e.target)){this._hashTargets.delete(e.target);const n=this._arrayTargets;for(let t=0,i=n.length;t<i;t++)if(n[t]===e){n.splice(t,1);break}this._putElement(e),t=!0}return t}update(e){const t=this._arrayTargets;let n;for(let i=0;i<t.length;i++){this._currentTarget=t[i],n=this._currentTarget;const s=n.target;if(s instanceof Dt&&!s.isValid)this.removeAllActionsFromTarget(s),i--;else{if(!n.paused&&n.actions){for(n.lock=!0,n.actionIndex=0;n.actionIndex<n.actions.length;n.actionIndex++)if(n.currentAction=n.actions[n.actionIndex],n.currentAction){if(n.currentAction.step(e*(n.currentAction._speedMethod?n.currentAction._speed:1)),n.currentAction&&n.currentAction.isDone()){n.currentAction.stop();const e=n.currentAction;n.currentAction=null,this.removeAction(e)}n.currentAction=null}n.lock=!1}0===n.actions.length&&this._deleteHashElement(n)&&i--}}}}class sCe extends Yw{constructor(...e){super(...e),this.actionMgr=new iCe}get ActionManager(){return this.actionMgr}update(e){this.actionMgr.update(e)}}e("TweenSystem",sCe),sCe.ID="TWEEN",sCe.instance=void 0,aI.on(oI.EVENT_INIT,(()=>{const e=new sCe;sCe.instance=e,aI.registerSystem(sCe.ID,e,Yw.Priority.MEDIUM)}));class rCe extends eCe{isDone(){return!0}step(e){this.update(1)}update(e){}reverse(){return this.clone()}clone(){return new rCe}}class oCe extends rCe{update(e){const t=this.target.getComponentsInChildren(xO);for(let e=0;e<t.length;++e)t[e].enabled=!0}reverse(){return new aCe}clone(){return new oCe}}class aCe extends rCe{update(e){const t=this.target.getComponentsInChildren(xO);for(let e=0;e<t.length;++e)t[e].enabled=!1}reverse(){return new oCe}clone(){return new aCe}}class cCe extends rCe{constructor(e){super(),this._isNeedCleanUp=!0,void 0!==e&&this.init(e)}update(e){this.target.removeFromParent(),this._isNeedCleanUp&&this.target.destroy()}init(e){return this._isNeedCleanUp=e,!0}reverse(){return new cCe(this._isNeedCleanUp)}clone(){return new cCe(this._isNeedCleanUp)}}class lCe extends rCe{constructor(e,t,n){super(),this._selectorTarget=null,this._function=null,this._data=null,this.initWithFunction(e,t,n)}initWithFunction(e,t,n){return e&&(this._function=e),t&&(this._selectorTarget=t),void 0!==n&&(this._data=n),!0}execute(){this._function&&this._function.call(this._selectorTarget,this.target,this._data)}update(e){this.execute()}getTargetCallback(){return this._selectorTarget}setTargetCallback(e){e!==this._selectorTarget&&(this._selectorTarget&&(this._selectorTarget=null),this._selectorTarget=e)}clone(){const e=new lCe;return e.initWithFunction(this._function,this._selectorTarget,this._data),e}}class hCe extends eCe{constructor(e){super(),this.MAX_VALUE=2,this._elapsed=0,this._firstTick=!1,this._easeList=[],this._speed=1,this._repeatForever=!1,this._repeatMethod=!1,this._speedMethod=!1,void 0===e||isNaN(e)||this.initWithDuration(e)}getElapsed(){return this._elapsed}initWithDuration(e){return this._duration=0===e?Ue.FLT_EPSILON:e,this._elapsed=0,this._firstTick=!0,!0}isDone(){return this._elapsed>=this._duration}_cloneDecoration(e){e._repeatForever=this._repeatForever,e._speed=this._speed,e._timesForRepeat=this._timesForRepeat,e._easeList=this._easeList,e._speedMethod=this._speedMethod,e._repeatMethod=this._repeatMethod}_reverseEaseList(e){if(this._easeList){e._easeList=[];for(let t=0;t<this._easeList.length;t++)e._easeList.push(this._easeList[t])}}clone(){const e=new hCe(this._duration);return this._cloneDecoration(e),e}easing(e){this._easeList?this._easeList.length=0:this._easeList=[];for(let e=0;e<arguments.length;e++)this._easeList.push(arguments[e]);return this}_computeEaseTime(e){return e}step(e){this._firstTick?(this._firstTick=!1,this._elapsed=0):this._elapsed+=e;let t=this._elapsed/(this._duration>1.192092896e-7?this._duration:1.192092896e-7);t=t<1?t:1,this.update(t>0?t:0),this._repeatMethod&&this._timesForRepeat>1&&this.isDone()&&(this._repeatForever||this._timesForRepeat--,this.startWithTarget(this.target),this.step(this._elapsed-this._duration))}startWithTarget(e){JSe.prototype.startWithTarget.call(this,e),this._elapsed=0,this._firstTick=!0}reverse(){return S(1010),this}setAmplitudeRate(e){S(1011)}getAmplitudeRate(){return S(1012),0}speed(e){return e<=0?(S(1013),this):(this._speedMethod=!0,this._speed*=e,this)}getSpeed(){return this._speed}setSpeed(e){return this._speed=e,this}repeat(e){return e=Math.round(e),isNaN(e)||e<1?(S(1014),this):(this._repeatMethod=!0,this._timesForRepeat*=e,this)}repeatForever(){return this._repeatMethod=!0,this._timesForRepeat=this.MAX_VALUE,this._repeatForever=!0,this}}class _Ce extends hCe{constructor(e){super(),this._actions=[],this._split=0,this._last=0,this._reversed=!1;const t=e instanceof Array?e:arguments;if(1===t.length)return void E(1019);const n=t.length-1;if(n>=0&&null==t[n]&&S(1015),n>=0){let e,i=t[0];for(let s=1;s<n;s++)t[s]&&(e=i,i=_Ce._actionOneTwo(e,t[s]));this.initWithTwoActions(i,t[n])}}initWithTwoActions(e,t){if(!e||!t)return E(1025),!1;let n=e._duration,i=t._duration;n*=e._repeatMethod?e._timesForRepeat:1,i*=t._repeatMethod?t._timesForRepeat:1;const s=n+i;return this.initWithDuration(s),this._actions[0]=e,this._actions[1]=t,!0}clone(){const e=new _Ce;return this._cloneDecoration(e),e.initWithTwoActions(this._actions[0].clone(),this._actions[1].clone()),e}startWithTarget(e){hCe.prototype.startWithTarget.call(this,e),this._split=this._actions[0]._duration/this._duration,this._split*=this._actions[0]._repeatMethod?this._actions[0]._timesForRepeat:1,this._last=-1}stop(){-1!==this._last&&this._actions[this._last].stop(),JSe.prototype.stop.call(this)}update(e){let t,n=0;const i=this._split,s=this._actions,r=this._last;let o;(e=this._computeEaseTime(e))<i?(t=0!==i?e/i:1,0===n&&1===r&&this._reversed&&(s[1].update(0),s[1].stop())):(n=1,t=1===i?1:(e-i)/(1-i),-1===r&&(s[0].startWithTarget(this.target),s[0].update(1),s[0].stop()),0===r&&(s[0].update(1),s[0].stop())),o=s[n],r===n&&o.isDone()||(r!==n&&o.startWithTarget(this.target),t*=o._timesForRepeat,o.update(t>1?t%1:t),this._last=n)}reverse(){const e=_Ce._actionOneTwo(this._actions[1].reverse(),this._actions[0].reverse());return this._cloneDecoration(e),this._reverseEaseList(e),e._reversed=!0,e}}function uCe(e){const t=e instanceof Array?e:arguments;if(1===t.length)return E(1019),null;const n=t.length-1;n>=0&&null==t[n]&&S(1015);let i=null;if(n>=0){i=t[0];for(let e=1;e<=n;e++)t[e]&&(i=_Ce._actionOneTwo(i,t[e]))}return i}_Ce._actionOneTwo=function(e,t){const n=new _Ce;return n.initWithTwoActions(e,t),n};class pCe extends hCe{constructor(e,t){super(),this._times=0,this._total=0,this._nextDt=0,this._actionInstant=!1,this._innerAction=null,void 0!==t&&this.initWithAction(e,t)}initWithAction(e,t){const n=e._duration*t;return!!this.initWithDuration(n)&&(this._times=t,this._innerAction=e,e instanceof rCe&&(this._actionInstant=!0,this._times-=1),this._total=0,!0)}clone(){const e=new pCe;return this._cloneDecoration(e),e.initWithAction(this._innerAction.clone(),this._times),e}startWithTarget(e){this._total=0,this._nextDt=this._innerAction._duration/this._duration,hCe.prototype.startWithTarget.call(this,e),this._innerAction.startWithTarget(e)}stop(){this._innerAction.stop(),JSe.prototype.stop.call(this)}update(e){e=this._computeEaseTime(e);const t=this._innerAction,n=this._duration,i=this._times;let s=this._nextDt;if(e>=s){for(;e>s&&this._total<i;)t.update(1),this._total++,t.stop(),t.startWithTarget(this.target),s+=t._duration/n,this._nextDt=s>1?1:s;e>=1&&this._total<i&&(t.update(1),this._total++),this._actionInstant||(this._total===i?t.stop():t.update(e-(s-t._duration/n)))}else t.update(e*i%1)}isDone(){return this._total===this._times}reverse(){const e=new pCe(this._innerAction.reverse(),this._times);return this._cloneDecoration(e),this._reverseEaseList(e),e}setInnerAction(e){this._innerAction!==e&&(this._innerAction=e)}getInnerAction(){return this._innerAction}}class dCe extends hCe{constructor(e){super(),this._innerAction=null,e&&this.initWithAction(e)}initWithAction(e){return e?(this._innerAction=e,!0):(E(1026),!1)}clone(){const e=new dCe;return this._cloneDecoration(e),e.initWithAction(this._innerAction.clone()),e}startWithTarget(e){hCe.prototype.startWithTarget.call(this,e),this._innerAction.startWithTarget(e)}step(e){const t=this._innerAction;t.step(e),t.isDone()&&(t.startWithTarget(this.target),t.step(t.getElapsed()-t._duration))}isDone(){return!1}reverse(){const e=new dCe(this._innerAction.reverse());return this._cloneDecoration(e),this._reverseEaseList(e),e}setInnerAction(e){this._innerAction!==e&&(this._innerAction=e)}getInnerAction(){return this._innerAction}}class fCe extends hCe{constructor(e){super(),this._one=null,this._two=null;const t=e instanceof Array?e:arguments;if(1===t.length)return void E(1020);const n=t.length-1;if(n>=0&&null==t[n]&&S(1015),n>=0){let e,i=t[0];for(let s=1;s<n;s++)t[s]&&(e=i,i=fCe._actionOneTwo(e,t[s]));this.initWithTwoActions(i,t[n])}}initWithTwoActions(e,t){if(!e||!t)return E(1027),!1;let n=!1;const i=e._duration,s=t._duration;return this.initWithDuration(Math.max(i,s))&&(this._one=e,this._two=t,i>s?this._two=_Ce._actionOneTwo(t,vCe(i-s)):i<s&&(this._one=_Ce._actionOneTwo(e,vCe(s-i))),n=!0),n}clone(){const e=new fCe;return this._cloneDecoration(e),e.initWithTwoActions(this._one.clone(),this._two.clone()),e}startWithTarget(e){hCe.prototype.startWithTarget.call(this,e),this._one.startWithTarget(e),this._two.startWithTarget(e)}stop(){this._one.stop(),this._two.stop(),JSe.prototype.stop.call(this)}update(e){e=this._computeEaseTime(e),this._one&&this._one.update(e),this._two&&this._two.update(e)}reverse(){const e=fCe._actionOneTwo(this._one.reverse(),this._two.reverse());return this._cloneDecoration(e),this._reverseEaseList(e),e}}function mCe(e){const t=e instanceof Array?e:arguments;if(1===t.length)return E(1020),null;t.length>0&&null==t[t.length-1]&&S(1015);let n=t[0];for(let e=1;e<t.length;e++)null!=t[e]&&(n=fCe._actionOneTwo(n,t[e]));return n}fCe._actionOneTwo=function(e,t){const n=new fCe;return n.initWithTwoActions(e,t),n};class gCe extends hCe{update(e){}reverse(){const e=new gCe(this._duration);return this._cloneDecoration(e),this._reverseEaseList(e),e}clone(){const e=new gCe;return this._cloneDecoration(e),e.initWithDuration(this._duration),e}}function vCe(e){return new gCe(e)}class yCe extends hCe{constructor(e){super(),this._other=null,e&&this.initWithAction(e)}initWithAction(e){return e?e===this._other?(E(1029),!1):!!hCe.prototype.initWithDuration.call(this,e._duration)&&(this._other=e,!0):(E(1028),!1)}clone(){const e=new yCe;return this._cloneDecoration(e),e.initWithAction(this._other.clone()),e}startWithTarget(e){hCe.prototype.startWithTarget.call(this,e),this._other.startWithTarget(e)}update(e){e=this._computeEaseTime(e),this._other&&this._other.update(1-e)}reverse(){return this._other.clone()}stop(){this._other.stop(),JSe.prototype.stop.call(this)}}class xCe extends hCe{constructor(e,t,n){if(super(),this._opts=void 0,this._props=void 0,this._originProps=void 0,null==n)n=Object.create(null);else if(function(e){const t=" [Tween:] ",n=` option is not support in v + ${s}`,i=e;i.delay&&p(`${t}delay${n}`),i.repeat&&p(`${t}repeat${n}`),i.repeatDelay&&p(`${t}repeatDelay${n}`),i.interpolation&&p(`${t}interpolation${n}`),i.onStop&&p(`${t}onStop${n}`)}(n),n.easing&&"string"==typeof n.easing&&(n.easing=function(e){const t=e.charAt(0);if(/[A-Z]/.test(t)){const n=(e=e.replace(t,t.toLowerCase())).split("-");if(2===n.length){const t=n[0];if("linear"===t)e="linear";else{const i=n[1];switch(t){case"quadratic":e=`quad${i}`;break;case"quartic":e=`quart${i}`;break;case"quintic":e=`quint${i}`;break;case"sinusoidal":e=`sine${i}`;break;case"exponential":e=`expo${i}`;break;case"circular":e=`circ${i}`;break;default:e=t+i}}}}return e}(n.easing)),n.progress||(n.progress=this.progress),n.easing&&"string"==typeof n.easing){const e=n.easing;n.easing=ku[e],n.easing||T(1031,e)}this._opts=n,this._props=Object.create(null);for(const e in t){if(!t.hasOwnProperty(e))continue;let n,i,s=t[e];if("function"==typeof s&&(s=s()),null==s||"string"==typeof s)continue;void 0!==s.value&&(s.easing||s.progress)&&("string"==typeof s.easing?(n=ku[s.easing],n||T(1031,s.easing)):n=s.easing,i=s.progress,s=s.value);const r=Object.create(null);r.value=s,r.easing=n,r.progress=i,this._props[e]=r}this._originProps=t,this.initWithDuration(e)}clone(){const e=new xCe(this._duration,this._originProps,this._opts);return this._cloneDecoration(e),e}startWithTarget(e){hCe.prototype.startWithTarget.call(this,e);const t=!!this._opts.relative,n=this._props;for(const i in n){const s=e[i];if(void 0===s)continue;const r=n[i],o=r.value;if("number"==typeof s)r.start=s,r.current=s,r.end=t?s+o:o;else if("object"==typeof s){null==r.start&&(r.start={},r.current={},r.end={});for(const e in o)isNaN(s[e])||(r.start[e]=s[e],r.current[e]=s[e],r.end[e]=t?s[e]+o[e]:o[e])}}this._opts.onStart&&this._opts.onStart(this.target)}update(e){const t=this.target;if(!t)return;const n=this._props,i=this._opts;let s=e;i.easing&&(s=i.easing(e));const r=i.progress;for(const i in n){const o=n[i],a=o.easing?o.easing(e):s,c=o.progress?o.progress:r,l=o.start,h=o.end;if("number"==typeof l)o.current=c(l,h,o.current,a);else if("object"==typeof l)for(const e in l)o.current[e]=c(l[e],h[e],o.current[e],a);t[i]=o.current}i.onUpdate&&i.onUpdate(this.target,e),1===e&&i.onComplete&&i.onComplete(this.target)}progress(e,t,n,i){return e+(t-e)*i}}e("TweenAction",xCe);class SCe extends rCe{constructor(e){super(),this._props=void 0,this._props={},void 0!==e&&this.init(e)}init(e){for(const t in e)this._props[t]=e[t];return!0}update(){const e=this._props,t=this.target;for(const n in e)t[n]=e[n]}clone(){const e=new SCe;return e.init(this._props),e}}class CCe{constructor(e){this._actions=[],this._finalAction=null,this._target=null,this._tag=JSe.TAG_INVALID,this._target=void 0===e?null:e}tag(e){return this._tag=e,this}then(e){return e instanceof JSe?this._actions.push(e.clone()):this._actions.push(e._union()),this}target(e){return this._target=e,this}start(){return this._target?(this._finalAction&&sCe.instance.ActionManager.removeAction(this._finalAction),this._finalAction=this._union(),this._finalAction.setTag(this._tag),sCe.instance.ActionManager.addAction(this._finalAction,this._target,!1),this):(p("Please set target to tween first"),this)}stop(){return this._finalAction&&sCe.instance.ActionManager.removeAction(this._finalAction),this}clone(e){const t=this._union();return TCe(e).then(t.clone())}union(){const e=this._union();return this._actions.length=0,this._actions.push(e),this}to(e,t,n){(n=n||Object.create(null)).relative=!1;const i=new xCe(e,t,n);return this._actions.push(i),this}by(e,t,n){(n=n||Object.create(null)).relative=!0;const i=new xCe(e,t,n);return this._actions.push(i),this}set(e){const t=new SCe(e);return this._actions.push(t),this}delay(e){const t=vCe(e);return this._actions.push(t),this}call(e){const t=new lCe(e,undefined,undefined);return this._actions.push(t),this}sequence(...e){const t=CCe._wrappedSequence(...e);return this._actions.push(t),this}parallel(...e){const t=CCe._wrappedParallel(...e);return this._actions.push(t),this}repeat(e,t){if(e===1/0)return this.repeatForever(t);const n=this._actions;let i;return i=t instanceof CCe?t._union():n.pop(),n.push(function(e,t){return new pCe(e,t)}(i,e)),this}repeatForever(e){const t=this._actions;let n;return n=e instanceof CCe?e._union():t.pop(),t.push(function(e){return new dCe(e)}(n)),this}reverseTime(e){const t=this._actions;let n;return n=e instanceof CCe?e._union():t.pop(),t.push(function(e){return new yCe(e)}(n)),this}hide(){const e=new aCe;return this._actions.push(e),this}show(){const e=new oCe;return this._actions.push(e),this}removeSelf(){const e=new cCe(!1);return this._actions.push(e),this}static stopAll(){sCe.instance.ActionManager.removeAllActions()}static stopAllByTag(e,t){sCe.instance.ActionManager.removeAllActionsByTag(e,t)}static stopAllByTarget(e){sCe.instance.ActionManager.removeAllActionsFromTarget(e)}_union(){const e=this._actions;let t;return t=1===e.length?e[0]:uCe(e),t}_destroy(){this.stop()}static _wrappedSequence(...e){const t=CCe._tmp_args;t.length=0;for(let n=e.length,i=0;i<n;i++){const n=t[i]=e[i];n instanceof CCe&&(t[i]=n._union())}return uCe.apply(uCe,t)}static _wrappedParallel(...e){const t=CCe._tmp_args;t.length=0;for(let n=e.length,i=0;i<n;i++){const n=t[i]=e[i];n instanceof CCe&&(t[i]=n._union())}return mCe.apply(mCe,t)}}function TCe(e){return new CCe(e)}function bCe(e){return p("tweenUtil' is deprecated, please use 'tween' instead "),new CCe(e)}e("Tween",CCe),CCe._tmp_args=[],i.Tween=CCe,i.tween=TCe,i.tweenUtil=bCe}}}));
